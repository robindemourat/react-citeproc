{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 99196f879a01d07d8de5","webpack:///./~/ramda/src/internal/_curry2.js","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/ramda/src/internal/_curry1.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/fbjs/lib/warning.js","webpack:///./~/object-assign/index.js","webpack:///./~/ramda/src/internal/_isPlaceholder.js","webpack:///./~/react/lib/reactProdInvariant.js","webpack:///./~/ramda/src/internal/_arity.js","webpack:///./~/ramda/src/internal/_dispatchable.js","webpack:///./~/ramda/src/internal/_has.js","webpack:///./~/ramda/src/internal/_reduce.js","webpack:///./~/ramda/src/internal/_xfBase.js","webpack:///./~/react/react.js","webpack:///./~/underscore.string/helper/makeString.js","webpack:///./~/chickencurry/lib/forEach.js","webpack:///./~/citeproc/citeproc-obj.js","webpack:///./~/domhandler/lib/node.js","webpack:///./~/fbjs/lib/emptyObject.js","webpack:///./~/html-to-react/index.js","webpack:///./~/html-to-react/lib/is-valid-node-definitions.js","webpack:///./~/html-to-react/lib/process-node-definitions.js","webpack:///./~/html-to-react/lib/processing-instructions.js","webpack:///./~/html-to-react/lib/utils.js","webpack:///./~/prop-types/index.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/ramda/src/curryN.js","webpack:///./~/ramda/src/internal/_isArray.js","webpack:///./~/ramda/src/keys.js","webpack:///./~/react/lib/ReactBaseClasses.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react/lib/ReactElementSymbol.js","webpack:///./~/react/lib/ReactNoopUpdateQueue.js","webpack:///./~/react/lib/canDefineProperty.js","webpack:///./src/components/Bibliography.js","webpack:///./src/components/ReferencesManager.js","webpack:///./src/index.js","webpack:///./~/chickencurry/index.js","webpack:///./~/chickencurry/lib/countDefinedItems.js","webpack:///./~/chickencurry/lib/map.js","webpack:///./~/chickencurry/lib/merge.js","webpack:///./~/create-react-class/factory.js","webpack:///./~/domelementtype/index.js","webpack:///./~/domhandler/index.js","webpack:///./~/domhandler/lib/element.js","webpack:///./~/entities/lib/decode_codepoint.js","webpack:///./~/events/events.js","webpack:///./~/html-to-react/lib/camel-case-attribute-names.js","webpack:///./~/html-to-react/lib/parser.js","webpack:///./~/html-to-react/lib/should-process-node-definitions.js","webpack:///./~/htmlparser2/lib/Parser.js","webpack:///./~/htmlparser2/lib/Tokenizer.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/entities/maps/decode.json","webpack:///./~/entities/maps/entities.json","webpack:///./~/entities/maps/legacy.json","webpack:///./~/entities/maps/xml.json","webpack:///./~/prop-types/checkPropTypes.js","webpack:///./~/prop-types/factory.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/factoryWithTypeCheckers.js","webpack:///./~/ramda/src/addIndex.js","webpack:///./~/ramda/src/bind.js","webpack:///./~/ramda/src/filter.js","webpack:///./~/ramda/src/find.js","webpack:///./~/ramda/src/internal/_complement.js","webpack:///./~/ramda/src/internal/_concat.js","webpack:///./~/ramda/src/internal/_curry3.js","webpack:///./~/ramda/src/internal/_curryN.js","webpack:///./~/ramda/src/internal/_filter.js","webpack:///./~/ramda/src/internal/_isArguments.js","webpack:///./~/ramda/src/internal/_isArrayLike.js","webpack:///./~/ramda/src/internal/_isObject.js","webpack:///./~/ramda/src/internal/_isString.js","webpack:///./~/ramda/src/internal/_isTransformer.js","webpack:///./~/ramda/src/internal/_map.js","webpack:///./~/ramda/src/internal/_reduced.js","webpack:///./~/ramda/src/internal/_xfilter.js","webpack:///./~/ramda/src/internal/_xfind.js","webpack:///./~/ramda/src/internal/_xmap.js","webpack:///./~/ramda/src/internal/_xwrap.js","webpack:///./~/ramda/src/map.js","webpack:///./~/ramda/src/reduce.js","webpack:///./~/ramda/src/reject.js","webpack:///./~/ramda/src/toPairs.js","webpack:///./~/react/lib/KeyEscapeUtils.js","webpack:///./~/react/lib/PooledClass.js","webpack:///./~/react/lib/React.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/ReactDOMFactories.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactVersion.js","webpack:///./~/react/lib/createClass.js","webpack:///./~/react/lib/getIteratorFn.js","webpack:///./~/react/lib/lowPriorityWarning.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/underscore.string.fp/camelize.js","webpack:///./~/underscore.string/camelize.js","webpack:///./~/underscore.string/decapitalize.js","webpack:///./~/underscore.string/helper/defaultToWhiteSpace.js","webpack:///./~/underscore.string/helper/escapeRegExp.js","webpack:///./~/underscore.string/trim.js","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_curry1","_isPlaceholder","fn","f2","a","b","arguments","length","_b","_a","validateFormat","format","condition","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","f1","apply","this","hasValidRef","config","ref","hasValidKey","key","_assign","ReactCurrentOwner","hasOwnProperty","Object","prototype","REACT_ELEMENT_TYPE","RESERVED_PROPS","__self","__source","ReactElement","type","self","source","owner","props","element","$$typeof","_owner","createElement","children","propName","childrenLength","childArray","Array","i","defaultProps","current","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","_self","_source","cloneElement","isValidElement","object","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","warning","toObject","val","TypeError","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","from","symbols","to","s","code","argCount","message","argIdx","encodeURIComponent","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","_isArray","_isTransformer","methodNames","xf","slice","obj","pop","idx","prop","_isArrayLike","_xwrap","_arrayReduce","acc","list","len","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","reduce","init","result","arr","CSL","PROCESSOR_VERSION","CONDITION_LEVEL_TOP","CONDITION_LEVEL_BOTTOM","PLAIN_HYPHEN_REGEX","LOCATOR_LABELS_REGEXP","RegExp","STATUTE_SUBDIV_GROUPED_REGEX","STATUTE_SUBDIV_PLAIN_REGEX","STATUTE_SUBDIV_STRINGS","art.","bk.","ch.","subch.","p.","pp.","para.","subpara.","pt.","r.","sec.","subsec.","sch.","tit.","col.","fig.","fol.","l.","n.","no.","op.","sv.","vrs.","vol.","STATUTE_SUBDIV_STRINGS_REVERSE","article","book","chapter","subchapter","page","paragraph","subparagraph","part","rule","section","subsection","schedule","title","column","figure","folio","line","note","issue","opus","sub-verbo","sub verbo","verse","volume","LOCATOR_LABELS_MAP","art","bk","ch","subch","col","fig","fol","l","no","op","pp","para","subpara","pt","r","sec","subsec","sv","sch","tit","vrs","vol","MODULE_MACROS","juris-pretitle","juris-title","juris-pretitle-short","juris-title-short","juris-main","juris-main-short","juris-tail","juris-tail-short","juris-locator","MODULE_TYPES","legal_case","legislation","bill","hearing","gazette","report","regulation","standard","NestedBraces","checkNestedBrace","state","opt","xclass","depth","update","str","lst","ilen","MULTI_FIELDS","LangPrefsMap","title-short","event","genre","medium","container-title","collection-title","archive","publisher","authority","publisher-place","event-place","archive-place","jurisdiction","number","edition","AbbreviationSegments","nickname","place","hereinafter","classic","FIELD_CATEGORY_REMAP","language-name","language-name-original","call-number","chapter-number","collection-number","locator","number-of-pages","number-of-volumes","citation-number","parseLocator","item","development_extensions","locator_date_and_revision","indexOf","raw_locator","match","fun","dateparser","parseDateToObject","normalizeLocaleStr","toLowerCase","toUpperCase","parseNoteFieldHacks","Item","validFieldsForType","allowDateOverride","elems","lines","NOTE_FIELDS_REGEXP","splt","j","jlen","push","trim","NOTE_FIELD_REGEXP","offset","names","mm","DATE_VARIABLES","raw","NAME_VARIABLES","literal","family","given","parseParticles","concat","GENDERS","ERROR_NO_RENDERED_FORM","PREVIEW","ASSUME_ALL_ITEMS_REGISTERED","START","END","SINGLETON","SEEN","SUCCESSOR","SUCCESSOR_OF_SUCCESSOR","SUPPRESS","SINGULAR","PLURAL","LITERAL","BEFORE","AFTER","DESCENDING","ASCENDING","ONLY_FIRST","ALWAYS","ONLY_LAST","FINISH","POSITION_FIRST","POSITION_SUBSEQUENT","POSITION_IBID","POSITION_IBID_WITH_LOCATOR","MARK_TRAILING_NAMES","POSITION_TEST_VARS","AREAS","CITE_FIELDS","MINIMAL_NAME_FIELDS","SWAPPING_PUNCTUATION","TERMINAL_PUNCTUATION","NONE","NUMERIC","POSITION","COLLAPSE_VALUES","DATE_PARTS","DATE_PARTS_ALL","DATE_PARTS_INTERNAL","NAME_PARTS","DECORABLE_NAME_PARTS","DISAMBIGUATE_OPTIONS","GIVENNAME_DISAMBIGUATION_RULES","NAME_ATTRIBUTES","PARALLEL_MATCH_VARS","PARALLEL_TYPES","PARALLEL_COLLAPSING_MID_VARSET","LOOSE","STRICT","TOLERANT","PREFIX_PUNCTUATION","SUFFIX_PUNCTUATION","NUMBER_REGEXP","NAME_INITIAL_REGEXP","ROMANESQUE_REGEXP","ROMANESQUE_NOT_REGEXP","STARTSWITH_ROMANESQUE_REGEXP","ENDSWITH_ROMANESQUE_REGEXP","ALL_ROMANESQUE_REGEXP","VIETNAMESE_SPECIALS","VIETNAMESE_NAMES","PARTICLE_GIVEN_REGEXP","PARTICLE_FAMILY_REGEXP","DISPLAY_CLASSES","NUMERIC_VARIABLES","TITLE_FIELD_SPLITS","seg","ret","TAG_USEALL","open","close","end","demoteNoiseWords","fld","drop_or_demote","SKIP_WORDS","locale","lang","opts","reverse","toEnd","start","extractTitleAndSubtitle","segments","langs","multi","_keys","short","vals","main","sub","shortTitle","titlecaseSentenceOrNormal","sentenceCase","mainTitle","subTitle","Output","Formatters","sentence","getSafeEscape","tmp","area","callbacks","thin_non_breaking_space_html_hack","mode","txt","Formats","text_escape","FORMAT_KEY_SEQUENCE","INSTITUTION_KEYS","SUFFIX_CHARS","ROMAN_NUMERALS","CREATORS","LANGS","af-ZA","ar","bg-BG","ca-AD","cs-CZ","da-DK","de-AT","de-CH","de-DE","el-GR","en-GB","en-US","es-ES","et-EE","eu","fa-IR","fi-FI","fr-CA","fr-FR","he-IL","hr-HR","hu-HU","is-IS","it-IT","ja-JP","km-KH","ko-KR","lt-LT","lv-LV","mn-MN","nb-NO","nl-NL","nn-NO","pl-PL","pt-BR","pt-PT","ro-RO","ru-RU","sk-SK","sl-SI","sr-RS","sv-SE","th-TH","tr-TR","uk-UA","vi-VN","zh-CN","zh-TW","LANG_BASES","af","bg","ca","cs","da","de","el","en","es","et","fa","fi","fr","he","hr","hu","is","it","ja","km","ko","lt","lv","mn","nb","nl","nn","pl","ro","ru","sk","sl","sr","th","tr","uk","vi","zh","SUPERSCRIPTS","ª","²","³","¹","º","ʰ","ʱ","ʲ","ʳ","ʴ","ʵ","ʶ","ʷ","ʸ","ˠ","ˡ","ˢ","ˣ","ˤ","ᴬ","ᴭ","ᴮ","ᴰ","ᴱ","ᴲ","ᴳ","ᴴ","ᴵ","ᴶ","ᴷ","ᴸ","ᴹ","ᴺ","ᴼ","ᴽ","ᴾ","ᴿ","ᵀ","ᵁ","ᵂ","ᵃ","ᵄ","ᵅ","ᵆ","ᵇ","ᵈ","ᵉ","ᵊ","ᵋ","ᵌ","ᵍ","ᵏ","ᵐ","ᵑ","ᵒ","ᵓ","ᵔ","ᵕ","ᵖ","ᵗ","ᵘ","ᵙ","ᵚ","ᵛ","ᵜ","ᵝ","ᵞ","ᵟ","ᵠ","ᵡ","⁰","ⁱ","⁴","⁵","⁶","⁷","⁸","⁹","⁺","⁻","⁼","⁽","⁾","ⁿ","℠","™","㆒","㆓","㆔","㆕","㆖","㆗","㆘","㆙","㆚","㆛","㆜","㆝","㆞","㆟","ˀ","ˁ","ۥ","ۦ","SUPERSCRIPTS_REGEXP","UPDATE_GROUP_CONTEXT_CONDITION","termtxt","valueTerm","group_context","tip","test","testres","empty","alpha","just_did_number","force_suppress","not","locale_opts","locale_dates","TERMINAL_PUNCTUATION_REGEXP","CLOSURES","console","debug","dump","log","XmlJSON","dataObj","institution","attrs","institution-parts","delimiter","substitute-use-first","use-last","clean","json","getStyleId","myjson","styleName","tagName","grandkids","nodename","attributes","attrname","content","namespace","numberofnodes","getAttributeValue","getNodeValue","setAttributeOnNodeIdentifiedByNameAttribute","partname","deleteNodeByNameAttribute","deleteAttribute","setAttribute","attr","nodeCopy","clone","getNodesByName","nameattrval","nodeNameIs","makeXml","jsonStringWalker","walkToObject","JSON","parse","insertChildNodeAfter","parent","node","pos","datejson","insertPublisherAndPlace","useme","mustHaves","haveVarname","variable","prefix","suffix","isChildOfSubstitute","parents","myparents","addMissingNameNodes","addName","addInstitutionNodes","insertPos","and","k","klen","flagDateMacros","inspectDateMacros","stripXmlProcessingInstruction","xml","parseXml","_decodeHtmlEntities","numStr","num","parseInt","_getAttributes","elem","_getAttribute","rex","_getTagName","_castObjectFromOpeningTag","_extractTextFromCompositeElement","_appendToChildren","_stack","_extendStackWithNewChildren","_obj","stylePos","stub","_listifyString","processElement","XmlDOM","DOMParser","parseFromString","contentType","ActiveXObject","xmldata","async","loadXML","XMLHttpRequest","overrideMimeType","send","responseXML","marknote","Parser","hasAttributes","importNode","doc","srcElement","_importNode","allChildren","nodeType","newNode","nodeName","il","getAttribute","childNodes","appendChild","parser","inst_doc","inst_node","getElementsByTagName","inst_part_node","institutionpart","ns","myxml","text","textContent","innerText","innerHTML","getAttributeName","firstChild","nodes","TEXT_NODE","removeChild","removeAttribute","ownerDocument","cloneNode","datexml","replaceChild","group","skippers","twovars","child","subskippers","parentNode","nameslist","namelist","thenames","theinstitution","thename","theinstitutionpart","insertBefore","nextSibling","attrval","nameparts","thenode","setupXml","xmlObject","toXMLString","XmlE4X","getSortCompare","default_locale","stringCompare","strcmp","strcmp_opts","sensitivity","ignorePunctuation","numeric","stripPunct","bracketPreSort","toLocaleLowerCase","localeCompare","ambigConfigDiff","ppos","llen","givens","disambiguate","year_suffix","cloneAmbigConfig","oldconfig","tainters","param","getAmbigConfig","disambig_request","disambig_settings","getMaxVals","names_max","mystack","getMinVal","tokenExec","token","maybenext","jump","succeed","fail","execs","expandMacro","macro_key_token","mkey","macro_nodes","end_of_macro","postponed_macro","Token","hasDate","macroid","cslXml","build","current_default_locale","func","extension","macro_stack","cslid","juris","update_mode","Node","mytarget","getMacroTarget","buildMacro","configureMacro","macro_name","macros","text_node","root","tokens","makeBuilder","configureTokenList","XmlToToken","tokentype","explicitTarget","decorations","skip","setDecorations","Attributes","hasVariable","variables","DateParser","epochPairs","epochYearByName","epochMatchStrings","epochMatchString","epochSplitter","epochMatcher","kanjiMonthDay","kanjiYear","kanjiRange","rexString","rexDash","rexDashSlash","rexSlashDash","monthStrings","setOrderDayMonth","monthGuess","dayGuess","setOrderMonthDay","resetDateParserMonths","monthSets","monthAbbrevs","monthRexes","addDateParserMonths","abbrevLength","insert","extendedSets","jKey","kKey","monthRexStrs","convertDateObjectToArray","thedate","slicelen","convertDateObjectToString","_parseNumericDate","delim","suff","orig","slashPos","dashPos","yearIsNegative","slst","mmx","mmpos","jiy","rangeDelim","dateDelim","delimPos","delims","isRange","date","outer","circa","year","day","month","parts","parseDateToArray","parseDateToString","Engine","sys","style","forceLang","langspec","processor_version","csl_version","variableWrapper","VARIABLE_WRAPPER_PREPUNCT_REX","retrieveStyleModule","getAbbreviation","parallel","Parallel","transform","Transform","setParseNames","Opt","Tmp","Build","Fun","configure","Configure","citation_sort","CitationSort","bibliography_sort","BibliographySort","citation","Citation","bibliography","Bibliography","output","Queue","dateput","csl_reverse_lookup_support","cslNodeId","setCslNodeIds","nodenames","setStyleAttributes","styleID","setSuppressedJurisdictions","suppressedJurisdictions","version","static_statute_locator","handle_parallel_articles","main_title_from_short_title","rtl_support","expect_and_symbol_form","require_explicit_legal_case_title_short","force_jurisdiction","localeResolve","best","sort_sep","localeConfigure","makeRegExp","adjust","getOpt","registry","Registry","area_nodes","buildTokenLists","configureTokenLists","Disambiguation","splice_delimiter","flipflopper","Util","FlipFlopper","setCloseQuotesArray","ordinalizer","long_ordinalizer","page_mangler","PageRangeMangler","getFunction","year_mangler","setOutputFormat","getTerm","close_quotes_array","me","enterFunc","leaveFunc","singletonFunc","buildStyle","origparent","fixDateNode","dummy","term","form","plural","gender","forceDefaultLocale","getField","terms","cite_renders_content","getDate","dates","getVariable","varname","getDateNum","ItemField","hash","forms","hashterm","dateparts_master","dateparts","pppos","lllen","strings","retrieveItems","ids","retrieveItem","ITERATION","loadedItemIDs","refhash","normalize_lang_keys_to_lowercase","stringify","field","ctype","creator","_key","getLanguageName","language","languageName","originalLanguage","field_hack","allow_field_hack_date_override","dateobj","raw_date_parsing","dateParseArray","elements","legislation_id","isLegalType","loadAbbreviation","abbrevs","journalAbbreviation","setOpt","inheritedAttributes","inheritOpt","parentname","defaultValue","parentValue","remapSectionVariable","inputList","label","sectionMasterLabel","space","setNumberLabels","shadow_numbers","values","firstword","firstlabel","substituteOne","template","substituteTwo","template2","Mode","params","passthrough","Doppeler","rexStr","stringMangler","matchRex","tags","splitRex","origStrings","normalDecorIsOrphan","blob","all_the_decor","use_param","layout_decorations","alldecor","getJurisdictionNameAndSuppress","jurisdictionID","jurisdictionName","getHumanForm","valid","mask","getCitationLabel","getTrigraphParams","myname","authors","nameOutput","getName","skipWords","issued","ilst","trigraph","decorate","getSortFunc","setLangTagsForCslSort","sort","setLangTagsForCslTransliteration","setLangTagsForCslTranslation","setLangPrefsForCites","conv","clientSegment","citeprocSegment","supplements","sortval","translit","translat","setLangPrefsForCiteAffixes","affixList","affixes","citeAffixes","count","settings","setAutoVietnameseNamesOption","setAbbreviations","setSuppressTrailingPunctuation","suppressTrailingPunctuation","levelname","queue","tokenstore","formats","Stack","drip","blobs","getToken","mergeTokenStrings","base","modifier","base_token","modifier_token","addToken","newtok","pushFormats","popFormats","startTag","openLevel","endTag","closeLevel","ephemeral","curr","Blob","just_looking","append","tokname","notSerious","ignorePredecessor","noStripPeriods","useblob","element_trace","last_char_rendered","term_predecessor_name","term_predecessor","in_cite_predecessor","AppendBlobPointer","strip_periods","punctuation_in_quote","processTags","string","myblobs","txt_esc","blob_delimiter","count_offset_characters","offset_characters","new_locale","old_locale","blobjr","use_suffix","use_prefix","first_blob","blen","suppress_decorations","addtoret","numberSeen","UGLY_DELIMITER_SUPPRESS_HACK","successor_prefix","span_split","blobs_start","renderBlobs","blobs_end","clearlevel","in_cite","use_delim","checkNext","splice_prefix","doit","checkLast","status","strlen","particle","formatter","str_blob","addme","range_prefix","suppress_splice_prefix","purgeEmptyBlobs","buf","punctInQuote","blobIsNumber","blobEndsInNumber","blobHasDecorations","includeQuotes","decorlist","blobHasDescendantQuotes","blobHasDescendantMergingPunctuation","parentChar","childChar","mergedChars","RtoL_MAP","matchLastChar","chr","PUNCT","mergeChars","First","first","Second","second","merge_right","cullRight","SecondStrings","cullLeft","FirstStrings","addRight","addLeft","firstChar","secondChar","cull","LtoR_MAP","merge","swapToTheLeft","SWAP_IN","swapToTheRight","SWAP_OUT","NO_SWAP_IN",";",":","NO_SWAP_OUT",".","!","?","upward","parentDecorations","parentStrings","childStrings","PUNCT_OR_SPACE","leftward","sibling","siblingChar","hasDecorations","hasNumber","suffixAndPrefixMatch","suffixAndFieldMatch","downward","top","delimChar","childDecorations","childIsNumber","allowMigration","siblingStrings","fix","lastChar","quoteSwap","decoration",",","subkey","has_disambiguate","jurisdictions_seen","persons","locale-orig","locale-translit","locale-translat","institutions","titles","journals","publishers","places","bib_mode","sort_citations","citation_number_slug","has_layout_locale","locator_parsing_for_plurals","locator_label_parse","clean_up_csl_flaws","flip_parentheses_to_braces","jurisdiction_subfield","clobber_locator_if_no_statute_section","wrap_url_and_doi","allow_force_lowercase","apply_citation_wrapper","uppercase_subtitles","strict_text_case_locales","spoof_institutional_affiliations","parse_names","names_base","givens_base","namepart_decorations","namepart_type","can_substitute","element_rendered_ok","nameset_counter","term_intended","variable_attempt","variable_success","output_tip","label_form","parallel_conditions","done_vars","tokenstore_stack","last_suffix_used","last_names_used","last_years_used","years_used","names_used","taintedItemIDs","taintedCitationIDs","initialize_with","AmbigConfig","bib_sort_keys","cite_locales","cite_affixes","authority_stop_last","Match","suffixator","Suffixator","romanizer","Romanizer","Ordinalizer","LongOrdinalizer","in_bibliography","in_style","layout_flag","macro","substitute_level","names_level","render_nesting_level","render_seen","srt","Comparifier","collapse","topdecor","layout_prefix","layout_suffix","layout_delimiter","sort_locales","max_number_of_names","sort_directions","previewCitationCluster","citationsPre","citationsPost","newMode","oldMode","processCitationCluster","appendCitationCluster","citationreg","citationByIndex","citationID","properties","noteIndex","flag","nlen","noteCitations","textCitations","citationsInNote","citation_errors","return_data","bibchange","setCitationId","oldCitationList","oldItemList","oldAmbigs","reflist","newCitationList","newItemIds","newItemIdsList","citationById","citationItems","oldAkey","ambig","ambigcites","disambig","sortedItems","rerunAkeys","exec","tryLabel","newitem","citationsByItemId","update_items","index","updateItems","citation_number_sort","sortkeys","getSortKeys","grouped_sort","unsorted","authorstring_request","mydisambig","getAmbiguousCite","authorstring","authorstrings","compareCompositeKeys","lastauthor","thiskey","thisauthor","citations","first_ref","last_ref","onecitation","myid","mylocator","mylabel","incitationid","oldvalue","position","oldCount","newCount","oldlastid","ibidme","suprame","items","oldid","itmp","prev","prev_locator","prev_label","curr_locator","oldFirst","newFirst","note_distance","process_CitationCluster","oldItemIds","rerunAkey","run","mycitation","citation_pos","citation_note_index","citation_id","StartCitation","getCitationCluster","makeCitationCluster","rawList","visualForm","flags","oldTermSiblingLayer","itemSupp","near-note","use_parallels","getCite","getSpliceDelimiter","last_collapsed","have_collapsed","use_cite_group_delimiter","cite_group_delimiter","alt_affixes","objects","myparams","composite","compie","preceding_item","error_object","last_primary_names_string","backref_index","use_layout_prefix","parasets","lastTitle","lastID","locatorInLastPosition","hasPlaceholderTerm","itemID","citationItems_pos","error_code","ComposeSet","precedingEndsInPeriodOrComma","currentStartsWithPeriodOrComma","spaceidx","has_purged_parallel","PruneOutputQueue","last_locale","wrapCitationEntry","last_chr","buffer","parallel_delimiter","preStr","sufStr","tmpstr","prevItemID","blockShadowNumberReset","StartCite","citeStart","name_node","NameOutput","citeEnd","CloseCite","bibliography_pos","bibliography_errors","disambiguate_count","disambiguate_maxMax","same_author_as_previous_cite","subsequent_author_substitute_ok","lastchr","disambig_override","disambig_restore","clear","has_done_year_suffix","last_cite_locale","first_name_string","cut_var","issued_date","renders_collection_number","cite","makeBibliography","bibsection","entry_ids","entry_strings","getBibliographyEntries","maxoffset","entryspacing","linespacing","second-field-align","hangingindent","bibstart","bibend","eval_string","eval_list","eval_spec","input","include","anymatch","allmatch","bib_entry","res","spec","topblobs","entry_item_ids","collapse_parallel","skips","eyetem","entry_item_data","last_rendered_name","page_start","page_length","getSortedIds","page_item_count","processed_item_ids","exclude","select","quash","system_id","embedBibliographyEntry","item_id","master","siblings","last_expected_id","last_seen_id","force","direction","Math","floor","random","toString","rebuildProcessorState","uncitedItemIDs","doneIDs","itemIDs","pre","post","updateUncitedItems","restoreProcessorState","citationList","itemList","indexNumbers","citationIds","oldCitations","idList","nosort","rerun_ambigs","implicitUpdate","oldArea","oldRoot","oldExtension","ambigsTouched","dodeletes","myhash","doinserts","mylist","dorefreshes","rebuildlist","setsortkeys","setdisambigs","sorttokens","renumber","idHash","dopurge","langstr","defaultLocale","langlst","bare","generic","beShy","localexml","retrieveLocale","localeSet","localeLists","lang_in","lang_out","termname","styleopts","genderform","ord","1.0.1","typenode","ordinals101","last-digit","last-two-digits","whole-number","ordinals101_toggle","genderized_terms","termstub","ikey","gender_segments","form_segments","jkey","feminine","masculine","jurisdiction_preference","skip_words","getLocaleNames","preferredLocale","extendLocaleList","localeList","normalizedLocale","stylexml","localeIDs","styleNode","nodeNames","nodeLocales","sniffLocaleOnOneNodeName","choose","firstkey","date_obj","dpx","mypos","date_parts","date_variables","substituteStart","dateMacroAsSortKey","dp","donesies","date_object","date-parts","season_end","date_collapse_at","StartVariable","CloseVariable","substituteEnd","first_date","value_end","real","invoked","precondition","known_year","bc","ad","bc_end","ad_end","ready","dcurr","date_variable","AppendToVariable","monthnameid","myform","Dates","season","range_delimiter","has_year_suffix","NumericBlob","setFormatter","Conditions","TopNode","etal_node","etal_term","realGroup","label_form_override","reject","require","variable_success_parent","set_parallel_condition","publisher_lst","publisher_place_lst","publisherOutput","PublisherOutput","x","xlen","choose_start","if_start","macroName","jurisdictionList","getJurisdictionList","retrieveAllStyleModules","myXml","myNodes","myTypes","types","myName","macroCount","tests","any","if_end","else_start","render","isJurisLocatorLabel","parallel_condition_object","conditions","parallel_conditional_blobs_list","else_end","choose_end","addMatch","matchCombine","addTest","locale_default","info","institution_delimiter","name_delimiter","and_term","and_prefix_single","and_prefix_multiple","and_suffix","single","multiple","has_institution","start_key","citation_number_sort_direction","sort_direction","date_key","sort_key_flag","citation_number_sort_used","names_start_token","name_token","institution_token","names_end_token","single_text","seq","padding","dateAsSortKey","getOutputFunction","varval","end_key","keystring","normalizeUnicode","empty_date","evaluateLabel","section_form_override","namevars","names_variables","name_label","name_flag","after","before","layout","setSuffix","suffix_token","topblob","using_display","prefix_token","tok","locale_raw","cite_entry","locator_txt","suffix_txt","rendered_name","sp","test_prefix","test_char","my_tok","layout_locale_flag","choose_tok","build_layout_locale_flag","nameset_base","etal_spec","_first_creator_variable","_please_chop","nameset_offset","label_blob","labelVariable","reinit","oldval","outputNames","variable_offset","family_decor","cloneToken","given_decor","getEtAlConfig","divideAndTransliterateNames","truncatePersonalNameLists","disambigNames","constrainNames","setEtAlParameters","setCommonTerm","renderAllNames","blob_list","v","institution_sets","varblob","joinPersonsAndInstitutions","freeters","joinInstitutionSets","joinFreetersAndInstitutionSets","_join","_applyLabels","common_term","namesToken","name_node_string","nameobjs","substring","Names","getRawName","author_title","_collapseAuthor","names_count","freeters_count","institutions_count","persons_count","_buildLabel","castLabel","myqueue","mystr","oldchars","isPerson","isInstitution","chopvar","_truncateNameList","etal_min","etal_use_first","container","limit","varnames","_normalizeVariableValue","_getFreeters","_getPersonsAndInstitutions","_checkNickname","has_affiliates","_clearValues","author","myLocalName","joinPersons","tokenname","_joinEtAl","_joinEllipsis","_joinAnd","_getToken","ellipsis","delimiter_offset","has_term","vv","_compareNamesets","base_nameset","nameset","_imposeNameConstraints","display_names","discretionary_names_length","etal_use_last","sane","overlength","padBase","_runDisambigNames","myinitials","paramx","namereg","addname","evalname","use_initials","etal_style","etal_suffix","etal_prefix_single","etal_prefix_multiple","_setEtAlParameter","_renderNames","renderInstitutionNames","localesets","slot","primary","secondary","tertiary","slotnames","setRenderedName","_renderInstitutionName","usedOrig","fixupInstitution","pri","ter","short_style","_getShortStyle","_composeOneInstitutionPart","long_style","_getLongStyle","institution_short","_renderOneInstitutionPart","institution_long","primary_tok","secondary_tok","tertiary_tok","hasItalic","institutionblob","secondary_outer","tertiary_outer","nameBlob","_renderPersonalName","nameToken","_renderOnePersonalName","personblob","_isRomanesque","top_locale","hasJoiningPunctuation","dropping_particle","_droppingParticle","_familyName","non_dropping_particle","_nonDroppingParticle","_givenName","_nameSuffix","_isShort","suffix_sep","merged","romanesque","has_hyphenated_non_dropping_particle","_normalizeNameInput","comma-suffix","non-dropping-particle","dropping-particle","static-ordering","static-particles","reverse-ordering","full-form-always","parse-names","comma-dropping-particle","block_initialize","_parseName","_stripPeriods","decor_tok","ndp","initializeWith","unInitialize","toSuffix","noparse","slotLocaleset","fallback","stopOrig","name_params","getStaticOrder","foundTag","langTags","langTag","getNameParams","transliterated","try_locale","name_as_sort_order","name_as_reverse_order","name_never_short","field_lang_bare","strname","listpos","_splitInstitution","long_form","short_form","use_short_form","refresh","static_ordering_val","splitInstitution","splitLst","splitSplitLst","quashCheck","_trimInstitution","subunits","use_first","append_last","stop_last","group_tok","varlist","clearVars","composeAndBlob","composeElements","composePublishers","joinPublishers","and_blob","no_delim","with_delim","myterm","theItem","processNumber","labelForm","labelDecorations","oldTmpRoot","ellipsis_term","ellipsis_prefix_single","ellipsis_prefix_multiple","ellipsis_suffix","names_flag","with_default_prefix","with_suffix","thewith","can_block_substitute","outputNumericField","variables_real","langForItem","lang_sort_hold","substitute","firstoutput","specialdelimiter","group_start","group_end","reference_term","last_element_trace","parallel_variable","abbrevfam","abbrfall","altvar","transfall","joiner","myitem","maketest","myvariable","trylabels","trylabel","tryposition","trypositions","mytype","isValid","rawNames","rawMultiNames","creatorParent","creatorChild","tryjurisdictions","tryjurisdictionSlice","tryjurisdiction","jurisdictions","maketests","trydates","trydate","trysubjurisdictions","subjurisdictions","nameList","last_is_person","locales","sort_locale","localeMaster","localeServant","locale_bares","locale_list","parseFloat","text_case_normal","cls","sets","try_cite","midVars","ignoreVarsLawGeneral","ignoreVarsLawProceduralHistory","ignoreVarsOrders","ignoreVarsOther","isMid","out","sortedItemsPos","in_series","delim_counter","delim_pointers","master_was_neutral_cite","last_id","itemId","has_required_var","basics_ok","last_cite","lastJuris","thisJuris","front","mid","back","front_collapse","back_forceme","ignoreVars","useProceduralHistory","force_collapse","real_variable","data","is_mid","thisAuthority","thatAuthority","use_journal_info","volume_pos","container_title_pos","section_pos","collection_number_pos","has_date","next_output_in_progress","lengthCheck","purgeGroupsIfParallel","series","purgeVariableBlobs","oops","original_condition","purgeme","none","all","nand","abbreviate","basevalue","myabbrev_family","use_field","getFieldLocale","localeRex","getTextSubField","locale_type","use_default","o","usingOrig","hasVal","publisherCheck","fields","category","itemType","abbreviation_fallback","alternative_varname","transform_fallback","langPrefs","primary_locale","secondary_locale","tertiary_locale","primaryUsedOrig","primaryPrefix","blob_obj","blobs_pos","evaluator","rawtests","maxvals","minval","mother_token","DefaultFormatter","last","subnode","subchildren","display","lingo","isMacro","yr","macroFlag","exts","compareNamesets","punctlist","terminator","normalizeOnly","lstend","lstmid","doNormalize","doInitialize","isAbbrev","extra","toLocaleUpperCase","imperial","makeShort","substr","normalizeMonth","useSeason","ordinal","Sort","strip_prepositions","bib_first","nodetypes","variable_entry","positionMap","noteNumber","firstReferenceNoteNumber","citationNumber","itemData","variableNames","context","note-number","first-reference-note-number","bib_first_end","bib_other","substituted_variable","subrule","dosub","suffixes","trygenders","trygender","ordinfo","numstr","slist","N","X","ItemObject","normalizeFieldValue","defaultLabel","embeddedLabel","composeNumberInfo","origLabel","joiningSuffix","labelSuffix","labelVisibility","fixupSubsections","fixNumericAndCount","currentLabelInfo","isEscapedHyphen","collapsible","mVal","mCurrentLabel","isCollapsible","setStyling","masterNode","masterStyling","masterLabel","newnode","stripHyphenBackslash","styling","fixupRangeDelimiter","rangeDelimiter","isNumeric","isPage","checkPage","checkTerm","manglePageNumbers","currentInfo","fixRanges","lastHadRangeDelimiter","languageRole","localeType","slug","parseString","setSpaces","setPluralsAndNumerics","setVariableParams","embeddedLabelForm","nums","lastLabelName","labelName","labelPlaceholderPos","numStyling","prefixLabelStyling","suffixLabelStyling","rangeType","rangerex","listify","expand","minimize","minimize_internal","chicago","begin","ret_func","this_range_delimiter","delimRex","rexm","rexlst","minchars","isyear","sniff","_setOuterQuoteForm","quot","flip"," '"," \"","(\"","('","_nestingData","_getNestingOpenerParams","opener","openers","_nestingFix","tag","_pushNestingState","_tagRex","_tryOpen","_tryClose","_nestingState","_nestingParams","closer","fixtag","nocase","_doppelString","forcedSpaces","matchAll","splitAll","_apostropheForce","_undoppelToQueue","doppel","leadingSpace","firstString","tagReg","_TagReg","stack","latest","addStyling","decor","forcedSpace","newblob","newdecorset","seen","allTheDecor","_decorset","_olddecor","popStyling","set","pair","quoteFormSeen","tagInfo","failedTag","tagPos","<span class=\"nocase\">","flipflop","<span class=\"nodecor\">","nodecor","<span style=\"font-variant:small-caps;\">","small-caps","normal","<sc>","<i>","italic","<b>","bold","<sup>","sup","<sub>","true","inner","false","localeOpenQuote","localeCloseQuote","localeOpenInnerQuote","localeCloseInnerQuote","closers","_decor","decorset","_capitalise","word","_textcaseEngine","pushQuoteState","tryOpen","tryClose","quoteState","quoteParams","prevPos","positions","tagDoppel","‘","“","capitaliseWords","tagState","_tagParams","afterPunct","lastWordPos","quotePos","quoteFix","origChar","isFirst","lastWords","wordDoppel","lastWord","words","lowercase","skipWordsRex","uppercase","followingTag","wordle","<span style=\"font-variant: small-caps;\">","html","aChar","@font-style/italic","@font-style/oblique","@font-style/normal","@font-variant/small-caps","@passthrough/true","@font-variant/normal","@font-weight/bold","@font-weight/normal","@font-weight/light","@text-decoration/none","@text-decoration/underline","@vertical-align/sup","@vertical-align/sub","@vertical-align/baseline","@strip-periods/true","@strip-periods/false","@quotes/true","@quotes/inner","@quotes/false","@cite/entry","@bibliography/entry","@display/block","@display/left-margin","@display/right-inline","@display/indent","@showid/true","prePunct","postPunct","@URL/true","@DOI/true","rtf","charCodeAt","NameReg","CitationReg","deletes","inserts","uncited","refreshes","akeys","oldseq","ambigresets","sorter","getSortedRegistryItems","uncited_flag","touched","otheritems","kkey","delitems","loneSiblingID","removeIDs","newmasterID","newmaster","siblingID","akey","abase","rendered","registerAmbigToken","regtoken","akkey","loneKey","leftovers","compareKeys","keyset","sortCompare","cmp","compareRegistryTokens","ambig_config","key_type","pkey","skey","dagopt","gdropt","set_keys","myitems","nameind","nameindpkeys","itemkeyreg","itemid","nameobj","namenum","request_base","initials","gdropt_orig","posB","fullkey","configModes","modes","initVars","runDisambig","ismax","initGivens","lists","gnameset","gname","clashes","incrementDisambig","scanItems","evalScan","otherItem","ItemCite","scanlist","partners","nonpartners","otherItemCite","maxed","modeindex","disNames","captureStepToBase","betterbase","disExtraText","disYears","origid","oldBase","increment_names","givensMax","increment_namesets","namesMax","namesetsMax","myIds","myItemBundles","myItems","maxNamesByItemId","myItem","getCiteData","max","jurisdictionElems","preferences","preference","ParticleList","always_dropping_1","always_dropping_3","always_non_dropping_1","always_non_dropping_2","always_non_dropping_3","either_1","either_2","either_1_dropping_best","either_2_dropping_best","either_3_dropping_best","non_dropping_2_alt_dropping_1_non_dropping_1","PARTICLES","splitParticles","nameValue","firstNameFlag","caseOverride","origNameValue","particleList","m1","hasParticle","trimLast","parseSuffix","nameObj","possible_suffix","possible_comma","lastNameValue","lastParticleList","nonDroppingParticle","firstNameValue","firstParticleList","droppingParticle","NodePrototype","lastChild","nodeTypes","domLvl1","previousSibling","nodeValue","cdata","comment","shorthand","defineProperty","get","emptyObject","processingInstructions","isValidNodeDefinitions","processNodeDefinitions","ProcessingInstructions","IsValidNodeDefinitions","ProcessNodeDefinitions","alwaysValid","utils","voidElementTags","processDefaultNode","ShouldProcessNodeDefinitions","defaultProcessingInstructions","shouldProcessNode","shouldProcessEveryNode","processNode","createStyleJsonFromString","styleString","singleStyle","styles","jsonStyles","camelize","toPairs","React","camelCaseAttrMap","elementProps","attribs","keyAndValue","_arity","_curry2","_curryN","isArray","_has","_isArguments","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","contains","nIdx","ks","checkArgsLength","ReactComponent","updater","refs","ReactNoopUpdateQueue","ReactPureComponent","ComponentDummy","_prodInvariant","isReactComponent","setState","partialState","callback","enqueueSetState","enqueueCallback","forceUpdate","enqueueForceUpdate","constructor","isPureReactComponent","Component","PureComponent","warnNoop","publicInstance","callerName","isMounted","enqueueReplaceState","completeState","canDefineProperty","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_propTypes2","htmlToReactParser","HtmlToReactParser","_Component","_this","getPrototypeOf","makeReactBibliography","processor","biblioStr","nextProps","prevProps","_this2","_props$componentClass","componentClass","className","loadingContent","propTypes","_extends","ReferencesManager","makeReactCitations","cits","inputCitations","citationData","citationObjects","cit","order","ThatComponent","citationId","_props","array","childContextTypes","_Bibliography2","_ReferencesManager2","curry","curryArgs","concatArgs","mergedArgs","countDefinedItems","__","newArr","shift","identity","_invariant","MIXINS_KEY","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassInterface","ReactClassMixin","mixSpecIntoComponent","proto","autoBindPairs","__reactAutoBindPairs","RESERVED_SPEC_KEYS","mixins","property","isReactClassMethod","autobind","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","mergeIntoWithNoDuplicateKeys","one","two","bindAutoBindMethod","component","method","boundMethod","bindAutoBindMethods","pairs","autoBindKey","injectedMixins","contextTypes","getDefaultProps","getInitialState","getChildContext","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","displayName","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","ReactClassComponent","initialState","Text","Directive","Comment","Script","Style","Tag","CDATA","Doctype","isTag","DomHandler","options","elementCB","defaultOpts","_callback","_options","_elementCB","dom","_done","_tagStack","_parser","ElementType","re_whitespace","ElementPrototype","normalizeWhitespace","withStartIndices","withEndIndices","onparserinit","onreset","onend","_handleCallback","onerror","onclosetag","endIndex","_createDomElement","withDomLvl1","_addDomElement","startIndex","onopentag","ontext","lastTag","normalize","ignoreWhitespace","oncomment","oncdatastart","oncommentend","oncdataend","onprocessinginstruction","decodeMap","codePoint","EventEmitter","_events","_maxListeners","isFunction","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","emit","er","handler","listeners","addListener","listener","newListener","warned","trace","on","once","g","removeListener","fired","splice","removeAllListeners","listenerCount","evlistener","emitter","NON_STANDARD_ATTRIBUTES","SVG_ATTRIBUTES","camelCaseMap","soFar","lower","find","addIndex","HtmlParser","parseHtmlToTree","decodeEntities","parseComplete","traverseDom","isValidNode","processingInstruction","replaceChildren","parseWithInstructions","domTreeItem","cbs","_cbs","_tagname","_attribname","_attribvalue","_attribs","_lowerCaseTagNames","lowerCaseTags","xmlMode","_lowerCaseAttributeNames","lowerCaseAttributeNames","Tokenizer","_tokenizer","formTags","option","optgroup","button","datalist","textarea","openImpliesClose","td","thead","body","head","link","script","li","h1","h2","h3","h4","h5","h6","voidElements","basefont","br","command","embed","frame","img","isindex","keygen","meta","track","wbr","path","circle","ellipse","rect","use","stop","polyline","polygon","re_nameEnd","_updatePosition","initialOffset","_sectionStart","getAbsoluteIndex","onopentagname","onopentagend","_closeCurrentTag","lastIndexOf","onselfclosingtag","recognizeSelfClosing","onattribname","onattribdata","onattribend","onattribute","_getInstructionName","search","ondeclaration","oncdata","recognizeCDATA","reset","write","chunk","pause","resume","parseChunk","whitespace","ifElseState","upper","SUCCESS","FAILURE","_state","_index","consumeSpecialNameChar","NEXT_STATE","IN_TAG_NAME","TEXT","_buffer","_bufferOffset","_baseState","_special","SPECIAL_NONE","_running","_ended","_xmlMode","_decodeEntities","decodeCodePoint","entityMap","legacyMap","xmlMap","BEFORE_TAG_NAME","IN_SELF_CLOSING_TAG","BEFORE_CLOSING_TAG_NAME","IN_CLOSING_TAG_NAME","AFTER_CLOSING_TAG_NAME","BEFORE_ATTRIBUTE_NAME","IN_ATTRIBUTE_NAME","AFTER_ATTRIBUTE_NAME","BEFORE_ATTRIBUTE_VALUE","IN_ATTRIBUTE_VALUE_DQ","IN_ATTRIBUTE_VALUE_SQ","IN_ATTRIBUTE_VALUE_NQ","BEFORE_DECLARATION","IN_DECLARATION","IN_PROCESSING_INSTRUCTION","BEFORE_COMMENT","IN_COMMENT","AFTER_COMMENT_1","AFTER_COMMENT_2","BEFORE_CDATA_1","BEFORE_CDATA_2","BEFORE_CDATA_3","BEFORE_CDATA_4","BEFORE_CDATA_5","BEFORE_CDATA_6","IN_CDATA","AFTER_CDATA_1","AFTER_CDATA_2","BEFORE_SPECIAL","BEFORE_SPECIAL_END","BEFORE_SCRIPT_1","BEFORE_SCRIPT_2","BEFORE_SCRIPT_3","BEFORE_SCRIPT_4","BEFORE_SCRIPT_5","AFTER_SCRIPT_1","AFTER_SCRIPT_2","AFTER_SCRIPT_3","AFTER_SCRIPT_4","AFTER_SCRIPT_5","BEFORE_STYLE_1","BEFORE_STYLE_2","BEFORE_STYLE_3","BEFORE_STYLE_4","AFTER_STYLE_1","AFTER_STYLE_2","AFTER_STYLE_3","AFTER_STYLE_4","BEFORE_ENTITY","BEFORE_NUMERIC_ENTITY","IN_NAMED_ENTITY","IN_NUMERIC_ENTITY","IN_HEX_ENTITY","SPECIAL_SCRIPT","SPECIAL_STYLE","_stateText","_getSection","_stateBeforeTagName","_stateInTagName","_emitToken","_stateBeforeCloseingTagName","_stateInCloseingTagName","_stateAfterCloseingTagName","_stateBeforeAttributeName","_stateInSelfClosingTag","_stateInAttributeName","_stateAfterAttributeName","_stateBeforeAttributeValue","_stateInAttributeValueDoubleQuotes","_stateInAttributeValueSingleQuotes","_stateInAttributeValueNoQuotes","_stateBeforeDeclaration","_stateInDeclaration","_stateInProcessingInstruction","_stateBeforeComment","_stateInComment","_stateAfterComment1","_stateAfterComment2","_stateBeforeCdata1","_stateBeforeCdata2","_stateBeforeCdata3","_stateBeforeCdata4","_stateBeforeCdata5","_stateBeforeCdata6","_stateInCdata","_stateAfterCdata1","char","characterState","_stateAfterCdata2","_stateBeforeSpecial","_stateBeforeSpecialEnd","_stateBeforeScript1","_stateBeforeScript2","_stateBeforeScript3","_stateBeforeScript4","_stateBeforeScript5","_stateAfterScript1","_stateAfterScript2","_stateAfterScript3","_stateAfterScript4","_stateAfterScript5","_stateBeforeStyle1","_stateBeforeStyle2","_stateBeforeStyle3","_stateBeforeStyle4","_stateAfterStyle1","_stateAfterStyle2","_stateAfterStyle3","_stateAfterStyle4","_stateBeforeEntity","_stateBeforeNumericEntity","_parseNamedEntityStrict","entity","_emitPartial","_parseLegacyEntity","_stateInNamedEntity","_decodeNumericEntity","sectionStart","parsed","_stateInNumericEntity","_stateInHexEntity","_cleanup","_parse","charAt","_finish","_handleTrailingData","ctor","superCtor","super_","TempCtor","0","128","130","131","132","133","134","135","136","137","138","139","140","142","145","146","147","148","149","150","151","152","153","154","155","156","158","159","Aacute","aacute","Abreve","abreve","ac","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","Amacr","amacr","amalg","amp","AMP","andand","And","andd","andslope","andv","ang","ange","angle","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angmsd","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","apacir","ap","apE","ape","apid","apos","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","barwed","Barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","because","Because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxdl","boxdL","boxDl","boxDL","boxdr","boxdR","boxDr","boxDR","boxh","boxH","boxhd","boxHd","boxhD","boxHD","boxhu","boxHu","boxhU","boxHU","boxminus","boxplus","boxtimes","boxul","boxuL","boxUl","boxUL","boxur","boxuR","boxUr","boxUR","boxv","boxV","boxvh","boxvH","boxVh","boxVH","boxvl","boxvL","boxVl","boxVL","boxvr","boxvR","boxVr","boxVR","bprime","breve","Breve","brvbar","bscr","Bscr","bsemi","bsim","bsime","bsolb","bsol","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","capand","capbrcup","capcap","cap","Cap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","centerdot","CenterDot","cfr","Cfr","CHcy","chcy","check","checkmark","Chi","chi","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cir","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","colon","Colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","conint","Conint","ContourIntegral","copf","Copf","coprod","Coproduct","copy","COPY","copysr","CounterClockwiseContourIntegral","crarr","cross","Cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cupbrcap","cupcap","CupCap","cup","Cup","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dagger","Dagger","daleth","darr","Darr","dArr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","ddagger","ddarr","DD","dd","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","diamond","Diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrowBar","downarrow","DownArrow","Downarrow","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVectorBar","DownLeftVector","DownRightTeeVector","DownRightVectorBar","DownRightVector","DownTeeArrow","DownTee","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","Ecirc","ecirc","ecir","ecolon","Ecy","ecy","eDDot","Edot","edot","eDot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","Element","elinters","ell","els","elsdot","Emacr","emacr","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp13","emsp14","emsp","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","escr","Escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","exponentiale","ExponentialE","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","forall","ForAll","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","Fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","ge","gE","gEl","gel","geq","geqq","geqslant","gescc","ges","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","gg","Gg","ggg","gimel","GJcy","gjcy","gla","gl","glE","glj","gnap","gnapprox","gne","gnE","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","gtcc","gtcir","gt","GT","Gt","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","harrcir","harr","hArr","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","hfr","Hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","Hopf","horbar","HorizontalLine","hscr","Hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","ifr","Ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","Im","imof","imped","Implies","incare","in","infin","infintie","inodot","intcal","int","Int","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","iscr","Iscr","isin","isindot","isinE","isins","isinsv","isinv","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","larrb","larrbfs","larr","Larr","lArr","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","latail","lAtail","lat","late","lates","lbarr","lBarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","lE","LeftAngleBracket","LeftArrowBar","leftarrow","LeftArrow","Leftarrow","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVectorBar","LeftDownVector","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","LeftRightArrow","Leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTeeArrow","LeftTee","LeftTeeVector","leftthreetimes","LeftTriangleBar","LeftTriangle","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVectorBar","LeftUpVector","LeftVectorBar","LeftVector","lEg","leg","leq","leqq","leqslant","lescc","les","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","llarr","ll","Ll","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoustache","lmoust","lnap","lnapprox","lne","lnE","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","LongLeftArrow","Longleftarrow","longleftrightarrow","LongLeftRightArrow","Longleftrightarrow","longmapsto","longrightarrow","LongRightArrow","Longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","Lscr","lsh","Lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","ltcc","ltcir","LT","Lt","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","midast","midcir","middot","minusb","minus","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","mscr","Mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natural","naturals","natur","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","nearhk","nearr","neArr","nearrow","ne","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nharr","nhArr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlarr","nlArr","nldr","nlE","nle","nleftarrow","nLeftarrow","nleftrightarrow","nLeftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","nopf","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangleBar","NotLeftTriangle","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangleBar","NotRightTriangle","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","nparallel","npar","nparsl","npart","npolint","npr","nprcue","nprec","npreceq","npre","nrarrc","nrarr","nrArr","nrarrw","nrightarrow","nRightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","numero","numsp","nvap","nvdash","nvDash","nVdash","nVDash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwarr","nwArr","nwarrow","nwnear","Oacute","oacute","oast","Ocirc","ocirc","ocir","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","orarr","Or","or","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","otimesas","Otimes","otimes","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","parsim","parsl","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plusacir","plusb","pluscir","plus","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","popf","Popf","pound","prap","Pr","pr","prcue","precapprox","prec","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","prE","precsim","prime","Prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","Proportional","Proportion","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","qopf","Qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","rang","Rang","rangd","range","rangle","raquo","rarrap","rarrb","rarrbfs","rarrc","rarr","Rarr","rArr","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","ratail","rAtail","ratio","rationals","rbarr","rBarr","RBarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","realine","realpart","reals","Re","reg","REG","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","rfr","Rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrowBar","rightarrow","RightArrow","Rightarrow","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVectorBar","RightDownVector","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTeeArrow","RightTee","RightTeeVector","rightthreetimes","RightTriangleBar","RightTriangle","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVectorBar","RightUpVector","RightVectorBar","RightVector","ring","risingdotseq","rlarr","rlhar","rlm","rmoustache","rmoust","rnmid","roang","roarr","robrk","ropar","ropf","Ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","rscr","Rscr","rsh","Rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","scap","Scaron","scaron","Sc","sc","sccue","sce","scE","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdotb","sdot","sdote","searhk","searr","seArr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","solbar","solb","sol","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","square","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squ","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","Subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succapprox","succ","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","sum","Sum","sung","sup1","sup2","sup3","Sup","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","Supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swArr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","therefore","Therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","ThinSpace","thinsp","thkap","thksim","THORN","thorn","tilde","Tilde","TildeEqual","TildeFullEqual","TildeTilde","timesbar","timesb","times","timesd","tint","toea","topbot","topcir","Topf","topf","topfork","tosa","tprime","trade","TRADE","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","uarr","Uarr","uArr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrowBar","uparrow","UpArrow","Uparrow","UpArrowDownArrow","updownarrow","UpDownArrow","Updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","upsi","Upsi","upsih","Upsilon","upsilon","UpTeeArrow","UpTee","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","vArr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vBar","Vbar","vBarv","Vcy","vcy","vdash","vDash","Vdash","VDash","Vdashl","veebar","vee","Vee","veeeq","vellip","verbar","Verbar","vert","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","wedge","Wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xharr","xhArr","Xi","xi","xlarr","xlArr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrarr","xrArr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","yuml","Yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","zfr","Zfr","ZHcy","zhcy","zigrarr","zopf","Zopf","Zscr","zscr","zwj","zwnj","typeSpecs","location","componentName","getStack","invariant","ReactPropTypesSecret","shim","propFullName","secret","getShim","isRequired","ReactPropTypes","bool","symbol","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes","throwOnDirectAccess","getIteratorFn","maybeIterable","iteratorFn","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","y","PropTypeError","createChainableTypeChecker","validate","checkType","ANONYMOUS","chainedCheckType","createPrimitiveTypeChecker","expectedType","propValue","getPropType","getPreciseType","isNode","every","entries","entry","isSymbol","propType","Date","getPostfixForTypeWarning","getClassName","typeChecker","createElementTypeChecker","expectedClass","expectedClassName","createNodeChecker","expectedValues","arrayOfTypeCheckers","checker","shapeTypes","_concat","curryN","origFn","thisObj","_dispatchable","_filter","_isObject","_reduce","_xfilter","pred","filterable","_xfind","set1","set2","len1","len2","f3","_c","received","combined","argsIdx","left","combinedIdx","_isString","functor","@@transducer/value","@@transducer/reduced","_xfBase","XFilter","_reduced","XFind","found","XMap","XWrap","_map","_xmap","_curry3","_complement","filter","KeyEscapeUtils","escape","escapeRegex","escaperLookup","=","unescape","unescapeRegex","unescaperLookup","=0","=2","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","standardReleaser","destructor","poolSize","DEFAULT_POOLER","PooledClass","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","twoArgumentPooler","threeArgumentPooler","fourArgumentPooler","ReactBaseClasses","ReactChildren","ReactDOMFactories","ReactVersion","createReactClass","onlyChild","__spread","createMixin","mixin","Children","toArray","only","createClass","DOM","escapeUserProvidedKey","userProvidedKeyEscapeRegex","ForEachBookKeeping","forEachFunction","forEachContext","forEachSingleChild","bookKeeping","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","escapedPrefix","traverseContext","traverseAllChildren","forEachSingleChildDummy","forEachFunc","createDOMFactory","abbr","address","aside","audio","bdi","bdo","big","blockquote","canvas","caption","colgroup","del","details","dfn","dialog","dl","dt","em","fieldset","figcaption","footer","header","hgroup","iframe","ins","kbd","legend","mark","menu","menuitem","meter","nav","noscript","ol","picture","progress","q","rp","rt","ruby","samp","small","span","strong","summary","table","tbody","tfoot","time","u","ul","var","video","clipPath","defs","linearGradient","pattern","radialGradient","svg","tspan","lowPriorityWarning","getComponentKey","traverseAllChildrenImpl","nameSoFar","SEPARATOR","subtreeCount","nextNamePrefix","SUBSEPARATOR","addendum","childrenString","_camelize","_curry","decap","decapitalize","makeString","escapeRegExp","characters","defaultToWhiteSpace","nativeTrim","webpackPolyfill","deprecate","paths"],"mappings":"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AAA,IACAC,MAAA,IACAC,KAAA,KACAC,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,QAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAryG,GAAA,IACAsyG,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,MAAA,IACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,SAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACA17G,KAAA,IACA27G,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,WAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,QAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,KACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,QAAA,IACAC,QAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,QAAA,IACAC,SAAA,IACAC,KAAA,IACAC,GAAA,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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(38);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(3);\n\tvar _isPlaceholder = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * Optimized internal two-arity curry function.\n\t *\n\t * @private\n\t * @category Function\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} The curried function.\n\t */\n\tmodule.exports = function _curry2(fn) {\n\t  return function f2(a, b) {\n\t    switch (arguments.length) {\n\t      case 0:\n\t        return f2;\n\t      case 1:\n\t        return _isPlaceholder(a) ? f2\n\t             : _curry1(function(_b) { return fn(a, _b); });\n\t      default:\n\t        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n\t             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n\t             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n\t             : fn(a, b);\n\t    }\n\t  };\n\t};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (false) {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _isPlaceholder = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * Optimized internal one-arity curry function.\n\t *\n\t * @private\n\t * @category Function\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} The curried function.\n\t */\n\tmodule.exports = function _curry1(fn) {\n\t  return function f1(a) {\n\t    if (arguments.length === 0 || _isPlaceholder(a)) {\n\t      return f1;\n\t    } else {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(7);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(32);\n\t\n\tvar warning = __webpack_require__(6);\n\tvar canDefineProperty = __webpack_require__(35);\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(33);\n\t\n\tvar RESERVED_PROPS = {\n\t  key: true,\n\t  ref: true,\n\t  __self: true,\n\t  __source: true\n\t};\n\t\n\tvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\t\n\tfunction hasValidRef(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'ref')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.ref !== undefined;\n\t}\n\t\n\tfunction hasValidKey(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'key')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.key !== undefined;\n\t}\n\t\n\tfunction defineKeyPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingKey = function () {\n\t    if (!specialPropKeyWarningShown) {\n\t      specialPropKeyWarningShown = true;\n\t       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingKey.isReactWarning = true;\n\t  Object.defineProperty(props, 'key', {\n\t    get: warnAboutAccessingKey,\n\t    configurable: true\n\t  });\n\t}\n\t\n\tfunction defineRefPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingRef = function () {\n\t    if (!specialPropRefWarningShown) {\n\t      specialPropRefWarningShown = true;\n\t       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingRef.isReactWarning = true;\n\t  Object.defineProperty(props, 'ref', {\n\t    get: warnAboutAccessingRef,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Factory method to create a new React element. This no longer adheres to\n\t * the class pattern, so do not use new to call it. Also, no instanceof check\n\t * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n\t * if something is a React Element.\n\t *\n\t * @param {*} type\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @param {*} owner\n\t * @param {*} props\n\t * @internal\n\t */\n\tvar ReactElement = function (type, key, ref, self, source, owner, props) {\n\t  var element = {\n\t    // This tag allow us to uniquely identify this as a React Element\n\t    $$typeof: REACT_ELEMENT_TYPE,\n\t\n\t    // Built-in properties that belong on the element\n\t    type: type,\n\t    key: key,\n\t    ref: ref,\n\t    props: props,\n\t\n\t    // Record the component responsible for creating this element.\n\t    _owner: owner\n\t  };\n\t\n\t  if (false) {\n\t    // The validation flag is currently mutative. We put it on\n\t    // an external backing store so that we can freeze the whole object.\n\t    // This can be replaced with a WeakMap once they are implemented in\n\t    // commonly used development environments.\n\t    element._store = {};\n\t\n\t    // To make comparing ReactElements easier for testing purposes, we make\n\t    // the validation flag non-enumerable (where possible, which should\n\t    // include every environment we run tests in), so the test framework\n\t    // ignores it.\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(element._store, 'validated', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: true,\n\t        value: false\n\t      });\n\t      // self and source are DEV only properties.\n\t      Object.defineProperty(element, '_self', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: self\n\t      });\n\t      // Two elements created in two different places should be considered\n\t      // equal for testing purposes and therefore we hide it from enumeration.\n\t      Object.defineProperty(element, '_source', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: source\n\t      });\n\t    } else {\n\t      element._store.validated = false;\n\t      element._self = self;\n\t      element._source = source;\n\t    }\n\t    if (Object.freeze) {\n\t      Object.freeze(element.props);\n\t      Object.freeze(element);\n\t    }\n\t  }\n\t\n\t  return element;\n\t};\n\t\n\t/**\n\t * Create and return a new ReactElement of the given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n\t */\n\tReactElement.createElement = function (type, config, children) {\n\t  var propName;\n\t\n\t  // Reserved names are extracted\n\t  var props = {};\n\t\n\t  var key = null;\n\t  var ref = null;\n\t  var self = null;\n\t  var source = null;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      ref = config.ref;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    self = config.__self === undefined ? null : config.__self;\n\t    source = config.__source === undefined ? null : config.__source;\n\t    // Remaining properties are added to a new props object\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    if (false) {\n\t      if (Object.freeze) {\n\t        Object.freeze(childArray);\n\t      }\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  // Resolve default props\n\t  if (type && type.defaultProps) {\n\t    var defaultProps = type.defaultProps;\n\t    for (propName in defaultProps) {\n\t      if (props[propName] === undefined) {\n\t        props[propName] = defaultProps[propName];\n\t      }\n\t    }\n\t  }\n\t  if (false) {\n\t    if (key || ref) {\n\t      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n\t        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\t        if (key) {\n\t          defineKeyPropWarningGetter(props, displayName);\n\t        }\n\t        if (ref) {\n\t          defineRefPropWarningGetter(props, displayName);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\t};\n\t\n\t/**\n\t * Return a function that produces ReactElements of a given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n\t */\n\tReactElement.createFactory = function (type) {\n\t  var factory = ReactElement.createElement.bind(null, type);\n\t  // Expose the type on the factory and the prototype so that it can be\n\t  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n\t  // This should not be named `constructor` since this may not be the function\n\t  // that created the element, and it may not even be a constructor.\n\t  // Legacy hook TODO: Warn if this is accessed\n\t  factory.type = type;\n\t  return factory;\n\t};\n\t\n\tReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n\t  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\t\n\t  return newElement;\n\t};\n\t\n\t/**\n\t * Clone and return a new ReactElement using element as the starting point.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n\t */\n\tReactElement.cloneElement = function (element, config, children) {\n\t  var propName;\n\t\n\t  // Original props are copied\n\t  var props = _assign({}, element.props);\n\t\n\t  // Reserved names are extracted\n\t  var key = element.key;\n\t  var ref = element.ref;\n\t  // Self is preserved since the owner is preserved.\n\t  var self = element._self;\n\t  // Source is preserved since cloneElement is unlikely to be targeted by a\n\t  // transpiler, and the original source is probably a better indicator of the\n\t  // true owner.\n\t  var source = element._source;\n\t\n\t  // Owner will be preserved, unless ref is overridden\n\t  var owner = element._owner;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      // Silently steal the ref from the parent.\n\t      ref = config.ref;\n\t      owner = ReactCurrentOwner.current;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    // Remaining properties override existing props\n\t    var defaultProps;\n\t    if (element.type && element.type.defaultProps) {\n\t      defaultProps = element.type.defaultProps;\n\t    }\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        if (config[propName] === undefined && defaultProps !== undefined) {\n\t          // Resolve default props\n\t          props[propName] = defaultProps[propName];\n\t        } else {\n\t          props[propName] = config[propName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  return ReactElement(element.type, key, ref, self, source, owner, props);\n\t};\n\t\n\t/**\n\t * Verifies the object is a ReactElement.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid component.\n\t * @final\n\t */\n\tReactElement.isValidElement = function (object) {\n\t  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t};\n\t\n\tmodule.exports = ReactElement;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(5);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (false) {\n\t  (function () {\n\t    var printWarning = function printWarning(format) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      });\n\t      if (typeof console !== 'undefined') {\n\t        console.error(message);\n\t      }\n\t      try {\n\t        // --- Welcome to debugging React ---\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch (x) {}\n\t    };\n\t\n\t    warning = function warning(condition, format) {\n\t      if (format === undefined) {\n\t        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t      }\n\t\n\t      if (format.indexOf('Failed Composite propType: ') === 0) {\n\t        return; // Ignore CompositeComponent proptype check.\n\t      }\n\t\n\t      if (!condition) {\n\t        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t          args[_key2 - 2] = arguments[_key2];\n\t        }\n\t\n\t        printWarning.apply(undefined, [format].concat(args));\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\tmodule.exports = warning;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isPlaceholder(a) {\n\t  return a != null &&\n\t         typeof a === 'object' &&\n\t         a['@@functional/placeholder'] === true;\n\t};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t'use strict';\n\t\n\t/**\n\t * WARNING: DO NOT manually require this module.\n\t * This is a replacement for `invariant(...)` used by the error code system\n\t * and will _only_ be required by the corresponding babel pass.\n\t * It always throws.\n\t */\n\t\n\tfunction reactProdInvariant(code) {\n\t  var argCount = arguments.length - 1;\n\t\n\t  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\t\n\t  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n\t    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n\t  }\n\t\n\t  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\t\n\t  var error = new Error(message);\n\t  error.name = 'Invariant Violation';\n\t  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\t\n\t  throw error;\n\t}\n\t\n\tmodule.exports = reactProdInvariant;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _arity(n, fn) {\n\t  /* eslint-disable no-unused-vars */\n\t  switch (n) {\n\t    case 0: return function() { return fn.apply(this, arguments); };\n\t    case 1: return function(a0) { return fn.apply(this, arguments); };\n\t    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n\t    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n\t    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n\t    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n\t    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n\t    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n\t    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n\t    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n\t    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n\t    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n\t  }\n\t};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _isArray = __webpack_require__(29);\n\tvar _isTransformer = __webpack_require__(76);\n\t\n\t\n\t/**\n\t * Returns a function that dispatches with different strategies based on the\n\t * object in list position (last argument). If it is an array, executes [fn].\n\t * Otherwise, if it has a function with one of the given method names, it will\n\t * execute that function (functor case). Otherwise, if it is a transformer,\n\t * uses transducer [xf] to return a new transformer (transducer case).\n\t * Otherwise, it will default to executing [fn].\n\t *\n\t * @private\n\t * @param {Array} methodNames properties to check for a custom implementation\n\t * @param {Function} xf transducer to initialize if object is transformer\n\t * @param {Function} fn default ramda implementation\n\t * @return {Function} A function that dispatches on object in list position\n\t */\n\tmodule.exports = function _dispatchable(methodNames, xf, fn) {\n\t  return function() {\n\t    if (arguments.length === 0) {\n\t      return fn();\n\t    }\n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t    var obj = args.pop();\n\t    if (!_isArray(obj)) {\n\t      var idx = 0;\n\t      while (idx < methodNames.length) {\n\t        if (typeof obj[methodNames[idx]] === 'function') {\n\t          return obj[methodNames[idx]].apply(obj, args);\n\t        }\n\t        idx += 1;\n\t      }\n\t      if (_isTransformer(obj)) {\n\t        var transducer = xf.apply(null, args);\n\t        return transducer(obj);\n\t      }\n\t    }\n\t    return fn.apply(this, arguments);\n\t  };\n\t};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _has(prop, obj) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _isArrayLike = __webpack_require__(73);\n\tvar _xwrap = __webpack_require__(82);\n\tvar bind = __webpack_require__(64);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function _arrayReduce(xf, acc, list) {\n\t    var idx = 0;\n\t    var len = list.length;\n\t    while (idx < len) {\n\t      acc = xf['@@transducer/step'](acc, list[idx]);\n\t      if (acc && acc['@@transducer/reduced']) {\n\t        acc = acc['@@transducer/value'];\n\t        break;\n\t      }\n\t      idx += 1;\n\t    }\n\t    return xf['@@transducer/result'](acc);\n\t  }\n\t\n\t  function _iterableReduce(xf, acc, iter) {\n\t    var step = iter.next();\n\t    while (!step.done) {\n\t      acc = xf['@@transducer/step'](acc, step.value);\n\t      if (acc && acc['@@transducer/reduced']) {\n\t        acc = acc['@@transducer/value'];\n\t        break;\n\t      }\n\t      step = iter.next();\n\t    }\n\t    return xf['@@transducer/result'](acc);\n\t  }\n\t\n\t  function _methodReduce(xf, acc, obj, methodName) {\n\t    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n\t  }\n\t\n\t  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n\t  return function _reduce(fn, acc, list) {\n\t    if (typeof fn === 'function') {\n\t      fn = _xwrap(fn);\n\t    }\n\t    if (_isArrayLike(list)) {\n\t      return _arrayReduce(fn, acc, list);\n\t    }\n\t    if (typeof list['fantasy-land/reduce'] === 'function') {\n\t      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n\t    }\n\t    if (list[symIterator] != null) {\n\t      return _iterableReduce(fn, acc, list[symIterator]());\n\t    }\n\t    if (typeof list.next === 'function') {\n\t      return _iterableReduce(fn, acc, list);\n\t    }\n\t    if (typeof list.reduce === 'function') {\n\t      return _methodReduce(fn, acc, list, 'reduce');\n\t    }\n\t\n\t    throw new TypeError('reduce: list must be array or iterable');\n\t  };\n\t}());\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t  init: function() {\n\t    return this.xf['@@transducer/init']();\n\t  },\n\t  result: function(result) {\n\t    return this.xf['@@transducer/result'](result);\n\t  }\n\t};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(89);\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Ensure some object is a coerced to a string\n\t **/\n\tmodule.exports = function makeString(object) {\n\t  if (object == null) return '';\n\t  return '' + object;\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function forEach(arr, fn) {\n\t  for (var i = 0; i < arr.length; i++) {\n\t    fn(i, arr[i]);\n\t  }\n\t};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {/*\n\t * Copyright (c) 2009-2016 Frank Bennett\n\t * \n\t * \tThis program is free software: you can redistribute it and/or\n\t * \tmodify it under EITHER\n\t * \n\t *       * the terms of the Common Public Attribution License (CPAL) as\n\t * \t    published by the Open Source Initiative, either version 1 of\n\t * \t    the CPAL, or (at your option) any later version; OR\n\t * \n\t *       * the terms of the GNU Affero General Public License (AGPL)\n\t *         as published by the Free Software Foundation, either version\n\t *         3 of the AGPL, or (at your option) any later version.\n\t * \n\t * \tThis program is distributed in the hope that it will be useful,\n\t * \tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * \tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\t * \tAffero General Public License for more details.\n\t * \n\t * \tYou should have received copies of the Common Public Attribution\n\t *     License and of the GNU Affero General Public License along with\n\t *     this program.  If not, see <https://opensource.org/licenses/> or\n\t *     <http://www.gnu.org/licenses/> respectively.\n\t */\n\tvar CSL = {\n\t    PROCESSOR_VERSION: \"1.1.169\",\n\t    CONDITION_LEVEL_TOP: 1,\n\t    CONDITION_LEVEL_BOTTOM: 2,\n\t    PLAIN_HYPHEN_REGEX: /(?:[^\\\\]-|\\u2013)/,\n\t    LOCATOR_LABELS_REGEXP: new RegExp(\"^((art|ch|subch|col|fig|l|n|no|op|p|pp|para|subpara|pt|r|sec|subsec|sv|sch|tit|vrs|vol)\\\\.)\\\\s+(.*)\"),\n\t    STATUTE_SUBDIV_GROUPED_REGEX: /((?:^| )(?:art|bk|ch|subch|col|fig|fol|l|n|no|op|p|pp|para|subpara|pt|r|sec|subsec|sv|sch|tit|vrs|vol)\\. *)/g,\n\t    STATUTE_SUBDIV_PLAIN_REGEX: /(?:(?:^| )(?:art|bk|ch|subch|col|fig|fol|l|n|no|op|p|pp|para|subpara|pt|r|sec|subsec|sv|sch|tit|vrs|vol)\\. *)/,\n\t    STATUTE_SUBDIV_STRINGS: {\n\t        \"art.\": \"article\",\n\t        \"bk.\": \"book\",\n\t        \"ch.\": \"chapter\",\n\t        \"subch.\": \"subchapter\",\n\t        \"p.\": \"page\",\n\t        \"pp.\": \"page\",\n\t        \"para.\": \"paragraph\",\n\t        \"subpara.\": \"subparagraph\",\n\t        \"pt.\": \"part\",\n\t        \"r.\": \"rule\",\n\t        \"sec.\": \"section\",\n\t        \"subsec.\": \"subsection\",\n\t        \"sch.\": \"schedule\",\n\t        \"tit.\": \"title\",\n\t        \"col.\": \"column\",\n\t        \"fig.\": \"figure\",\n\t        \"fol.\": \"folio\",\n\t        \"l.\": \"line\",\n\t        \"n.\": \"note\",\n\t        \"no.\": \"issue\",\n\t        \"op.\": \"opus\",\n\t        \"sv.\": \"sub-verbo\",\n\t        \"vrs.\": \"verse\",\n\t        \"vol.\": \"volume\"\n\t    },\n\t    STATUTE_SUBDIV_STRINGS_REVERSE: {\n\t        \"article\": \"art.\",\n\t        \"book\": \"bk.\",\n\t        \"chapter\": \"ch.\",\n\t        \"subchapter\": \"subch.\",\n\t        \"page\": \"p.\",\n\t        \"paragraph\": \"para.\",\n\t        \"subparagraph\": \"subpara.\",\n\t        \"part\": \"pt.\",\n\t        \"rule\": \"r.\",\n\t        \"section\": \"sec.\",\n\t        \"subsection\": \"subsec.\",\n\t        \"schedule\": \"sch.\",\n\t        \"title\": \"tit.\",\n\t        \"column\": \"col.\",\n\t        \"figure\": \"fig.\",\n\t        \"folio\": \"fol.\",\n\t        \"line\": \"l.\",\n\t        \"note\": \"n.\",\n\t        \"issue\": \"no.\",\n\t        \"opus\": \"op.\",\n\t        \"sub-verbo\": \"sv.\",\n\t        \"sub verbo\": \"sv.\",\n\t        \"verse\": \"vrs.\",\n\t        \"volume\": \"vol.\"\n\t    },\n\t    LOCATOR_LABELS_MAP: {\n\t        \"art\": \"article\",\n\t        \"bk\": \"book\",\n\t        \"ch\": \"chapter\",\n\t        \"subch\": \"subchapter\",\n\t        \"col\": \"column\",\n\t        \"fig\": \"figure\",\n\t        \"fol\": \"folio\",\n\t        \"l\": \"line\",\n\t        \"n\": \"note\",\n\t        \"no\": \"issue\",\n\t        \"op\": \"opus\",\n\t        \"p\": \"page\",\n\t        \"pp\": \"page\",\n\t        \"para\": \"paragraph\",\n\t        \"subpara\": \"subparagraph\",\n\t        \"pt\": \"part\",\n\t        \"r\": \"rule\",\n\t\t\t\"sec\": \"section\",\n\t\t\t\"subsec\": \"subsection\",\n\t\t\t\"sv\": \"sub-verbo\",\n\t        \"sch\": \"schedule\",\n\t        \"tit\": \"title\",\n\t        \"vrs\": \"verse\",\n\t        \"vol\": \"volume\"\n\t    },\n\t    MODULE_MACROS: {\n\t        \"juris-pretitle\": true,\n\t        \"juris-title\": true,\n\t        \"juris-pretitle-short\": true,\n\t        \"juris-title-short\": true,\n\t        \"juris-main\": true,\n\t        \"juris-main-short\": true,\n\t        \"juris-tail\": true,\n\t        \"juris-tail-short\": true,\n\t        \"juris-locator\": true\n\t    },\n\t    MODULE_TYPES: {\n\t        \"legal_case\": true,\n\t        \"legislation\": true,\n\t        \"bill\": true,\n\t        \"hearing\": true,\n\t        \"gazette\": true,\n\t        \"report\": true,\n\t        \"regulation\": true,\n\t        \"standard\": true\n\t    },\n\t    NestedBraces: [\n\t        [\"(\", \"[\"],\n\t        [\")\", \"]\"]\n\t    ],\n\t    checkNestedBrace: function(state) {\n\t        if (state.opt.xclass === \"note\") {\n\t            this.depth = 0;\n\t            this.update = function(str) {\n\t                var str = str ? str : '';\n\t                var lst = str.split(/([\\(\\)])/);\n\t                for (var i=1,ilen=lst.length;i<ilen;i += 2) {\n\t                    if (lst[i] === '(') {\n\t                        if (1 === (this.depth % 2)) {\n\t                            lst[i] = '['\n\t                        }\n\t                        this.depth += 1;\n\t                    } else if (lst[i] === ')') {\n\t                        if (0 === (this.depth % 2)) {\n\t                            lst[i] = ']'\n\t                        }\n\t                        this.depth -= 1;\n\t                    }\n\t                }\n\t                var ret = lst.join(\"\");\n\t                return ret;\n\t            }\n\t        } else {\n\t            this.update = function(str) {\n\t                return str;\n\t            }\n\t        };\n\t    },\n\t    MULTI_FIELDS: [\"event\", \"publisher\", \"publisher-place\", \"event-place\", \"title\", \"container-title\", \"collection-title\", \"authority\",\"genre\",\"title-short\",\"medium\",\"jurisdiction\",\"archive\",\"archive-place\"],\n\t    LangPrefsMap: {\n\t        \"title\":\"titles\",\n\t        \"title-short\":\"titles\",\n\t        \"event\":\"titles\",\n\t        \"genre\":\"titles\",\n\t        \"medium\":\"titles\",\n\t        \"container-title\":\"journals\",\n\t        \"collection-title\":\"journals\",\n\t        \"archive\":\"journals\",\n\t        \"publisher\":\"publishers\",\n\t        \"authority\":\"publishers\",\n\t        \"publisher-place\": \"places\",\n\t        \"event-place\": \"places\",\n\t        \"archive-place\": \"places\",\n\t        \"jurisdiction\": \"places\",\n\t        \"number\": \"number\",\n\t        \"edition\":\"number\",\n\t        \"issue\":\"number\",\n\t        \"volume\":\"number\"\n\t    },\n\t    AbbreviationSegments: function () {\n\t        this[\"container-title\"] = {};\n\t        this[\"collection-title\"] = {};\n\t        this[\"institution-entire\"] = {};\n\t        this[\"institution-part\"] = {};\n\t        this.nickname = {};\n\t        this.number = {};\n\t        this.title = {};\n\t        this.place = {};\n\t        this.hereinafter = {};\n\t        this.classic = {};\n\t        this[\"container-phrase\"] = {};\n\t        this[\"title-phrase\"] = {};\n\t    },\n\t    FIELD_CATEGORY_REMAP: {\n\t        \"title\": \"title\",\n\t        \"container-title\": \"container-title\",\n\t        \"collection-title\": \"collection-title\",\n\t        \"number\": \"number\",\n\t        \"place\": \"place\",\n\t        \"archive\": \"collection-title\",\n\t        \"title-short\": \"title\",\n\t        \"genre\": \"title\",\n\t        \"event\": \"title\",\n\t        \"medium\": \"title\",\n\t\t\t\"archive-place\": \"place\",\n\t\t\t\"publisher-place\": \"place\",\n\t\t\t\"event-place\": \"place\",\n\t\t\t\"jurisdiction\": \"place\",\n\t\t\t\"language-name\": \"place\",\n\t\t\t\"language-name-original\": \"place\",\n\t        \"call-number\": \"number\",\n\t        \"chapter-number\": \"number\",\n\t        \"collection-number\": \"number\",\n\t        \"edition\": \"number\",\n\t        \"page\": \"number\",\n\t        \"issue\": \"number\",\n\t        \"locator\": \"number\",\n\t        \"number-of-pages\": \"number\",\n\t        \"number-of-volumes\": \"number\",\n\t        \"volume\": \"number\",\n\t        \"citation-number\": \"number\",\n\t        \"publisher\": \"institution-part\"\n\t    },\n\t    parseLocator: function(item) {\n\t        if (this.opt.development_extensions.locator_date_and_revision) {\n\t            if (item.locator) {\n\t                item.locator = \"\" + item.locator;\n\t                var idx = item.locator.indexOf(\"|\");\n\t                if (idx > -1) {\n\t                    var raw_locator = item.locator;\n\t                    item.locator = raw_locator.slice(0, idx);\n\t                    raw_locator = raw_locator.slice(idx + 1);\n\t                    m = raw_locator.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}).*/);\n\t                    if (m) {\n\t                        item[\"locator-date\"] = this.fun.dateparser.parseDateToObject(m[1]);\n\t                        raw_locator = raw_locator.slice(m[1].length);\n\t                    }\n\t                    item[\"locator-extra\"] = raw_locator.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n\t                }\n\t            }\n\t        }\n\t        if (item.locator) {\n\t            item.locator = (\"\" + item.locator).replace(/\\s+$/, '');\n\t        }\n\t        return item;\n\t    },\n\t    normalizeLocaleStr: function(str) {\n\t        if (!str) return;\n\t        var lst = str.split('-');\n\t        lst[0] = lst[0].toLowerCase();\n\t        if (lst[1]) {\n\t            lst[1] = lst[1].toUpperCase();\n\t        }\n\t        return lst.join(\"-\");\n\t    },\n\t    parseNoteFieldHacks: function(Item, validFieldsForType, allowDateOverride) {\n\t        if (\"string\" !== typeof Item.note) return;\n\t        var elems = [];\n\t        var lines = Item.note.split('\\n');\n\t        var lastline = \"\";\n\t        for (var i=0, ilen=lines.length; i<ilen; i++) {\n\t            var line = lines[i];\n\t            var elems = [];\n\t            var m = line.match(CSL.NOTE_FIELDS_REGEXP);\n\t            if (m) {\n\t                var splt = line.split(CSL.NOTE_FIELDS_REGEXP);\n\t                for (var j=0,jlen=(splt.length-1);j<jlen;j++) {\n\t                    elems.push(splt[j]);\n\t                    elems.push(m[j]);\n\t                }\n\t                elems.push(splt[splt.length-1])\n\t                for (var j=1,jlen=elems.length;j<jlen;j += 2) {\n\t                    if (elems[j-1].trim() && (i>0 || j>1) && !elems[j-1].match(CSL.NOTE_FIELD_REGEXP)) {\n\t                        break\n\t                    } else {\n\t                        elems[j] = '\\n' + elems[j].slice(2,-1).trim() + '\\n';\n\t                    }\n\t                }\n\t                lines[i] = elems.join('');\n\t            }\n\t        }\n\t        lines = lines.join('\\n').split('\\n');\n\t        var offset = 0;\n\t        var names = {};\n\t        for (var i=0,ilen=lines.length;i<ilen;i++) {\n\t            var line = lines[i];\n\t            var mm = line.match(CSL.NOTE_FIELD_REGEXP);\n\t            if (!line.trim()) {\n\t                continue;\n\t            } else if (!mm) {\n\t                if (i === 0) {\n\t                    continue;\n\t                } else {\n\t                    offset = i;\n\t                    break;\n\t                }\n\t            }\n\t            var key = mm[1];\n\t            var val = mm[2].replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n\t            if (key === \"type\") {\n\t                Item.type = val;\n\t                lines[i] = \"\";\n\t            } else if (CSL.DATE_VARIABLES.indexOf(key) > -1) {\n\t                if (allowDateOverride) {\n\t                    Item[key] = {raw: val};\n\t                    if (!validFieldsForType || (validFieldsForType[key] && val.match(/^[0-9]{4}(?:-[0-9]{1,2}(?:-[0-9]{1,2})*)*$/))) {\n\t                        lines[i] = \"\";\n\t                    }\n\t                }\n\t            } else if (!Item[key]) {\n\t                if (CSL.NAME_VARIABLES.indexOf(key) > -1) {\n\t                    if (!names[key]) {\n\t                        names[key] = [];\n\t                    }\n\t                    var lst = val.split(/\\s*\\|\\|\\s*/);\n\t                    if (lst.length === 1) {\n\t                        names[key].push({literal:lst[0]});\n\t                    } else if (lst.length === 2) {\n\t                        var name = {family:lst[0],given:lst[1]};\n\t                        CSL.parseParticles(name);\n\t                        names[key].push(name);\n\t                    }\n\t                } else {\n\t                    Item[key] = val;\n\t                }\n\t                if (!validFieldsForType || validFieldsForType[key]) {\n\t                    lines[i] = \"\";\n\t                }\n\t            }\n\t        }\n\t        for (var key in names) {\n\t            Item[key] = names[key];\n\t        }\n\t        if (validFieldsForType) {\n\t            if (lines[offset].trim()) {\n\t                lines[offset] = '\\n' + lines[offset]\n\t            }\n\t            for (var i=offset-1;i>-1;i--) {\n\t                if (!lines[i].trim()) {\n\t                    lines = lines.slice(0, i).concat(lines.slice(i + 1));\n\t                }\n\t            }\n\t        }\n\t        Item.note = lines.join(\"\\n\").trim();\n\t    },\n\t    GENDERS: [\"masculine\", \"feminine\"],\n\t    ERROR_NO_RENDERED_FORM: 1,\n\t    PREVIEW: \"Just for laughs.\",\n\t    ASSUME_ALL_ITEMS_REGISTERED: 2,\n\t    START: 0,\n\t    END: 1,\n\t    SINGLETON: 2,\n\t    SEEN: 6,\n\t    SUCCESSOR: 3,\n\t    SUCCESSOR_OF_SUCCESSOR: 4,\n\t    SUPPRESS: 5,\n\t    SINGULAR: 0,\n\t    PLURAL: 1,\n\t    LITERAL: true,\n\t    BEFORE: 1,\n\t    AFTER: 2,\n\t    DESCENDING: 1,\n\t    ASCENDING: 2,\n\t    ONLY_FIRST: 1,\n\t    ALWAYS: 2,\n\t    ONLY_LAST: 3,\n\t    FINISH: 1,\n\t    POSITION_FIRST: 0,\n\t    POSITION_SUBSEQUENT: 1,\n\t    POSITION_IBID: 2,\n\t    POSITION_IBID_WITH_LOCATOR: 3,\n\t    MARK_TRAILING_NAMES: true,\n\t    POSITION_TEST_VARS: [\"position\", \"first-reference-note-number\", \"near-note\"],\n\t    AREAS: [\"citation\", \"citation_sort\", \"bibliography\", \"bibliography_sort\"],\n\t    CITE_FIELDS: [\"first-reference-note-number\", \"locator\", \"locator-extra\"],\n\t    MINIMAL_NAME_FIELDS: [\"literal\", \"family\"],\n\t    SWAPPING_PUNCTUATION: [\".\", \"!\", \"?\", \":\", \",\"],\n\t    TERMINAL_PUNCTUATION: [\":\", \".\", \";\", \"!\", \"?\", \" \"],\n\t    NONE: 0,\n\t    NUMERIC: 1,\n\t    POSITION: 2,\n\t    COLLAPSE_VALUES: [\"citation-number\", \"year\", \"year-suffix\"],\n\t    DATE_PARTS: [\"year\", \"month\", \"day\"],\n\t    DATE_PARTS_ALL: [\"year\", \"month\", \"day\", \"season\"],\n\t    DATE_PARTS_INTERNAL: [\"year\", \"month\", \"day\", \"year_end\", \"month_end\", \"day_end\"],\n\t    NAME_PARTS: [\"non-dropping-particle\", \"family\", \"given\", \"dropping-particle\", \"suffix\", \"literal\"],\n\t    DECORABLE_NAME_PARTS: [\"given\", \"family\", \"suffix\"],\n\t    DISAMBIGUATE_OPTIONS: [\n\t        \"disambiguate-add-names\",\n\t        \"disambiguate-add-givenname\",\n\t        \"disambiguate-add-year-suffix\"\n\t    ],\n\t    GIVENNAME_DISAMBIGUATION_RULES: [\n\t        \"all-names\",\n\t        \"all-names-with-initials\",\n\t        \"primary-name\",\n\t        \"primary-name-with-initials\",\n\t        \"by-cite\"\n\t    ],\n\t    NAME_ATTRIBUTES: [\n\t        \"and\",\n\t        \"delimiter-precedes-last\",\n\t        \"delimiter-precedes-et-al\",\n\t        \"initialize-with\",\n\t        \"initialize\",\n\t        \"name-as-sort-order\",\n\t        \"sort-separator\",\n\t        \"et-al-min\",\n\t        \"et-al-use-first\",\n\t        \"et-al-subsequent-min\",\n\t        \"et-al-subsequent-use-first\",\n\t        \"form\",\n\t        \"prefix\",\n\t        \"suffix\",\n\t        \"delimiter\"\n\t    ],\n\t    PARALLEL_MATCH_VARS: [\"container-title\"],\n\t    PARALLEL_TYPES: [\"bill\",\"gazette\",\"regulation\",\"legislation\",\"legal_case\",\"treaty\",\"article-magazine\",\"article-journal\"],\n\t    PARALLEL_COLLAPSING_MID_VARSET: [\"volume\", \"issue\", \"container-title\", \"section\", \"collection-number\"],\n\t    LOOSE: 0,\n\t    STRICT: 1,\n\t    TOLERANT: 2,\n\t    PREFIX_PUNCTUATION: /[.;:]\\s*$/,\n\t    SUFFIX_PUNCTUATION: /^\\s*[.;:,\\(\\)]/,\n\t    NUMBER_REGEXP: /(?:^\\d+|\\d+$)/,\n\t    NAME_INITIAL_REGEXP: /^([A-Z\\u0590-\\u05ff\\u00c0-\\u017f\\u0400-\\u042f\\u0600-\\u06ff\\u0370\\u0372\\u0376\\u0386\\u0388-\\u03ab\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03fd-\\u03ff])([a-zA-Z\\u00c0-\\u017f\\u0400-\\u052f\\u0600-\\u06ff\\u0370-\\u03ff\\u1f00-\\u1fff]*|)/,\n\t    ROMANESQUE_REGEXP: /[-0-9a-zA-Z\\u0590-\\u05d4\\u05d6-\\u05ff\\u0080-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]/,\n\t    ROMANESQUE_NOT_REGEXP: /[^a-zA-Z\\u0590-\\u05ff\\u00c0-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]/g,\n\t    STARTSWITH_ROMANESQUE_REGEXP: /^[&a-zA-Z\\u0590-\\u05d4\\u05d6-\\u05ff\\u00c0-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]/,\n\t    ENDSWITH_ROMANESQUE_REGEXP: /[.;:&a-zA-Z\\u0590-\\u05d4\\u05d6-\\u05ff\\u00c0-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]$/,\n\t    ALL_ROMANESQUE_REGEXP: /^[a-zA-Z\\u0590-\\u05ff\\u00c0-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]+$/,\n\t    VIETNAMESE_SPECIALS: /[\\u00c0-\\u00c3\\u00c8-\\u00ca\\u00cc\\u00cd\\u00d2-\\u00d5\\u00d9\\u00da\\u00dd\\u00e0-\\u00e3\\u00e8-\\u00ea\\u00ec\\u00ed\\u00f2-\\u00f5\\u00f9\\u00fa\\u00fd\\u0101\\u0103\\u0110\\u0111\\u0128\\u0129\\u0168\\u0169\\u01a0\\u01a1\\u01af\\u01b0\\u1ea0-\\u1ef9]/,\n\t    VIETNAMESE_NAMES: /^(?:(?:[.AaBbCcDdEeGgHhIiKkLlMmNnOoPpQqRrSsTtUuVvXxYy \\u00c0-\\u00c3\\u00c8-\\u00ca\\u00cc\\u00cd\\u00d2-\\u00d5\\u00d9\\u00da\\u00dd\\u00e0-\\u00e3\\u00e8-\\u00ea\\u00ec\\u00ed\\u00f2-\\u00f5\\u00f9\\u00fa\\u00fd\\u0101\\u0103\\u0110\\u0111\\u0128\\u0129\\u0168\\u0169\\u01a0\\u01a1\\u01af\\u01b0\\u1ea0-\\u1ef9]{2,6})(\\s+|$))+$/,\n\t    NOTE_FIELDS_REGEXP: /\\{:(?:[\\-_a-z]+|[A-Z]+):[^\\}]+\\}/g,\n\t    NOTE_FIELD_REGEXP: /^([\\-_a-z]+|[A-Z]+):\\s*([^\\}]+)$/,\n\t\tPARTICLE_GIVEN_REGEXP: /^([^ ]+(?:\\u02bb |\\u2019 | |\\' ) *)(.+)$/,\n\t\tPARTICLE_FAMILY_REGEXP: /^([^ ]+(?:\\-|\\u02bb|\\u2019| |\\') *)(.+)$/,\n\t    DISPLAY_CLASSES: [\"block\", \"left-margin\", \"right-inline\", \"indent\"],\n\t    NAME_VARIABLES: [\n\t        \"author\",\n\t        \"editor\",\n\t        \"translator\",\n\t        \"contributor\",\n\t        \"collection-editor\",\n\t        \"composer\",\n\t        \"container-author\",\n\t        \"director\",\n\t        \"editorial-director\",\n\t        \"interviewer\",\n\t        \"original-author\",\n\t        \"recipient\"\n\t    ],\n\t    NUMERIC_VARIABLES: [\n\t        \"call-number\",\n\t        \"chapter-number\",\n\t        \"collection-number\",\n\t        \"edition\",\n\t        \"page\",\n\t        \"issue\",\n\t        \"locator\",\n\t        \"number\",\n\t        \"number-of-pages\",\n\t        \"number-of-volumes\",\n\t        \"volume\",\n\t        \"citation-number\"\n\t    ],\n\t    DATE_VARIABLES: [\n\t        \"locator-date\", \n\t        \"issued\", \n\t        \"event-date\", \n\t        \"accessed\", \n\t        \"container\", \n\t        \"original-date\",\n\t        \"publication-date\",\n\t        \"original-date\",\n\t        \"available-date\",\n\t        \"submitted\"\n\t    ],\n\t    TITLE_FIELD_SPLITS: function(seg) {\n\t        var keys = [\"title\", \"short\", \"main\", \"sub\"];\n\t        var ret = {};\n\t        for (var i=0,ilen=keys.length;i<ilen;i++) {\n\t            ret[keys[i]] = seg + \"title\" + (keys[i] === \"title\" ? \"\" : \"-\" + keys[i]);\n\t        }\n\t        return ret;\n\t    },\n\t    TAG_USEALL: function (str) {\n\t        var ret, open, close, end;\n\t        ret = [\"\"];\n\t        open = str.indexOf(\"<\");\n\t        close = str.indexOf(\">\");\n\t        while (open > -1 && close > -1) {\n\t            if (open > close) {\n\t                end = open + 1;\n\t            } else {\n\t                end = close + 1;\n\t            }\n\t            if (open < close && str.slice(open + 1, close).indexOf(\"<\") === -1) {\n\t                ret[ret.length - 1] += str.slice(0, open);\n\t                ret.push(str.slice(open, close + 1));\n\t                ret.push(\"\");\n\t                str = str.slice(end);\n\t            } else {\n\t                ret[ret.length - 1] += str.slice(0, close + 1);\n\t                str = str.slice(end);\n\t            }\n\t            open = str.indexOf(\"<\");\n\t            close = str.indexOf(\">\");\n\t        }\n\t        ret[ret.length - 1] += str;\n\t        return ret;\n\t    },\n\t    demoteNoiseWords: function (state, fld, drop_or_demote) {\n\t        var SKIP_WORDS = state.locale[state.opt.lang].opts[\"leading-noise-words\"];\n\t        if (fld && drop_or_demote) {\n\t            fld = fld.split(/\\s+/);\n\t            fld.reverse();\n\t            var toEnd = [];\n\t            for (var j  = fld.length - 1; j > -1; j += -1) {\n\t                if (SKIP_WORDS.indexOf(fld[j].toLowerCase()) > -1) {\n\t                    toEnd.push(fld.pop());\n\t                } else {\n\t                    break;\n\t                }\n\t            }\n\t            fld.reverse();\n\t            var start = fld.join(\" \");\n\t            var end = toEnd.join(\" \");\n\t            if (\"drop\" === drop_or_demote || !end) {\n\t                fld = start;\n\t            } else if (\"demote\" === drop_or_demote) {\n\t                fld = [start, end].join(\", \");\n\t            }\n\t        }\n\t        return fld;\n\t    },\n\t    extractTitleAndSubtitle: function (Item) {\n\t        var segments = [\"\", \"container-\"];\n\t        for (var i=0,ilen=segments.length;i<ilen;i++) {\n\t            var seg = segments[i];\n\t            var title = CSL.TITLE_FIELD_SPLITS(seg);\n\t            var langs = [false];\n\t            if (Item.multi) {\n\t                for (var lang in Item.multi._keys[title.short]) {\n\t                    langs.push(lang);\n\t                }\n\t            }\n\t            for (var j=0,jlen=langs.length;j<ilen;j++) {\n\t                var lang = langs[j];\n\t                var vals = {};\n\t                if (lang) {\n\t                    if (Item.multi._keys[title.title]) {\n\t                        vals[title.title] = Item.multi._keys[title.title][lang];\n\t                    }\n\t                    if (Item.multi._keys[title[\"short\"]]) {\n\t                        vals[title[\"short\"]] = Item.multi._keys[title[\"short\"]][lang];\n\t                    }\n\t                } else {\n\t                    vals[title.title] = Item[title.title];\n\t                    vals[title[\"short\"]] = Item[title[\"short\"]];\n\t                }\n\t                vals[title.main] = vals[title.title];\n\t                vals[title.sub] = false;\n\t                if (vals[title.title] && vals[title[\"short\"]]) {\n\t                    var shortTitle = vals[title[\"short\"]];\n\t                    offset = shortTitle.length;\n\t                    if (vals[title.title].slice(0,offset) === shortTitle && vals[title.title].slice(offset).match(/^\\s*:/)) {\n\t                        vals[title.main] = vals[title.title].slice(0,offset).replace(/\\s+$/,\"\");\n\t                        vals[title.sub] = vals[title.title].slice(offset).replace(/^\\s*:\\s*/,\"\");\n\t                    }\n\t                }\n\t                if (lang) {\n\t                    for (var key in vals) {\n\t                        if (!Item.multi._keys[key]) {\n\t                            Item.multi._keys[key] = {};\n\t                        }\n\t                        Item.multi._keys[key][lang] = vals[key];\n\t                    }\n\t                } else {\n\t                    for (var key in vals) {\n\t                        Item[key] = vals[key];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    },\n\t    titlecaseSentenceOrNormal: function(state, Item, seg, lang, sentenceCase) {\n\t        var title = CSL.TITLE_FIELD_SPLITS(seg);\n\t        var vals = {};\n\t        if (lang && Item.multi) {\n\t            if (Item.multi._keys[title.title]) {\n\t                vals[title.title] = Item.multi._keys[title.title][lang];\n\t            }\n\t            if (Item.multi._keys[title.main]) {\n\t                vals[title.main] = Item.multi._keys[title.main][lang];\n\t            }\n\t            if (Item.multi._keys[title.sub]) {\n\t                vals[title.sub] = Item.multi._keys[title.sub][lang];\n\t            }\n\t        } else {\n\t            vals[title.title] = Item[title.title];\n\t            vals[title.main] = Item[title.main];\n\t            vals[title.sub] = Item[title.sub];\n\t        }\n\t        if (vals[title.main] && vals[title.sub]) {\n\t            var mainTitle = vals[title.main];\n\t            var subTitle = vals[title.sub];\n\t            if (sentenceCase) {\n\t                mainTitle = CSL.Output.Formatters.sentence(state, mainTitle);\n\t                subTitle = CSL.Output.Formatters.sentence(state, subTitle);\n\t            } else {\n\t                subTitle = CSL.Output.Formatters[\"capitalize-first\"](state, subTitle);\n\t            }\n\t            return [mainTitle, subTitle].join(vals[title.title].slice(mainTitle.length, -1 * subTitle.length));\n\t        } else {\n\t            if (sentenceCase) {\n\t                return CSL.Output.Formatters.sentence(state, vals[title.title]);\n\t            } else {\n\t                return vals[title.title];\n\t            }\n\t        }\n\t    },\n\t    getSafeEscape: function(state) {\n\t        if ([\"bibliography\", \"citation\"].indexOf(state.tmp.area) > -1) {\n\t            var callbacks = [];\n\t            if (state.opt.development_extensions.thin_non_breaking_space_html_hack && state.opt.mode === \"html\") {\n\t                callbacks.push(function (txt) {\n\t                    return txt.replace(/\\u202f/g, '<span style=\"white-space:nowrap\">&thinsp;</span>');\n\t                });\n\t            }\n\t            if (callbacks.length) {\n\t                return function (txt) {\n\t                    for (var i = 0, ilen = callbacks.length; i < ilen; i += 1) {\n\t                        txt = callbacks[i](txt);\n\t                    }\n\t                    return CSL.Output.Formats[state.opt.mode].text_escape(txt);\n\t                }\n\t            } else {\n\t                return CSL.Output.Formats[state.opt.mode].text_escape;\n\t            }\n\t        } else {\n\t            return function (txt) { return txt; };\n\t        }\n\t    },\n\t    SKIP_WORDS: [\"about\",\"above\",\"across\",\"afore\",\"after\",\"against\",\"along\",\"alongside\",\"amid\",\"amidst\",\"among\",\"amongst\",\"anenst\",\"apropos\",\"apud\",\"around\",\"as\",\"aside\",\"astride\",\"at\",\"athwart\",\"atop\",\"barring\",\"before\",\"behind\",\"below\",\"beneath\",\"beside\",\"besides\",\"between\",\"beyond\",\"but\",\"by\",\"circa\",\"despite\",\"down\",\"during\",\"except\",\"for\",\"forenenst\",\"from\",\"given\",\"in\",\"inside\",\"into\",\"lest\",\"like\",\"modulo\",\"near\",\"next\",\"notwithstanding\",\"of\",\"off\",\"on\",\"onto\",\"out\",\"over\",\"per\",\"plus\",\"pro\",\"qua\",\"sans\",\"since\",\"than\",\"through\",\" thru\",\"throughout\",\"thruout\",\"till\",\"to\",\"toward\",\"towards\",\"under\",\"underneath\",\"until\",\"unto\",\"up\",\"upon\",\"versus\",\"vs.\",\"v.\",\"vs\",\"v\",\"via\",\"vis-à-vis\",\"with\",\"within\",\"without\",\"according to\",\"ahead of\",\"apart from\",\"as for\",\"as of\",\"as per\",\"as regards\",\"aside from\",\"back to\",\"because of\",\"close to\",\"due to\",\"except for\",\"far from\",\"inside of\",\"instead of\",\"near to\",\"next to\",\"on to\",\"out from\",\"out of\",\"outside of\",\"prior to\",\"pursuant to\",\"rather than\",\"regardless of\",\"such as\",\"that of\",\"up to\",\"where as\",\"or\", \"yet\", \"so\", \"for\", \"and\", \"nor\", \"a\", \"an\", \"the\", \"de\", \"d'\", \"von\", \"van\", \"c\", \"et\", \"ca\"],\n\t    FORMAT_KEY_SEQUENCE: [\n\t        \"@strip-periods\",\n\t        \"@font-style\",\n\t        \"@font-variant\",\n\t        \"@font-weight\",\n\t        \"@text-decoration\",\n\t        \"@vertical-align\",\n\t        \"@quotes\"\n\t    ],\n\t    INSTITUTION_KEYS: [\n\t        \"font-style\",\n\t        \"font-variant\",\n\t        \"font-weight\",\n\t        \"text-decoration\",\n\t        \"text-case\"\n\t    ],\n\t    SUFFIX_CHARS: \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\",\n\t    ROMAN_NUMERALS: [\n\t        [ \"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\" ],\n\t        [ \"\", \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\" ],\n\t        [ \"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\" ],\n\t        [ \"\", \"m\", \"mm\", \"mmm\", \"mmmm\", \"mmmmm\"]\n\t    ],\n\t    CREATORS: [\n\t        \"author\",\n\t        \"editor\",\n\t        \"contributor\",\n\t        \"translator\",\n\t        \"recipient\",\n\t        \"interviewer\",\n\t        \"composer\",\n\t        \"original-author\",\n\t        \"container-author\",\n\t        \"collection-editor\"\n\t    ],\n\t    LANGS: {\n\t        \"af-ZA\":\"Afrikaans\",\n\t        \"ar\":\"Arabic\",\n\t        \"bg-BG\":\"Bulgarian\",\n\t        \"ca-AD\":\"Catalan\",\n\t        \"cs-CZ\":\"Czech\",\n\t        \"da-DK\":\"Danish\",\n\t        \"de-AT\":\"Austrian\",\n\t        \"de-CH\":\"German (CH)\",\n\t        \"de-DE\":\"German (DE)\",\n\t        \"el-GR\":\"Greek\",\n\t        \"en-GB\":\"English (GB)\",\n\t        \"en-US\":\"English (US)\",\n\t        \"es-ES\":\"Spanish\",\n\t        \"et-EE\":\"Estonian\",\n\t        \"eu\":\"European\",\n\t        \"fa-IR\":\"Persian\",\n\t        \"fi-FI\":\"Finnish\",\n\t        \"fr-CA\":\"French (CA)\",\n\t        \"fr-FR\":\"French (FR)\",\n\t        \"he-IL\":\"Hebrew\",\n\t        \"hr-HR\":\"Croatian\",\n\t        \"hu-HU\":\"Hungarian\",\n\t        \"is-IS\":\"Icelandic\",\n\t        \"it-IT\":\"Italian\",\n\t        \"ja-JP\":\"Japanese\",\n\t        \"km-KH\":\"Khmer\",\n\t        \"ko-KR\":\"Korean\",\n\t        \"lt-LT\":\"Lithuanian\",\n\t        \"lv-LV\":\"Latvian\",\n\t        \"mn-MN\":\"Mongolian\",\n\t        \"nb-NO\":\"Norwegian (Bokmål)\",\n\t        \"nl-NL\":\"Dutch\",\n\t        \"nn-NO\":\"Norwegian (Nynorsk)\",\n\t        \"pl-PL\":\"Polish\",\n\t        \"pt-BR\":\"Portuguese (BR)\",\n\t        \"pt-PT\":\"Portuguese (PT)\",\n\t        \"ro-RO\":\"Romanian\",\n\t        \"ru-RU\":\"Russian\",\n\t        \"sk-SK\":\"Slovak\",\n\t        \"sl-SI\":\"Slovenian\",\n\t        \"sr-RS\":\"Serbian\",\n\t        \"sv-SE\":\"Swedish\",\n\t        \"th-TH\":\"Thai\",\n\t        \"tr-TR\":\"Turkish\",\n\t        \"uk-UA\":\"Ukranian\",\n\t        \"vi-VN\":\"Vietnamese\",\n\t        \"zh-CN\":\"Chinese (CN)\",\n\t        \"zh-TW\":\"Chinese (TW)\"\n\t    },\n\t    LANG_BASES: {\n\t        af: \"af_ZA\",\n\t        ar: \"ar\",\n\t        bg: \"bg_BG\",\n\t        ca: \"ca_AD\",\n\t        cs: \"cs_CZ\",\n\t        da: \"da_DK\",\n\t        de: \"de_DE\",\n\t        el: \"el_GR\",\n\t        en: \"en_US\",\n\t        es: \"es_ES\",\n\t        et: \"et_EE\",\n\t        eu: \"eu\",\n\t        fa: \"fa_IR\",\n\t        fi: \"fi_FI\",\n\t        fr: \"fr_FR\",\n\t        he: \"he_IL\",\n\t        hr: \"hr-HR\",\n\t        hu: \"hu_HU\",\n\t        is: \"is_IS\",\n\t        it: \"it_IT\",\n\t        ja: \"ja_JP\",\n\t        km: \"km_KH\",\n\t        ko: \"ko_KR\",\n\t        lt: \"lt_LT\",\n\t        lv: \"lv-LV\",\n\t        mn: \"mn_MN\",\n\t        nb: \"nb_NO\",\n\t        nl: \"nl_NL\",\n\t        nn: \"nn-NO\",\n\t        pl: \"pl_PL\",\n\t        pt: \"pt_PT\",\n\t        ro: \"ro_RO\",\n\t        ru: \"ru_RU\",\n\t        sk: \"sk_SK\",\n\t        sl: \"sl_SI\",\n\t        sr: \"sr_RS\",\n\t        sv: \"sv_SE\",\n\t        th: \"th_TH\",\n\t        tr: \"tr_TR\",\n\t        uk: \"uk_UA\",\n\t        vi: \"vi_VN\",\n\t        zh: \"zh_CN\"\n\t    },\n\t    SUPERSCRIPTS: {\n\t        \"\\u00AA\": \"\\u0061\",\n\t        \"\\u00B2\": \"\\u0032\",\n\t        \"\\u00B3\": \"\\u0033\",\n\t        \"\\u00B9\": \"\\u0031\",\n\t        \"\\u00BA\": \"\\u006F\",\n\t        \"\\u02B0\": \"\\u0068\",\n\t        \"\\u02B1\": \"\\u0266\",\n\t        \"\\u02B2\": \"\\u006A\",\n\t        \"\\u02B3\": \"\\u0072\",\n\t        \"\\u02B4\": \"\\u0279\",\n\t        \"\\u02B5\": \"\\u027B\",\n\t        \"\\u02B6\": \"\\u0281\",\n\t        \"\\u02B7\": \"\\u0077\",\n\t        \"\\u02B8\": \"\\u0079\",\n\t        \"\\u02E0\": \"\\u0263\",\n\t        \"\\u02E1\": \"\\u006C\",\n\t        \"\\u02E2\": \"\\u0073\",\n\t        \"\\u02E3\": \"\\u0078\",\n\t        \"\\u02E4\": \"\\u0295\",\n\t        \"\\u1D2C\": \"\\u0041\",\n\t        \"\\u1D2D\": \"\\u00C6\",\n\t        \"\\u1D2E\": \"\\u0042\",\n\t        \"\\u1D30\": \"\\u0044\",\n\t        \"\\u1D31\": \"\\u0045\",\n\t        \"\\u1D32\": \"\\u018E\",\n\t        \"\\u1D33\": \"\\u0047\",\n\t        \"\\u1D34\": \"\\u0048\",\n\t        \"\\u1D35\": \"\\u0049\",\n\t        \"\\u1D36\": \"\\u004A\",\n\t        \"\\u1D37\": \"\\u004B\",\n\t        \"\\u1D38\": \"\\u004C\",\n\t        \"\\u1D39\": \"\\u004D\",\n\t        \"\\u1D3A\": \"\\u004E\",\n\t        \"\\u1D3C\": \"\\u004F\",\n\t        \"\\u1D3D\": \"\\u0222\",\n\t        \"\\u1D3E\": \"\\u0050\",\n\t        \"\\u1D3F\": \"\\u0052\",\n\t        \"\\u1D40\": \"\\u0054\",\n\t        \"\\u1D41\": \"\\u0055\",\n\t        \"\\u1D42\": \"\\u0057\",\n\t        \"\\u1D43\": \"\\u0061\",\n\t        \"\\u1D44\": \"\\u0250\",\n\t        \"\\u1D45\": \"\\u0251\",\n\t        \"\\u1D46\": \"\\u1D02\",\n\t        \"\\u1D47\": \"\\u0062\",\n\t        \"\\u1D48\": \"\\u0064\",\n\t        \"\\u1D49\": \"\\u0065\",\n\t        \"\\u1D4A\": \"\\u0259\",\n\t        \"\\u1D4B\": \"\\u025B\",\n\t        \"\\u1D4C\": \"\\u025C\",\n\t        \"\\u1D4D\": \"\\u0067\",\n\t        \"\\u1D4F\": \"\\u006B\",\n\t        \"\\u1D50\": \"\\u006D\",\n\t        \"\\u1D51\": \"\\u014B\",\n\t        \"\\u1D52\": \"\\u006F\",\n\t        \"\\u1D53\": \"\\u0254\",\n\t        \"\\u1D54\": \"\\u1D16\",\n\t        \"\\u1D55\": \"\\u1D17\",\n\t        \"\\u1D56\": \"\\u0070\",\n\t        \"\\u1D57\": \"\\u0074\",\n\t        \"\\u1D58\": \"\\u0075\",\n\t        \"\\u1D59\": \"\\u1D1D\",\n\t        \"\\u1D5A\": \"\\u026F\",\n\t        \"\\u1D5B\": \"\\u0076\",\n\t        \"\\u1D5C\": \"\\u1D25\",\n\t        \"\\u1D5D\": \"\\u03B2\",\n\t        \"\\u1D5E\": \"\\u03B3\",\n\t        \"\\u1D5F\": \"\\u03B4\",\n\t        \"\\u1D60\": \"\\u03C6\",\n\t        \"\\u1D61\": \"\\u03C7\",\n\t        \"\\u2070\": \"\\u0030\",\n\t        \"\\u2071\": \"\\u0069\",\n\t        \"\\u2074\": \"\\u0034\",\n\t        \"\\u2075\": \"\\u0035\",\n\t        \"\\u2076\": \"\\u0036\",\n\t        \"\\u2077\": \"\\u0037\",\n\t        \"\\u2078\": \"\\u0038\",\n\t        \"\\u2079\": \"\\u0039\",\n\t        \"\\u207A\": \"\\u002B\",\n\t        \"\\u207B\": \"\\u2212\",\n\t        \"\\u207C\": \"\\u003D\",\n\t        \"\\u207D\": \"\\u0028\",\n\t        \"\\u207E\": \"\\u0029\",\n\t        \"\\u207F\": \"\\u006E\",\n\t        \"\\u2120\": \"\\u0053\\u004D\",\n\t        \"\\u2122\": \"\\u0054\\u004D\",\n\t        \"\\u3192\": \"\\u4E00\",\n\t        \"\\u3193\": \"\\u4E8C\",\n\t        \"\\u3194\": \"\\u4E09\",\n\t        \"\\u3195\": \"\\u56DB\",\n\t        \"\\u3196\": \"\\u4E0A\",\n\t        \"\\u3197\": \"\\u4E2D\",\n\t        \"\\u3198\": \"\\u4E0B\",\n\t        \"\\u3199\": \"\\u7532\",\n\t        \"\\u319A\": \"\\u4E59\",\n\t        \"\\u319B\": \"\\u4E19\",\n\t        \"\\u319C\": \"\\u4E01\",\n\t        \"\\u319D\": \"\\u5929\",\n\t        \"\\u319E\": \"\\u5730\",\n\t        \"\\u319F\": \"\\u4EBA\",\n\t        \"\\u02C0\": \"\\u0294\",\n\t        \"\\u02C1\": \"\\u0295\",\n\t        \"\\u06E5\": \"\\u0648\",\n\t        \"\\u06E6\": \"\\u064A\"\n\t    },\n\t    SUPERSCRIPTS_REGEXP: new RegExp(\"[\\u00AA\\u00B2\\u00B3\\u00B9\\u00BA\\u02B0\\u02B1\\u02B2\\u02B3\\u02B4\\u02B5\\u02B6\\u02B7\\u02B8\\u02E0\\u02E1\\u02E2\\u02E3\\u02E4\\u1D2C\\u1D2D\\u1D2E\\u1D30\\u1D31\\u1D32\\u1D33\\u1D34\\u1D35\\u1D36\\u1D37\\u1D38\\u1D39\\u1D3A\\u1D3C\\u1D3D\\u1D3E\\u1D3F\\u1D40\\u1D41\\u1D42\\u1D43\\u1D44\\u1D45\\u1D46\\u1D47\\u1D48\\u1D49\\u1D4A\\u1D4B\\u1D4C\\u1D4D\\u1D4F\\u1D50\\u1D51\\u1D52\\u1D53\\u1D54\\u1D55\\u1D56\\u1D57\\u1D58\\u1D59\\u1D5A\\u1D5B\\u1D5C\\u1D5D\\u1D5E\\u1D5F\\u1D60\\u1D61\\u2070\\u2071\\u2074\\u2075\\u2076\\u2077\\u2078\\u2079\\u207A\\u207B\\u207C\\u207D\\u207E\\u207F\\u2120\\u2122\\u3192\\u3193\\u3194\\u3195\\u3196\\u3197\\u3198\\u3199\\u319A\\u319B\\u319C\\u319D\\u319E\\u319F\\u02C0\\u02C1\\u06E5\\u06E6]\", \"g\"),\n\t    UPDATE_GROUP_CONTEXT_CONDITION: function (state, termtxt, valueTerm) {\n\t        if (state.tmp.group_context.tip.condition) {\n\t            if (state.tmp.group_context.tip.condition.test) {\n\t                var testres;\n\t                if (state.tmp.group_context.tip.condition.test === \"empty-label\") {\n\t                    testres = !termtxt;\n\t                } else if (state.tmp.group_context.tip.condition.test === \"comma-safe\") {\n\t                    var empty = !termtxt;\n\t                    var alpha = termtxt.slice(0,1).match(CSL.ALL_ROMANESQUE_REGEXP);\n\t                    var num = state.tmp.just_did_number;\n\t                    if (empty) {\n\t                        testres = true;\n\t                    } else if (num) {\n\t                        if (alpha && !valueTerm) {\n\t                            testres = true;\n\t                        } else {\n\t                            testres = false;\n\t                        }\n\t                    } else {\n\t                        if (alpha && !valueTerm) {\n\t                            testres = true;\n\t                        } else {\n\t                            testres = false;\n\t                        }\n\t                    }\n\t                }\n\t                if (testres) {\n\t                    state.tmp.group_context.tip.force_suppress = false;\n\t                } else {\n\t                    state.tmp.group_context.tip.force_suppress = true;\n\t                }\n\t                if (state.tmp.group_context.tip.condition.not) {\n\t                    state.tmp.group_context.tip.force_suppress = !state.tmp.group_context.tip.force_suppress;\n\t                }\n\t            }\n\t        } else {\n\t            if (termtxt.slice(-1).match(/[0-9]/)) {\n\t                state.tmp.just_did_number = true;\n\t            } else {\n\t                state.tmp.just_did_number = false;\n\t            }\n\t        }\n\t    },\n\t    locale: {},\n\t    locale_opts: {},\n\t    locale_dates: {}\n\t};\n\tif (\"function\" !== \"undefined\" && typeof module !== 'undefined' && \"exports\" in module) {\n\t    var CSL_IS_NODEJS = true;\n\t    exports.CSL = CSL;\n\t}\n\tCSL.TERMINAL_PUNCTUATION_REGEXP = new RegExp(\"^([\" + CSL.TERMINAL_PUNCTUATION.slice(0, -1).join(\"\") + \"])(.*)\");\n\tCSL.CLOSURES = new RegExp(\".*[\\\\]\\\\)]\");\n\tif (\"undefined\" === typeof console) {\n\t    CSL.debug = function (str) {\n\t        dump(\"CSL: \" + str + \"\\n\");\n\t    };\n\t    CSL.error = function (str) {\n\t        dump(\"CSL error: \" + str + \"\\n\");\n\t    };\n\t} else {\n\t    CSL.debug = function (str) {\n\t        console.log(\"CSL: \" + str);\n\t    };\n\t    CSL.error = function (str) {\n\t        console.log(\"CSL error: \" + str);\n\t    };\n\t}\n\tCSL.XmlJSON = function (dataObj) {\n\t    this.dataObj = dataObj;\n\t    this.institution = {\n\t        name:\"institution\",\n\t        attrs:{\n\t            \"institution-parts\":\"long\",\n\t            \"delimiter\":\", \",\n\t            \"substitute-use-first\":\"1\",\n\t            \"use-last\":\"1\"\n\t        },\n\t        children:[\n\t            {\n\t                name:\"institution-part\",\n\t                attrs:{\n\t                    name:\"long\"\n\t                },\n\t                children:[]\n\t            }\n\t        ]\n\t    };\n\t};\n\tCSL.XmlJSON.prototype.clean = function (json) {\n\t    return json;\n\t};\n\tCSL.XmlJSON.prototype.getStyleId = function (myjson, styleName) {\n\t    var tagName = 'id';\n\t    if (styleName) {\n\t        tagName = 'title';\n\t    }\n\t    var ret = \"\";\n\t    var children = myjson.children;\n\t    for (var i=0,ilen=children.length;i<ilen;i++) {\n\t        if (children[i].name === 'info') {\n\t            var grandkids = children[i].children;\n\t            for (var j=0,jlen=grandkids.length;j<jlen;j++) {\n\t                if (grandkids[j].name === tagName) {\n\t                    ret = grandkids[j].children[0];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.XmlJSON.prototype.children = function (myjson) {\n\t    if (myjson && myjson.children.length) {\n\t        return myjson.children.slice();\n\t    } else {\n\t        return false;\n\t    }\n\t};\n\tCSL.XmlJSON.prototype.nodename = function (myjson) {\n\t    return myjson.name;\n\t};\n\tCSL.XmlJSON.prototype.attributes = function (myjson) {\n\t    var ret = {};\n\t    for (var attrname in myjson.attrs) {\n\t        ret[\"@\"+attrname] = myjson.attrs[attrname];\n\t    }\n\t    return ret;\n\t};\n\tCSL.XmlJSON.prototype.content = function (myjson) {\n\t    var ret = \"\";\n\t    if (!myjson || !myjson.children) {\n\t        return ret;\n\t    }\n\t    for (var i=0, ilen=myjson.children.length; i < ilen; i += 1) {\n\t        if (\"string\" === typeof myjson.children[i]) {\n\t            ret += myjson.children[i];\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.XmlJSON.prototype.namespace = {}\n\tCSL.XmlJSON.prototype.numberofnodes = function (myjson) {\n\t    if (myjson && \"number\" == typeof myjson.length) {\n\t        return myjson.length;\n\t    } else {\n\t        return 0;\n\t    }\n\t};\n\tCSL.XmlJSON.prototype.getAttributeValue = function (myjson,name,namespace) {\n\t    var ret = \"\";\n\t    if (namespace) {\n\t        name = namespace+\":\"+name;\n\t    }\n\t    if (myjson) {\n\t        if (myjson.attrs) {\n\t            if (myjson.attrs[name]) {\n\t                ret = myjson.attrs[name];\n\t            } else {\n\t                ret = \"\";\n\t            }\n\t        }\n\t    }\n\t    return ret;\n\t}\n\tCSL.XmlJSON.prototype.getNodeValue = function (myjson,name) {\n\t    var ret = \"\";\n\t    if (name){\n\t        for (var i=0, ilen=myjson.children.length; i < ilen; i += 1) {\n\t            if (myjson.children[i].name === name) {\n\t                if (myjson.children[i].children.length) {\n\t                    ret = myjson.children[i];\n\t                } else {\n\t                    ret = \"\";\n\t                }\n\t            }\n\t        }\n\t    } else if (myjson) {\n\t        ret = myjson;\n\t    }\n\t    if (ret && ret.children && ret.children.length == 1 && \"string\" === typeof ret.children[0]) {\n\t        ret = ret.children[0];\n\t    }\n\t    return ret;\n\t}\n\tCSL.XmlJSON.prototype.setAttributeOnNodeIdentifiedByNameAttribute = function (myjson,nodename,partname,attrname,val) {\n\t    var pos, len, xml, nodes, node;\n\t    if (attrname.slice(0,1) === '@'){\n\t        attrname = attrname.slice(1);\n\t    }\n\t    for (var i=0,ilen=myjson.children.length; i<ilen; i += 1) {\n\t        if (myjson.children[i].name === nodename && myjson.children[i].attrs.name === partname) {\n\t            myjson.children[i].attrs[attrname] = val;\n\t        }\n\t    }\n\t}\n\tCSL.XmlJSON.prototype.deleteNodeByNameAttribute = function (myjson,val) {\n\t    var i, ilen;\n\t    for (i = 0, ilen = myjson.children.length; i < ilen; i += 1) {\n\t        if (!myjson.children[i] || \"string\" === typeof myjson.children[i]) {\n\t            continue;\n\t        }\n\t        if (myjson.children[i].attrs.name == val) {\n\t            myjson.children = myjson.children.slice(0,i).concat(myjson.children.slice(i+1));\n\t        }\n\t    }\n\t}\n\tCSL.XmlJSON.prototype.deleteAttribute = function (myjson,attrname) {\n\t    var i, ilen;\n\t    if (\"undefined\" !== typeof myjson.attrs[attrname]) {\n\t        myjson.attrs.pop(attrname);\n\t    }\n\t}\n\tCSL.XmlJSON.prototype.setAttribute = function (myjson,attr,val) {\n\t    myjson.attrs[attr] = val;\n\t    return false;\n\t}\n\tCSL.XmlJSON.prototype.nodeCopy = function (myjson,clone) {\n\t    if (!clone) {\n\t        var clone = {};\n\t    }\n\t    if (\"object\" === typeof clone && \"undefined\" === typeof clone.length) {\n\t        for (var key in myjson) {\n\t            if (\"string\" === typeof myjson[key]) {\n\t                clone[key] = myjson[key];\n\t            } else if (\"object\" === typeof myjson[key]) {\n\t                if (\"undefined\" === typeof myjson[key].length) {\n\t                    clone[key] = this.nodeCopy(myjson[key],{});\n\t                } else {\n\t                    clone[key] = this.nodeCopy(myjson[key],[]);\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        for (var i=0,ilen=myjson.length;i<ilen; i += 1) {\n\t            if (\"string\" === typeof myjson[i]) {\n\t                clone[i] = myjson[i];\n\t            } else {\n\t                clone[i] = this.nodeCopy(myjson[i],{});\n\t            }\n\t        }\n\t    }\n\t    return clone;\n\t}\n\tCSL.XmlJSON.prototype.getNodesByName = function (myjson,name,nameattrval,ret) {\n\t    var nodes, node, pos, len;\n\t    if (!ret) {\n\t        var ret = [];\n\t    }\n\t    if (!myjson || !myjson.children) {\n\t        return ret;\n\t    }\n\t    if (name === myjson.name) {\n\t        if (nameattrval) {\n\t            if (nameattrval === myjson.attrs.name) {\n\t                ret.push(myjson);\n\t            }\n\t        } else {\n\t            ret.push(myjson);\n\t        }\n\t    }\n\t    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1){\n\t        if (\"object\" !== typeof myjson.children[i]) {\n\t            continue;\n\t        }\n\t        this.getNodesByName(myjson.children[i],name,nameattrval,ret);\n\t    }\n\t    return ret;\n\t}\n\tCSL.XmlJSON.prototype.nodeNameIs = function (myjson,name) {\n\t    if (typeof myjson === \"undefined\") {\n\t        return false;\n\t    }\n\t    if (name == myjson.name) {\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\tCSL.XmlJSON.prototype.makeXml = function (myjson) {\n\t    if (\"string\" === typeof myjson) {\n\t        if (myjson.slice(0, 1) === \"<\") {\n\t            myjson = this.jsonStringWalker.walkToObject(myjson);\n\t        } else {\n\t            myjson = JSON.parse(myjson);\n\t        }\n\t    }\n\t    return myjson;\n\t};\n\tCSL.XmlJSON.prototype.insertChildNodeAfter = function (parent,node,pos,datejson) {\n\t    for (var i=0,ilen=parent.children.length;i<ilen;i+=1) {\n\t        if (node === parent.children[i]) {\n\t            parent.children = parent.children.slice(0,i).concat([datejson]).concat(parent.children.slice(i+1));\n\t            break;\n\t        }\n\t    }\n\t    return parent;\n\t};\n\tCSL.XmlJSON.prototype.insertPublisherAndPlace = function(myjson) {\n\t    if (myjson.name === \"group\") {\n\t        var useme = true;\n\t        var mustHaves = [\"publisher\",\"publisher-place\"];\n\t        for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n\t            var haveVarname = mustHaves.indexOf(myjson.children[i].attrs.variable);\n\t            var isText = myjson.children[i].name === \"text\";\n\t            if (isText && haveVarname > -1 && !myjson.children[i].attrs.prefix && !myjson.children[i].attrs.suffix) {\n\t                mustHaves = mustHaves.slice(0,haveVarname).concat(mustHaves.slice(haveVarname+1));\n\t            } else {\n\t                useme = false;\n\t                break;\n\t            }\n\t        }\n\t        if (useme && !mustHaves.length) {\n\t            myjson.attrs[\"has-publisher-and-publisher-place\"] = true;\n\t       }\n\t    }\n\t    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n\t        if (\"object\" === typeof myjson.children[i]) {\n\t            this.insertPublisherAndPlace(myjson.children[i]);\n\t        }\n\t    }    \n\t}\n\tCSL.XmlJSON.prototype.isChildOfSubstitute = function(parents) {\n\t    if (parents.length > 0) {\n\t        var myparents = parents.slice();\n\t        var parent = myparents.pop();\n\t        if (parent === \"substitute\") {\n\t            return true;\n\t        } else {\n\t            return this.isChildOfSubstitute(myparents);\n\t        }\n\t    }\n\t    return false;\n\t};\n\tCSL.XmlJSON.prototype.addMissingNameNodes = function(myjson,parents) {\n\t    if (!parents) {\n\t        parents = [];\n\t    }\n\t    if (myjson.name === \"names\") {\n\t        if (!this.isChildOfSubstitute(parents)) {\n\t            var addName = true;\n\t            for (var i=0,ilen=myjson.children.length;i<ilen;i++) {\n\t                if (myjson.children[i].name === \"name\") {\n\t                    addName = false;\n\t                    break;\n\t                }\n\t            }\n\t            if (addName) {\n\t                myjson.children = [{name:\"name\",attrs:{},children:[]}].concat(myjson.children);\n\t            }\n\t        }\n\t    }\n\t    parents.push(myjson.name);\n\t    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n\t        if (\"object\" === typeof myjson.children[i]) {\n\t            this.addMissingNameNodes(myjson.children[i],parents);\n\t        }\n\t    }\n\t    parents.pop();\n\t}\n\tCSL.XmlJSON.prototype.addInstitutionNodes = function(myjson) {\n\t    var names, thenames, institution, theinstitution, name, thename, xml, pos, len;\n\t    if (myjson.name === \"names\") {\n\t        var attributes = {};\n\t        var insertPos = -1;\n\t        for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n\t            if (myjson.children[i].name == \"name\") {\n\t                for (var key in myjson.children[i].attrs) {\n\t                    attributes[key] = myjson.children[i].attrs[key];\n\t                }\n\t                attributes.delimiter = myjson.children[i].attrs.delimiter;\n\t                attributes.and = myjson.children[i].attrs.and;\n\t                insertPos = i;\n\t                for (var k=0,klen=myjson.children[i].children.length;k<klen;k+=1) {\n\t                    if (myjson.children[i].children[k].attrs.name !== 'family') {\n\t                        continue;\n\t                    }\n\t                    for (var key in myjson.children[i].children[k].attrs) {\n\t                        attributes[key] = myjson.children[i].children[k].attrs[key];\n\t                    }\n\t                }\n\t            }\n\t            if (myjson.children[i].name == \"institution\") {\n\t                insertPos = -1;\n\t                break;\n\t            }\n\t        }\n\t        if (insertPos > -1) {\n\t            var institution = this.nodeCopy(this.institution);\n\t            for (var i=0,ilen = CSL.INSTITUTION_KEYS.length;i<ilen;i+=1) {\n\t                var attrname = CSL.INSTITUTION_KEYS[i];\n\t                if (\"undefined\" !== typeof attributes[attrname]) {\n\t                    institution.children[0].attrs[attrname] = attributes[attrname];\n\t                }\n\t                if (attributes.delimiter) {\n\t                    institution.attrs.delimiter = attributes.delimiter;\n\t                }\n\t                if (attributes.and) {\n\t                    institution.attrs.and = \"text\";\n\t                }\n\t            }\n\t            myjson.children = myjson.children.slice(0,insertPos+1).concat([institution]).concat(myjson.children.slice(insertPos+1));\n\t        }\n\t    }\n\t    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n\t        if (\"string\" === typeof myjson.children[i]) {\n\t            continue;\n\t        }\n\t        this.addInstitutionNodes(myjson.children[i]);\n\t    }\n\t}\n\tCSL.XmlJSON.prototype.flagDateMacros = function(myjson) {\n\t    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n\t        if (myjson.children[i].name === \"macro\") {\n\t            if (this.inspectDateMacros(myjson.children[i])) {\n\t                myjson.children[i].attrs[\"macro-has-date\"] = \"true\";\n\t            }\n\t        }\n\t    }\n\t}\n\tCSL.XmlJSON.prototype.inspectDateMacros = function(myjson) {\n\t    if (!myjson || !myjson.children) {\n\t        return false;\n\t    }\n\t    if (myjson.name === \"date\") {\n\t        return true;\n\t    } else {\n\t        for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n\t            if (this.inspectDateMacros(myjson.children[i])) {\n\t                return true;\n\t            }\n\t        }\n\t    }\n\t    return false;\n\t}\n\tCSL.stripXmlProcessingInstruction = function (xml) {\n\t    if (!xml) {\n\t        return xml;\n\t    }\n\t    xml = xml.replace(/^<\\?[^?]+\\?>/, \"\");\n\t    xml = xml.replace(/<!--[^>]+-->/g, \"\");\n\t    xml = xml.replace(/^\\s+/g, \"\");\n\t    xml = xml.replace(/\\s+$/g, \"\");\n\t    return xml;\n\t};\n\tCSL.parseXml = function(str) {\n\t    var _pos = 0;\n\t    var _obj = {children:[]};\n\t    var _stack = [_obj.children];\n\t    function _listifyString(str) {\n\t        str = str.split(/(?:\\r\\n|\\n|\\r)/).join(\" \").replace(/>[\t ]+</g, \"><\").replace(/<\\!--.*?-->/g, \"\");\n\t        var lst = str.split(\"><\");\n\t        var stylePos = null;\n\t        for (var i=0,ilen=lst.length;i<ilen;i++) {\n\t            if (i > 0) {\n\t                lst[i] = \"<\" + lst[i];\n\t            }\n\t            if (i < (lst.length-1)) {\n\t                lst[i] = lst[i] + \">\";\n\t            }\n\t            if (\"number\" != typeof stylePos) {\n\t                if (lst[i].slice(0, 7) === \"<style \" || lst[i].slice(0, 8) == \"<locale \") {\n\t                    stylePos = i;\n\t                }\n\t            }\n\t        }\n\t        lst = lst.slice(stylePos);\n\t        for (var i=lst.length-2;i>-1;i--) {\n\t            if (lst[i].slice(1).indexOf(\"<\") === -1) {\n\t                var stub = lst[i].slice(0, 5);\n\t                if (stub === \"<term\") {\n\t                    if (lst[i+1].slice(0, 6) === \"</term\") {\n\t                        lst[i] = lst[i] + lst[i+1];\n\t                        lst = lst.slice(0, i+1).concat(lst.slice(i+2));\n\t                    }\n\t                } else if ([\"<sing\", \"<mult\"].indexOf(stub) > -1) {\n\t                    if (lst[i].slice(-2) !== \"/>\" && lst[i+1].slice(0, 1) === \"<\") {\n\t                        lst[i] = lst[i] + lst[i+1];\n\t                        lst = lst.slice(0, i+1).concat(lst.slice(i+2));\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return lst;\n\t    }\n\t    function _decodeHtmlEntities(str) {\n\t        return str\n\t            .split(\"&amp;\").join(\"&\")\n\t            .split(\"&quot;\").join(\"\\\"\")\n\t            .split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\")\n\t            .replace(/&#([0-9]{1,6});/gi, function(match, numStr) {\n\t                var num = parseInt(numStr, 10); // read num as normal number\n\t                return String.fromCharCode(num);\n\t            })\n\t            .replace(/&#x([a-f0-9]{1,6});/gi, function(match, numStr){\n\t                var num = parseInt(numStr, 16); // read num as hex\n\t                return String.fromCharCode(num);\n\t            });\n\t    }\n\t    function _getAttributes(elem) {\n\t        var m = elem.match(/([^\\'\\\"=\t ]+)=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\')/g);\n\t        if (m) {\n\t            for (var i=0,ilen=m.length;i<ilen;i++) {\n\t                m[i] = m[i].replace(/=.*/, \"\");\n\t            }\n\t        }\n\t        return m;\n\t    }\n\t    function _getAttribute(elem, attr) {\n\t        var rex = RegExp('^.*[\t ]+' + attr + '=(\\\"(?:[^\\\"]*)\\\"|\\'(?:[^\\']*)\\').*$');\n\t        var m = elem.match(rex);\n\t        return m ? m[1].slice(1, -1) : null;\n\t    }\n\t    function _getTagName(elem) {\n\t        var rex = RegExp(\"^<([^\t />]+)\");\n\t        var m = elem.match(rex);\n\t        return m ? m[1] : null;\n\t    }\n\t    function _castObjectFromOpeningTag(elem) {\n\t        var obj = {};\n\t        obj.name = _getTagName(elem);\n\t        obj.attrs = {};\n\t        var attributes = _getAttributes(elem);\n\t        if (attributes) {\n\t            for (var i=0,ilen=attributes.length;i<ilen;i++) {\n\t                var attr = {\n\t                    name: attributes[i],\n\t                    value: _getAttribute(elem, attributes[i])\n\t                }\n\t                obj.attrs[attr.name] = _decodeHtmlEntities(attr.value);\n\t            }\n\t        }\n\t        obj.children = [];\n\t        return obj;\n\t    }\n\t    function _extractTextFromCompositeElement(elem) {\n\t        var m = elem.match(/^.*>([^<]*)<.*$/);\n\t        return _decodeHtmlEntities(m[1]);\n\t    }\n\t    function _appendToChildren(obj) {\n\t        _stack.slice(-1)[0].push(obj);\n\t    }\n\t    function _extendStackWithNewChildren(obj) {\n\t        _stack.push(obj.children);\n\t    }\n\t    function processElement(elem) {\n\t        var obj;\n\t        if (elem.slice(1).indexOf('<') > -1) {\n\t            var tag = elem.slice(0, elem.indexOf('>')+1);\n\t            obj = _castObjectFromOpeningTag(tag);\n\t            obj.children = [_extractTextFromCompositeElement(elem)];\n\t            _appendToChildren(obj);\n\t        } else if (elem.slice(-2) === '/>') {\n\t            obj = _castObjectFromOpeningTag(elem);\n\t            if (_getTagName(elem) === 'term') {\n\t                obj.children.push('');\n\t            }\n\t            _appendToChildren(obj);\n\t        } else if (elem.slice(0, 2) === '</') {\n\t            _stack.pop();\n\t        } else {\n\t            obj = _castObjectFromOpeningTag(elem);\n\t            _appendToChildren(obj)\n\t            _extendStackWithNewChildren(obj);\n\t        }\n\t    }\n\t    var lst = _listifyString(str);\n\t    for (var i=0,ilen=lst.length;i<ilen;i++) {\n\t        var elem = lst[i];\n\t        processElement(elem);\n\t    }\n\t    return _obj.children[0];\n\t}\n\tCSL.XmlDOM = function (dataObj) {\n\t    this.dataObj = dataObj;\n\t    if (\"undefined\" == typeof DOMParser) {\n\t        DOMParser = function() {};\n\t        DOMParser.prototype.parseFromString = function(str, contentType) {\n\t            if (\"undefined\" != typeof ActiveXObject) {\n\t                var xmldata = new ActiveXObject('MSXML.DomDocument');\n\t                xmldata.async = false;\n\t                xmldata.loadXML(str);\n\t                return xmldata;\n\t            } else if (\"undefined\" != typeof XMLHttpRequest) {\n\t                var xmldata = new XMLHttpRequest;\n\t                if (!contentType) {\n\t                    contentType = 'text/xml';\n\t                }\n\t                xmldata.open('GET', 'data:' + contentType + ';charset=utf-8,' + encodeURIComponent(str), false);\n\t                if(xmldata.overrideMimeType) {\n\t                    xmldata.overrideMimeType(contentType);\n\t                }\n\t                xmldata.send(null);\n\t                return xmldata.responseXML;\n\t            } else if (\"undefined\" != typeof marknote) {\n\t                var parser = new marknote.Parser();\n\t                return parser.parse(str);\n\t            }\n\t        };\n\t        this.hasAttributes = function (node) {\n\t            var ret;\n\t            if (node.attributes && node.attributes.length) {\n\t                ret = true;\n\t            } else {\n\t                ret = false;\n\t            }\n\t            return ret;\n\t        };\n\t    } else {\n\t        this.hasAttributes = function (node) {\n\t            var ret;\n\t            if (node.attributes && node.attributes.length) {\n\t                ret = true;\n\t            } else {\n\t                ret = false;\n\t            }\n\t            return ret;\n\t        };\n\t    }\n\t    this.importNode = function (doc, srcElement) {\n\t        if (\"undefined\" == typeof doc.importNode) {\n\t            var ret = this._importNode(doc, srcElement, true);\n\t        } else {\n\t            var ret = doc.importNode(srcElement, true);\n\t        }\n\t        return ret;\n\t    };\n\t    this._importNode = function(doc, node, allChildren) {\n\t        switch (node.nodeType) {\n\t            case 1:\n\t                var newNode = doc.createElement(node.nodeName);\n\t                if (node.attributes && node.attributes.length > 0)\n\t                    for (var i = 0, il = node.attributes.length; i < il;)\n\t                        newNode.setAttribute(node.attributes[i].nodeName, node.getAttribute(node.attributes[i++].nodeName));\n\t                    if (allChildren && node.childNodes && node.childNodes.length > 0)\n\t                        for (var i = 0, il = node.childNodes.length; i < il;)\n\t                            newNode.appendChild(this._importNode(doc, node.childNodes[i++], allChildren));\n\t                return newNode;\n\t                break;\n\t            case 3:\n\t            case 4:\n\t            case 8:\n\t        }\n\t    };\n\t    this.parser = new DOMParser();\n\t    var str = \"<docco><institution institution-parts=\\\"long\\\" delimiter=\\\", \\\" substitute-use-first=\\\"1\\\" use-last=\\\"1\\\"><institution-part name=\\\"long\\\"/></institution></docco>\";\n\t    var inst_doc = this.parser.parseFromString(str, \"text/xml\");\n\t    var inst_node = inst_doc.getElementsByTagName(\"institution\");\n\t    this.institution = inst_node.item(0);\n\t    var inst_part_node = inst_doc.getElementsByTagName(\"institution-part\");\n\t    this.institutionpart = inst_part_node.item(0);\n\t    this.ns = \"http://purl.org/net/xbiblio/csl\";\n\t};\n\tCSL.XmlDOM.prototype.clean = function (xml) {\n\t    xml = xml.replace(/<\\?[^?]+\\?>/g, \"\");\n\t    xml = xml.replace(/<![^>]+>/g, \"\");\n\t    xml = xml.replace(/^\\s+/, \"\");\n\t    xml = xml.replace(/\\s+$/, \"\");\n\t    xml = xml.replace(/^\\n*/, \"\");\n\t    return xml;\n\t};\n\tCSL.XmlDOM.prototype.getStyleId = function (myxml, styleName) {\n\t    var text = \"\";\n\t    var tagName = \"id\";\n\t    if (styleName) {\n\t        tagName = \"title\";\n\t    }\n\t    var node = myxml.getElementsByTagName(tagName);\n\t    if (node && node.length) {\n\t        node = node.item(0);\n\t    }\n\t    if (node) {\n\t        text = node.textContent;\n\t    }\n\t    if (!text) {\n\t        text = node.innerText;\n\t    }\n\t    if (!text) {\n\t        text = node.innerHTML;\n\t    }\n\t    return text;\n\t};\n\tCSL.XmlDOM.prototype.children = function (myxml) {\n\t    var children, pos, len, ret;\n\t    if (myxml) {\n\t        ret = [];\n\t        children = myxml.childNodes;\n\t        for (pos = 0, len = children.length; pos < len; pos += 1) {\n\t            if (children[pos].nodeName != \"#text\") {\n\t                ret.push(children[pos]);\n\t            }\n\t        }\n\t        return ret;\n\t    } else {\n\t        return [];\n\t    }\n\t};\n\tCSL.XmlDOM.prototype.nodename = function (myxml) {\n\t    var ret = myxml.nodeName;\n\t    return ret;\n\t};\n\tCSL.XmlDOM.prototype.attributes = function (myxml) {\n\t    var ret, attrs, attr, key, xml, pos, len;\n\t    ret = new Object();\n\t    if (myxml && this.hasAttributes(myxml)) {\n\t        attrs = myxml.attributes;\n\t        for (pos = 0, len=attrs.length; pos < len; pos += 1) {\n\t            attr = attrs[pos];\n\t            ret[\"@\" + attr.name] = attr.value;\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.XmlDOM.prototype.content = function (myxml) {\n\t    var ret;\n\t    if (\"undefined\" != typeof myxml.textContent) {\n\t        ret = myxml.textContent;\n\t    } else if (\"undefined\" != typeof myxml.innerText) {\n\t        ret = myxml.innerText;\n\t    } else {\n\t        ret = myxml.txt;\n\t    }\n\t    return ret;\n\t};\n\tCSL.XmlDOM.prototype.namespace = {\n\t    \"xml\":\"http://www.w3.org/XML/1998/namespace\"\n\t}\n\tCSL.XmlDOM.prototype.numberofnodes = function (myxml) {\n\t    if (myxml) {\n\t        return myxml.length;\n\t    } else {\n\t        return 0;\n\t    }\n\t};\n\tCSL.XmlDOM.prototype.getAttributeName = function (attr) {\n\t    var ret = attr.name;\n\t    return ret;\n\t}\n\tCSL.XmlDOM.prototype.getAttributeValue = function (myxml,name,namespace) {\n\t    var ret = \"\";\n\t    if (namespace) {\n\t        name = namespace+\":\"+name;\n\t    }\n\t    if (myxml && this.hasAttributes(myxml) && myxml.getAttribute(name)) {\n\t        ret = myxml.getAttribute(name);\n\t    }\n\t    return ret;\n\t}\n\tCSL.XmlDOM.prototype.getNodeValue = function (myxml,name) {\n\t    var ret = null;\n\t    if (name){\n\t        var vals = myxml.getElementsByTagName(name);\n\t        if (vals.length > 0) {\n\t            if (\"undefined\" != typeof vals[0].textContent) {\n\t                ret = vals[0].textContent;\n\t            } else if (\"undefined\" != typeof vals[0].innerText) {\n\t                ret = vals[0].innerText;\n\t            } else {\n\t                ret = vals[0].text;\n\t            }\n\t        }\n\t    }\n\t    if (ret === null && myxml && myxml.childNodes && (myxml.childNodes.length == 0 || (myxml.childNodes.length == 1 && myxml.firstChild.nodeName == \"#text\"))) {\n\t        if (\"undefined\" != typeof myxml.textContent) {\n\t            ret = myxml.textContent;\n\t        } else if (\"undefined\" != typeof myxml.innerText) {\n\t            ret = myxml.innerText;\n\t        } else {\n\t            ret = myxml.text;\n\t        }\n\t    }\n\t    if (ret === null) {\n\t        ret = myxml;\n\t    }\n\t    return ret;\n\t}\n\tCSL.XmlDOM.prototype.setAttributeOnNodeIdentifiedByNameAttribute = function (myxml,nodename,partname,attrname,val) {\n\t    var pos, len, xml, nodes, node;\n\t    if (attrname.slice(0,1) === '@'){\n\t        attrname = attrname.slice(1);\n\t    }\n\t    nodes = myxml.getElementsByTagName(nodename);\n\t    for (pos = 0, len = nodes.length; pos < len; pos += 1) {\n\t        node = nodes[pos];\n\t        if (node.getAttribute(\"name\") != partname) {\n\t            continue;\n\t        }\n\t        node.setAttribute(attrname, val);\n\t    }\n\t}\n\tCSL.XmlDOM.prototype.deleteNodeByNameAttribute = function (myxml,val) {\n\t    var pos, len, node, nodes;\n\t    nodes = myxml.childNodes;\n\t    for (pos = 0, len = nodes.length; pos < len; pos += 1) {\n\t        node = nodes[pos];\n\t        if (!node || node.nodeType == node.TEXT_NODE) {\n\t            continue;\n\t        }\n\t        if (this.hasAttributes(node) && node.getAttribute(\"name\") == val) {\n\t            myxml.removeChild(nodes[pos]);\n\t        }\n\t    }\n\t}\n\tCSL.XmlDOM.prototype.deleteAttribute = function (myxml,attr) {\n\t    myxml.removeAttribute(attr);\n\t}\n\tCSL.XmlDOM.prototype.setAttribute = function (myxml,attr,val) {\n\t    if (!myxml.ownerDocument) {\n\t        myxml = myxml.firstChild;\n\t    }\n\t    if ([\"function\", \"unknown\"].indexOf(typeof myxml.setAttribute) > -1) {\n\t        myxml.setAttribute(attr, val);\n\t    }\n\t    return false;\n\t}\n\tCSL.XmlDOM.prototype.nodeCopy = function (myxml) {\n\t    var cloned_node = myxml.cloneNode(true);\n\t    return cloned_node;\n\t}\n\tCSL.XmlDOM.prototype.getNodesByName = function (myxml,name,nameattrval) {\n\t    var ret, nodes, node, pos, len;\n\t    ret = [];\n\t    nodes = myxml.getElementsByTagName(name);\n\t    for (pos = 0, len = nodes.length; pos < len; pos += 1) {\n\t        node = nodes.item(pos);\n\t        if (nameattrval && !(this.hasAttributes(node) && node.getAttribute(\"name\") == nameattrval)) {\n\t            continue;\n\t        }\n\t        ret.push(node);\n\t    }\n\t    return ret;\n\t}\n\tCSL.XmlDOM.prototype.nodeNameIs = function (myxml,name) {\n\t    if (name == myxml.nodeName) {\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\tCSL.XmlDOM.prototype.makeXml = function (myxml) {\n\t    var ret, topnode;\n\t    if (!myxml) {\n\t        myxml = \"<docco><bogus/></docco>\";\n\t    }\n\t    myxml = myxml.replace(/\\s*<\\?[^>]*\\?>\\s*\\n*/g, \"\");\n\t    var nodetree = this.parser.parseFromString(myxml, \"application/xml\");\n\t    return nodetree.firstChild;\n\t};\n\tCSL.XmlDOM.prototype.insertChildNodeAfter = function (parent,node,pos,datexml) {\n\t    var myxml, xml;\n\t    myxml = this.importNode(node.ownerDocument, datexml);\n\t    parent.replaceChild(myxml, node);\n\t     return parent;\n\t};\n\tCSL.XmlDOM.prototype.insertPublisherAndPlace = function(myxml) {\n\t    var group = myxml.getElementsByTagName(\"group\");\n\t    for (var i = 0, ilen = group.length; i < ilen; i += 1) {\n\t        var node = group.item(i);\n\t        var skippers = [];\n\t        for (var j = 0, jlen = node.childNodes.length; j < jlen; j += 1) {\n\t            if (node.childNodes.item(j).nodeType !== 1) {\n\t                skippers.push(j);\n\t            }\n\t        }\n\t        if (node.childNodes.length - skippers.length === 2) {\n\t            var twovars = [];\n\t            for (var j = 0, jlen = 2; j < jlen; j += 1) {\n\t                if (skippers.indexOf(j) > -1) {\n\t                    continue;\n\t                }\n\t                var child = node.childNodes.item(j);                    \n\t                var subskippers = [];\n\t                for (var k = 0, klen = child.childNodes.length; k < klen; k += 1) {\n\t                    if (child.childNodes.item(k).nodeType !== 1) {\n\t                        subskippers.push(k);\n\t                    }\n\t                }\n\t                if (child.childNodes.length - subskippers.length === 0) {\n\t                    twovars.push(child.getAttribute('variable'));\n\t                    if (child.getAttribute('suffix')\n\t                        || child.getAttribute('prefix')) {\n\t                        twovars = [];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            if (twovars.indexOf(\"publisher\") > -1 && twovars.indexOf(\"publisher-place\") > -1) {\n\t                node.setAttribute('has-publisher-and-publisher-place', true);\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.XmlDOM.prototype.isChildOfSubstitute = function(node) {\n\t    if (node.parentNode) {\n\t        if (node.parentNode.tagName.toLowerCase() === \"substitute\") {\n\t            return true;\n\t        } else {\n\t            return this.isChildOfSubstitute(node.parentNode);\n\t        }\n\t    }\n\t    return false;\n\t};\n\tCSL.XmlDOM.prototype.addMissingNameNodes = function(myxml) {\n\t    var nameslist = myxml.getElementsByTagName(\"names\");\n\t    for (var i = 0, ilen = nameslist.length; i < ilen; i += 1) {\n\t        var names = nameslist.item(i);\n\t        var namelist = names.getElementsByTagName(\"name\");\n\t        if ((!namelist || namelist.length === 0)\n\t            && !this.isChildOfSubstitute(names)) {\n\t            var doc = names.ownerDocument;\n\t            var name = doc.createElement(\"name\");\n\t            names.appendChild(name);\n\t        }\n\t    }\n\t};\n\tCSL.XmlDOM.prototype.addInstitutionNodes = function(myxml) {\n\t    var names, thenames, institution, theinstitution, name, thename, xml, pos, len;\n\t    names = myxml.getElementsByTagName(\"names\");\n\t    for (pos = 0, len = names.length; pos < len; pos += 1) {\n\t        thenames = names.item(pos);\n\t        name = thenames.getElementsByTagName(\"name\");\n\t        if (name.length == 0) {\n\t            continue;\n\t        }\n\t        institution = thenames.getElementsByTagName(\"institution\");\n\t        if (institution.length == 0) {\n\t            theinstitution = this.importNode(myxml.ownerDocument, this.institution);\n\t            theinstitutionpart = theinstitution.getElementsByTagName(\"institution-part\").item(0);\n\t            thename = name.item(0);\n\t            thenames.insertBefore(theinstitution, thename.nextSibling);\n\t            for (var j = 0, jlen = CSL.INSTITUTION_KEYS.length; j < jlen; j += 1) {\n\t                var attrname = CSL.INSTITUTION_KEYS[j];\n\t                var attrval = thename.getAttribute(attrname);\n\t                if (attrval) {\n\t                    theinstitutionpart.setAttribute(attrname, attrval);\n\t                }\n\t            }\n\t            var nameparts = thename.getElementsByTagName(\"name-part\");\n\t            for (var j = 0, jlen = nameparts.length; j < jlen; j += 1) {\n\t                if ('family' === nameparts[j].getAttribute('name')) {\n\t                    for (var k = 0, klen = CSL.INSTITUTION_KEYS.length; k < klen; k += 1) {\n\t                        var attrname = CSL.INSTITUTION_KEYS[k];\n\t                        var attrval = nameparts[j].getAttribute(attrname);\n\t                        if (attrval) {\n\t                            theinstitutionpart.setAttribute(attrname, attrval);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.XmlDOM.prototype.flagDateMacros = function(myxml) {\n\t    var pos, len, thenode, thedate;\n\t    nodes = myxml.getElementsByTagName(\"macro\");\n\t    for (pos = 0, len = nodes.length; pos < len; pos += 1) {\n\t        thenode = nodes.item(pos);\n\t        thedate = thenode.getElementsByTagName(\"date\");\n\t        if (thedate.length) {\n\t            thenode.setAttribute('macro-has-date', 'true');\n\t        }\n\t    }\n\t};\n\tif (\"undefined\" !== typeof XML) {\n\t    try {\n\t    } catch (e) {\n\t        throw \"OOPS: \"+e;\n\t    }\n\t}\n\tCSL.setupXml = function(xmlObject) {\n\t    var dataObj = {};\n\t    var parser = null;\n\t    if (\"undefined\" !== typeof xmlObject) {\n\t        if (\"string\" === typeof xmlObject) {\n\t            xmlObject = xmlObject.replace(\"^\\uFEFF\", \"\")\n\t                .replace(/^\\s+/, \"\");\n\t            if (xmlObject.slice(0, 1) === \"<\") {\n\t                dataObj = CSL.parseXml(xmlObject);\n\t            } else {\n\t                dataObj = JSON.parse(xmlObject);\n\t            }\n\t            parser = new CSL.XmlJSON(dataObj);\n\t        } else if (\"undefined\" !== typeof xmlObject.getAttribute) {\n\t            parser = new CSL.XmlDOM(xmlObject);\n\t        } else if (\"undefined\" !== typeof xmlObject.toXMLString) {\n\t            parser = new CSL.XmlE4X(xmlObject);\n\t        } else {\n\t            parser = new CSL.XmlJSON(xmlObject);\n\t        }\n\t    } else {\n\t        CSL.error(\"unable to parse XML input\");\n\t    }\n\t    if (!parser) {\n\t        throw \"citeproc-js error: unable to parse CSL style or locale object\";\n\t    }\n\t    return parser;\n\t}\n\tCSL.getSortCompare = function (default_locale) {\n\t    if (CSL.stringCompare) {\n\t        return CSL.stringCompare;\n\t    }\n\t    var strcmp;\n\t    var strcmp_opts = {\n\t        sensitivity:\"base\",\n\t        ignorePunctuation:true,\n\t        numeric:true\n\t   }\n\t    if (!default_locale) {\n\t        default_locale = \"en-US\";\n\t    }\n\t    strcmp = function (a, b) {\n\t        return a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase(),default_locale,strcmp_opts);\n\t    };\n\t    var stripPunct = function (str) {\n\t        return str.replace(/^[\\[\\]\\'\\\"]*/g, \"\");\n\t    }\n\t    var getBracketPreSort = function () {\n\t        if (!strcmp(\"[x\",\"x\")) {\n\t            return false;\n\t        } else {\n\t            return function (a, b) {\n\t                return strcmp(stripPunct(a), stripPunct(b));\n\t            }\n\t        }\n\t    }\n\t    var bracketPreSort = getBracketPreSort();\n\t    var sortCompare = function (a, b) {\n\t        if (bracketPreSort) {\n\t            return bracketPreSort(a, b);\n\t        } else {\n\t            return strcmp(a, b);\n\t        }\n\t    }\n\t    return sortCompare;\n\t};\n\tCSL.ambigConfigDiff = function(a, b) {\n\t    var ret, pos, len, ppos, llen;\n\t    if (a.names.length !== b.names.length) {\n\t        return 1;\n\t    } else {\n\t        for (pos = 0, len = a.names.length; pos < len; pos += 1) {\n\t            if (a.names[pos] !== b.names[pos]) {\n\t                return 1;\n\t            } else {\n\t                for (ppos = 0, llen = a.givens[pos]; ppos < llen; ppos += 1) {\n\t                    if (a.givens[pos][ppos] !== b.givens[pos][ppos]) {\n\t                        return 1;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (a.disambiguate != b.disambiguate) {\n\t        return 1;\n\t    }\n\t    if (a.year_suffix !== b.year_suffix) {\n\t        return 1;\n\t    }\n\t    return 0;\n\t};\n\tCSL.cloneAmbigConfig = function (config, oldconfig, tainters) {\n\t    var i, ilen, j, jlen, k, klen, param;\n\t    var ret = {};\n\t    ret.names = [];\n\t    ret.givens = [];\n\t    ret.year_suffix = false;\n\t    ret.disambiguate = false;\n\t    for (i = 0, ilen = config.names.length; i < ilen; i += 1) {\n\t        param = config.names[i];\n\t        ret.names[i] = param;\n\t    }\n\t    for (i  = 0, ilen = config.givens.length; i < ilen; i += 1) {\n\t        param = [];\n\t        for (j = 0, jlen = config.givens[i].length; j < jlen; j += 1) {\n\t            param.push(config.givens[i][j]);\n\t        }\n\t        ret.givens.push(param);\n\t    }\n\t    if (oldconfig) {\n\t        ret.year_suffix = oldconfig.year_suffix;\n\t        ret.disambiguate = oldconfig.disambiguate;\n\t    } else {\n\t        ret.year_suffix = config.year_suffix;\n\t        ret.disambiguate = config.disambiguate;\n\t    }\n\t    return ret;\n\t};\n\tCSL.getAmbigConfig = function () {\n\t    var config, ret;\n\t    config = this.tmp.disambig_request;\n\t    if (!config) {\n\t        config = this.tmp.disambig_settings;\n\t    }\n\t    ret = CSL.cloneAmbigConfig(config);\n\t    return ret;\n\t};\n\tCSL.getMaxVals = function () {\n\t    return this.tmp.names_max.mystack.slice();\n\t};\n\tCSL.getMinVal = function () {\n\t    return this.tmp[\"et-al-min\"];\n\t};\n\tCSL.tokenExec = function (token, Item, item) {\n\t    var next, maybenext, exec, debug;\n\t    debug = false;\n\t    next = token.next;\n\t    maybenext = false;\n\t    var record = function (result) {\n\t        if (result) {\n\t            this.tmp.jump.replace(\"succeed\");\n\t            return token.succeed;\n\t        } else {\n\t            this.tmp.jump.replace(\"fail\");\n\t            return token.fail;\n\t        }\n\t    }\n\t    if (token.test) {\n\t        next = record.call(this,token.test(Item, item));\n\t    }\n\t    for (var i=0,ilen=token.execs.length;i<ilen;i++) {\n\t        exec = token.execs[i];\n\t        maybenext = exec.call(token, this, Item, item);\n\t        if (maybenext) {\n\t            next = maybenext;\n\t        }\n\t    }\n\t    return next;\n\t};\n\tCSL.expandMacro = function (macro_key_token, target) {\n\t    var mkey, start_token, key, end_token, navi, macro_nodes, newoutput, mergeoutput, end_of_macro, func;\n\t    mkey = macro_key_token.postponed_macro;\n\t    macro_key_token = new CSL.Token(\"group\", CSL.START);\n\t    var hasDate = false;\n\t    var macroid = false;\n\t    macro_nodes = this.cslXml.getNodesByName(this.cslXml.dataObj, 'macro', mkey);\n\t    if (macro_nodes.length) {\n\t        macroid = this.cslXml.getAttributeValue(macro_nodes[0],'cslid');\n\t        hasDate = this.cslXml.getAttributeValue(macro_nodes[0], \"macro-has-date\");\n\t    }\n\t    if (hasDate) {\n\t        mkey = mkey + \"@\" + this.build.current_default_locale;\n\t        func = function (state, Item) {\n\t            if (state.tmp.extension) {\n\t                state.tmp[\"doing-macro-with-date\"] = true;\n\t            }\n\t        };\n\t        macro_key_token.execs.push(func);\n\t    }\n\t    if (this.build.macro_stack.indexOf(mkey) > -1) {\n\t        throw \"CSL processor error: call to macro \\\"\" + mkey + \"\\\" would cause an infinite loop\";\n\t    } else {\n\t        this.build.macro_stack.push(mkey);\n\t    }\n\t    macro_key_token.cslid = macroid;\n\t    if (CSL.MODULE_MACROS[mkey]) {\n\t        macro_key_token.juris = mkey;\n\t        this.opt.update_mode = CSL.POSITION;\n\t    }\n\t    CSL.Node.group.build.call(macro_key_token, this, target, true);\n\t    if (!this.cslXml.getNodeValue(macro_nodes)) {\n\t        throw \"CSL style error: undefined macro \\\"\" + mkey + \"\\\"\";\n\t    }\n\t    var mytarget = CSL.getMacroTarget.call(this, mkey);\n\t    if (mytarget) {\n\t        CSL.buildMacro.call(this, mytarget, macro_nodes);\n\t        CSL.configureMacro.call(this, mytarget);\n\t    }\n\t    if (!this.build.extension) {\n\t        var func = function(macro_name) {\n\t            return function (state, Item, item) {\n\t                var next = 0;\n\t                while (next < state.macros[macro_name].length) {\n\t                    next = CSL.tokenExec.call(state, state.macros[macro_name][next], Item, item);\n\t                }\n\t            }\n\t        }(mkey);\n\t        var text_node = new CSL.Token(\"text\", CSL.SINGLETON);\n\t        text_node.execs.push(func);\n\t        target.push(text_node);\n\t    }\n\t    end_of_macro = new CSL.Token(\"group\", CSL.END);\n\t    if (hasDate) {\n\t        func = function (state, Item) {\n\t            if (state.tmp.extension) {\n\t                state.tmp[\"doing-macro-with-date\"] = false;\n\t            }\n\t        };\n\t        end_of_macro.execs.push(func);\n\t    }\n\t    if (macro_key_token.juris) {\n\t        end_of_macro.juris = mkey;\n\t     }\n\t    CSL.Node.group.build.call(end_of_macro, this, target, true);\n\t    this.build.macro_stack.pop();\n\t};\n\tCSL.getMacroTarget = function (mkey) {\n\t    var mytarget = false;\n\t    if (this.build.extension) {\n\t        mytarget = this[this.build.root + this.build.extension].tokens;\n\t    } else if (!this.macros[mkey]) {\n\t        mytarget = [];\n\t        this.macros[mkey] = mytarget;\n\t    }\n\t    return mytarget;\n\t}\n\tCSL.buildMacro = function (mytarget, macro_nodes) {\n\t    var builder = CSL.makeBuilder(this, mytarget);\n\t    var mynode;\n\t    if (\"undefined\" === typeof macro_nodes.length) {\n\t        mynode = macro_nodes;\n\t    } else {\n\t        mynode = macro_nodes[0];\n\t    }\n\t    builder(mynode);\n\t}\n\tCSL.configureMacro = function (mytarget) {\n\t    if (!this.build.extension) {\n\t        this.configureTokenList(mytarget);\n\t    }\n\t}\n\tCSL.XmlToToken = function (state, tokentype, explicitTarget) {\n\t    var name, txt, attrfuncs, attributes, decorations, token, key, target;\n\t    name = state.cslXml.nodename(this);\n\t    if (state.build.skip && state.build.skip !== name) {\n\t        return;\n\t    }\n\t    if (!name) {\n\t        txt = state.cslXml.content(this);\n\t        if (txt) {\n\t            state.build.text = txt;\n\t        }\n\t        return;\n\t    }\n\t    if (!CSL.Node[state.cslXml.nodename(this)]) {\n\t        throw \"Undefined node name \\\"\" + name + \"\\\".\";\n\t    }\n\t    attrfuncs = [];\n\t    attributes = state.cslXml.attributes(this);\n\t    decorations = CSL.setDecorations.call(this, state, attributes);\n\t    token = new CSL.Token(name, tokentype);\n\t    if (tokentype !== CSL.END || name === \"if\" || name === \"else-if\" || name === \"layout\") {\n\t        for (key in attributes) {\n\t            if (attributes.hasOwnProperty(key)) {\n\t                if (tokentype === CSL.END && key !== \"@language\" && key !== \"@locale\") {\n\t                    continue;\n\t                }\n\t                if (attributes.hasOwnProperty(key)) {\n\t                    if (CSL.Attributes[key]) {\n\t                        try {\n\t                            CSL.Attributes[key].call(token, state, \"\" + attributes[key]);\n\t                        } catch (e) {\n\t                            CSL.error(e);\n\t                            throw \"CSL processor error, \" + key + \" attribute: \" + e;\n\t                        }\n\t                    } else {\n\t                        CSL.debug(\"warning: undefined attribute \\\"\"+key+\"\\\" in style\");\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        token.decorations = decorations;\n\t    } else if (tokentype === CSL.END && attributes['@variable']) {\n\t        token.hasVariable = true;\n\t        if (CSL.DATE_VARIABLES.indexOf(attributes['@variable']) > -1) {\n\t            token.variables = attributes['@variable'].split(/\\s+/);\n\t        }\n\t    }\n\t    if (explicitTarget) {\n\t        target = explicitTarget;\n\t    } else {\n\t        target = state[state.build.area].tokens;\n\t    }\n\t    CSL.Node[name].build.call(token, state, target, true);\n\t};\n\tCSL.DateParser = new function () {\n\t    var epochPairs = [\n\t        [\"\\u660E\\u6CBB\", 1867],\n\t        [\"\\u5927\\u6B63\", 1911],\n\t        [\"\\u662D\\u548C\", 1925],\n\t        [\"\\u5E73\\u6210\", 1988]\n\t    ];\n\t    var epochYearByName = {};\n\t    for (var i=0,ilen=epochPairs.length; i<ilen; i++) {\n\t        var key = epochPairs[i][0];\n\t        var val = epochPairs[i][1];\n\t        epochYearByName[key] = val;\n\t    }\n\t    var epochMatchStrings = [];\n\t    for (var i=0,ilen=epochPairs.length; i<ilen; i++) {\n\t        var val = epochPairs[i][0];\n\t        epochMatchStrings.push(val);\n\t    }\n\t    var epochMatchString = epochMatchStrings.join(\"|\");\n\t    var epochSplitter = new RegExp(\"(?:\" + epochMatchString + \")(?:[0-9]+)\");\n\t    var epochMatcher = new RegExp(\"(?:\" + epochMatchString + \")(?:[0-9]+)\", \"g\");\n\t    var kanjiMonthDay = /(\\u6708|\\u5E74)/g;\n\t    var kanjiYear = /\\u65E5/g;\n\t    var kanjiRange = /\\u301c/g;\n\t    var yearLast = \"(?:[?0-9]{1,2}%%NUMD%%){0,2}[?0-9]{4}(?![0-9])\";\n\t    var yearFirst = \"[?0-9]{4}(?:%%NUMD%%[?0-9]{1,2}){0,2}(?![0-9])\";\n\t    var numberVal = \"[?0-9]{1,3}\";\n\t    var rangeSeparator = \"[%%DATED%%]\";\n\t    var fuzzyChar = \"[?~]\";\n\t    var chars = \"[^\\-\\/\\~\\?0-9]+\";\n\t    var rexString = \"(\" + yearFirst + \"|\" + yearLast + \"|\" + numberVal + \"|\" + rangeSeparator + \"|\" + fuzzyChar + \"|\" + chars + \")\";\n\t    var rexDash = new RegExp(rexString.replace(/%%NUMD%%/g, \"-\").replace(/%%DATED%%/g, \"-\"));\n\t    var rexDashSlash = new RegExp(rexString.replace(/%%NUMD%%/g, \"-\").replace(/%%DATED%%/g, \"\\/\"));\n\t    var rexSlashDash = new RegExp(rexString.replace(/%%NUMD%%/g, \"\\/\").replace(/%%DATED%%/g, \"-\"));\n\t    var monthString = \"january february march april may june july august september october november december spring summer fall winter spring summer\";\n\t    this.monthStrings = monthString.split(\" \");\n\t    this.setOrderDayMonth = function() {\n\t        this.monthGuess = 1;\n\t        this.dayGuess = 0;\n\t    };\n\t    this.setOrderMonthDay = function() {\n\t        this.monthGuess = 0;\n\t        this.dayGuess = 1;\n\t    };\n\t    this.resetDateParserMonths = function() {\n\t        this.monthSets = [];\n\t        for (var i=0,ilen=this.monthStrings.length; i<ilen; i++) {\n\t            this.monthSets.push([this.monthStrings[i]]);\n\t        }\n\t        this.monthAbbrevs = [];\n\t        for (var i=0,ilen=this.monthSets.length; i<ilen; i++) {\n\t            this.monthAbbrevs.push([]);\n\t            for (var j=0,jlen=this.monthSets[i].length; j<jlen; j++) {\n\t                this.monthAbbrevs[i].push(this.monthSets[i][0].slice(0, 3));\n\t            }\n\t        }\n\t        this.monthRexes = [];\n\t        for (var i=0,ilen=this.monthAbbrevs.length; i<ilen; i++) {\n\t            this.monthRexes.push(new RegExp(\"(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\"));\n\t        }\n\t    };\n\t    this.addDateParserMonths = function(lst) {\n\t        if (\"string\" === typeof lst) {\n\t            lst = lst.split(/\\s+/);\n\t        }\n\t        if (lst.length !== 12 && lst.length !== 16) {\n\t            CSL.debug(\"month [+season] list of \"+lst.length+\", expected 12 or 16. Ignoring.\");\n\t            return;\n\t        }\n\t        var otherMatch = [];\n\t        var thisMatch = [];\n\t        for (var i=0,ilen=lst.length; i<ilen; i++) {\n\t            var abbrevLength = null;\n\t            var skip = false;\n\t            var insert = 3;\n\t            var extendedSets = {};\n\t            for (var j=0,jlen=this.monthAbbrevs.length; j<jlen; j++) {\n\t                extendedSets[j] = {};\n\t                if (j === i) {\n\t                    for (var k=0,klen=this.monthAbbrevs[i].length; k<klen; k++) {\n\t                        if (this.monthAbbrevs[i][k] === lst[i].slice(0, this.monthAbbrevs[i][k].length)) {\n\t                            skip = true;\n\t                            break;\n\t                        }\n\t                    }\n\t                } else {\n\t                    for (var k=0,klen=this.monthAbbrevs[j].length; k<klen; k++) {\n\t                        abbrevLength = this.monthAbbrevs[j][k].length;\n\t                        if (this.monthAbbrevs[j][k] === lst[i].slice(0, abbrevLength)) {\n\t                            while (this.monthSets[j][k].slice(0, abbrevLength) === lst[i].slice(0, abbrevLength)) {\n\t                                if (abbrevLength > lst[i].length || abbrevLength > this.monthSets[j][k].length) {\n\t                                    CSL.debug(\"unable to disambiguate month string in date parser: \"+lst[i]);\n\t                                    break;\n\t                                } else {\n\t                                    abbrevLength += 1;\n\t                                }\n\t                            }\n\t                            insert = abbrevLength;\n\t                            extendedSets[j][k] = abbrevLength;\n\t                        }\n\t                    }\n\t                }\n\t                for (var jKey in extendedSets) {\n\t                    for (kKey in extendedSets[jKey]) {\n\t                        abbrevLength = extendedSets[jKey][kKey];\n\t                        jKey = parseInt(jKey, 10);\n\t                        kKey = parseInt(kKey, 10);\n\t                        this.monthAbbrevs[jKey][kKey] = this.monthSets[jKey][kKey].slice(0, abbrevLength);\n\t                    }\n\t                }\n\t            }\n\t            if (!skip) {\n\t                this.monthSets[i].push(lst[i]);\n\t                this.monthAbbrevs[i].push(lst[i].slice(0, insert));\n\t            }\n\t        }\n\t        this.monthRexes = [];\n\t        this.monthRexStrs = [];\n\t        for (var i=0,ilen=this.monthAbbrevs.length; i<ilen; i++) {\n\t            this.monthRexes.push(new RegExp(\"^(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\"));\n\t            this.monthRexStrs.push(\"^(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\");\n\t        }\n\t        if (this.monthAbbrevs.length === 18) {\n\t            for (var i=12,ilen=14; i<ilen; i++) {\n\t                this.monthRexes[i+4] = new RegExp(\"^(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\");\n\t                this.monthRexStrs[i+4] = \"^(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\";\n\t            }\n\t        }\n\t    };\n\t    this.convertDateObjectToArray = function (thedate) {\n\t        thedate[\"date-parts\"] = [];\n\t        thedate[\"date-parts\"].push([]);\n\t        var slicelen = 0;\n\t        for (var i=0,ilen=3; i<ilen; i++) {\n\t            var part = [\"year\", \"month\", \"day\"][i];\n\t            if (!thedate[part]) {\n\t                break;\n\t            }\n\t            slicelen += 1;\n\t            thedate[\"date-parts\"][0].push(thedate[part]);\n\t            delete thedate[part];\n\t        }\n\t        thedate[\"date-parts\"].push([]);\n\t        for (var i=0, ilen=slicelen; i<ilen; i++) {\n\t            part = [\"year_end\", \"month_end\", \"day_end\"][i];\n\t            if (!thedate[part]) {\n\t                break;\n\t            }\n\t            thedate[\"date-parts\"][1].push(thedate[part]);\n\t            delete thedate[part];\n\t        }\n\t        if (thedate[\"date-parts\"][0].length !== thedate[\"date-parts\"][1].length) {\n\t            thedate[\"date-parts\"].pop();\n\t        }\n\t        return thedate;\n\t    };\n\t    this.convertDateObjectToString = function(thedate) {\n\t        var ret = [];\n\t        for (var i = 0, ilen = 3; i < ilen; i += 1) {\n\t            if (thedate[DATE_PARTS_ALL[i]]) {\n\t                ret.push(thedate[DATE_PARTS_ALL[i]]);\n\t            } else {\n\t                break;\n\t            }\n\t        }\n\t        return ret.join(\"-\");\n\t    }\n\t    this._parseNumericDate = function (ret, delim, suff, txt) {\n\t        if (!suff) suff = \"\";\n\t        var lst = txt.split(delim);\n\t        for (var i=0, ilen=lst.length; i<ilen; i++) {\n\t            if (lst[i].length === 4) {\n\t                ret[(\"year\" + suff)] = lst[i].replace(/^0*/, \"\");\n\t                if (!i) {\n\t                    lst = lst.slice(1);\n\t                } else {\n\t                    lst = lst.slice(0, i);\n\t                }\n\t                break;\n\t            }\n\t        }\n\t        for (var i=0,ilen=lst.length; i<ilen; i++) {\n\t            lst[i] = parseInt(lst[i], 10);\n\t        }\n\t        if (lst.length === 1 || (lst.length === 2 && !lst[1])) {\n\t            ret[(\"month\" + suff)] = \"\" + lst[0];\n\t        } else if (lst.length === 2) {\n\t            if (lst[this.monthGuess] > 12) {\n\t                ret[(\"month\" + suff)] = \"\" + lst[this.dayGuess];\n\t                ret[(\"day\" + suff)] = \"\" + lst[this.monthGuess];\n\t            } else {\n\t                ret[(\"month\" + suff)] = \"\" + lst[this.monthGuess];\n\t                ret[(\"day\" + suff)] = \"\" + lst[this.dayGuess];\n\t            }\n\t        }\n\t    };\n\t    this.parseDateToObject = function (txt) {\n\t        var orig = txt;\n\t        var slashPos = -1;\n\t        var dashPos = -1;\n\t        var yearIsNegative = false;\n\t        var lst;\n\t        if (txt) {\n\t            if (txt.slice(0, 1) === \"-\") {\n\t                yearIsNegative = true;\n\t                txt = txt.slice(1);\n\t            }\n\t            if (txt.match(/^[0-9]{1,3}$/)) {\n\t                while (txt.length < 4) {\n\t                    txt = \"0\" + txt;\n\t                }\n\t            }\n\t            txt = \"\" + txt;\n\t            txt = txt.replace(/\\s*[0-9]{2}:[0-9]{2}(?::[0-9]+)/,\"\");\n\t            var m = txt.match(kanjiMonthDay);\n\t            if (m) {\n\t                txt = txt.replace(/\\s+/g, \"\");\n\t                txt = txt.replace(kanjiYear, \"\");\n\t                txt = txt.replace(kanjiMonthDay, \"-\");\n\t                txt = txt.replace(kanjiRange, \"/\");\n\t                txt = txt.replace(/\\-\\//g, \"/\");\n\t                txt = txt.replace(/-$/g,\"\");\n\t                var slst = txt.split(epochSplitter);\n\t                lst = [];\n\t                var mm = txt.match(epochMatcher);\n\t                if (mm) {\n\t                    var mmx = [];\n\t                    for (var i=0,ilen=mm.length; i<ilen; i++) {\n\t                        mmx = mmx.concat(mm[i].match(/([^0-9]+)([0-9]+)/).slice(1));\n\t                    }\n\t                    for (var i=0,ilen=slst.length; i<ilen; i++) {\n\t                        lst.push(slst[i]);\n\t                        if (i !== (len - 1)) {\n\t                            var mmpos = (pos * 2);\n\t                            lst.push(mmx[mmpos]);\n\t                            lst.push(mmx[mmpos + 1]);\n\t                        }\n\t                    }\n\t                } else {\n\t                    lst = slst;\n\t                }\n\t                for (var i=1,ilen=lst.length; i<ilen; i+=3) {\n\t                    lst[i + 1] = jiy[lst[i]] + parseInt(lst[i + 1], 10);\n\t                    lst[i] = \"\";\n\t                }\n\t                txt = lst.join(\"\");\n\t                txt = txt.replace(/\\s*-\\s*$/, \"\").replace(/\\s*-\\s*\\//, \"/\");\n\t                txt = txt.replace(/\\.\\s*$/, \"\");\n\t                txt = txt.replace(/\\.(?! )/, \"\");\n\t                slashPos = txt.indexOf(\"/\");\n\t                dashPos = txt.indexOf(\"-\");\n\t            }\n\t        }\n\t        txt = txt.replace(/([A-Za-z])\\./g, \"$1\");\n\t        var number = \"\";\n\t        var note = \"\";\n\t        var thedate = {};\n\t        var rangeDelim;\n\t        var dateDelim;\n\t        if (txt.slice(0, 1) === \"\\\"\" && txt.slice(-1) === \"\\\"\") {\n\t            thedate.literal = txt.slice(1, -1);\n\t            return thedate;\n\t        }\n\t        if (slashPos > -1 && dashPos > -1) {\n\t            var slashCount = txt.split(\"/\");\n\t            if (slashCount.length > 3) {\n\t                rangeDelim = \"-\";\n\t                txt = txt.replace(/\\_/g, \"-\");\n\t                dateDelim = \"/\";\n\t                lst = txt.split(rexSlashDash);\n\t            } else {\n\t                rangeDelim = \"/\";\n\t                txt = txt.replace(/\\_/g, \"/\");\n\t                dateDelim = \"-\";\n\t                lst = txt.split(rexDashSlash);\n\t            }\n\t        } else {\n\t            txt = txt.replace(/\\//g, \"-\");\n\t            txt = txt.replace(/\\_/g, \"-\");\n\t            rangeDelim = \"-\";\n\t            dateDelim = \"-\";\n\t            lst = txt.split(rexDash);\n\t        }\n\t        var ret = [];\n\t        for (var i=0,ilen=lst.length; i<ilen; i++) {\n\t            var m = lst[i].match(/^\\s*([\\-\\/]|[^\\-\\/\\~\\?0-9]+|[\\-~?0-9]+)\\s*$/);\n\t            if (m) {\n\t                ret.push(m[1]);\n\t            }\n\t        }\n\t        var delimPos = ret.indexOf(rangeDelim);\n\t        var delims = [];\n\t        var isRange = false;\n\t        if (delimPos > -1) {\n\t            delims.push([0, delimPos]);\n\t            delims.push([(delimPos + 1), ret.length]);\n\t            isRange = true;\n\t        } else {\n\t            delims.push([0, ret.length]);\n\t        }\n\t        var suff = \"\";\n\t        for (var i=0,ilen=delims.length; i<ilen; i++) {\n\t            delim = delims[i];\n\t            date = ret.slice(delim[0], delim[1]);\n\t            outer: \n\t            for (var j=0,jlen=date.length; j<jlen; j++) {\n\t                var element = date[j];\n\t                if (element.indexOf(dateDelim) > -1) {\n\t                    this._parseNumericDate(thedate, dateDelim, suff, element);\n\t                    continue;\n\t                }\n\t                if (element.match(/[0-9]{4}/)) {\n\t                    thedate[(\"year\" + suff)] = element.replace(/^0*/, \"\");\n\t                    continue;\n\t                }\n\t                for (var k=0,klen=this.monthRexes.length; k<klen; k++) {\n\t                    if (element.toLocaleLowerCase().match(this.monthRexes[k])) {\n\t                        thedate[(\"month\" + suff)] = \"\" + (parseInt(k, 10) + 1);\n\t                        continue outer;\n\t                    }\n\t                }\n\t                if (element.match(/^[0-9]+$/)) {\n\t                    number = element;\n\t                }\n\t                if (element.toLocaleLowerCase().match(/^bc/) && number) {\n\t                    thedate[(\"year\" + suff)] = \"\" + (number * -1);\n\t                    number = \"\";\n\t                    continue;\n\t                }\n\t                if (element.toLocaleLowerCase().match(/^ad/) && number) {\n\t                    thedate[(\"year\" + suff)] = \"\" + number;\n\t                    number = \"\";\n\t                    continue;\n\t                }\n\t                if (element === \"~\" || element === \"?\" || element === \"c\" || element.match(/^cir/)) {\n\t                    thedate.circa = \"\" + 1;\n\t                    continue;\n\t                }\n\t                if (element.toLocaleLowerCase().match(/(?:mic|tri|hil|eas)/) && !thedate[(\"season\" + suff)]) {\n\t                    note = element;\n\t                    continue;\n\t                }\n\t            }\n\t            if (number) {\n\t                thedate[(\"day\" + suff)] = number;\n\t                number = \"\";\n\t            }\n\t            if (note && !thedate[(\"season\" + suff)]) {\n\t                thedate[(\"season\" + suff)] = note;\n\t                note = \"\";\n\t            }\n\t            suff = \"_end\";\n\t        }\n\t        if (isRange) {\n\t            for (var j=0,jlen=CSL.DATE_PARTS_ALL.length; j<jlen; j++) {\n\t                var item = CSL.DATE_PARTS_ALL[j];\n\t                if (thedate[item] && !thedate[(item + \"_end\")]) {\n\t                    thedate[(item + \"_end\")] = thedate[item];\n\t                } else if (!thedate[item] && thedate[(item + \"_end\")]) {\n\t                    thedate[item] = thedate[(item + \"_end\")];\n\t                }\n\t            }\n\t        }\n\t        if (!thedate.year || (thedate.year && thedate.day && !thedate.month)) {\n\t            thedate = { \"literal\": orig };\n\t        }\n\t        var parts = [\"year\", \"month\", \"day\", \"year_end\", \"month_end\", \"day_end\"];\n\t        for (var i=0,ilen=parts.length; i<ilen; i++) {\n\t            var part = parts[i];\n\t            if (\"string\" === typeof thedate[part] && thedate[part].match(/^[0-9]+$/)) {\n\t                thedate[part] = parseInt(thedate[part], 10);\n\t            }\n\t        }\n\t        if (yearIsNegative && Object.keys(thedate).indexOf(\"year\") > -1) {\n\t            thedate.year = (thedate.year * -1);\n\t        }\n\t        return thedate;\n\t    };\n\t    this.parseDateToArray = function(txt) {\n\t        return this.convertDateObjectToArray(this.parseDateToObject(txt));            \n\t    }\n\t    this.parseDateToString = function(txt) {\n\t        return this.convertDateObjectToString(this.parseDateToObject(txt));\n\t    }\n\t    this.parse = function(txt) {\n\t        return this.parseDateToObject(txt);\n\t    }\n\t    this.setOrderMonthDay();\n\t    this.resetDateParserMonths();\n\t};\n\tCSL.Engine = function (sys, style, lang, forceLang) {\n\t    var attrs, langspec, localexml, locale;\n\t    this.processor_version = CSL.PROCESSOR_VERSION;\n\t    this.csl_version = \"1.0\";\n\t    this.sys = sys;\n\t    if (sys.variableWrapper) {\n\t        CSL.VARIABLE_WRAPPER_PREPUNCT_REX = new RegExp('^([' + [\" \"].concat(CSL.SWAPPING_PUNCTUATION).join(\"\") + ']*)(.*)');\n\t    }\n\t    if (CSL.retrieveStyleModule) {\n\t        this.sys.retrieveStyleModule = CSL.retrieveStyleModule;\n\t    }\n\t    if (CSL.getAbbreviation) {\n\t        this.sys.getAbbreviation = CSL.getAbbreviation;\n\t    }\n\t    if (this.sys.stringCompare) {\n\t        CSL.stringCompare = this.sys.stringCompare;\n\t    }\n\t    this.sys.AbbreviationSegments = CSL.AbbreviationSegments;\n\t    this.parallel = new CSL.Parallel(this);\n\t    this.transform = new CSL.Transform(this);\n\t    this.setParseNames = function (val) {\n\t        this.opt['parse-names'] = val;\n\t    };\n\t    this.opt = new CSL.Engine.Opt();\n\t    this.tmp = new CSL.Engine.Tmp();\n\t    this.build = new CSL.Engine.Build();\n\t    this.fun = new CSL.Engine.Fun(this);\n\t    this.configure = new CSL.Engine.Configure();\n\t    this.citation_sort = new CSL.Engine.CitationSort();\n\t    this.bibliography_sort = new CSL.Engine.BibliographySort();\n\t    this.citation = new CSL.Engine.Citation(this);\n\t    this.bibliography = new CSL.Engine.Bibliography();\n\t    this.output = new CSL.Output.Queue(this);\n\t    this.dateput = new CSL.Output.Queue(this);\n\t    this.cslXml = CSL.setupXml(style);\n\t    if (this.opt.development_extensions.csl_reverse_lookup_support || this.sys.csl_reverse_lookup_support) {\n\t        this.build.cslNodeId = 0;\n\t        this.setCslNodeIds = function(myxml, nodename) {\n\t            var children = this.cslXml.children(myxml);\n\t            this.cslXml.setAttribute(myxml, 'cslid', this.build.cslNodeId);\n\t            this.opt.nodenames.push(nodename);\n\t            this.build.cslNodeId += 1;\n\t            for (var i = 0, ilen = this.cslXml.numberofnodes(children); i < ilen; i += 1) {\n\t                nodename = this.cslXml.nodename(children[i]);\n\t                if (nodename) {\n\t                    this.setCslNodeIds(children[i], nodename);\n\t                }\n\t            }\n\t        };\n\t        this.setCslNodeIds(this.cslXml.dataObj, \"style\");\n\t    }\n\t    this.cslXml.addMissingNameNodes(this.cslXml.dataObj);\n\t    this.cslXml.addInstitutionNodes(this.cslXml.dataObj);\n\t    this.cslXml.insertPublisherAndPlace(this.cslXml.dataObj);\n\t    this.cslXml.flagDateMacros(this.cslXml.dataObj);\n\t    attrs = this.cslXml.attributes(this.cslXml.dataObj);\n\t    if (\"undefined\" === typeof attrs[\"@sort-separator\"]) {\n\t        this.cslXml.setAttribute(this.cslXml.dataObj, \"sort-separator\", \", \");\n\t    }\n\t    this.opt[\"initialize-with-hyphen\"] = true;\n\t    this.setStyleAttributes();\n\t    this.opt.xclass = this.cslXml.getAttributeValue(this.cslXml.dataObj, \"class\");\n\t    this.opt[\"class\"] = this.opt.xclass;\n\t    this.opt.styleID = this.cslXml.getStyleId(this.cslXml.dataObj);\n\t    if (CSL.setSuppressedJurisdictions) {\n\t        CSL.setSuppressedJurisdictions(this.opt.styleID, this.opt.suppressedJurisdictions);\n\t    }\n\t    this.opt.styleName = this.cslXml.getStyleId(this.cslXml.dataObj, true);\n\t    if (this.opt.version.slice(0,4) === \"1.1m\") {\n\t        this.opt.development_extensions.static_statute_locator = true;\n\t        this.opt.development_extensions.handle_parallel_articles = true;\n\t        this.opt.development_extensions.main_title_from_short_title = true;\n\t        this.opt.development_extensions.rtl_support = true;\n\t        this.opt.development_extensions.expect_and_symbol_form = true;\n\t        this.opt.development_extensions.require_explicit_legal_case_title_short = true;\n\t        this.opt.development_extensions.force_jurisdiction = true;\n\t    }\n\t    if (lang) {\n\t        lang = lang.replace(\"_\", \"-\");\n\t        lang = CSL.normalizeLocaleStr(lang);\n\t    }\n\t    if (this.opt[\"default-locale\"][0]) {\n\t        this.opt[\"default-locale\"][0] = this.opt[\"default-locale\"][0].replace(\"_\", \"-\");\n\t        this.opt[\"default-locale\"][0] = CSL.normalizeLocaleStr(this.opt[\"default-locale\"][0]);\n\t    }\n\t    if (lang && forceLang) {\n\t        this.opt[\"default-locale\"] = [lang];\n\t    }\n\t    if (lang && !forceLang && this.opt[\"default-locale\"][0]) {\n\t        lang = this.opt[\"default-locale\"][0];\n\t    }\n\t    if (this.opt[\"default-locale\"].length === 0) {\n\t        if (!lang) {\n\t            lang = \"en-US\";\n\t        }\n\t        this.opt[\"default-locale\"].push(\"en-US\");\n\t    }\n\t    if (!lang) {\n\t        lang = this.opt[\"default-locale\"][0];\n\t    }\n\t    langspec = CSL.localeResolve(lang);\n\t    this.opt.lang = langspec.best;\n\t    this.opt[\"default-locale\"][0] = langspec.best;\n\t    this.locale = {};\n\t    if (!this.opt[\"default-locale-sort\"]) {\n\t        this.opt[\"default-locale-sort\"] = this.opt[\"default-locale\"][0];\n\t    }\n\t    if ('dale|'.localeCompare('daleb', this.opt[\"default-locale-sort\"]) > -1) {\n\t        this.opt.sort_sep = \"@\";\n\t    } else {\n\t        this.opt.sort_sep = \"|\";\n\t    }\n\t    this.localeConfigure(langspec);\n\t    function makeRegExp(lst) {\n\t        var lst = lst.slice();\n\t        var ret = new RegExp( \"(?:(?:[?!:]*\\\\s+|-|^)(?:\" + lst.join(\"|\") + \")(?=[!?:]*\\\\s+|-|$))\", \"g\");\n\t        return ret;\n\t    }\n\t    this.locale[this.opt.lang].opts[\"skip-words-regexp\"] = makeRegExp(this.locale[this.opt.lang].opts[\"skip-words\"]);\n\t    this.output.adjust = new CSL.Output.Queue.adjust(this.getOpt('punctuation-in-quote'));\n\t    this.registry = new CSL.Registry(this);\n\t    this.macros = {};\n\t    this.build.area = \"citation\";\n\t    var area_nodes = this.cslXml.getNodesByName(this.cslXml.dataObj, this.build.area);\n\t    this.buildTokenLists(area_nodes, this[this.build.area].tokens);\n\t    this.build.area = \"bibliography\";\n\t    var area_nodes = this.cslXml.getNodesByName(this.cslXml.dataObj, this.build.area);\n\t    this.buildTokenLists(area_nodes, this[this.build.area].tokens);\n\t    this.juris = {};\n\t    this.configureTokenLists();\n\t    this.disambiguate = new CSL.Disambiguation(this);\n\t    this.splice_delimiter = false;\n\t    this.fun.dateparser = CSL.DateParser;\n\t    this.fun.flipflopper = new CSL.Util.FlipFlopper(this);\n\t    this.setCloseQuotesArray();\n\t    this.fun.ordinalizer.init(this);\n\t    this.fun.long_ordinalizer.init(this);\n\t    this.fun.page_mangler = CSL.Util.PageRangeMangler.getFunction(this, \"page\");\n\t    this.fun.year_mangler = CSL.Util.PageRangeMangler.getFunction(this, \"year\");\n\t    this.setOutputFormat(\"html\");\n\t};\n\tCSL.Engine.prototype.setCloseQuotesArray = function () {\n\t    var ret;\n\t    ret = [];\n\t    ret.push(this.getTerm(\"close-quote\"));\n\t    ret.push(this.getTerm(\"close-inner-quote\"));\n\t    ret.push('\"');\n\t    ret.push(\"'\");\n\t    this.opt.close_quotes_array = ret;\n\t};\n\tCSL.makeBuilder = function (me, target) {\n\t    function enterFunc (node) {\n\t        CSL.XmlToToken.call(node, me, CSL.START, target);\n\t    };\n\t    function leaveFunc (node) {\n\t        CSL.XmlToToken.call(node, me, CSL.END, target);\n\t    };\n\t    function singletonFunc (node) {\n\t        CSL.XmlToToken.call(node, me, CSL.SINGLETON, target);\n\t    };\n\t    function buildStyle (node) {\n\t        var starttag, origparent;\n\t        if (me.cslXml.numberofnodes(me.cslXml.children(node))) {\n\t            origparent = node;\n\t            enterFunc(origparent);\n\t            for (var i=0;i<me.cslXml.numberofnodes(me.cslXml.children(origparent));i+=1) {\n\t                node = me.cslXml.children(origparent)[i];\n\t                if (me.cslXml.nodename(node) === null) {\n\t                    continue;\n\t                }\n\t                if (me.cslXml.nodename(node) === \"date\") {\n\t                    CSL.Util.fixDateNode.call(me, origparent, i, node)\n\t                    node = me.cslXml.children(origparent)[i];\n\t                }\n\t                buildStyle(node, enterFunc, leaveFunc, singletonFunc);\n\t            }\n\t            leaveFunc(origparent);\n\t        } else {\n\t            singletonFunc(node);\n\t        }\n\t    }\n\t    return buildStyle;\n\t};\n\tCSL.Engine.prototype.buildTokenLists = function (area_nodes, target) {\n\t    if (!this.cslXml.getNodeValue(area_nodes)) return;\n\t    var builder = CSL.makeBuilder(this, target);\n\t    var mynode;\n\t    if (\"undefined\" === typeof area_nodes.length) {\n\t        mynode = area_nodes;\n\t    } else {\n\t        mynode = area_nodes[0];\n\t    }\n\t    builder(mynode);\n\t};\n\tCSL.Engine.prototype.setStyleAttributes = function () {\n\t    var dummy, attr, key, attributes, attrname;\n\t    var dummy = {};\n\t    dummy.name = this.cslXml.nodename(this.cslXml.dataObj);\n\t    attributes = this.cslXml.attributes(this.cslXml.dataObj);\n\t    for (attrname in attributes) {\n\t        if (attributes.hasOwnProperty(attrname)) {\n\t            CSL.Attributes[attrname].call(dummy, this, attributes[attrname]);\n\t        }\n\t    }\n\t};\n\tCSL.Engine.prototype.getTerm = function (term, form, plural, gender, mode, forceDefaultLocale) {\n\t    if (term && term.match(/[A-Z]/) && term === term.toUpperCase()) {\n\t        CSL.debug(\"Warning: term key is in uppercase form: \"+term);\n\t        term = term.toLowerCase();\n\t    }\n\t    var lang;\n\t    if (forceDefaultLocale) {\n\t        lang = this.opt[\"default-locale\"][0];\n\t    } else {\n\t        lang = this.opt.lang;\n\t    }\n\t    var ret = CSL.Engine.getField(CSL.LOOSE, this.locale[lang].terms, term, form, plural, gender);\n\t    if (!ret && term === \"range-delimiter\") {\n\t        ret = \"\\u2013\";\n\t    }\n\t    if (typeof ret === \"undefined\") {\n\t        if (mode === CSL.STRICT) {\n\t            throw \"Error in getTerm: term \\\"\" + term + \"\\\" does not exist.\";\n\t        } else if (mode === CSL.TOLERANT) {\n\t            ret = \"\";\n\t        }\n\t    }\n\t    if (ret) {\n\t        this.tmp.cite_renders_content = true;\n\t    }\n\t    return ret;\n\t};\n\tCSL.Engine.prototype.getDate = function (form, forceDefaultLocale) {\n\t    var lang;\n\t    if (forceDefaultLocale) {\n\t        lang = this.opt[\"default-locale\"];\n\t    } else {\n\t        lang = this.opt.lang;\n\t    }\n\t    if (this.locale[lang].dates[form]) {\n\t        return this.locale[lang].dates[form];\n\t    } else {\n\t        return false;\n\t    }\n\t};\n\tCSL.Engine.prototype.getOpt = function (arg) {\n\t    if (\"undefined\" !== typeof this.locale[this.opt.lang].opts[arg]) {\n\t        return this.locale[this.opt.lang].opts[arg];\n\t    } else {\n\t        return false;\n\t    }\n\t};\n\tCSL.Engine.prototype.getVariable = function (Item, varname, form, plural) {\n\t    return CSL.Engine.getField(CSL.LOOSE, Item, varname, form, plural);\n\t};\n\tCSL.Engine.prototype.getDateNum = function (ItemField, partname) {\n\t    if (\"undefined\" === typeof ItemField) {\n\t        return 0;\n\t    } else {\n\t        return ItemField[partname];\n\t    }\n\t};\n\tCSL.Engine.getField = function (mode, hash, term, form, plural, gender) {\n\t    var ret, forms, f, pos, len, hashterm;\n\t    ret = \"\";\n\t    if (\"undefined\" === typeof hash[term]) {\n\t        if (mode === CSL.STRICT) {\n\t            throw \"Error in getField: term \\\"\" + term + \"\\\" does not exist.\";\n\t        } else {\n\t            return undefined;\n\t        }\n\t    }\n\t    if (gender && hash[term][gender]) {\n\t        hashterm = hash[term][gender];\n\t    } else {\n\t        hashterm = hash[term];\n\t    }\n\t    forms = [];\n\t    if (form === \"symbol\") {\n\t        forms = [\"symbol\", \"short\"];\n\t    } else if (form === \"verb-short\") {\n\t        forms = [\"verb-short\", \"verb\"];\n\t    } else if (form !== \"long\") {\n\t        forms = [form];\n\t    }\n\t    forms = forms.concat([\"long\"]);\n\t    len = forms.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        f = forms[pos];\n\t        if (\"string\" === typeof hashterm || \"number\" === typeof hashterm) {\n\t            ret = hashterm;\n\t        } else if (\"undefined\" !== typeof hashterm[f]) {\n\t            if (\"string\" === typeof hashterm[f] || \"number\" === typeof hashterm[f]) {\n\t                ret = hashterm[f];\n\t            } else {\n\t                if (\"number\" === typeof plural) {\n\t                    ret = hashterm[f][plural];\n\t                } else {\n\t                    ret = hashterm[f][0];\n\t                }\n\t            }\n\t            break;\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.Engine.prototype.configureTokenLists = function () {\n\t    var dateparts_master, area, pos, token, dateparts, part, ppos, pppos, len, llen, lllen;\n\t    len = CSL.AREAS.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        area = CSL.AREAS[pos];\n\t        var tokens = this[area].tokens;\n\t        this.configureTokenList(tokens);\n\t    }\n\t    this.version = CSL.version;\n\t    return this.state;\n\t};\n\tCSL.Engine.prototype.configureTokenList = function (tokens) {\n\t    var dateparts_master, area, pos, token, dateparts, part, ppos, pppos, len, llen, lllen;\n\t    dateparts_master = [\"year\", \"month\", \"day\"];\n\t    llen = tokens.length - 1;\n\t    for (ppos = llen; ppos > -1; ppos += -1) {\n\t        token = tokens[ppos];\n\t        if (\"date\" === token.name && CSL.END === token.tokentype) {\n\t            dateparts = [];\n\t        }\n\t        if (\"date-part\" === token.name && token.strings.name) {\n\t            lllen = dateparts_master.length;\n\t            for (pppos = 0; pppos < lllen; pppos += 1) {\n\t                part = dateparts_master[pppos];\n\t                if (part === token.strings.name) {\n\t                    dateparts.push(token.strings.name);\n\t                }\n\t            }\n\t        }\n\t        if (\"date\" === token.name && CSL.START === token.tokentype) {\n\t            dateparts.reverse();\n\t            token.dateparts = dateparts;\n\t        }\n\t        token.next = (ppos + 1);\n\t        if (token.name && CSL.Node[token.name].configure) {\n\t            CSL.Node[token.name].configure.call(token, this, ppos);\n\t        }\n\t    }\n\t}\n\tCSL.Engine.prototype.retrieveItems = function (ids) {\n\t    var ret, pos, len;\n\t    ret = [];\n\t    for (var i = 0, ilen = ids.length; i < ilen; i += 1) {\n\t        ret.push(this.retrieveItem(\"\" + ids[i]));\n\t    }\n\t    return ret;\n\t};\n\tCSL.ITERATION = 0;\n\tCSL.Engine.prototype.retrieveItem = function (id) {\n\t    var Item, m, pos, len, mm;\n\t    if (!this.tmp.loadedItemIDs[id]) {\n\t        this.tmp.loadedItemIDs[id] = true;\n\t    } else {\n\t        return this.registry.refhash[id];\n\t    }\n\t    if (this.opt.development_extensions.normalize_lang_keys_to_lowercase &&\n\t        \"boolean\" === typeof this.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n\t        for (var i=0,ilen=this.opt[\"default-locale\"].length; i<ilen; i+=1) {\n\t            this.opt[\"default-locale\"][i] = this.opt[\"default-locale\"][i].toLowerCase();\n\t        }\n\t        for (var i=0,ilen=this.opt[\"locale-translit\"].length; i<ilen; i+=1) {\n\t            this.opt[\"locale-translit\"][i] = this.opt[\"locale-translit\"][i].toLowerCase();\n\t        }\n\t        for (var i=0,ilen=this.opt[\"locale-translat\"].length; i<ilen; i+=1) {\n\t            this.opt[\"locale-translat\"][i] = this.opt[\"locale-translat\"][i].toLowerCase();\n\t        }\n\t        this.opt.development_extensions.normalize_lang_keys_to_lowercase = 100;\n\t    }\n\t    CSL.ITERATION += 1;\n\t    Item = JSON.parse(JSON.stringify(this.sys.retrieveItem(\"\" + id)));\n\t    if (this.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n\t        if (Item.multi) {\n\t            if (Item.multi._keys) {\n\t                for (var field in Item.multi._keys) {\n\t                    for (var key in Item.multi._keys[field]) {\n\t                        if (key !== key.toLowerCase()) {\n\t                            Item.multi._keys[field][key.toLowerCase()] = Item.multi._keys[field][key];\n\t                            delete Item.multi._keys[field][key];\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (Item.multi.main) {\n\t                for (var field in Item.multi.main) {\n\t                    Item.multi.main[field] = Item.multi.main[field].toLowerCase();\n\t                }\n\t            }\n\t        }\n\t        for (var i=0, ilen=CSL.CREATORS.length; i>ilen; i+=1) {\n\t            var ctype = CSL.CREATORS[i];\n\t            if (Item[ctype] && Item[ctype].multi) {\n\t                for (var j=0, jlen=Item[ctype].length; j<jlen; j+=1) {\n\t                    var creator = Item[ctype][j];\n\t                    if (creator.multi) {\n\t                        if (creator.multi._key) {\n\t                            for (var key in creator.multi._key) {\n\t                                if (key !== key.toLowerCase()) {\n\t                                    creator.multi._key[key.toLowerCase()] = creator.multi._key[key];\n\t                                    delete creator.multi._key[key];\n\t                                }\n\t                            }\n\t                        }\n\t                        if (creator.multi.main) {\n\t                            creator.multi.main = creator.multi.main.toLowerCase();\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (this.sys.getLanguageName && Item.language) {\n\t\t\tif (Item.language) {\n\t            Item.language = Item.language.toLowerCase();\n\t\t\t\tvar lst = Item.language.split(\"<\");\n\t            if (lst.length > 0) {\n\t                var languageName = this.sys.getLanguageName(lst[0]);\n\t                if (languageName) {\n\t                    Item[\"language-name\"] = languageName;\n\t                }\n\t            }\n\t\t\t\tif (lst.length === 2) {\n\t\t\t\t\tvar originalLanguage = this.sys.getLanguageName(lst[1]);\n\t\t\t\t\tif (originalLanguage) {\n\t\t\t\t\t\tItem[\"language-name-original\"] = originalLanguage;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t    }\n\t    if (Item.page) {\n\t        Item[\"page-first\"] = Item.page;\n\t        var num = \"\" + Item.page;\n\t        m = num.split(/\\s*(?:&|, |-|\\u2013)\\s*/);\n\t        if (m[0].slice(-1) !== \"\\\\\") {\n\t            Item[\"page-first\"] = m[0];\n\t        }\n\t    }\n\t    if (this.opt.development_extensions.field_hack && Item.note) {\n\t        CSL.parseNoteFieldHacks(Item, false, this.opt.development_extensions.allow_field_hack_date_override);\n\t    }\n\t    for (var i = 1, ilen = CSL.DATE_VARIABLES.length; i < ilen; i += 1) {\n\t        var dateobj = Item[CSL.DATE_VARIABLES[i]];\n\t        if (dateobj) {\n\t            if (this.opt.development_extensions.raw_date_parsing) {\n\t                if (dateobj.raw) {\n\t                    dateobj = this.fun.dateparser.parseDateToObject(dateobj.raw);\n\t                }\n\t            }\n\t            Item[CSL.DATE_VARIABLES[i]] = this.dateParseArray(dateobj);\n\t        }\n\t    }\n\t    if (this.opt.development_extensions.static_statute_locator) {\n\t        if (Item.type && [\"bill\",\"gazette\",\"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) > -1) {\n\t            var varname;\n\t            var elements = [\"type\", \"title\", \"jurisdiction\", \"genre\", \"volume\", \"container-title\"];\n\t            var legislation_id = [];\n\t            for (i = 0, ilen = elements.length; i < ilen; i += 1) {\n\t                varname = elements[i];\n\t\t\t\t\tif (Item[varname]) {\n\t\t\t\t\t\tlegislation_id.push(Item[varname]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t            elements = [\"original-date\", \"issued\"];\n\t\t\t\tfor (i = 0, elements.length; i < ilen; i += 1) {\n\t                varname = elements[i];\n\t\t\t\t\tif (Item[varname] && Item[varname].year) {\n\t\t\t\t\t\tvar value = Item[varname].year;\n\t\t\t\t\t\tlegislation_id.push(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tItem.legislation_id = legislation_id.join(\"::\");\n\t        }\n\t    }\n\t    if (this.opt.development_extensions.force_jurisdiction) {\n\t        if (\"string\" === typeof Item.authority) {\n\t            Item.authority = [\n\t                {\n\t                    literal: Item.authority\n\t                }\n\t            ]\n\t        }\n\t    }\n\t    if (!Item[\"title-short\"]) {\n\t        Item[\"title-short\"] = Item.shortTitle;\n\t    }\n\t    if (this.opt.development_extensions.main_title_from_short_title) {\n\t        CSL.extractTitleAndSubtitle(Item);\n\t    }\n\t    var isLegalType = [\"bill\",\"legal_case\",\"legislation\",\"gazette\",\"regulation\"].indexOf(Item.type) > -1;\n\t    if (this.opt.development_extensions.force_jurisdiction && isLegalType) {\n\t        if (!Item.jurisdiction) {\n\t            Item.jurisdiction = \"us\";\n\t        }\n\t    }\n\t    if (!isLegalType && Item.title && this.sys.getAbbreviation) {\n\t        var noHints = false;\n\t        if (!Item.jurisdiction) {\n\t            noHints = true;\n\t        }\n\t        var jurisdiction = this.transform.loadAbbreviation(Item.jurisdiction, \"title\", Item.title, Item.type, true);\n\t        if (this.transform.abbrevs[jurisdiction].title) {\n\t            if (this.transform.abbrevs[jurisdiction].title[Item.title]) {\n\t                Item[\"title-short\"] = this.transform.abbrevs[jurisdiction].title[Item.title];\n\t            }\n\t        }\n\t    }\n\t    if (!Item[\"container-title-short\"]) {\n\t        Item[\"container-title-short\"] = Item.journalAbbreviation;\n\t    }\n\t    if (Item[\"container-title\"] && this.sys.getAbbreviation) {\n\t        var jurisdiction = this.transform.loadAbbreviation(Item.jurisdiction, \"container-title\", Item[\"container-title\"]);\n\t        if (this.transform.abbrevs[jurisdiction][\"container-title\"]) {\n\t            if (this.transform.abbrevs[jurisdiction][\"container-title\"][Item[\"container-title\"]]) {\n\t                Item[\"container-title-short\"] = this.transform.abbrevs[jurisdiction][\"container-title\"][Item[\"container-title\"]];\n\t            }\n\t        }\n\t    }\n\t    this.registry.refhash[id] = Item;\n\t    return Item;\n\t};\n\tCSL.Engine.prototype.setOpt = function (token, name, value) {\n\t    if (token.name === \"style\" || token.name === \"cslstyle\") {\n\t        this.opt.inheritedAttributes[name] = value;\n\t        this.citation.opt.inheritedAttributes[name] = value;\n\t        this.bibliography.opt.inheritedAttributes[name] = value;\n\t    } else if ([\"citation\", \"bibliography\"].indexOf(token.name) > -1) {\n\t        this[token.name].opt.inheritedAttributes[name] = value;\n\t    } else {\n\t        token.strings[name] = value;\n\t    }\n\t};\n\tCSL.Engine.prototype.inheritOpt = function (token, attrname, parentname, defaultValue) {\n\t    if (\"undefined\" !== typeof token.strings[attrname]) {\n\t        return token.strings[attrname];\n\t    } else {\n\t        var parentValue = this[this.tmp.root].opt.inheritedAttributes[parentname ? parentname : attrname];\n\t        if (\"undefined\" !== typeof parentValue) {\n\t            return parentValue;\n\t        } else {\n\t            return defaultValue;\n\t        }\n\t    }\n\t};\n\tCSL.Engine.prototype.remapSectionVariable = function (inputList) {\n\t    for (var i = 0, ilen = inputList.length; i < ilen; i += 1) {\n\t        var Item = inputList[i][0];\n\t        var item = inputList[i][1];\n\t        if ([\"bill\",\"gazette\",\"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) > -1) {\n\t            if (item.locator) {\n\t                item.locator = item.locator.trim();\n\t                var m = item.locator.match(CSL.STATUTE_SUBDIV_PLAIN_REGEX);\n\t                if (!m) {\n\t                    if (item.label) {\n\t                        item.locator = CSL.STATUTE_SUBDIV_STRINGS_REVERSE[item.label] + \" \" + item.locator;\n\t                    } else {\n\t                        item.locator = \"p. \" + item.locator;\n\t                    }\n\t                }\n\t            }\n\t            var sectionMasterLabel = null;\n\t            if (Item.section) {\n\t                Item.section = Item.section.trim();\n\t                var m = Item.section.match(CSL.STATUTE_SUBDIV_PLAIN_REGEX);\n\t                if (!m) {\n\t                    Item.section = \"sec. \" + Item.section;\n\t                    sectionMasterLabel = \"sec.\";\n\t                } else {\n\t                    sectionMasterLabel = m[0].trim();\n\t                }\n\t            }\n\t            if (Item.section) {\n\t                if (!item.locator) {\n\t                    item.locator = Item.section;\n\t                } else {\n\t                    var m = item.locator.match(/^([^ ]*)\\s*(.*)/);\n\t                    var space = \" \";\n\t                    if (m) {\n\t                        if (m[1] === \"p.\" && sectionMasterLabel !== \"p.\") {\n\t                            item.locator = m[2];\n\t                        }\n\t                        if ([\"[\", \"(\", \".\", \",\", \";\", \":\", \"?\"].indexOf(item.locator.slice(0, 1)) > -1) {\n\t                            space = \"\";\n\t                        }\n\t                    } else {\n\t                       space = \"\"; \n\t                    }\n\t                    item.locator = Item.section + space + item.locator;\n\t                }\n\t            }\n\t            item.label = \"\";\n\t        }\n\t    }\n\t}\n\tCSL.Engine.prototype.setNumberLabels = function (Item) {\n\t     if (Item.number\n\t        && [\"bill\", \"gazette\", \"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) > -1\n\t        && this.opt.development_extensions.static_statute_locator\n\t        && !this.tmp.shadow_numbers[\"number\"]) {\n\t        this.tmp.shadow_numbers[\"number\"] = {};\n\t        this.tmp.shadow_numbers[\"number\"].values = [];\n\t        this.tmp.shadow_numbers[\"number\"].plural = 0;\n\t        this.tmp.shadow_numbers[\"number\"].numeric = false;\n\t        this.tmp.shadow_numbers[\"number\"].label = false;\n\t        var value = \"\" + Item.number;\n\t        value = value.split(\"\\\\\").join(\"\");\n\t        var firstword = value.split(/\\s+/)[0];\n\t        var firstlabel = CSL.STATUTE_SUBDIV_STRINGS[firstword];\n\t        if (firstlabel) {\n\t            var m = value.match(CSL.STATUTE_SUBDIV_GROUPED_REGEX);\n\t            var splt = value.split(CSL.STATUTE_SUBDIV_PLAIN_REGEX);\n\t            if (splt.length > 1) {\n\t                var lst = [];\n\t                for (var j=1, jlen=splt.length; j < jlen; j += 1) {\n\t                    var subdiv = m[j - 1].replace(/^\\s*/, \"\");\n\t                    lst.push(splt[j].replace(/\\s*$/, \"\").replace(/^\\s*/, \"\"));\n\t                }\n\t                value = lst.join(\" \");\n\t            } else {\n\t                value = splt[0];\n\t            }\n\t            this.tmp.shadow_numbers[\"number\"].label = firstlabel;\n\t            this.tmp.shadow_numbers[\"number\"].values.push([\"Blob\", value, false]);\n\t            this.tmp.shadow_numbers[\"number\"].numeric = false;\n\t        } else {\n\t            this.tmp.shadow_numbers[\"number\"].values.push([\"Blob\", value, false]);\n\t            this.tmp.shadow_numbers[\"number\"].numeric = true;\n\t        }\n\t    }\n\t}\n\tCSL.substituteOne = function (template) {\n\t    return function (state, list) {\n\t        if (!list) {\n\t            return \"\";\n\t        } else {\n\t            return template.replace(\"%%STRING%%\", list);\n\t        }\n\t    };\n\t};\n\tCSL.substituteTwo = function (template) {\n\t    return function (param) {\n\t        var template2 = template.replace(\"%%PARAM%%\", param);\n\t        return function (state, list) {\n\t            if (!list) {\n\t                return \"\";\n\t            } else {\n\t                return template2.replace(\"%%STRING%%\", list);\n\t            }\n\t        };\n\t    };\n\t};\n\tCSL.Mode = function (mode) {\n\t    var decorations, params, param, func, val, args;\n\t    decorations = {};\n\t    params = CSL.Output.Formats[mode];\n\t    for (param in params) {\n\t        if (true) {\n\t            if (\"@\" !== param.slice(0, 1)) {\n\t                decorations[param] = params[param];\n\t                continue;\n\t            }\n\t            func = false;\n\t            val = params[param];\n\t            args = param.split('/');\n\t            if (typeof val === \"string\" && val.indexOf(\"%%STRING%%\") > -1)  {\n\t                if (val.indexOf(\"%%PARAM%%\") > -1) {\n\t                    func = CSL.substituteTwo(val);\n\t                } else {\n\t                    func = CSL.substituteOne(val);\n\t                }\n\t            } else if (typeof val === \"boolean\" && !val) {\n\t                func = CSL.Output.Formatters.passthrough;\n\t            } else if (typeof val === \"function\") {\n\t                func = val;\n\t            } else {\n\t                throw \"CSL.Compiler: Bad \" + mode + \" config entry for \" + param + \": \" + val;\n\t            }\n\t            if (args.length === 1) {\n\t                decorations[args[0]] = func;\n\t            } else if (args.length === 2) {\n\t                if (!decorations[args[0]]) {\n\t                    decorations[args[0]] = {};\n\t                }\n\t                decorations[args[0]][args[1]] = func;\n\t            }\n\t        }\n\t    }\n\t    return decorations;\n\t};\n\tCSL.setDecorations = function (state, attributes) {\n\t    var ret, key, pos;\n\t    ret = [];\n\t    for (pos in CSL.FORMAT_KEY_SEQUENCE) {\n\t        if (true) {\n\t            key = CSL.FORMAT_KEY_SEQUENCE[pos];\n\t            if (attributes[key]) {\n\t                ret.push([key, attributes[key]]);\n\t                delete attributes[key];\n\t            }\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.Doppeler = function(rexStr, stringMangler) {\n\t    var mx, lst, len, pos, m, buf1, buf2, idx, ret, myret;\n\t    this.split = split;\n\t    this.join = join;\n\t    var matchRex = new RegExp(\"(\" + rexStr + \")\", \"g\");\n\t    var splitRex = new RegExp(rexStr, \"g\");\n\t    function split(str) {\n\t        if (stringMangler) {\n\t            str = stringMangler(str);\n\t        }\n\t        var match = str.match(matchRex);\n\t        if (!match) {\n\t            return {\n\t                tags: [],\n\t                strings: [str]\n\t            };\n\t        }\n\t        var split = str.split(splitRex);\n\t        return {\n\t            tags: match,\n\t            strings: split,\n\t            origStrings: split.slice()\n\t        }\n\t    }\n\t    function join(obj) {\n\t        var lst = obj.strings.slice(-1);\n\t        for (var i=obj.tags.length-1; i>-1; i--) {\n\t            lst.push(obj.tags[i]);\n\t            lst.push(obj.strings[i]);\n\t        }\n\t        lst.reverse();\n\t        return lst.join(\"\");\n\t    }\n\t}\n\tCSL.Engine.prototype.normalDecorIsOrphan = function (blob, params) {\n\t    if (params[1] === \"normal\") {\n\t        var use_param = false;\n\t        var all_the_decor;\n\t        if (this.tmp.area === \"citation\") {\n\t            all_the_decor = [this.citation.opt.layout_decorations].concat(blob.alldecor);\n\t        } else {\n\t            all_the_decor = blob.alldecor;\n\t        }\n\t        for (var k = all_the_decor.length - 1; k > -1; k += -1) {\n\t            for (var n = all_the_decor[k].length - 1; n > -1; n += -1) {\n\t                if (all_the_decor[k][n][0] === params[0]) {\n\t                    if (all_the_decor[k][n][1] !== \"normal\") {\n\t                        use_param = true;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (!use_param) {\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t};\n\tCSL.getJurisdictionNameAndSuppress = function(state, jurisdictionID, jurisdictionName) {\n\t    var ret = null;\n\t    if (!jurisdictionName) {\n\t        jurisdictionName = state.sys.getHumanForm(jurisdictionID);\n\t    }\n\t    if (!jurisdictionName) {\n\t        ret = jurisdictionID;\n\t    } else {\n\t        var code = jurisdictionID.split(\":\");\n\t        var name = jurisdictionName.split(\"|\");\n\t        var valid = false;\n\t        if (code.length === 1 && name.length === 2) {\n\t            valid = true;\n\t        } else if (code.length > 1 && name.length === code.length) {\n\t            valid = true;\n\t        }\n\t        if (!valid) {\n\t            ret = name.join(\"|\");\n\t        } else {\n\t            var mask = 0;\n\t            var stub;\n\t            for (var i=0,ilen=code.length;i<ilen;i++) {\n\t                stub = code.slice(0, i+1).join(\":\");\n\t                if (state.opt.suppressedJurisdictions[stub]) {\n\t                    mask = (i+1);\n\t                }\n\t            }\n\t            if (mask === 0) {\n\t                if (code.length === 1) {\n\t                    ret = name[0];\n\t                } else {\n\t                    ret = name.join(\"|\");\n\t                }\n\t            } else if (mask === 1) {\n\t                if (code.length === 1) {\n\t                    ret = \"\";\n\t                } else {\n\t                    ret = name.slice(mask).join(\"|\");\n\t                }\n\t            } else {\n\t                ret = name.slice(mask).join(\"|\");\n\t            }\n\t        }\n\t    }\n\t    return ret;\n\t}\n\tCSL.Engine.prototype.getCitationLabel = function (Item) {\n\t    var label = \"\";\n\t    var params = this.getTrigraphParams();\n\t    var config = params[0];\n\t    var myname = this.getTerm(\"reference\", \"short\", 0);\n\t    if (\"undefined\" === typeof myname) {\n\t        myname = \"reference\";\n\t    }\n\t    myname = myname.replace(\".\", \"\");\n\t    myname = myname.slice(0, 1).toUpperCase() + myname.slice(1);\n\t    for (var i = 0, ilen = CSL.CREATORS.length; i < ilen; i += 1) {\n\t        var n = CSL.CREATORS[i];\n\t        if (Item[n]) {\n\t            var names = Item[n];\n\t            if (names.length > params.length) {\n\t                config = params[params.length - 1];\n\t            } else {\n\t                config = params[names.length - 1];\n\t            }\n\t            for (var j = 0, jlen = names.length; j < jlen; j += 1) {\n\t                if (j === config.authors.length) {\n\t                    break;\n\t                }\n\t                var res = this.nameOutput.getName(names[j], \"locale-translit\", true);\n\t                var name = res.name;\n\t                if (name && name.family) {\n\t                    myname = name.family;\n\t                    myname = myname.replace(/^([ \\'\\u2019a-z]+\\s+)/, \"\");\n\t                } else if (name && name.literal) {\n\t                    myname = name.literal;\n\t                }\n\t                var m = myname.toLowerCase().match(/^(a\\s+|the\\s+|an\\s+)/);\n\t                if (m) {\n\t                    myname = myname.slice(m[1].length);\n\t                }\n\t                myname = myname.replace(CSL.ROMANESQUE_NOT_REGEXP, \"\");\n\t                if (!myname) {\n\t                    break;\n\t                }\n\t                myname = myname.slice(0, config.authors[j]);\n\t                if (myname.length > 1) {\n\t                    myname = myname.slice(0, 1).toUpperCase() + myname.slice(1).toLowerCase();\n\t                } else if (myname.length === 1) {\n\t                    myname = myname.toUpperCase();\n\t                }\n\t                label += myname;\n\t            }\n\t            break;\n\t        }\n\t    }\n\t    if (!label) {\n\t        if (Item.title) {\n\t            var skipWords = this.locale[this.opt.lang].opts[\"skip-words\"];\n\t            var lst = Item.title.split(/\\s+/);\n\t            for (var i = lst.length - 1; i > -1; i--) {\n\t                if (skipWords.indexOf(lst[i]) > -1) {\n\t                    lst = lst.slice(0, i).concat(lst.slice(i + 1));\n\t                }\n\t            }\n\t            var str = lst.join('');\n\t            str = str.slice(0, params[0].authors[0]);\n\t            if (str.length > 1) {\n\t                str = str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase();\n\t            } else if (str.length === 1) {\n\t                str = str.toUpperCase();\n\t            }\n\t            label = str;\n\t        }\n\t    }\n\t    var year = \"0000\";\n\t    if (Item.issued) {\n\t        if (Item.issued.year) {\n\t            year = \"\" + Item.issued.year;\n\t        }\n\t    }\n\t    year = year.slice((config.year * -1));\n\t    label = label + year;\n\t    return label;\n\t};\n\tCSL.Engine.prototype.getTrigraphParams = function () {\n\t    var params = [];\n\t    var ilst = this.opt.trigraph.split(\":\");\n\t    if (!this.opt.trigraph || this.opt.trigraph.slice(0,1) !== \"A\") {\n\t        throw \"Bad trigraph definition: \"+this.opt.trigraph;\n\t    }\n\t    for (var i = 0, ilen = ilst.length; i < ilen; i += 1) {\n\t        var str = ilst[i];\n\t        var config = {authors:[], year:0};\n\t        for (var j = 0, jlen = str.length; j < jlen; j += 1) {\n\t            switch (str.slice(j,j+1)) {\n\t            case \"A\":\n\t                config.authors.push(1);\n\t                break;\n\t            case \"a\":\n\t                config.authors[config.authors.length - 1] += 1;\n\t                break;\n\t            case \"0\":\n\t                config.year += 1;\n\t                break;\n\t            default:\n\t                throw \"Invalid character in trigraph definition: \"+this.opt.trigraph;\n\t            }\n\t        }\n\t        params.push(config);\n\t    }\n\t    return params;\n\t};\n\tCSL.Engine.prototype.setOutputFormat = function (mode) {\n\t    this.opt.mode = mode;\n\t    this.fun.decorate = CSL.Mode(mode);\n\t    if (!this.output[mode]) {\n\t        this.output[mode] = {};\n\t        this.output[mode].tmp = {};\n\t    }\n\t};\n\tCSL.Engine.prototype.getSortFunc = function () {\n\t    return function (a,b) {\n\t        a = a.split(\"-\");\n\t        b = b.split(\"-\");\n\t        if (a.length < b.length) {\n\t            return 1\n\t        } else if (a.length > b.length) {\n\t            return -1\n\t        } else {\n\t            a = a.slice(-1)[0];\n\t            b = b.slice(-1)[0];\n\t            if (a.length < b.length) {\n\t                return 1;\n\t            } else if (a.length > b.length) {\n\t                return -1;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    };\n\t};\n\tCSL.Engine.prototype.setLangTagsForCslSort = function (tags) {\n\t    var i, ilen;\n\t    if (tags) {\n\t        this.opt['locale-sort'] = [];\n\t        for (i = 0, ilen = tags.length; i < ilen; i += 1) {\n\t            this.opt['locale-sort'].push(tags[i]);\n\t        }\n\t    }\n\t    this.opt['locale-sort'].sort(this.getSortFunc());\n\t};\n\tCSL.Engine.prototype.setLangTagsForCslTransliteration = function (tags) {\n\t    var i, ilen;\n\t    this.opt['locale-translit'] = [];\n\t    if (tags) {\n\t        for (i = 0, ilen = tags.length; i < ilen; i += 1) {\n\t            this.opt['locale-translit'].push(tags[i]);\n\t        }\n\t    }\n\t    this.opt['locale-translit'].sort(this.getSortFunc());\n\t};\n\tCSL.Engine.prototype.setLangTagsForCslTranslation = function (tags) {\n\t    var i, ilen;\n\t    this.opt['locale-translat'] = [];\n\t    if (tags) {\n\t        for (i = 0, ilen = tags.length; i < ilen; i += 1) {\n\t            this.opt['locale-translat'].push(tags[i]);\n\t        }\n\t    }\n\t    this.opt['locale-translat'].sort(this.getSortFunc());\n\t};\n\tCSL.Engine.prototype.setLangPrefsForCites = function (obj, conv) {\n\t    var opt = this.opt['cite-lang-prefs'];\n\t    if (!conv) {\n\t        conv = function (key) {\n\t            return key.toLowerCase();\n\t        };\n\t    }\n\t    var segments = ['Persons', 'Institutions', 'Titles', 'Journals', 'Publishers', 'Places'];\n\t    for (var i = 0, ilen = segments.length; i < ilen; i += 1) {\n\t        var clientSegment = conv(segments[i]);\n\t        var citeprocSegment = segments[i].toLowerCase();\n\t        if (!obj[clientSegment]) {\n\t            continue;\n\t        }\n\t        var supplements = [];\n\t        while (obj[clientSegment].length > 1) {\n\t            supplements.push(obj[clientSegment].pop());\n\t        }\n\t        var sortval = {orig:1,translit:2,translat:3};\n\t        if (supplements.length === 2 && sortval[supplements[0]] < sortval[supplements[1]]) {\n\t            supplements.reverse();\n\t        }\n\t        while (supplements.length) {\n\t            obj[clientSegment].push(supplements.pop());\n\t        }\n\t        var lst = opt[citeprocSegment];\n\t        while (lst.length) {\n\t            lst.pop();\n\t        }\n\t        for (var j = 0, jlen = obj[clientSegment].length; j < jlen; j += 1) {\n\t            lst.push(obj[clientSegment][j]);\n\t        }\n\t    }\n\t};\n\tCSL.Engine.prototype.setLangPrefsForCiteAffixes = function (affixList) {\n\t    if (affixList && affixList.length === 48) {\n\t        var affixes = this.opt.citeAffixes;\n\t        var count = 0;\n\t        var settings = [\"persons\", \"institutions\", \"titles\", \"journals\", \"publishers\", \"places\"];\n\t        var forms = [\"translit\", \"orig\", \"translit\", \"translat\"];\n\t        var value;\n\t        for (var i = 0, ilen = settings.length; i < ilen; i += 1) {\n\t            for (var j = 0, jlen = forms.length; j < jlen; j += 1) {\n\t                value = \"\";\n\t                if ((count % 8) === 4) {\n\t                    if (!affixes[settings[i]][\"locale-\"+forms[j]].prefix\n\t                        && !affixes[settings[i]][\"locale-\"+forms[j]].suffix) {\n\t                        value = affixList[count] ? affixList[count] : \"\";\n\t                        affixes[settings[i]][\"locale-\" + forms[j]].prefix = value;\n\t                        value = affixList[count] ? affixList[count + 1] : \"\";\n\t                        affixes[settings[i]][\"locale-\" + forms[j]].suffix = value;\n\t                    }\n\t                } else {\n\t                    value = affixList[count] ? affixList[count] : \"\";\n\t                    affixes[settings[i]][\"locale-\" + forms[j]].prefix = value;\n\t                    value = affixList[count] ? affixList[count + 1] : \"\";\n\t                    affixes[settings[i]][\"locale-\" + forms[j]].suffix = value;\n\t                }\n\t                count += 2;\n\t            }\n\t        }\n\t        this.opt.citeAffixes = affixes;\n\t    }\n\t};\n\tCSL.Engine.prototype.setAutoVietnameseNamesOption = function (arg) {\n\t    if (arg) {\n\t        this.opt[\"auto-vietnamese-names\"] = true;\n\t    } else {\n\t        this.opt[\"auto-vietnamese-names\"] = false;\n\t    }\n\t};\n\tCSL.Engine.prototype.setAbbreviations = function (arg) {\n\t    if (this.sys.setAbbreviations) {\n\t        this.sys.setAbbreviations(arg);\n\t    }\n\t};\n\tCSL.Engine.prototype.setSuppressTrailingPunctuation = function (arg) {\n\t    this.citation.opt.suppressTrailingPunctuation = !!arg;\n\t};\n\tCSL.Output = {};\n\tCSL.Output.Queue = function (state) {\n\t    this.levelname = [\"top\"];\n\t    this.state = state;\n\t    this.queue = [];\n\t    this.empty = new CSL.Token(\"empty\");\n\t    var tokenstore = {};\n\t    tokenstore.empty = this.empty;\n\t    this.formats = new CSL.Stack(tokenstore);\n\t    this.current = new CSL.Stack(this.queue);\n\t};\n\tCSL.Output.Queue.prototype.pop = function () {\n\t    var drip = this.current.value();\n\t    if (drip.length) {\n\t        return drip.pop();\n\t    } else {\n\t        return drip.blobs.pop();\n\t    }\n\t};\n\tCSL.Output.Queue.prototype.getToken = function (name) {\n\t    var ret = this.formats.value()[name];\n\t    return ret;\n\t};\n\tCSL.Output.Queue.prototype.mergeTokenStrings = function (base, modifier) {\n\t    var base_token, modifier_token, ret, key;\n\t    base_token = this.formats.value()[base];\n\t    modifier_token = this.formats.value()[modifier];\n\t    ret = base_token;\n\t    if (modifier_token) {\n\t        if (!base_token) {\n\t            base_token = new CSL.Token(base, CSL.SINGLETON);\n\t            base_token.decorations = [];\n\t        }\n\t        ret = new CSL.Token(base, CSL.SINGLETON);\n\t        key = \"\";\n\t        for (key in base_token.strings) {\n\t            if (base_token.strings.hasOwnProperty(key)) {\n\t                ret.strings[key] = base_token.strings[key];\n\t            }\n\t        }\n\t        for (key in modifier_token.strings) {\n\t            if (modifier_token.strings.hasOwnProperty(key)) {\n\t                ret.strings[key] = modifier_token.strings[key];\n\t            }\n\t        }\n\t        ret.decorations = base_token.decorations.concat(modifier_token.decorations);\n\t    }\n\t    return ret;\n\t};\n\tCSL.Output.Queue.prototype.addToken = function (name, modifier, token) {\n\t    var newtok, attr;\n\t    newtok = new CSL.Token(\"output\");\n\t    if (\"string\" === typeof token) {\n\t        token = this.formats.value()[token];\n\t    }\n\t    if (token && token.strings) {\n\t        for (attr in token.strings) {\n\t            if (token.strings.hasOwnProperty(attr)) {\n\t                newtok.strings[attr] = token.strings[attr];\n\t            }\n\t        }\n\t        newtok.decorations = token.decorations;\n\t    }\n\t    if (\"string\" === typeof modifier) {\n\t        newtok.strings.delimiter = modifier;\n\t    }\n\t    this.formats.value()[name] = newtok;\n\t};\n\tCSL.Output.Queue.prototype.pushFormats = function (tokenstore) {\n\t    if (!tokenstore) {\n\t        tokenstore = {};\n\t    }\n\t    tokenstore.empty = this.empty;\n\t    this.formats.push(tokenstore);\n\t};\n\tCSL.Output.Queue.prototype.popFormats = function (tokenstore) {\n\t    this.formats.pop();\n\t};\n\tCSL.Output.Queue.prototype.startTag = function (name, token) {\n\t    var tokenstore = {};\n\t    if (this.state.tmp[\"doing-macro-with-date\"] && this.state.tmp.extension) {\n\t        token = this.empty;\n\t        name = \"empty\";\n\t    }\n\t    tokenstore[name] = token;\n\t    this.pushFormats(tokenstore);\n\t    this.openLevel(name);\n\t};\n\tCSL.Output.Queue.prototype.endTag = function (name) {\n\t    this.closeLevel(name);\n\t    this.popFormats();\n\t};\n\tCSL.Output.Queue.prototype.openLevel = function (token, ephemeral) {\n\t    var blob, curr, x, has_ephemeral;\n\t    if (\"object\" === typeof token) {\n\t        blob = new CSL.Blob(undefined, token);\n\t    } else if (\"undefined\" === typeof token) {\n\t        blob = new CSL.Blob(undefined, this.formats.value().empty, \"empty\");\n\t    } else {\n\t        if (!this.formats.value() || !this.formats.value()[token]) {\n\t            throw \"CSL processor error: call to nonexistent format token \\\"\" + token + \"\\\"\";\n\t        }\n\t        blob = new CSL.Blob(undefined, this.formats.value()[token], token);\n\t    }\n\t    curr = this.current.value();\n\t    if (!this.state.tmp.just_looking && this.checkNestedBrace) {\n\t        blob.strings.prefix = this.checkNestedBrace.update(blob.strings.prefix);\n\t    }\n\t    curr.push(blob);\n\t    this.current.push(blob);\n\t};\n\tCSL.Output.Queue.prototype.closeLevel = function (name) {\n\t    if (name && name !== this.current.value().levelname) {\n\t        CSL.error(\"Level mismatch error:  wanted \" + name + \" but found \" + this.current.value().levelname);\n\t    }\n\t    var blob = this.current.pop();\n\t    if (!this.state.tmp.just_looking && this.checkNestedBrace) {\n\t        blob.strings.suffix = this.checkNestedBrace.update(blob.strings.suffix);\n\t    }\n\t};\n\tCSL.Output.Queue.prototype.append = function (str, tokname, notSerious, ignorePredecessor, noStripPeriods) {\n\t    var token, blob, curr;\n\t    var useblob = true;\n\t    if (notSerious) {\n\t        ignorePredecessor = true;\n\t    }\n\t    if (this.state.tmp[\"doing-macro-with-date\"] && !notSerious) {\n\t        if (tokname !== \"macro-with-date\") {\n\t            return false;\n\t        }\n\t        if (tokname === \"macro-with-date\") {\n\t            tokname = \"empty\";\n\t        }\n\t    }\n\t    if (\"undefined\" === typeof str) {\n\t        return false;\n\t    }\n\t    if (\"number\" === typeof str) {\n\t        str = \"\" + str;\n\t    }\n\t    if (!notSerious \n\t        && this.state.tmp.element_trace \n\t        && this.state.tmp.element_trace.value() === \"suppress-me\") {\n\t        return false;\n\t    }\n\t    blob = false;\n\t    if (!tokname) {\n\t        token = this.formats.value().empty;\n\t    } else if (tokname === \"literal\") {\n\t        token = true;\n\t        useblob = false;\n\t    } else if (\"string\" === typeof tokname) {\n\t        token = this.formats.value()[tokname];\n\t    } else {\n\t        token = tokname;\n\t    }\n\t    if (!token) {\n\t        throw \"CSL processor error: unknown format token name: \" + tokname;\n\t    }\n\t    if (token.strings && \"undefined\" === typeof token.strings.delimiter) {\n\t        token.strings.delimiter = \"\";\n\t    }\n\t    if (\"string\" === typeof str && str.length) {\n\t        str = str.replace(/ ([:;?!\\u00bb])/g, \"\\u202f$1\").replace(/\\u00ab /g, \"\\u00ab\\u202f\");\n\t        this.last_char_rendered = str.slice(-1);\n\t        str = str.replace(/\\s+'/g, \" \\'\");\n\t        if (!notSerious) {\n\t            str = str.replace(/^'/g, \" \\'\");\n\t        }\n\t        if (!ignorePredecessor) {\n\t            this.state.tmp.term_predecessor = true;\n\t            this.state.tmp.in_cite_predecessor = true;\n\t        } else if (notSerious) {\n\t            this.state.tmp.term_predecessor_name = true;\n\t        }\n\t    }\n\t    blob = new CSL.Blob(str, token);\n\t    curr = this.current.value();\n\t    if (\"undefined\" === typeof curr && this.current.mystack.length === 0) {\n\t        this.current.mystack.push([]);\n\t        curr = this.current.value();\n\t    }\n\t    if (\"string\" === typeof blob.blobs) {\n\t        if (!ignorePredecessor) {\n\t            this.state.tmp.term_predecessor = true;\n\t            this.state.tmp.in_cite_predecessor = true;\n\t        } else if (notSerious) {\n\t            this.state.tmp.term_predecessor_name = true;\n\t        }\n\t    }\n\t    if (!notSerious) {\n\t        this.state.parallel.AppendBlobPointer(curr);\n\t    }\n\t    if (\"string\" === typeof str) {\n\t        if (\"string\" === typeof blob.blobs && [':', '!', '?', '.', ',', ';'].indexOf(blob.blobs.slice(0, 1)) > -1) {\n\t            blob.strings.prefix = blob.strings.prefix + blob.blobs.slice(0, 1);\n\t            blob.blobs = blob.blobs.slice(1);\n\t        }\n\t        if (blob.strings[\"text-case\"]) {\n\t            blob.blobs = CSL.Output.Formatters[blob.strings[\"text-case\"]](this.state, str);\n\t        }\n\t        if (this.state.tmp.strip_periods && !noStripPeriods) {\n\t            blob.blobs = blob.blobs.replace(/\\.([^a-z]|$)/g, \"$1\");\n\t        }\n\t        for (var i = blob.decorations.length - 1; i > -1; i += -1) {\n\t            if (blob.decorations[i][0] === \"@quotes\" && blob.decorations[i][1] !== \"false\") {\n\t                blob.punctuation_in_quote = this.state.getOpt(\"punctuation-in-quote\");\n\t            }\n\t            if (!blob.blobs.match(CSL.ROMANESQUE_REGEXP)) {\n\t                if (blob.decorations[i][0] === \"@font-style\") {\n\t                    blob.decorations = blob.decorations.slice(0, i).concat(blob.decorations.slice(i + 1));\n\t                }\n\t            }\n\t        }\n\t        curr.push(blob);\n\t        this.state.fun.flipflopper.processTags(blob);\n\t    } else if (useblob) {\n\t        curr.push(blob);\n\t    } else {\n\t        curr.push(str);\n\t    }\n\t    return true;\n\t};\n\tCSL.Output.Queue.prototype.string = function (state, myblobs, blob) {\n\t    var i, ilen, j, jlen, b;\n\t    var txt_esc = CSL.getSafeEscape(this.state);\n\t    var blobs = myblobs.slice();\n\t    var ret = [];\n\t    if (blobs.length === 0) {\n\t        return ret;\n\t    }\n\t    var blob_delimiter = \"\";\n\t    if (blob) {\n\t        blob_delimiter = blob.strings.delimiter;\n\t    } else {\n\t        state.tmp.count_offset_characters = false;\n\t        state.tmp.offset_characters = 0;\n\t    }\n\t    if (blob && blob.new_locale) {\n\t        blob.old_locale = state.opt.lang;\n\t        state.opt.lang = blob.new_locale;\n\t    }\n\t    var blobjr, use_suffix, use_prefix, params;\n\t    for (i = 0, ilen = blobs.length; i < ilen; i += 1) {\n\t        blobjr = blobs[i];\n\t        if (blobjr.strings.first_blob) {\n\t            state.tmp.count_offset_characters = blobjr.strings.first_blob;\n\t        }\n\t        if (\"string\" === typeof blobjr.blobs) {\n\t            if (\"number\" === typeof blobjr.num) {\n\t                ret.push(blobjr);\n\t            } else if (blobjr.blobs) {\n\t                b = txt_esc(blobjr.blobs);\n\t                var blen = b.length;\n\t                if (!state.tmp.suppress_decorations) {\n\t                    for (j = 0, jlen = blobjr.decorations.length; j < jlen; j += 1) {\n\t                        params = blobjr.decorations[j];\n\t                        if (params[0] === \"@showid\") {\n\t                            continue;\n\t                        }\n\t                        if (state.normalDecorIsOrphan(blobjr, params)) {\n\t                            continue;\n\t                        }\n\t                        b = state.fun.decorate[params[0]][params[1]].call(blobjr, state, b, params[2]);\n\t                    }\n\t                }\n\t                if (b && b.length) {\n\t                    b = txt_esc(blobjr.strings.prefix) + b + txt_esc(blobjr.strings.suffix);\n\t                    if ((state.opt.development_extensions.csl_reverse_lookup_support || state.sys.csl_reverse_lookup_support) && !state.tmp.suppress_decorations) {\n\t                        for (j = 0, jlen = blobjr.decorations.length; j < jlen; j += 1) {\n\t                            params = blobjr.decorations[j];\n\t                            if (params[0] === \"@showid\") {\n\t                                b = state.fun.decorate[params[0]][params[1]].call(blobjr, state, b, params[2]);\n\t                            }\n\t                        }\n\t                    }\n\t                    ret.push(b);\n\t                    if (state.tmp.count_offset_characters) {\n\t                        state.tmp.offset_characters += (blen + blobjr.strings.suffix.length + blobjr.strings.prefix.length);\n\t                    }\n\t                }\n\t            }\n\t        } else if (blobjr.blobs.length) {\n\t            var addtoret = state.output.string(state, blobjr.blobs, blobjr);\n\t            if (blob) {\n\t                if (\"string\" !== addtoret && addtoret.length > 1 && blobjr.strings.delimiter) {\n\t                    var numberSeen = false;\n\t                    for (var j=0,jlen=addtoret.length;j<jlen;j++) {\n\t                        if (\"string\" !== typeof addtoret[j]) {\n\t                            numberSeen = true;\n\t                        } else if (numberSeen) {\n\t                            addtoret[j] = (blobjr.strings.delimiter + addtoret[j]);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            ret = ret.concat(addtoret);\n\t        }\n\t        if (blobjr.strings.first_blob) {\n\t            state.registry.registry[blobjr.strings.first_blob].offset = state.tmp.offset_characters;\n\t            state.tmp.count_offset_characters = false;\n\t        }\n\t    }\n\t    for (i=0,ilen=ret.length - 1;i<ilen;i+=1) {\n\t        if (\"number\" === typeof ret[i].num && \"number\" === typeof ret[i+1].num && !ret[i+1].UGLY_DELIMITER_SUPPRESS_HACK) {\n\t            ret[i].strings.suffix = ret[i].strings.suffix + (blob_delimiter ? blob_delimiter : \"\");\n\t            ret[i+1].successor_prefix = \"\";\n\t            ret[i+1].UGLY_DELIMITER_SUPPRESS_HACK = true;\n\t        }\n\t    }\n\t    var span_split = 0;\n\t    for (i = 0, ilen = ret.length; i < ilen; i += 1) {\n\t        if (\"string\" === typeof ret[i]) {\n\t            span_split = (parseInt(i, 10) + 1);\n\t            if (i < ret.length - 1  && \"object\" === typeof ret[i + 1]) {\n\t                if (blob_delimiter && !ret[i + 1].UGLY_DELIMITER_SUPPRESS_HACK) {\n\t                    ret[i] += txt_esc(blob_delimiter);\n\t                }\n\t                ret[i + 1].UGLY_DELIMITER_SUPPRESS_HACK = true;\n\t            }\n\t        }\n\t    }\n\t    if (blob && (blob.decorations.length || blob.strings.suffix)) {\n\t        span_split = ret.length;\n\t    } else if (blob && blob.strings.prefix) {\n\t        for (var i=0,ilen=ret.length;i<ilen;i++) {\n\t            if (\"undefined\" !== typeof ret[i].num) {\n\t                span_split = i;\n\t                if (i === 0) {\n\t                    ret[i].strings.prefix = blob.strings.prefix + ret[i].strings.prefix;\n\t                }\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    var blobs_start = state.output.renderBlobs(ret.slice(0, span_split), blob_delimiter, false, blob);\n\t    if (blobs_start && blob && (blob.decorations.length || blob.strings.suffix || blob.strings.prefix)) {\n\t        if (!state.tmp.suppress_decorations) {\n\t            for (i = 0, ilen = blob.decorations.length; i < ilen; i += 1) {\n\t                params = blob.decorations[i];\n\t                if ([\"@cite\",\"@bibliography\", \"@display\", \"@showid\"].indexOf(params[0]) > -1) {\n\t                    continue;\n\t                }\n\t                if (state.normalDecorIsOrphan(blobjr, params)) {\n\t                    continue;\n\t                }\n\t                if (\"string\" === typeof blobs_start) {\n\t                    blobs_start = state.fun.decorate[params[0]][params[1]].call(blob, state, blobs_start, params[2]);\n\t                }\n\t            }\n\t        }\n\t        b = blobs_start;\n\t        use_suffix = blob.strings.suffix;\n\t        if (b && b.length) {\n\t            use_prefix = blob.strings.prefix;\n\t            b = txt_esc(use_prefix) + b + txt_esc(use_suffix);\n\t            if (state.tmp.count_offset_characters) {\n\t                state.tmp.offset_characters += (use_prefix.length + use_suffix.length);\n\t            }\n\t        }\n\t        blobs_start = b;\n\t        if (!state.tmp.suppress_decorations) {\n\t            for (i = 0, ilen = blob.decorations.length; i < ilen; i += 1) {\n\t                params = blob.decorations[i];\n\t                if ([\"@cite\",\"@bibliography\", \"@display\", \"@showid\"].indexOf(params[0]) === -1) {\n\t                    continue;\n\t                }\n\t                if (\"string\" === typeof blobs_start) {\n\t                    blobs_start = state.fun.decorate[params[0]][params[1]].call(blob, state, blobs_start, params[2]);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    var blobs_end = ret.slice(span_split, ret.length);\n\t    if (!blobs_end.length && blobs_start) {\n\t        ret = [blobs_start];\n\t    } else if (blobs_end.length && !blobs_start) {\n\t        ret = blobs_end;\n\t    } else if (blobs_start && blobs_end.length) {\n\t        ret = [blobs_start].concat(blobs_end);\n\t    }\n\t    if (\"undefined\" === typeof blob) {\n\t        this.queue = [];\n\t        this.current.mystack = [];\n\t        this.current.mystack.push(this.queue);\n\t        if (state.tmp.suppress_decorations) {\n\t            ret = state.output.renderBlobs(ret, undefined, false);\n\t        }\n\t    } else if (\"boolean\" === typeof blob) {\n\t        ret = state.output.renderBlobs(ret, undefined, true);\n\t    }\n\t    if (blob && blob.new_locale) {\n\t        state.opt.lang = blob.old_locale;\n\t    }\n\t    return ret;\n\t};\n\tCSL.Output.Queue.prototype.clearlevel = function () {\n\t    var blob, pos, len;\n\t    blob = this.current.value();\n\t    len = blob.blobs.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        blob.blobs.pop();\n\t    }\n\t};\n\tCSL.Output.Queue.prototype.renderBlobs = function (blobs, delim, in_cite, parent) {\n\t    var state, ret, ret_last_char, use_delim, i, blob, pos, len, ppos, llen, pppos, lllen, res, str, params, txt_esc;\n\t    txt_esc = CSL.getSafeEscape(this.state);\n\t    if (!delim) {\n\t        delim = \"\";\n\t    }\n\t    state = this.state;\n\t    ret = \"\";\n\t    ret_last_char = [];\n\t    use_delim = \"\";\n\t    len = blobs.length;\n\t    if (this.state.tmp.area === \"citation\" && !this.state.tmp.just_looking && len === 1 && typeof blobs[0] === \"object\" && parent) {\n\t        blobs[0].strings.prefix = parent.strings.prefix + blobs[0].strings.prefix;\n\t        blobs[0].strings.suffix = blobs[0].strings.suffix + parent.strings.suffix;\n\t        blobs[0].decorations = blobs[0].decorations.concat(parent.decorations);\n\t        blobs[0].params = parent.params;\n\t        return blobs[0];\n\t    }\n\t    var start = true;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        if (blobs[pos].checkNext) {\n\t            blobs[pos].checkNext(blobs[pos + 1],start);\n\t            start = false;\n\t        } else if (blobs[pos+1] && blobs[pos+1].splice_prefix) {\n\t            start = false;\n\t        } else {\n\t            start = true;\n\t        }\n\t    }\n\t    var doit = true;\n\t    for (pos = blobs.length - 1; pos > 0; pos += -1) {\n\t        if (blobs[pos].checkLast) {\n\t            if (doit && blobs[pos].checkLast(blobs[pos - 1])) {\n\t                doit = false;\n\t            }\n\t        } else {\n\t            doit = true;\n\t        }\n\t    }\n\t    len = blobs.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        blob = blobs[pos];\n\t        if (ret) {\n\t            use_delim = delim;\n\t        }\n\t        if (\"string\" === typeof blob) {\n\t            ret += txt_esc(use_delim);\n\t            ret += blob;\n\t            if (state.tmp.count_offset_characters) {\n\t                state.tmp.offset_characters += (use_delim.length);\n\t            }\n\t        } else if (in_cite) {\n\t            if (ret) {\n\t                ret = [ret, blob];\n\t            } else {\n\t                ret = [blob];\n\t            }\n\t        } else if (blob.status !== CSL.SUPPRESS) {\n\t            if (blob.particle) {\n\t                str = blob.particle + blob.num;\n\t            } else {\n\t                str = blob.formatter.format(blob.num, blob.gender);\n\t            }\n\t            var strlen = str.replace(/<[^>]*>/g, \"\").length;\n\t            this.append(str, \"empty\", true);\n\t            var str_blob = this.pop();\n\t            var count_offset_characters = state.tmp.count_offset_characters;\n\t            str = this.string(state, [str_blob], false);\n\t            state.tmp.count_offset_characters = count_offset_characters;\n\t            if (blob.strings[\"text-case\"]) {\n\t                str = CSL.Output.Formatters[blob.strings[\"text-case\"]](this.state, str);\n\t            }\n\t            if (str && this.state.tmp.strip_periods) {\n\t                str = str.replace(/\\.([^a-z]|$)/g, \"$1\");\n\t            }\n\t            if (!state.tmp.suppress_decorations) {\n\t                llen = blob.decorations.length;\n\t                for (ppos = 0; ppos < llen; ppos += 1) {\n\t                    params = blob.decorations[ppos];\n\t                    if (state.normalDecorIsOrphan(blob, params)) {\n\t                        continue;\n\t                    }\n\t                    str = state.fun.decorate[params[0]][params[1]].call(blob, state, str, params[2]);\n\t                }\n\t            }\n\t            str = txt_esc(blob.strings.prefix) + str + txt_esc(blob.strings.suffix);\n\t            var addme = \"\";\n\t            if (blob.status === CSL.END) {\n\t                addme = txt_esc(blob.range_prefix);\n\t            } else if (blob.status === CSL.SUCCESSOR) {\n\t                addme = txt_esc(blob.successor_prefix);\n\t            } else if (blob.status === CSL.START) {\n\t                if (pos > 0 && !blob.suppress_splice_prefix) {\n\t                    addme = txt_esc(blob.splice_prefix);\n\t                } else {\n\t                    addme = \"\";\n\t                }\n\t            } else if (blob.status === CSL.SEEN) {\n\t                addme = txt_esc(blob.splice_prefix);\n\t            }\n\t            ret += addme;\n\t            ret += str;\n\t            if (state.tmp.count_offset_characters) {\n\t                state.tmp.offset_characters += (addme.length + blob.strings.prefix.length + strlen + blob.strings.suffix.length);\n\t            }\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.Output.Queue.purgeEmptyBlobs = function (parent) {\n\t    if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n\t        return;\n\t    }\n\t    for (var i=parent.blobs.length-1;i>-1;i--) {\n\t        CSL.Output.Queue.purgeEmptyBlobs(parent.blobs[i]);\n\t        var child = parent.blobs[i];\n\t        if (!child || !child.blobs || !child.blobs.length) {\n\t            var buf = [];\n\t            while ((parent.blobs.length-1) > i) {\n\t                buf.push(parent.blobs.pop());\n\t            }\n\t            parent.blobs.pop();\n\t            while (buf.length) {\n\t                parent.blobs.push(buf.pop());\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Output.Queue.adjust = function (punctInQuote) {\n\t    var NO_SWAP_IN = {\n\t        \";\": true,\n\t        \":\": true\n\t    }\n\t    var NO_SWAP_OUT = {\n\t        \".\": true,\n\t        \"!\": true,\n\t        \"?\": true\n\t    }\n\t    this.upward = upward;\n\t    this.leftward = leftward;\n\t    this.downward = downward;\n\t    this.fix = fix;\n\t    var LtoR_MAP = {\n\t        \"!\": {\n\t            \".\": \"!\",\n\t            \"?\": \"!?\",\n\t            \":\": \"!\",\n\t            \",\": \"!,\",\n\t            \";\": \"!;\"\n\t        },\n\t        \"?\": {\n\t            \"!\": \"?!\",\n\t            \".\": \"?\",\n\t            \":\": \"?\",\n\t            \",\": \"?,\",\n\t            \";\": \"?;\"\n\t        },\n\t        \".\": {\n\t            \"!\": \".!\",\n\t            \"?\": \".?\",\n\t            \":\": \".:\",\n\t            \",\": \".,\",\n\t            \";\": \".;\"\n\t        },\n\t        \":\": {\n\t            \"!\": \"!\",\n\t            \"?\": \"?\",\n\t            \".\": \":\",\n\t            \",\": \":,\",\n\t            \";\": \":;\"\n\t        },\n\t        \",\": {\n\t            \"!\": \",!\",\n\t            \"?\": \",?\",\n\t            \":\": \",:\",\n\t            \".\": \",.\",\n\t            \";\": \",;\"\n\t        },\n\t        \";\": {\n\t            \"!\": \"!\",\n\t            \"?\": \"?\",\n\t            \":\": \";\",\n\t            \",\": \";,\",\n\t            \".\": \";\"\n\t        }\n\t    }\n\t    var SWAP_IN = {};\n\t    var SWAP_OUT = {};\n\t    var PUNCT = {};\n\t    var PUNCT_OR_SPACE = {};\n\t    for (var key in LtoR_MAP) {\n\t        PUNCT[key] = true;\n\t        PUNCT_OR_SPACE[key] = true;\n\t        if (!NO_SWAP_IN[key]) {\n\t            SWAP_IN[key] = true;\n\t        }\n\t        if (!NO_SWAP_OUT[key]) {\n\t            SWAP_OUT[key] = true;\n\t        }\n\t    }\n\t    PUNCT_OR_SPACE[\" \"] = true;\n\t    PUNCT_OR_SPACE[\" \"] = true;\n\t    var RtoL_MAP = {};\n\t    for (var key in LtoR_MAP) {\n\t        for (var subkey in LtoR_MAP[key]) {\n\t            if (!RtoL_MAP[subkey]) {\n\t                RtoL_MAP[subkey] = {};\n\t            }\n\t            RtoL_MAP[subkey][key] = LtoR_MAP[key][subkey];\n\t        }\n\t    }\n\t    function blobIsNumber(blob) {\n\t        return (\"number\" === typeof blob.num || (blob.blobs && blob.blobs.length === 1 && \"number\" === typeof blob.blobs[0].num));\n\t    };\n\t    function blobEndsInNumber(blob) {\n\t        if (\"number\" === typeof blob.num) {\n\t            return true;\n\t        }\n\t        if (!blob.blobs || \"object\" !==  typeof blob.blobs) return false;\n\t        if (blobEndsInNumber(blob.blobs[blob.blobs.length-1])) return true;\n\t    }\n\t    function blobHasDecorations(blob,includeQuotes) {\n\t        var ret = false;\n\t        var decorlist = ['@font-style','@font-variant','@font-weight','@text-decoration','@vertical-align'];\n\t        if (includeQuotes) {\n\t            decorlist.push('@quotes');\n\t        }\n\t        if (blob.decorations) {\n\t            for (var i=0,ilen=blob.decorations.length;i<ilen;i++) {\n\t                if (decorlist.indexOf(blob.decorations[i][0]) > -1) {\n\t                    ret = true;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    function blobHasDescendantQuotes(blob) {\n\t        if (blob.decorations) {\n\t            for (var i=0,ilen=blob.decorations.length;i<ilen;i++) {\n\t                if (blob.decorations[i][0] === '@quotes' && blob.decorations[i][1] !== \"false\") {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        if (\"object\" !== typeof blob.blobs) {\n\t            return false\n\t        };\n\t        return blobHasDescendantQuotes(blob.blobs[blob.blobs.length-1]);\n\t    }\n\t    function blobHasDescendantMergingPunctuation(parentChar,blob) {\n\t        var childChar = blob.strings.suffix.slice(-1);\n\t        if (!childChar && \"string\" === typeof blob.blobs) {\n\t            childChar = blob.blobs.slice(-1);\n\t        }\n\t        var mergedChars = RtoL_MAP[parentChar][childChar];\n\t        if (mergedChars && mergedChars.length === 1) {\n\t            return true;\n\t        }\n\t        if (\"object\" !== typeof blob.blobs) return false;\n\t        if (blobHasDescendantMergingPunctuation(parentChar,blob.blobs[blob.blobs.length-1])) return true;\n\t        return false;\n\t    }\n\t    function matchLastChar(blob, chr) {\n\t        if (!PUNCT[chr]) {\n\t            return false;\n\t        }\n\t        if (\"string\" === typeof blob.blobs) {\n\t            if (blob.blobs.slice(-1) === chr) {\n\t                return true;\n\t            } else {\n\t                return false;\n\t            }\n\t        } else {\n\t            var child = blob.blobs[blob.blobs.length-1];\n\t            if (child) {\n\t                var childChar = child.strings.suffix.slice(-1);\n\t                if (!childChar) {\n\t                    return matchLastChar(child,chr);\n\t                } else if (child.strings.suffix.slice(-1) == chr) {\n\t                    return true;\n\t                } else {\n\t                    return false;\n\t                }\n\t            } else {\n\t                return false;\n\t            }\n\t        }\n\t    };\n\t    function mergeChars (First, first, Second, second, merge_right) {\n\t        FirstStrings = \"blobs\" === first ? First : First.strings;\n\t        SecondStrings = \"blobs\" === second ? Second: Second.strings;\n\t        var firstChar = FirstStrings[first].slice(-1);\n\t        var secondChar = SecondStrings[second].slice(0,1);\n\t        function cullRight () {\n\t            SecondStrings[second] = SecondStrings[second].slice(1);\n\t        };\n\t        function cullLeft () {\n\t            FirstStrings[first] = FirstStrings[first].slice(0,-1);\n\t        };\n\t        function addRight (chr) {\n\t            SecondStrings[second] = chr + SecondStrings[second];\n\t        }\n\t        function addLeft (chr) {\n\t            FirstStrings[first] += chr;\n\t        }\n\t        var cull = merge_right ? cullLeft : cullRight;\n\t        function matchOnRight () {\n\t            return RtoL_MAP[secondChar];\n\t        }\n\t        function matchOnLeft () {\n\t            return LtoR_MAP[firstChar];\n\t        }\n\t        var match = merge_right ? matchOnLeft : matchOnRight;\n\t        function mergeToRight () {\n\t            var chr = LtoR_MAP[firstChar][secondChar];\n\t            if (\"string\" === typeof chr) {\n\t                cullLeft();\n\t                cullRight();\n\t                addRight(chr);\n\t            } else {\n\t                addRight(firstChar);\n\t                cullLeft();\n\t            }\n\t        }\n\t        function mergeToLeft () {\n\t            var chr = RtoL_MAP[secondChar][firstChar];\n\t            if (\"string\" === typeof chr) {\n\t                cullLeft();\n\t                cullRight();\n\t                addLeft(chr);\n\t            } else {\n\t                addLeft(secondChar);\n\t                cullRight();\n\t            }\n\t        }\n\t        var merge = merge_right ? mergeToRight: mergeToLeft;\n\t        var isDuplicate = firstChar === secondChar;\n\t        if (isDuplicate) {\n\t            cull();\n\t        } else {\n\t            if (match()) {\n\t                merge();\n\t            }\n\t        }\n\t    };\n\t    function upward (parent) {\n\t        if (parent.blobs && \"string\" == typeof parent.blobs) {\n\t            if (PUNCT[parent.strings.suffix.slice(0,1)]\n\t                && parent.strings.suffix.slice(0,1) === parent.blobs.slice(-1)) {\n\t                parent.strings.suffix = parent.strings.suffix.slice(1);\n\t            }\n\t            return;\n\t        } else if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n\t            return;\n\t        }\n\t        var parentDecorations = blobHasDecorations(parent,true);\n\t        for (var i=parent.blobs.length-1;i>-1;i--) {\n\t            var endFlag = i === (parent.blobs.length-1);\n\t            this.upward(parent.blobs[i]);\n\t            var parentStrings = parent.strings;\n\t            var childStrings = parent.blobs[i].strings;\n\t            if (i === 0) {\n\t                if (\" \" === parentStrings.prefix.slice(-1) && \" \" === childStrings.prefix.slice(0, 1)) {\n\t                    childStrings.prefix = childStrings.prefix.slice(1);\n\t                }\n\t                var childChar = childStrings.prefix.slice(0, 1);\n\t                if (!parentDecorations && PUNCT_OR_SPACE[childChar] && !parentStrings.prefix) {\n\t                    parentStrings.prefix += childChar;\n\t                    childStrings.prefix = childStrings.prefix.slice(1);\n\t                }\n\t            }\n\t            if (i === (parent.blobs.length - 1)) {\n\t                var childChar = childStrings.suffix.slice(-1);\n\t                if (!parentDecorations && [\" \"].indexOf(childChar) > -1) {\n\t                    if (parentStrings.suffix.slice(0,1) !== childChar) {\n\t                        parentStrings.suffix = childChar + parentStrings.suffix;\n\t                    }\n\t                    childStrings.suffix = childStrings.suffix.slice(0, -1);\n\t                }\n\t            }\n\t            if (parentStrings.delimiter && i > 0) {\n\t                if (PUNCT_OR_SPACE[parentStrings.delimiter.slice(-1)]\n\t                    && parentStrings.delimiter.slice(-1) === childStrings.prefix.slice(0, 1)) {\n\t                    childStrings.prefix = childStrings.prefix.slice(1);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    function leftward (parent) {\n\t        if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n\t            return;\n\t        }\n\t        for (var i=parent.blobs.length-1;i>-1;i--) {\n\t            this.leftward(parent.blobs[i]);\n\t            if ((i < parent.blobs.length -1) && !parent.strings.delimiter) {\n\t                var child = parent.blobs[i];\n\t                var childChar = child.strings.suffix.slice(-1);\n\t                var sibling = parent.blobs[i+1];\n\t                var siblingChar = sibling.strings.prefix.slice(0, 1);\n\t                var hasDecorations = blobHasDecorations(child) || blobHasDecorations(sibling);\n\t                var hasNumber = \"number\" === typeof childChar || \"number\" === typeof siblingChar;\n\t                if (!hasDecorations && !hasNumber && PUNCT[siblingChar] && !hasNumber) {\n\t                    var suffixAndPrefixMatch = siblingChar === child.strings.suffix.slice(-1);\n\t                    var suffixAndFieldMatch = (!child.strings.suffix && \"string\" === typeof child.blobs && child.blobs.slice(-1) === siblingChar);\n\t                    if (!suffixAndPrefixMatch && !suffixAndFieldMatch) {\n\t                        mergeChars(child, 'suffix', sibling, 'prefix');\n\t                    } else {\n\t                        sibling.strings.prefix = sibling.strings.prefix.slice(1);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    };\n\t    function downward (parent, top) {\n\t        if (parent.blobs && \"string\" == typeof parent.blobs) {\n\t            if (PUNCT[parent.strings.suffix.slice(0,1)]\n\t                && parent.strings.suffix.slice(0,1) === parent.blobs.slice(-1)) {\n\t                parent.strings.suffix = parent.strings.suffix.slice(1);\n\t            }\n\t            return;\n\t        } else if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n\t            return;\n\t        }\n\t        var parentStrings = parent.strings;\n\t        var someChildrenAreNumbers = false;\n\t        for (var i=0,ilen=parent.blobs.length;i<ilen;i++) {\n\t            if (blobIsNumber(parent.blobs[i])) {\n\t                someChildrenAreNumbers = true;\n\t                break;\n\t            }\n\t        }\n\t        if (true) {\n\t            if (parentStrings.delimiter && PUNCT[parentStrings.delimiter.slice(0, 1)]) {\n\t                var delimChar = parentStrings.delimiter.slice(0, 1);\n\t                for (var i=parent.blobs.length-2;i>-1;i--) {\n\t                    var childStrings = parent.blobs[i].strings;\n\t                    if (childStrings.suffix.slice(-1) !== delimChar) {\n\t                        childStrings.suffix += delimChar;\n\t                    }\n\t                }\n\t                parentStrings.delimiter = parentStrings.delimiter.slice(1);\n\t            }\n\t        }\n\t        var parentDecorations = blobHasDecorations(parent, true);\n\t        var parentIsNumber = blobIsNumber(parent);\n\t        for (var i=parent.blobs.length-1;i>-1;i--) {\n\t            var child = parent.blobs[i];\n\t            var childStrings = parent.blobs[i].strings;\n\t            var childDecorations = blobHasDecorations(child, true);\n\t            var childIsNumber = blobIsNumber(child);\n\t            if (i === (parent.blobs.length - 1)) {\n\t                if (true) {\n\t                    var parentChar = parentStrings.suffix.slice(0, 1);\n\t                    var allowMigration = false;\n\t                    if (PUNCT[parentChar]) {\n\t                        allowMigration = blobHasDescendantMergingPunctuation(parentChar,child);\n\t                        if (!allowMigration && punctInQuote) {\n\t                            allowMigration = blobHasDescendantQuotes(child);\n\t                        }\n\t                    }\n\t                    if (allowMigration) {\n\t                        if (PUNCT[parentChar]) {\n\t                            if (!blobEndsInNumber(child)) {\n\t                                if (\"string\" === typeof child.blobs) {\n\t                                    mergeChars(child, 'blobs', parent, 'suffix');\n\t                                } else {\n\t                                    mergeChars(child, 'suffix', parent, 'suffix');\n\t                                }\n\t                                if (parentStrings.suffix.slice(0,1) === \".\") {\n\t                                    childStrings.suffix += parentStrings.suffix.slice(0,1);\n\t                                    parentStrings.suffix = parentStrings.suffix.slice(1);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    if (childStrings.suffix.slice(-1) === \" \" && parentStrings.suffix.slice(0,1) === \" \") {\n\t                        parentStrings.suffix = parentStrings.suffix.slice(1);\n\t                    }\n\t                    if (PUNCT_OR_SPACE[childStrings.suffix.slice(0,1)]) {\n\t                        if (\"string\" === typeof child.blobs && child.blobs.slice(-1) === childStrings.suffix.slice(0,1)) {\n\t                            childStrings.suffix = childStrings.suffix.slice(1);\n\t                        }\n\t                        if (childStrings.suffix.slice(-1) === parentStrings.suffix.slice(0, 1)) {\n\t                            parentStrings.suffix = parentStrings.suffix.slice(0, -1);\n\t                        }\n\t                    }\n\t                }\n\t                if (matchLastChar(parent,parent.strings.suffix.slice(0,1))) {\n\t                    parent.strings.suffix = parent.strings.suffix.slice(1);\n\t                }\n\t            } else if (parentStrings.delimiter) {\n\t                if (PUNCT_OR_SPACE[parentStrings.delimiter.slice(0,1)]\n\t                    && parentStrings.delimiter.slice(0, 1) === childStrings.suffix.slice(-1)) {\n\t                    parent.blobs[i].strings.suffix = parent.blobs[i].strings.suffix.slice(0, -1);\n\t                }\n\t            } else {\n\t                var siblingStrings = parent.blobs[i+1].strings;\n\t                if (!blobIsNumber(child) \n\t                    && !childDecorations\n\t                    && PUNCT_OR_SPACE[childStrings.suffix.slice(-1)]\n\t                    && childStrings.suffix.slice(-1) === siblingStrings.prefix.slice(0, 1)) {\n\t                    siblingStrings.prefix = siblingStrings.prefix.slice(1);\n\t                }\n\t            }\n\t            if (!childIsNumber && !childDecorations && PUNCT[childStrings.suffix.slice(0,1)]\n\t                && \"string\" === typeof child.blobs) {\n\t                mergeChars(child, 'blobs', child, 'suffix')\n\t            }\n\t            this.downward(parent.blobs[i]);\n\t        }\n\t    };\n\t    function swapToTheLeft (child) {\n\t        var childChar = child.strings.suffix.slice(0,1);\n\t        if (\"string\" === typeof child.blobs) {\n\t            while (SWAP_IN[childChar]) {\n\t                mergeChars(child, 'blobs', child, 'suffix');\n\t                childChar = child.strings.suffix.slice(0,1);\n\t            }                                \n\t        } else {\n\t            while (SWAP_IN[childChar]) {\n\t                mergeChars(child.blobs[child.blobs.length-1], 'suffix', child, 'suffix');\n\t                childChar = child.strings.suffix.slice(0,1);\n\t            }\n\t        }\n\t    }\n\t    function swapToTheRight (child) {\n\t        if (\"string\" === typeof child.blobs) {\n\t            var childChar = child.blobs.slice(-1);\n\t            while (SWAP_OUT[childChar]) {\n\t                mergeChars(child, 'blobs', child, 'suffix', true);\n\t                childChar = child.blobs.slice(-1);\n\t            }\n\t        } else {\n\t            var childChar = child.blobs[child.blobs.length-1].strings.suffix.slice(-1);\n\t            while (SWAP_OUT[childChar]) {\n\t                mergeChars(child.blobs[child.blobs.length-1], 'suffix', child, 'suffix', true);\n\t                childChar = child.blobs[child.blobs.length-1].strings.suffix.slice(-1);\n\t            }\n\t        }\n\t    }\n\t    function fix (parent) {\n\t        if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n\t            return;\n\t        }\n\t        var lastChar;\n\t        for (var i=0,ilen=parent.blobs.length;i<ilen;i++) {\n\t            var child = parent.blobs[i];\n\t            var quoteSwap = false;\n\t            for (var j=0,jlen=child.decorations.length;j<jlen;j++) {\n\t                var decoration = child.decorations[j];\n\t                if (decoration[0] === \"@quotes\" && decoration[1] !== \"false\") {\n\t                    quoteSwap = true;\n\t                }\n\t            }\n\t            if (quoteSwap) {\n\t                if (punctInQuote) {\n\t                    swapToTheLeft(child);\n\t                } else {\n\t                    swapToTheRight(child);\n\t                }\n\t            }\n\t            lastChar = this.fix(parent.blobs[i]);\n\t            if (child.blobs && \"string\" === typeof child.blobs) {\n\t                lastChar = child.blobs.slice(-1);\n\t            }\n\t        }\n\t        return lastChar;\n\t    };\n\t}\n\tCSL.Engine.Opt = function () {\n\t    this.has_disambiguate = false;\n\t    this.mode = \"html\";\n\t    this.dates = {};\n\t    this.jurisdictions_seen = {};\n\t    this.suppressedJurisdictions = {};\n\t    this.inheritedAttributes = {};\n\t    this[\"locale-sort\"] = [];\n\t    this[\"locale-translit\"] = [];\n\t    this[\"locale-translat\"] = [];\n\t    this.citeAffixes = {\n\t        persons:{\n\t            \"locale-orig\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translit\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translat\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            }\n\t        },\n\t        institutions:{\n\t            \"locale-orig\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translit\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translat\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            }\n\t        },\n\t        titles:{\n\t            \"locale-orig\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translit\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translat\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            }\n\t        },\n\t        journals:{\n\t            \"locale-orig\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translit\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translat\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            }\n\t        },\n\t        publishers:{\n\t            \"locale-orig\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translit\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translat\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            }\n\t        },\n\t        places:{\n\t            \"locale-orig\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translit\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            },\n\t            \"locale-translat\":{\n\t                prefix:\"\",\n\t                suffix:\"\"\n\t            }\n\t        }\n\t    };\n\t    this[\"default-locale\"] = [];\n\t    this.update_mode = CSL.NONE;\n\t    this.bib_mode = CSL.NONE;\n\t    this.sort_citations = false;\n\t    this[\"et-al-min\"] = 0;\n\t    this[\"et-al-use-first\"] = 1;\n\t    this[\"et-al-use-last\"] = false;\n\t    this[\"et-al-subsequent-min\"] = false;\n\t    this[\"et-al-subsequent-use-first\"] = false;\n\t    this[\"demote-non-dropping-particle\"] = \"display-and-sort\";\n\t    this[\"parse-names\"] = true;\n\t    this.citation_number_slug = false;\n\t    this.trigraph = \"Aaaa00:AaAa00:AaAA00:AAAA00\";\n\t    this.nodenames = [];\n\t    this.gender = {};\n\t    this['cite-lang-prefs'] = {\n\t        persons:['orig'],\n\t        institutions:['orig'],\n\t        titles:['orig'],\n\t        journals:['orig'],\n\t        publishers:['orig'],\n\t        places:['orig'],\n\t        number:['orig']\n\t    };\n\t    this.has_layout_locale = false;\n\t    this.development_extensions = {};\n\t    this.development_extensions.field_hack = true;\n\t    this.development_extensions.allow_field_hack_date_override = true;\n\t    this.development_extensions.locator_date_and_revision = true;\n\t    this.development_extensions.locator_parsing_for_plurals = true;\n\t    this.development_extensions.locator_label_parse = true;\n\t    this.development_extensions.raw_date_parsing = true;\n\t    this.development_extensions.clean_up_csl_flaws = true;\n\t    this.development_extensions.flip_parentheses_to_braces = true;\n\t    this.development_extensions.jurisdiction_subfield = true;\n\t    this.development_extensions.static_statute_locator = false;\n\t    this.development_extensions.csl_reverse_lookup_support = false;\n\t    this.development_extensions.clobber_locator_if_no_statute_section = false;\n\t    this.development_extensions.wrap_url_and_doi = false;\n\t    this.development_extensions.allow_force_lowercase = false;\n\t    this.development_extensions.handle_parallel_articles = false;\n\t    this.development_extensions.thin_non_breaking_space_html_hack = false;\n\t    this.development_extensions.apply_citation_wrapper = false;\n\t    this.development_extensions.main_title_from_short_title = false;\n\t    this.development_extensions.uppercase_subtitles = false;\n\t    this.development_extensions.normalize_lang_keys_to_lowercase = false;\n\t    this.development_extensions.strict_text_case_locales = false;\n\t    this.development_extensions.rtl_support = false;\n\t    this.development_extensions.expect_and_symbol_form = false;\n\t    this.development_extensions.require_explicit_legal_case_title_short = false;\n\t    this.development_extensions.spoof_institutional_affiliations = false;\n\t    this.development_extensions.force_jurisdiction = false;\n\t    this.development_extensions.parse_names = true;\n\t};\n\tCSL.Engine.Tmp = function () {\n\t    this.names_max = new CSL.Stack();\n\t    this.names_base = new CSL.Stack();\n\t    this.givens_base = new CSL.Stack();\n\t    this.value = [];\n\t    this.namepart_decorations = {};\n\t    this.namepart_type = false;\n\t    this.area = \"citation\";\n\t    this.root = \"citation\";\n\t    this.extension = \"\";\n\t    this.can_substitute = new CSL.Stack(0, CSL.LITERAL);\n\t    this.element_rendered_ok = false;\n\t    this.element_trace = new CSL.Stack(\"style\");\n\t    this.nameset_counter = 0;\n\t    this.group_context = new CSL.Stack({\n\t        term_intended: false,\n\t        variable_attempt: false,\n\t        variable_success: false,\n\t        output_tip: undefined,\n\t        label_form:  undefined,\n\t        parallel_conditions: undefined,\n\t        condition: false,\n\t        force_suppress: false,\n\t        done_vars: []\n\t    });\n\t    this.term_predecessor = false;\n\t    this.in_cite_predecessor = false;\n\t    this.jump = new CSL.Stack(0, CSL.LITERAL);\n\t    this.decorations = new CSL.Stack();\n\t    this.tokenstore_stack = new CSL.Stack();\n\t    this.last_suffix_used = \"\";\n\t    this.last_names_used = [];\n\t    this.last_years_used = [];\n\t    this.years_used = [];\n\t    this.names_used = [];\n\t    this.taintedItemIDs = {};\n\t    this.taintedCitationIDs = {};\n\t    this.initialize_with = new CSL.Stack();\n\t    this.disambig_request = false;\n\t    this[\"name-as-sort-order\"] = false;\n\t    this.suppress_decorations = false;\n\t    this.disambig_settings = new CSL.AmbigConfig();\n\t    this.bib_sort_keys = [];\n\t    this.prefix = new CSL.Stack(\"\", CSL.LITERAL);\n\t    this.suffix = new CSL.Stack(\"\", CSL.LITERAL);\n\t    this.delimiter = new CSL.Stack(\"\", CSL.LITERAL);\n\t    this.cite_locales = [];\n\t    this.cite_affixes = {\n\t        citation: false, \n\t        bibliography: false,\n\t        citation_sort: false, \n\t        bibliography_sort: false\n\t    };\n\t    this.strip_periods = 0;\n\t    this.shadow_numbers = {};\n\t    this.authority_stop_last = 0;\n\t    this.loadedItemIDs = {};\n\t};\n\tCSL.Engine.Fun = function (state) {\n\t    this.match = new CSL.Util.Match;\n\t    this.suffixator = new CSL.Util.Suffixator(CSL.SUFFIX_CHARS);\n\t    this.romanizer = new CSL.Util.Romanizer();\n\t    this.ordinalizer = new CSL.Util.Ordinalizer(state);\n\t    this.long_ordinalizer = new CSL.Util.LongOrdinalizer();\n\t};\n\tCSL.Engine.Build = function () {\n\t    this[\"alternate-term\"] = false;\n\t    this.in_bibliography = false;\n\t    this.in_style = false;\n\t    this.skip = false;\n\t    this.postponed_macro = false;\n\t    this.layout_flag = false;\n\t    this.name = false;\n\t    this.form = false;\n\t    this.term = false;\n\t    this.macro = {};\n\t    this.macro_stack = [];\n\t    this.text = false;\n\t    this.lang = false;\n\t    this.area = \"citation\";\n\t    this.root = \"citation\";\n\t    this.extension = \"\";\n\t    this.substitute_level = new CSL.Stack(0, CSL.LITERAL);\n\t    this.names_level = 0;\n\t    this.render_nesting_level = 0;\n\t    this.render_seen = false;\n\t};\n\tCSL.Engine.Configure = function () {\n\t    this.fail = [];\n\t    this.succeed = [];\n\t};\n\tCSL.Engine.Citation = function (state) {\n\t    this.opt = {\n\t        inheritedAttributes: {}\n\t    };\n\t    this.tokens = [];\n\t    this.srt = new CSL.Registry.Comparifier(state, \"citation_sort\");\n\t    this.opt.collapse = [];\n\t    this.opt[\"disambiguate-add-names\"] = false;\n\t    this.opt[\"disambiguate-add-givenname\"] = false;\n\t    this.opt[\"disambiguate-add-year-suffix\"] = false;\n\t    this.opt[\"givenname-disambiguation-rule\"] = \"by-cite\";\n\t    this.opt[\"near-note-distance\"] = 5;\n\t    this.opt.topdecor = [];\n\t    this.opt.layout_decorations = [];\n\t    this.opt.layout_prefix = \"\";\n\t    this.opt.layout_suffix = \"\";\n\t    this.opt.layout_delimiter = \"\";\n\t    this.opt.sort_locales = [];\n\t    this.opt.max_number_of_names = 0;\n\t    this.root = \"citation\";\n\t};\n\tCSL.Engine.Bibliography = function () {\n\t    this.opt = {\n\t        inheritedAttributes: {}\n\t    };\n\t    this.tokens = [];\n\t    this.opt.collapse = [];\n\t    this.opt.topdecor = [];\n\t    this.opt.layout_decorations = [];\n\t    this.opt.layout_prefix = \"\";\n\t    this.opt.layout_suffix = \"\";\n\t    this.opt.layout_delimiter = \"\";\n\t    this.opt[\"line-spacing\"] = 1;\n\t    this.opt[\"entry-spacing\"] = 1;\n\t    this.opt.sort_locales = [];\n\t    this.opt.max_number_of_names = 0;\n\t    this.root = \"bibliography\";\n\t};\n\tCSL.Engine.BibliographySort = function () {\n\t    this.tokens = [];\n\t    this.opt = {};\n\t    this.opt.sort_directions = [];\n\t    this.keys = [];\n\t    this.opt.topdecor = [];\n\t    this.root = \"bibliography\";\n\t};\n\tCSL.Engine.CitationSort = function () {\n\t    this.tokens = [];\n\t    this.opt = {};\n\t    this.opt.sort_directions = [];\n\t    this.keys = [];\n\t    this.opt.topdecor = [];\n\t    this.root = \"citation\";\n\t};\n\tCSL.Engine.prototype.previewCitationCluster = function (citation, citationsPre, citationsPost, newMode) {\n\t    var oldMode = this.opt.mode;\n\t    this.setOutputFormat(newMode);\n\t    var ret = this.processCitationCluster(citation, citationsPre, citationsPost, CSL.PREVIEW);\n\t    this.setOutputFormat(oldMode);\n\t    return ret[1];\n\t};\n\tCSL.Engine.prototype.appendCitationCluster = function (citation) {\n\t    var citationsPre = [];\n\t    var len = this.registry.citationreg.citationByIndex.length;\n\t    for (var pos = 0; pos < len; pos += 1) {\n\t        var c = this.registry.citationreg.citationByIndex[pos];\n\t        citationsPre.push([\"\" + c.citationID, c.properties.noteIndex]);\n\t    }\n\t    return this.processCitationCluster(citation, citationsPre, [])[1];\n\t};\n\tCSL.Engine.prototype.processCitationCluster = function (citation, citationsPre, citationsPost, flag) {\n\t    var c, i, ilen, j, jlen, k, klen, n, nlen, key, Item, item, noteCitations, textCitations, m, citationsInNote;\n\t    this.debug = false;\n\t    this.tmp.loadedItemIDs = {};\n\t    this.tmp.citation_errors = [];\n\t    var return_data = {\"bibchange\": false};\n\t    this.setCitationId(citation);\n\t    var oldCitationList;\n\t    var oldItemList;\n\t    var oldAmbigs;\n\t    if (flag === CSL.PREVIEW) {\n\t        oldCitationList = this.registry.citationreg.citationByIndex.slice();\n\t        oldItemList = this.registry.reflist.slice();\n\t        var newCitationList = citationsPre.concat([[\"\" + citation.citationID, citation.properties.noteIndex]]).concat(citationsPost);\n\t        var newItemIds = {};\n\t        var newItemIdsList = [];\n\t        for (i = 0, ilen = newCitationList.length; i < ilen; i += 1) {\n\t            c = this.registry.citationreg.citationById[newCitationList[i][0]];\n\t            for (j = 0, jlen = c.citationItems.length; j < jlen; j += 1) {\n\t                newItemIds[c.citationItems[j].id] = true;\n\t                newItemIdsList.push(\"\" + c.citationItems[j].id);\n\t            }\n\t        }\n\t        oldAmbigs = {};\n\t        for (i = 0, ilen = oldItemList.length; i < ilen; i += 1) {\n\t            if (!newItemIds[oldItemList[i].id]) {\n\t                var oldAkey = this.registry.registry[oldItemList[i].id].ambig;\n\t                var ids = this.registry.ambigcites[oldAkey];\n\t                if (ids) {\n\t                    for (j = 0, jlen = ids.length; j < jlen; j += 1) {\n\t                        oldAmbigs[ids[j]] = CSL.cloneAmbigConfig(this.registry.registry[ids[j]].disambig);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    this.tmp.taintedCitationIDs = {};\n\t    var sortedItems = [];\n\t    var rerunAkeys = {};\n\t    for (i = 0, ilen = citation.citationItems.length; i < ilen; i += 1) {\n\t        item = {};\n\t        for (key in citation.citationItems[i]) {\n\t            item[key] = citation.citationItems[i][key];\n\t        }\n\t        Item = this.retrieveItem(\"\" + item.id);\n\t        if (Item.id) {\n\t            this.transform.loadAbbreviation(\"default\", \"hereinafter\", Item.id);\n\t        }\n\t        item = CSL.parseLocator.call(this, item);\n\t        if (this.opt.development_extensions.static_statute_locator) {\n\t            this.remapSectionVariable([[Item,item]]);\n\t        }\n\t        if (this.opt.development_extensions.locator_label_parse) {\n\t            if (item.locator && [\"bill\",\"gazette\",\"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) === -1 && (!item.label || item.label === 'page')) {\n\t                m = CSL.LOCATOR_LABELS_REGEXP.exec(item.locator);\n\t                if (m) {\n\t                    var tryLabel = CSL.LOCATOR_LABELS_MAP[m[2]];\n\t                    if (this.getTerm(tryLabel)) {\n\t                        item.label = tryLabel;\n\t                        item.locator = m[3];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var newitem = [Item, item];\n\t        sortedItems.push(newitem);\n\t        citation.citationItems[i].item = Item;\n\t    }\n\t    citation.sortedItems = sortedItems;\n\t    var citationByIndex = [];\n\t    for (i = 0, ilen = citationsPre.length; i < ilen; i += 1) {\n\t        c = citationsPre[i];\n\t        this.registry.citationreg.citationById[c[0]].properties.noteIndex = c[1];\n\t        citationByIndex.push(this.registry.citationreg.citationById[c[0]]);\n\t    }\n\t    citationByIndex.push(citation);\n\t    for (i = 0, ilen = citationsPost.length; i < ilen; i += 1) {\n\t        c = citationsPost[i];\n\t        this.registry.citationreg.citationById[c[0]].properties.noteIndex = c[1];\n\t        citationByIndex.push(this.registry.citationreg.citationById[c[0]]);\n\t    }\n\t    this.registry.citationreg.citationByIndex = citationByIndex;\n\t    this.registry.citationreg.citationsByItemId = {};\n\t    if (this.opt.update_mode === CSL.POSITION) {\n\t        textCitations = [];\n\t        noteCitations = [];\n\t        citationsInNote = {};\n\t    }\n\t    var update_items = [];\n\t    for (i = 0, ilen = citationByIndex.length; i < ilen; i += 1) {\n\t        citationByIndex[i].properties.index = i;\n\t        for (j = 0, jlen = citationByIndex[i].sortedItems.length; j < jlen; j += 1) {\n\t            item = citationByIndex[i].sortedItems[j];\n\t            if (!this.registry.citationreg.citationsByItemId[item[1].id]) {\n\t                this.registry.citationreg.citationsByItemId[item[1].id] = [];\n\t                update_items.push(\"\" + item[1].id);\n\t            }\n\t            if (this.registry.citationreg.citationsByItemId[item[1].id].indexOf(citationByIndex[i]) === -1) {\n\t                this.registry.citationreg.citationsByItemId[item[1].id].push(citationByIndex[i]);\n\t            }\n\t        }\n\t        if (this.opt.update_mode === CSL.POSITION) {\n\t            if (citationByIndex[i].properties.noteIndex) {\n\t                noteCitations.push(citationByIndex[i]);\n\t            } else {\n\t                citationByIndex[i].properties.noteIndex = 0;\n\t                textCitations.push(citationByIndex[i]);\n\t            }\n\t        }\n\t    }\n\t    if (flag !== CSL.ASSUME_ALL_ITEMS_REGISTERED) {\n\t        this.updateItems(update_items, null, null, true);\n\t    }\n\t    if (!this.opt.citation_number_sort && sortedItems && sortedItems.length > 1 && this.citation_sort.tokens.length > 0) {\n\t        for (i = 0, ilen = sortedItems.length; i < ilen; i += 1) {\n\t            sortedItems[i][1].sortkeys = CSL.getSortKeys.call(this, sortedItems[i][0], \"citation_sort\");\n\t        }\n\t        if (this.opt.grouped_sort &&  !citation.properties.unsorted) {\n\t            for (i = 0, ilen = sortedItems.length; i < ilen; i += 1) {\n\t                var sortkeys = sortedItems[i][1].sortkeys;\n\t                this.tmp.authorstring_request = true;\n\t                var mydisambig = this.registry.registry[sortedItems[i][0].id].disambig;\n\t                this.tmp.authorstring_request = true;\n\t                CSL.getAmbiguousCite.call(this, sortedItems[i][0], mydisambig);\n\t                var authorstring = this.registry.authorstrings[sortedItems[i][0].id];\n\t                this.tmp.authorstring_request = false;\n\t                sortedItems[i][1].sortkeys = [authorstring].concat(sortkeys);\n\t            }\n\t            sortedItems.sort(this.citation.srt.compareCompositeKeys);\n\t            var lastauthor = false;\n\t            var thiskey = false;\n\t            var thisauthor = false;\n\t            for (i = 0, ilen = sortedItems.length; i < ilen; i += 1) {\n\t                if (sortedItems[i][1].sortkeys[0] !== lastauthor) {\n\t                    thisauthor = sortedItems[i][1].sortkeys[0];\n\t                    thiskey =  sortedItems[i][1].sortkeys[1];\n\t                }\n\t                sortedItems[i][1].sortkeys[0] = \"\" + thiskey + i;\n\t                lastauthor = thisauthor;\n\t            }\n\t        }\n\t        if (!citation.properties.unsorted) {\n\t            sortedItems.sort(this.citation.srt.compareCompositeKeys);\n\t        }\n\t    }\n\t    var citations;\n\t    if (this.opt.update_mode === CSL.POSITION) {\n\t        for (i = 0; i < 2; i += 1) {\n\t            citations = [textCitations, noteCitations][i];\n\t            var first_ref = {};\n\t            var last_ref = {};\n\t            for (j = 0, jlen = citations.length; j < jlen; j += 1) {\n\t                var onecitation = citations[j];\n\t                if (!citations[j].properties.noteIndex) {\n\t                    citations[j].properties.noteIndex = 0;\n\t                }\n\t                citations[j].properties.noteIndex = parseInt(citations[j].properties.noteIndex, 10);\n\t                if (j > 0 && citations[j - 1].properties.noteIndex > citations[j].properties.noteIndex) {\n\t                    citationsInNote = {};\n\t                    first_ref = {};\n\t                    last_ref = {};\n\t                }\n\t                for (k = 0, klen = onecitation.sortedItems.length; k < klen; k += 1) {\n\t                    if (!this.registry.registry[onecitation.sortedItems[k][1].id].parallel) {\n\t                        if (!citationsInNote[onecitation.properties.noteIndex]) {\n\t                            citationsInNote[onecitation.properties.noteIndex] = 1;\n\t                        } else {\n\t                            citationsInNote[onecitation.properties.noteIndex] += 1;\n\t                        }\n\t                    }\n\t                }\n\t                for (k = 0, klen = citations[j].sortedItems.length; k < klen; k += 1) {\n\t                    item = citations[j].sortedItems[k];\n\t                    var myid = item[0].id;\n\t                    var mylocator = item[1].locator;\n\t                    var mylabel = item[1].label;\n\t                    if (item[0].legislation_id) {\n\t                        myid = item[0].legislation_id;\n\t                    }\n\t                    var incitationid;\n\t                    if (k > 0) {\n\t                        if (onecitation.sortedItems[k - 1][0].legislation_id) {\n\t                            incitationid = onecitation.sortedItems[k - 1][0].legislation_id;\n\t                        } else {\n\t                            incitationid = onecitation.sortedItems[k - 1][1].id;\n\t                        }\n\t                    }\n\t                    if (flag === CSL.PREVIEW) {\n\t                        if (onecitation.citationID != citation.citationID) {\n\t                            if (\"undefined\" === typeof first_ref[item[1].id]) {\n\t                                first_ref[myid] = onecitation.properties.noteIndex;\n\t                                last_ref[myid] = onecitation.properties.noteIndex;\n\t                            } else {\n\t                                last_ref[myid] = onecitation.properties.noteIndex;\n\t                            }\n\t                            continue;\n\t                        }\n\t                    }\n\t                    var oldvalue = {};\n\t                    oldvalue.position = item[1].position;\n\t                    oldvalue[\"first-reference-note-number\"] = item[1][\"first-reference-note-number\"];\n\t                    oldvalue[\"near-note\"] = item[1][\"near-note\"];\n\t                    item[1][\"first-reference-note-number\"] = 0;\n\t                    item[1][\"near-note\"] = false;\n\t                    if (this.registry.citationreg.citationsByItemId[myid]) {\n\t                        if (this.opt.xclass === 'note' && this.opt.has_disambiguate) {\n\t                            var oldCount = this.registry.registry[myid][\"citation-count\"]\n\t                            var newCount = this.registry.citationreg.citationsByItemId[myid].length;\n\t                            this.registry.registry[myid][\"citation-count\"] = this.registry.citationreg.citationsByItemId[myid].length;\n\t                            if (\"number\" === typeof oldCount) {\n\t                                var oldCountCheck = (oldCount < 2);\n\t                                var newCountCheck = (newCount < 2);\n\t                                if (oldCountCheck !== newCountCheck) {\n\t                                    for (var l=0,llen=this.registry.citationreg.citationsByItemId[myid].length;l<llen;l++) {\n\t                                        rerunAkeys[this.registry.registry[myid].ambig] = true;\n\t                                        this.tmp.taintedCitationIDs[this.registry.citationreg.citationsByItemId[myid][l].citationID] = true;\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                for (var l=0,llen=this.registry.citationreg.citationsByItemId[myid].length;l<llen;l++) {\n\t                                    rerunAkeys[this.registry.registry[myid].ambig] = true;\n\t                                    this.tmp.taintedCitationIDs[this.registry.citationreg.citationsByItemId[myid][l].citationID] = true;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    var oldlastid;\n\t                    if (\"undefined\" === typeof first_ref[myid]) {\n\t                        first_ref[myid] = onecitation.properties.noteIndex;\n\t                        if (this.registry.registry[myid]) {\n\t                            this.registry.registry[myid]['first-reference-note-number'] = onecitation.properties.noteIndex;\n\t                        }\n\t                        last_ref[myid] = onecitation.properties.noteIndex;\n\t                        item[1].position = CSL.POSITION_FIRST;\n\t                    } else {\n\t                        var ibidme = false;\n\t                        var suprame = false;\n\t                        if (j > 0) {\n\t                            oldlastid =  citations[j - 1].sortedItems.slice(-1)[0][1].id;\n\t                            if (citations[j - 1].sortedItems[0].slice(-1)[0].legislation_id) {\n\t                                oldlastid = citations[j - 1].sortedItems[0].slice(-1)[0].legislation_id;\n\t                            }\n\t                        }\n\t                        if (j > 0 && parseInt(k, 10) === 0 && citations[j - 1].properties.noteIndex !== citations[j].properties.noteIndex) {\n\t                            var items = citations[(j - 1)].sortedItems;\n\t                            var useme = false;\n\t                            var oldid = citations[j - 1].sortedItems[0][0].id;\n\t                            if (citations[j - 1].sortedItems[0][0].legislation_id) {\n\t                                oldid = citations[j - 1].sortedItems[0][0].legislation_id;\n\t                            }\n\t                            if ((oldid  == myid && citations[j - 1].properties.noteIndex >= (citations[j].properties.noteIndex - 1)) || citations[j - 1].sortedItems[0][1].id == this.registry.registry[item[1].id].parallel) {\n\t                                if (citationsInNote[citations[j - 1].properties.noteIndex] === 1 || citations[j - 1].properties.noteIndex === 0) {\n\t                                    useme = true;\n\t                                }\n\t                            }\n\t                            for (n = 0, nlen = items.slice(1).length; n < nlen; n += 1) {\n\t                                var itmp = items.slice(1)[n];\n\t                                if (!this.registry.registry[itmp[1].id].parallel || this.registry.registry[itmp[1].id].parallel == this.registry.registry[itmp[1].id]) {\n\t                                    useme = false;\n\t                                }\n\t                            }\n\t                            if (useme) {\n\t                                ibidme = true;\n\t                            } else {\n\t                                suprame = true;\n\t                            }\n\t                        } else if (k > 0 && incitationid == myid) {\n\t                            ibidme = true;\n\t                        } else if (k === 0 && citations[j - 1].properties.noteIndex == citations[j].properties.noteIndex\n\t                                   && citations[j - 1].sortedItems.length \n\t                                   && oldlastid == myid) {\n\t                            ibidme = true;\n\t                        } else {\n\t                            suprame = true;\n\t                        }\n\t                        var prev, prev_locator, prev_label, curr_locator, curr_label;\n\t                        if (ibidme) {\n\t                            if (k > 0) {\n\t                                prev = onecitation.sortedItems[(k - 1)][1];\n\t                            } else {\n\t                                prev = citations[(j - 1)].sortedItems[0][1];\n\t                            }\n\t                            if (prev.locator) {\n\t                                if (prev.label) {\n\t                                    prev_label = prev.label;\n\t                                } else {\n\t                                    prev_label = \"\";\n\t                                }\n\t                                prev_locator = \"\" + prev.locator + prev_label;\n\t                            } else {\n\t                                prev_locator = prev.locator;\n\t                            }\n\t                            if (mylocator) {\n\t                                if (mylabel) {\n\t                                    curr_label = mylabel;\n\t                                } else {\n\t                                    curr_label = \"\";\n\t                                }\n\t                                curr_locator = \"\" + mylocator + curr_label;\n\t                            } else {\n\t                                curr_locator = mylocator;\n\t                            }\n\t                        }\n\t                        if (ibidme && prev_locator && !curr_locator) {\n\t                            ibidme = false;\n\t                            suprame = true;\n\t                        }\n\t                        if (ibidme) {\n\t                            if (!prev_locator && curr_locator) {\n\t                                item[1].position = CSL.POSITION_IBID_WITH_LOCATOR;\n\t                            } else if (!prev_locator && !curr_locator) {\n\t                                item[1].position = CSL.POSITION_IBID;\n\t                            } else if (prev_locator && curr_locator === prev_locator) {\n\t                                item[1].position = CSL.POSITION_IBID;\n\t                            } else if (prev_locator && curr_locator && curr_locator !== prev_locator) {\n\t                                item[1].position = CSL.POSITION_IBID_WITH_LOCATOR;\n\t                            } else {\n\t                                ibidme = false; // just to be clear\n\t                                suprame = true;\n\t                            }\n\t                        }\n\t                        if (suprame) {\n\t                            item[1].position = CSL.POSITION_SUBSEQUENT;\n\t                        }\n\t                        if (suprame || ibidme) {\n\t                            if (first_ref[myid] != onecitation.properties.noteIndex) {\n\t                                item[1][\"first-reference-note-number\"] = first_ref[myid];\n\t                                if (this.registry.registry[myid]) {\n\t                                    var oldFirst = this.registry.citationreg.citationsByItemId[myid][0].properties.noteIndex;\n\t                                    var newFirst = onecitation.properties.noteIndex;\n\t                                    this.registry.registry[myid]['first-reference-note-number'] = newFirst < oldFirst ? newFirst: oldFirst;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    if (onecitation.properties.noteIndex) {\n\t                        var note_distance = parseInt(onecitation.properties.noteIndex, 10) - parseInt(last_ref[myid], 10);\n\t                        if (item[1].position !== CSL.POSITION_FIRST \n\t                            && note_distance <= this.citation.opt[\"near-note-distance\"]) {\n\t                            item[1][\"near-note\"] = true;\n\t                        }\n\t                        last_ref[myid] = onecitation.properties.noteIndex;\n\t                    }\n\t                    if (onecitation.citationID != citation.citationID) {\n\t                        for (n = 0, nlen = CSL.POSITION_TEST_VARS.length; n < nlen; n += 1) {\n\t                            var param = CSL.POSITION_TEST_VARS[n];\n\t                            if (item[1][param] !== oldvalue[param]) {\n\t                                if (this.registry.registry[myid]) {\n\t                                    if (param === 'first-reference-note-number') {\n\t                                        rerunAkeys[this.registry.registry[myid].ambig] = true;\n\t                                        this.tmp.taintedItemIDs[myid] = true;\n\t                                    }\n\t                                }\n\t                                this.tmp.taintedCitationIDs[onecitation.citationID] = true;\n\t                            }\n\t                        }\n\t                    }\n\t                    if (this.sys.variableWrapper) {\n\t                        item[1].index = onecitation.properties.index;\n\t                        item[1].noteIndex = onecitation.properties.noteIndex;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (this.opt.citation_number_sort && sortedItems && sortedItems.length > 1 && this.citation_sort.tokens.length > 0) {\n\t        if (!citation.properties.unsorted) {\n\t            for (i = 0, ilen = sortedItems.length; i < ilen; i += 1) {\n\t                sortedItems[i][1].sortkeys = CSL.getSortKeys.call(this, sortedItems[i][0], \"citation_sort\");\n\t            }\n\t            sortedItems.sort(this.citation.srt.compareCompositeKeys);\n\t        }\n\t    }\n\t    for (key in this.tmp.taintedItemIDs) {\n\t        if (this.tmp.taintedItemIDs.hasOwnProperty(key)) {\n\t            citations = this.registry.citationreg.citationsByItemId[key];\n\t            if (citations) {\n\t                for (i = 0, ilen = citations.length; i < ilen; i += 1) {\n\t                    this.tmp.taintedCitationIDs[citations[i].citationID] = true;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    var ret = [];\n\t    if (flag === CSL.PREVIEW) {\n\t        try {\n\t            ret = this.process_CitationCluster.call(this, citation.sortedItems, citation.citationID);\n\t        } catch (e) {\n\t            CSL.error(\"Error running CSL processor for preview: \"+e);\n\t        }\n\t        this.registry.citationreg.citationByIndex = oldCitationList;\n\t        this.registry.citationreg.citationById = {};\n\t        for (i = 0, ilen = oldCitationList.length; i < ilen; i += 1) {\n\t            this.registry.citationreg.citationById[oldCitationList[i].citationID] = oldCitationList[i];\n\t        }\n\t        var oldItemIds = [];\n\t        for (i = 0, ilen = oldItemList.length; i < ilen; i += 1) {\n\t            oldItemIds.push(\"\" + oldItemList[i].id);\n\t        }\n\t        this.updateItems(oldItemIds, null, null, true);\n\t        for (key in oldAmbigs) {\n\t            if (oldAmbigs.hasOwnProperty(key)) {\n\t                this.registry.registry[key].disambig = oldAmbigs[key];\n\t            }\n\t        }\n\t    } else {\n\t        for (var rerunAkey in rerunAkeys) {\n\t            this.disambiguate.run(rerunAkey, citation);\n\t        }\n\t        var obj;\n\t        for (key in this.tmp.taintedCitationIDs) {\n\t            if (key == citation.citationID) {\n\t                continue;\n\t            }\n\t            var mycitation = this.registry.citationreg.citationById[key];\n\t            if (!mycitation.properties.unsorted) {\n\t                for (i = 0, ilen = mycitation.sortedItems.length; i < ilen; i += 1) {\n\t                    mycitation.sortedItems[i][1].sortkeys = CSL.getSortKeys.call(this, mycitation.sortedItems[i][0], \"citation_sort\");\n\t                }\n\t                mycitation.sortedItems.sort(this.citation.srt.compareCompositeKeys);\n\t            }\n\t            this.tmp.citation_pos = mycitation.properties.index;\n\t            this.tmp.citation_note_index = mycitation.properties.noteIndex;\n\t            this.tmp.citation_id = \"\" + mycitation.citationID;\n\t            obj = [];\n\t            obj.push(mycitation.properties.index);\n\t            obj.push(this.process_CitationCluster.call(this, mycitation.sortedItems, mycitation.citationID));\n\t            obj.push(mycitation.citationID);\n\t            ret.push(obj);\n\t        }\n\t        this.tmp.taintedItemIDs = {};\n\t        this.tmp.taintedCitationIDs = {};\n\t        this.tmp.citation_pos = citation.properties.index;\n\t        this.tmp.citation_note_index = citation.properties.noteIndex;\n\t        this.tmp.citation_id = \"\" + citation.citationID;\n\t        obj = [];\n\t        obj.push(citationsPre.length);\n\t        obj.push(this.process_CitationCluster.call(this, sortedItems, citation.citationID));\n\t        obj.push(citation.citationID);\n\t        ret.push(obj);\n\t        ret.sort(function (a, b) {\n\t            if (a[0] > b[0]) {\n\t                return 1;\n\t            } else if (a[0] < b[0]) {\n\t                return -1;\n\t            } else {\n\t                return 0;\n\t            }\n\t        });\n\t    }\n\t    return_data.citation_errors = this.tmp.citation_errors.slice();\n\t    return [return_data, ret];\n\t};\n\tCSL.Engine.prototype.process_CitationCluster = function (sortedItems, citationID) {\n\t    var str;\n\t    this.parallel.StartCitation(sortedItems);\n\t    str = CSL.getCitationCluster.call(this, sortedItems, citationID);\n\t    return str;\n\t};\n\tCSL.Engine.prototype.makeCitationCluster = function (rawList) {\n\t    var inputList, newitem, str, pos, len, item, Item;\n\t    inputList = [];\n\t    len = rawList.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        item = {};\n\t        for (var key in rawList[pos]) {\n\t            item[key] = rawList[pos][key];\n\t        }\n\t        Item = this.retrieveItem(\"\" + item.id);\n\t        if (this.opt.development_extensions.locator_label_parse) {\n\t            if (item.locator && [\"bill\",\"gazette\",\"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) === -1 && (!item.label || item.label === 'page')) {\n\t                var m = CSL.LOCATOR_LABELS_REGEXP.exec(item.locator);\n\t                if (m) {\n\t                    var tryLabel = CSL.LOCATOR_LABELS_MAP[m[2]];\n\t                    if (this.getTerm(tryLabel)) {\n\t                        item.label = tryLabel;\n\t                        item.locator = m[3];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (item.locator) {\n\t            item.locator = (\"\" + item.locator).replace(/\\s+$/, '');\n\t        }\n\t        newitem = [Item, item];\n\t        inputList.push(newitem);\n\t    }\n\t    if (this.opt.development_extensions.static_statute_locator) {\n\t        this.remapSectionVariable(inputList);\n\t    }\n\t    if (inputList && inputList.length > 1 && this.citation_sort.tokens.length > 0) {\n\t        len = inputList.length;\n\t        for (pos = 0; pos < len; pos += 1) {\n\t            inputList[pos][1].sortkeys = CSL.getSortKeys.call(this, inputList[pos][0], \"citation_sort\");\n\t        }\n\t        inputList.sort(this.citation.srt.compareCompositeKeys);\n\t    }\n\t    this.tmp.citation_errors = [];\n\t    this.parallel.StartCitation(inputList);\n\t    str = CSL.getCitationCluster.call(this, inputList);\n\t    return str;\n\t};\n\tCSL.getAmbiguousCite = function (Item, disambig, visualForm, item) {\n\t    var use_parallels, ret;\n\t    var flags = this.tmp.group_context.tip;\n\t    var oldTermSiblingLayer = {\n\t        term_intended: flags.term_intended,\n\t        variable_attempt: flags.variable_attempt,\n\t        variable_success: flags.variable_success,\n\t        output_tip: flags.output_tip,\n\t        label_form: flags.label_form,\n\t        parallel_conditions: flags.parallel_conditions,\n\t        condition: flags.condition,\n\t        force_suppress: flags.force_suppress,\n\t        done_vars: flags.done_vars.slice()\n\t    }\n\t    if (disambig) {\n\t        this.tmp.disambig_request = disambig;\n\t    } else {\n\t        this.tmp.disambig_request = false;\n\t    }\n\t    var itemSupp = {\n\t        position: 1,\n\t        \"near-note\": true\n\t    };\n\t    if (item) {\n\t        itemSupp.locator = item.locator;\n\t        itemSupp.label = item.label;\n\t    }\n\t    if (this.registry.registry[Item.id] \n\t        && this.registry.citationreg.citationsByItemId\n\t        && this.registry.citationreg.citationsByItemId[Item.id]\n\t        && this.registry.citationreg.citationsByItemId[Item.id].length \n\t        && visualForm) {\n\t        if (this.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\") {\n\t            itemSupp['first-reference-note-number'] = this.registry.registry[Item.id]['first-reference-note-number'];\n\t        }\n\t    }\n\t    this.tmp.area = \"citation\";\n\t    this.tmp.root = \"citation\";\n\t    this.parallel.use_parallels = (this.parallel.use_parallels === true || this.parallel.use_parallels === null) ? null : false;\n\t    this.tmp.suppress_decorations = true;\n\t    this.tmp.just_looking = true;\n\t    CSL.getCite.call(this, Item, itemSupp, null, false);\n\t    for (var i=0,ilen=this.output.queue.length;i<ilen;i+=1) {\n\t        CSL.Output.Queue.purgeEmptyBlobs(this.output.queue[i]);\n\t    }\n\t    if (this.opt.development_extensions.clean_up_csl_flaws) {\n\t        for (var j=0,jlen=this.output.queue.length;j<jlen;j+=1) {\n\t            this.output.adjust.upward(this.output.queue[j]);\n\t            this.output.adjust.leftward(this.output.queue[j]);\n\t            this.output.adjust.downward(this.output.queue[j]);\n\t            this.output.adjust.fix(this.output.queue[j]);\n\t        }\n\t    }\n\t    ret = this.output.string(this, this.output.queue);\n\t    this.tmp.just_looking = false;\n\t    this.tmp.suppress_decorations = false;\n\t    this.parallel.use_parallels = this.parallel.use_parallels === null ? true : false;\n\t    this.tmp.group_context.replace(oldTermSiblingLayer);\n\t    return ret;\n\t};\n\tCSL.getSpliceDelimiter = function (last_collapsed, pos) {\n\t    if (last_collapsed && ! this.tmp.have_collapsed && \"string\" === typeof this.citation.opt[\"after-collapse-delimiter\"]) {\n\t        this.tmp.splice_delimiter = this.citation.opt[\"after-collapse-delimiter\"];\n\t    } else if (this.tmp.use_cite_group_delimiter) {\n\t        this.tmp.splice_delimiter = this.citation.opt.cite_group_delimiter;\n\t    } else if (this.tmp.have_collapsed && this.opt.xclass === \"in-text\" && this.opt.update_mode !== CSL.NUMERIC) {\n\t        this.tmp.splice_delimiter = \", \";\n\t    } else if (this.tmp.cite_locales[pos - 1]) {\n\t        var alt_affixes = this.tmp.cite_affixes[this.tmp.area][this.tmp.cite_locales[pos - 1]];\n\t        if (alt_affixes && alt_affixes.delimiter) {\n\t            this.tmp.splice_delimiter = alt_affixes.delimiter;\n\t        }\n\t    } else if (!this.tmp.splice_delimiter) {\n\t        this.tmp.splice_delimiter = \"\";\n\t    }\n\t    return this.tmp.splice_delimiter;\n\t};\n\tCSL.getCitationCluster = function (inputList, citationID) {\n\t    var result, objects, myparams, len, pos, item, last_collapsed, params, empties, composite, compie, myblobs, Item, llen, ppos, obj, preceding_item, txt_esc, error_object;\n\t    inputList = inputList ? inputList : [];\n\t    this.tmp.last_primary_names_string = false;\n\t    txt_esc = CSL.getSafeEscape(this);\n\t    this.tmp.area = \"citation\";\n\t    this.tmp.root = \"citation\";\n\t    result = \"\";\n\t    objects = [];\n\t    this.tmp.last_suffix_used = \"\";\n\t    this.tmp.last_names_used = [];\n\t    this.tmp.last_years_used = [];\n\t    this.tmp.backref_index = [];\n\t    this.tmp.cite_locales = [];\n\t    this.output.checkNestedBrace = new CSL.checkNestedBrace(this);\n\t    var use_layout_prefix = this.output.checkNestedBrace.update(this.citation.opt.layout_prefix);\n\t    var suppressTrailingPunctuation = false;\n\t    if (this.opt.xclass === \"note\" && this.citation.opt.suppressTrailingPunctuation) {\n\t        suppressTrailingPunctuation = true;\n\t    }\n\t    if (citationID) {\n\t        if (this.registry.citationreg.citationById[citationID].properties[\"suppress-trailing-punctuation\"]) {\n\t            suppressTrailingPunctuation = true;\n\t        }\n\t    }\n\t    if (this.opt.xclass === \"note\") {\n\t        var parasets = [];\n\t        var lastTitle = false;\n\t        var lastPosition = false;\n\t        var lastID = false;\n\t        var lst = [];\n\t        for (var i=0, ilen = inputList.length; i < ilen; i += 1) {\n\t            var type = inputList[i][0].type;\n\t            var title = inputList[i][0].title;\n\t            var position = inputList[i][1].position;\n\t            var id = inputList[i][0].id;\n\t            if (title && type === \"legal_case\" && id !== lastID && position) {\n\t                if (title !== lastTitle || parasets.length === 0) {\n\t                    lst = [];\n\t                    parasets.push(lst);\n\t                }\n\t                lst.push(inputList[i][1]);\n\t            }\n\t            lastTitle = title;\n\t            lastPosition = position;\n\t            lastID = id;\n\t        }\n\t        for (i=0, ilen=parasets.length; i < ilen; i += 1) {\n\t            lst = parasets[i];\n\t            if (lst.length < 2) {\n\t                continue;\n\t            }\n\t            var locatorInLastPosition = lst.slice(-1)[0].locator;\n\t            if (locatorInLastPosition) {\n\t                for (var j=0, jlen=lst.length - 1; j < jlen; j += 1) {\n\t                    if (lst[j].locator) {\n\t                        locatorInLastPosition = false;\n\t                    }\n\t                }\n\t            }\n\t            if (locatorInLastPosition) {\n\t                lst[0].locator = locatorInLastPosition;\n\t                delete lst.slice(-1)[0].locator;\n\t                lst[0].label = lst.slice(-1)[0].label;\n\t                if (lst.slice(-1)[0].label) {\n\t                    delete lst.slice(-1)[0].label;\n\t                }\n\t            }\n\t       }\n\t    }\n\t    myparams = [];\n\t    len = inputList.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        Item = inputList[pos][0];\n\t        item = inputList[pos][1];\n\t        item = CSL.parseLocator.call(this, item);\n\t        last_collapsed = this.tmp.have_collapsed;\n\t        params = {};\n\t        this.tmp.shadow_numbers = {};\n\t        if (!this.tmp.just_looking && this.opt.hasPlaceholderTerm) {\n\t            var output = this.output;\n\t            this.output = new CSL.Output.Queue(this);\n\t            this.output.adjust = new CSL.Output.Queue.adjust();\n\t            CSL.getAmbiguousCite.call(this, Item, null, false, item);\n\t            this.output = output;\n\t        }\n\t        this.tmp.in_cite_predecessor = false;\n\t        if (pos > 0) {\n\t            CSL.getCite.call(this, Item, item, \"\" + inputList[(pos - 1)][0].id, true);\n\t        } else {\n\t            this.tmp.term_predecessor = false;\n\t            CSL.getCite.call(this, Item, item, null, true);\n\t        }\n\t        if (!this.tmp.cite_renders_content) {\n\t            error_object = {\n\t                citationID: \"\" + this.tmp.citation_id,\n\t                index: this.tmp.citation_pos,\n\t                noteIndex: this.tmp.citation_note_index,\n\t                itemID: \"\" + Item.id,\n\t                citationItems_pos: pos,\n\t                error_code: CSL.ERROR_NO_RENDERED_FORM\n\t            };\n\t            this.tmp.citation_errors.push(error_object);\n\t        }\n\t        if (pos === (inputList.length - 1)) {\n\t            this.parallel.ComposeSet();\n\t        }\n\t        params.splice_delimiter = CSL.getSpliceDelimiter.call(this, last_collapsed, pos);\n\t        if (item && item[\"author-only\"]) {\n\t            this.tmp.suppress_decorations = true;\n\t        }\n\t        if (pos > 0) {\n\t            preceding_item = inputList[pos - 1][1];\n\t            var precedingEndsInPeriodOrComma = preceding_item.suffix && [\".\", \",\"].indexOf(preceding_item.suffix.slice(-1)) > -1;\n\t            var currentStartsWithPeriodOrComma = !preceding_item.suffix && item.prefix && [\".\", \",\"].indexOf(item.prefix.slice(0, 1)) > -1;\n\t            if (precedingEndsInPeriodOrComma || currentStartsWithPeriodOrComma) {\n\t                var spaceidx = params.splice_delimiter.indexOf(\" \");\n\t                if (spaceidx > -1 && !currentStartsWithPeriodOrComma) {\n\t                    params.splice_delimiter = params.splice_delimiter.slice(spaceidx);\n\t                } else {\n\t                    params.splice_delimiter = \"\";\n\t                }\n\t            }\n\t        }\n\t        params.suppress_decorations = this.tmp.suppress_decorations;\n\t        params.have_collapsed = this.tmp.have_collapsed;\n\t        myparams.push(params);\n\t    }\n\t    this.tmp.has_purged_parallel = false;\n\t    this.parallel.PruneOutputQueue(this);\n\t    empties = 0;\n\t    myblobs = this.output.queue.slice();\n\t    var fakeblob = {\n\t        strings: {\n\t            suffix: this.citation.opt.layout_suffix,\n\t            delimiter: this.citation.opt.layout_delimiter                \n\t        }\n\t    };\n\t    var suffix = this.citation.opt.layout_suffix;\n\t    var last_locale = this.tmp.cite_locales[this.tmp.cite_locales.length - 1];\n\t    if (last_locale && this.tmp.cite_affixes[this.tmp.area][last_locale] && this.tmp.cite_affixes[this.tmp.area][last_locale].suffix) {\n\t        suffix = this.tmp.cite_affixes[this.tmp.area][last_locale].suffix;\n\t    }\n\t    if (CSL.TERMINAL_PUNCTUATION.slice(0, -1).indexOf(suffix.slice(0, 1)) > -1) {\n\t        suffix = suffix.slice(0, 1);\n\t    }\n\t    var delimiter = this.citation.opt.layout_delimiter;\n\t    if (!delimiter) {\n\t        delimiter = \"\";\n\t    }\n\t    if (CSL.TERMINAL_PUNCTUATION.slice(0, -1).indexOf(delimiter.slice(0, 1)) > -1) {\n\t        delimiter = delimiter.slice(0, 1);\n\t    }\n\t    suffix = this.output.checkNestedBrace.update(suffix);\n\t    for (var i=0,ilen=this.output.queue.length;i<ilen;i+=1) {\n\t        CSL.Output.Queue.purgeEmptyBlobs(this.output.queue[i]);\n\t    }\n\t    if (!this.tmp.suppress_decorations && this.output.queue.length) {\n\t        if (!(this.opt.development_extensions.apply_citation_wrapper\n\t              && this.sys.wrapCitationEntry\n\t               && !this.tmp.just_looking\n\t              && this.tmp.area === \"citation\")) { \n\t            if (!suppressTrailingPunctuation) {\n\t                this.output.queue[this.output.queue.length - 1].strings.suffix = suffix;\n\t            }\n\t            this.output.queue[0].strings.prefix = use_layout_prefix;\n\t        }\n\t    }\n\t    if (this.opt.development_extensions.clean_up_csl_flaws) {\n\t        for (var j=0,jlen=this.output.queue.length;j<jlen;j+=1) {\n\t            this.output.adjust.upward(this.output.queue[j]);\n\t            this.output.adjust.leftward(this.output.queue[j]);\n\t            this.output.adjust.downward(this.output.queue[j]);\n\t            this.tmp.last_chr = this.output.adjust.fix(this.output.queue[j]);\n\t        }\n\t    }\n\t    for (pos = 0, len = myblobs.length; pos < len; pos += 1) {\n\t        var buffer = [];\n\t        this.output.queue = [myblobs[pos]];\n\t        this.tmp.suppress_decorations = myparams[pos].suppress_decorations;\n\t        this.tmp.splice_delimiter = myparams[pos].splice_delimiter;\n\t        if (myblobs[pos].parallel_delimiter) {\n\t            this.tmp.splice_delimiter = myblobs[pos].parallel_delimiter;\n\t        }\n\t        this.tmp.have_collapsed = myparams[pos].have_collapsed;\n\t        composite = this.output.string(this, this.output.queue);\n\t        this.tmp.suppress_decorations = false;\n\t        if (\"string\" === typeof composite) {\n\t            this.tmp.suppress_decorations = false;\n\t            return composite;\n\t        }\n\t        if (\"object\" === typeof composite && composite.length === 0 && !item[\"suppress-author\"]) {\n\t            if (this.tmp.has_purged_parallel) {\n\t                composite.push(\"\");\n\t            } else {\n\t                var errStr = \"[CSL STYLE ERROR: reference with no printed form.]\";\n\t                var preStr = pos === 0 ? txt_esc(this.citation.opt.layout_prefix) : \"\";\n\t                var sufStr = pos === (myblobs.length - 1) ? txt_esc(this.citation.opt.layout_suffix) : \"\";\n\t                composite.push(preStr + errStr + sufStr);\n\t            }\n\t        }\n\t        if (buffer.length && \"string\" === typeof composite[0]) {\n\t            composite.reverse();\n\t            var tmpstr = composite.pop();\n\t            if (tmpstr && tmpstr.slice(0, 1) === \",\") {\n\t                buffer.push(tmpstr);\n\t            } else if (\"string\" == typeof buffer.slice(-1)[0] && buffer.slice(-1)[0].slice(-1) === \",\") {\n\t                buffer.push(\" \" + tmpstr);\n\t            } else if (tmpstr) {\n\t                buffer.push(txt_esc(this.tmp.splice_delimiter) + tmpstr);\n\t            }\n\t        } else {\n\t            composite.reverse();\n\t            compie = composite.pop();\n\t            if (\"undefined\" !== typeof compie) {\n\t                if (buffer.length && \"string\" === typeof buffer[buffer.length - 1]) {\n\t                    buffer[buffer.length - 1] += compie.successor_prefix;\n\t                }\n\t                buffer.push(compie);\n\t            }\n\t        }\n\t        llen = composite.length;\n\t        for (ppos = 0; ppos < llen; ppos += 1) {\n\t            obj = composite[ppos];\n\t            if (\"string\" === typeof obj) {\n\t                buffer.push(txt_esc(this.tmp.splice_delimiter) + obj);\n\t                continue;\n\t            }\n\t            compie = composite.pop();\n\t            if (\"undefined\" !== typeof compie) {\n\t                buffer.push(compie);\n\t            }\n\t        }\n\t        if (buffer.length === 0 && !inputList[pos][1][\"suppress-author\"]) {\n\t            empties += 1;\n\t        }\n\t        if (buffer.length > 1 && typeof buffer[0] !== \"string\") {\n\t            buffer = [this.output.renderBlobs(buffer)];\n\t        }\n\t        if (buffer.length) {\n\t            if (\"string\" === typeof buffer[0]) {\n\t                if (pos > 0) {\n\t                    if (((myblobs.length-1) > pos && myparams[pos+1].have_collapsed) && !myparams[pos].have_collapsed) {\n\t                        this.tmp.splice_delimiter = myparams[pos-1].splice_delimiter;\n\t                    }\n\t                    buffer[0] = txt_esc(this.tmp.splice_delimiter) + buffer[0];\n\t                }\n\t            } else {\n\t                if (pos > 0) {\n\t                    buffer[0].splice_prefix = this.tmp.splice_delimiter;\n\t                } else {\n\t                    buffer[0].splice_prefix = \"\";\n\t                }\n\t            }\n\t        }\n\t        objects = objects.concat(buffer);\n\t    }\n\t    result += this.output.renderBlobs(objects);\n\t    if (result) {\n\t        if (!this.tmp.suppress_decorations) {\n\t            len = this.citation.opt.layout_decorations.length;\n\t            for (pos = 0; pos < len; pos += 1) {\n\t                params = this.citation.opt.layout_decorations[pos];\n\t                if (params[1] === \"normal\") {\n\t                    continue;\n\t                }\n\t                if (!item || !item[\"author-only\"]) {\n\t                    result = this.fun.decorate[params[0]][params[1]](this, result);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    this.tmp.suppress_decorations = false;\n\t    return result;\n\t};\n\tCSL.getCite = function (Item, item, prevItemID, blockShadowNumberReset) {\n\t    var next, error_object;\n\t    this.tmp.cite_renders_content = false;\n\t    this.parallel.StartCite(Item, item, prevItemID);\n\t    CSL.citeStart.call(this, Item, item, blockShadowNumberReset);\n\t    next = 0;\n\t    this.tmp.name_node = {};\n\t    this.nameOutput = new CSL.NameOutput(this, Item, item);\n\t    while (next < this[this.tmp.area].tokens.length) {\n\t        next = CSL.tokenExec.call(this, this[this.tmp.area].tokens[next], Item, item);\n\t    }\n\t    CSL.citeEnd.call(this, Item, item);\n\t    this.parallel.CloseCite(this);\n\t    if (!this.tmp.cite_renders_content && !this.tmp.just_looking) {\n\t        if (this.tmp.area === \"bibliography\") {\n\t            error_object = {\n\t                index: this.tmp.bibliography_pos,\n\t                itemID: \"\" + Item.id,\n\t                error_code: CSL.ERROR_NO_RENDERED_FORM\n\t            };\n\t            this.tmp.bibliography_errors.push(error_object);\n\t        }\n\t    }\n\t    return \"\" + Item.id;\n\t};\n\tCSL.citeStart = function (Item, item, blockShadowNumberReset) {\n\t    if (!blockShadowNumberReset) {\n\t        this.tmp.shadow_numbers = {};\n\t    }\n\t    this.tmp.disambiguate_count = 0;\n\t    this.tmp.disambiguate_maxMax = 0;\n\t    this.tmp.same_author_as_previous_cite = false;\n\t    if (!this.tmp.suppress_decorations) {\n\t        this.tmp.subsequent_author_substitute_ok = true;\n\t    } else {\n\t        this.tmp.subsequent_author_substitute_ok = false;\n\t    }\n\t    this.tmp.lastchr = \"\";\n\t    if (this.tmp.area === \"citation\" && this.citation.opt.collapse && this.citation.opt.collapse.length) {\n\t        this.tmp.have_collapsed = true;\n\t    } else {\n\t        this.tmp.have_collapsed = false;\n\t    }\n\t    this.tmp.render_seen = false;\n\t    if (this.tmp.disambig_request  && ! this.tmp.disambig_override) {\n\t        this.tmp.disambig_settings = this.tmp.disambig_request;\n\t    } else if (this.registry.registry[Item.id] && ! this.tmp.disambig_override) {\n\t        this.tmp.disambig_request = this.registry.registry[Item.id].disambig;\n\t        this.tmp.disambig_settings = this.registry.registry[Item.id].disambig;\n\t    } else {\n\t        this.tmp.disambig_settings = new CSL.AmbigConfig();\n\t    }\n\t    if (this.tmp.area !== 'citation') {\n\t        if (!this.registry.registry[Item.id]) {\n\t            this.tmp.disambig_restore = new CSL.AmbigConfig();\n\t        } else {\n\t            this.tmp.disambig_restore = CSL.cloneAmbigConfig(this.registry.registry[Item.id].disambig);\n\t            if (this.tmp.area === 'bibliography' && this.tmp.disambig_settings && this.tmp.disambig_override) {\n\t                if (this.opt[\"disambiguate-add-names\"]) {\n\t                    this.tmp.disambig_settings.names = this.registry.registry[Item.id].disambig.names.slice();\n\t                    this.tmp.disambig_request.names = this.registry.registry[Item.id].disambig.names.slice();\n\t                }\n\t                if (this.opt[\"disambiguate-add-givenname\"]) {\n\t                    this.tmp.disambig_request = this.tmp.disambig_settings;\n\t                    this.tmp.disambig_settings.givens = this.registry.registry[Item.id].disambig.givens.slice();\n\t                    this.tmp.disambig_request.givens = this.registry.registry[Item.id].disambig.givens.slice();\n\t                    for (var i=0,ilen=this.tmp.disambig_settings.givens.length;i<ilen;i+=1) {\n\t                        this.tmp.disambig_settings.givens[i] = this.registry.registry[Item.id].disambig.givens[i].slice();\n\t                    }\n\t                    for (var i=0,ilen=this.tmp.disambig_request.givens.length;i<ilen;i+=1) {\n\t                        this.tmp.disambig_request.givens[i] = this.registry.registry[Item.id].disambig.givens[i].slice();\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    this.tmp.names_used = [];\n\t    this.tmp.nameset_counter = 0;\n\t    this.tmp.years_used = [];\n\t    this.tmp.names_max.clear();\n\t    this.tmp.splice_delimiter = this[this.tmp.area].opt.layout_delimiter;\n\t    this.bibliography_sort.keys = [];\n\t    this.citation_sort.keys = [];\n\t    this.tmp.has_done_year_suffix = false;\n\t    this.tmp.last_cite_locale = false;\n\t    if (!this.tmp.just_looking && item && !item.position && this.registry.registry[Item.id]) {\n\t        this.tmp.disambig_restore = CSL.cloneAmbigConfig(this.registry.registry[Item.id].disambig);\n\t    }\n\t    this.tmp.first_name_string = false;\n\t    this.tmp.authority_stop_last = 0;\n\t};\n\tCSL.citeEnd = function (Item, item) {\n\t    if (this.tmp.disambig_restore) {\n\t        this.registry.registry[Item.id].disambig.names = this.tmp.disambig_restore.names.slice();\n\t        this.registry.registry[Item.id].disambig.givens = this.tmp.disambig_restore.givens.slice();\n\t        for (var i=0,ilen=this.registry.registry[Item.id].disambig.givens.length;i<ilen;i+=1) {\n\t            this.registry.registry[Item.id].disambig.givens[i] = this.tmp.disambig_restore.givens[i].slice();\n\t        }\n\t    }\n\t    this.tmp.disambig_restore = false;\n\t    if (item && item.suffix) {\n\t        this.tmp.last_suffix_used = item.suffix;\n\t    } else {\n\t        this.tmp.last_suffix_used = \"\";\n\t    }\n\t    this.tmp.last_years_used = this.tmp.years_used.slice();\n\t    this.tmp.last_names_used = this.tmp.names_used.slice();\n\t    this.tmp.cut_var = false;\n\t    this.tmp.disambig_request = false;\n\t    this.tmp.cite_locales.push(this.tmp.last_cite_locale);\n\t    if (this.tmp.issued_date && this.tmp.renders_collection_number) {\n\t        var buf = [];\n\t        for (var i = this.tmp.issued_date.list.length - 1; i > this.tmp.issued_date.pos; i += -1) {\n\t            buf.push(this.tmp.issued_date.list.pop());\n\t        }\n\t        this.tmp.issued_date.list.pop();\n\t        for (i = buf.length - 1; i > -1; i += -1) {\n\t            this.tmp.issued_date.list.push(buf.pop());\n\t        }\n\t        if (this.parallel.use_parallels) {\n\t            this.parallel.cite[\"issued\"] = false;\n\t        }\n\t    }\n\t    this.tmp.issued_date = false;\n\t    this.tmp.renders_collection_number = false;\n\t};\n\tCSL.Engine.prototype.makeBibliography = function (bibsection) {\n\t    var debug, ret, params, maxoffset, item, len, pos, tok, tokk, tokkk, entry_ids, entry_strings, bibliography_errors;\n\t    debug = false;\n\t    if (!this.bibliography.tokens.length) {\n\t        return false;\n\t    }\n\t    if (\"string\" === typeof bibsection) {\n\t        this.opt.citation_number_slug = bibsection;\n\t        bibsection = false;\n\t    }\n\t    ret = CSL.getBibliographyEntries.call(this, bibsection);\n\t    entry_ids = ret[0];\n\t    entry_strings = ret[1];\n\t    var done = ret[2];\n\t    params = {\n\t        \"maxoffset\": 0,\n\t        \"entryspacing\": this.bibliography.opt[\"entry-spacing\"],\n\t        \"linespacing\": this.bibliography.opt[\"line-spacing\"],\n\t        \"second-field-align\": false,\n\t        \"entry_ids\": entry_ids,\n\t        \"bibliography_errors\": this.tmp.bibliography_errors.slice(),\n\t        \"done\": done\n\t    };\n\t    if (this.bibliography.opt[\"second-field-align\"]) {\n\t        params[\"second-field-align\"] = this.bibliography.opt[\"second-field-align\"];\n\t    }\n\t    maxoffset = 0;\n\t    len = this.registry.reflist.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        item = this.registry.reflist[pos];\n\t        if (item.offset > params.maxoffset) {\n\t            params.maxoffset = item.offset;\n\t        }\n\t    }\n\t    if (this.bibliography.opt.hangingindent) {\n\t        params.hangingindent = this.bibliography.opt.hangingindent;\n\t    }\n\t    params.bibstart = this.fun.decorate.bibstart;\n\t    params.bibend = this.fun.decorate.bibend;\n\t    this.opt.citation_number_slug = false;\n\t    return [params, entry_strings];\n\t};\n\tCSL.getBibliographyEntries = function (bibsection) {\n\t    var ret, input, include, anymatch, allmatch, bib_entry, res, len, pos, item, llen, ppos, spec, lllen, pppos, bib_layout, topblobs, all_item_ids, entry_item_ids, debug, collapse_parallel, i, ilen, siblings, skips, sortedItems, eyetem, chr, entry_item_data, j, jlen, newIDs, originalIDs;\n\t    ret = [];\n\t    entry_item_data = [];\n\t    this.tmp.area = \"bibliography\";\n\t    this.tmp.root = \"bibliography\";\n\t    this.tmp.last_rendered_name = false;\n\t    this.tmp.bibliography_errors = [];\n\t    this.tmp.bibliography_pos = 0;\n\t    if (bibsection && bibsection.page_start && bibsection.page_length) {\n\t        input = this.registry.getSortedIds();        \n\t    } else {\n\t        input = this.retrieveItems(this.registry.getSortedIds());\n\t    }\n\t    this.tmp.disambig_override = true;\n\t    function eval_string(a, b) {\n\t        if (a === b) {\n\t            return true;\n\t        }\n\t        return false;\n\t    }\n\t    function eval_list(a, lst) {\n\t        lllen = lst.length;\n\t        for (pppos = 0; pppos < lllen; pppos += 1) {\n\t            if (eval_string(a, lst[pppos])) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t    function eval_spec(a, b) {\n\t        if ((a === \"none\" || !a) && !b) {\n\t            return true;\n\t        }\n\t        if (\"string\" === typeof b) {\n\t            return eval_string(a, b);\n\t        } else if (!b) {\n\t            return false;\n\t        } else {\n\t            return eval_list(a, b);\n\t        }\n\t    }\n\t    skips = {};\n\t    var page_item_count;\n\t    if (bibsection && bibsection.page_start && bibsection.page_length) {\n\t        page_item_count = 0;\n\t        if (bibsection.page_start !== true) {\n\t            for (i = 0, ilen = input.length; i < ilen; i += 1) {\n\t                skips[input[i]] = true;\n\t                if (bibsection.page_start == input[i]) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    var processed_item_ids = [];\n\t    for (i = 0, ilen = input.length; i < ilen; i += 1) {\n\t        if (bibsection && bibsection.page_start && bibsection.page_length) {\n\t            if (skips[input[i]]) {\n\t                continue;\n\t            }\n\t            item = this.retrieveItem(input[i]);\n\t            if (page_item_count === bibsection.page_length) {\n\t                break;\n\t            }\n\t        } else {\n\t            item = input[i];\n\t            if (skips[item.id]) {\n\t                continue;\n\t            }\n\t        }\n\t        if (bibsection) {\n\t            include = true;\n\t            if (bibsection.include) {\n\t                include = false;\n\t                for (j = 0, jlen = bibsection.include.length; j < jlen; j += 1) {\n\t                    spec = bibsection.include[j];\n\t                    if (eval_spec(spec.value, item[spec.field])) {\n\t                        include = true;\n\t                        break;\n\t                    }\n\t                }\n\t            } else if (bibsection.exclude) {\n\t                anymatch = false;\n\t                for (j = 0, jlen = bibsection.exclude.length; j < jlen; j += 1) {\n\t                    spec = bibsection.exclude[j];\n\t                    if (eval_spec(spec.value, item[spec.field])) {\n\t                        anymatch = true;\n\t                        break;\n\t                    }\n\t                }\n\t                if (anymatch) {\n\t                    include = false;\n\t                }\n\t            } else if (bibsection.select) {\n\t                include = false;\n\t                allmatch = true;\n\t                for (j = 0, jlen = bibsection.select.length; j < jlen; j += 1) {\n\t                    spec = bibsection.select[j];\n\t                    if (!eval_spec(spec.value, item[spec.field])) {\n\t                        allmatch = false;\n\t                    }\n\t                }\n\t                if (allmatch) {\n\t                    include = true;\n\t                }\n\t            }\n\t            if (bibsection.quash) {\n\t                allmatch = true;\n\t                for (j = 0, jlen = bibsection.quash.length; j < jlen; j += 1) {\n\t                    spec = bibsection.quash[j];\n\t                    if (!eval_spec(spec.value, item[spec.field])) {\n\t                        allmatch = false;\n\t                    }\n\t                }\n\t                if (allmatch) {\n\t                    include = false;\n\t                }\n\t            }\n\t            if (!include) {\n\t                continue;\n\t            }\n\t        }\n\t        bib_entry = new CSL.Token(\"group\", CSL.START);\n\t        bib_entry.decorations = [[\"@bibliography\", \"entry\"]].concat(this.bibliography.opt.layout_decorations);\n\t        this.output.startTag(\"bib_entry\", bib_entry);\n\t        if (item.system_id && this.sys.embedBibliographyEntry) {\n\t            this.output.current.value().item_id = item.system_id;\n\t        } else {\n\t            this.output.current.value().system_id = item.id;\n\t        }\n\t        sortedItems = [[{id: \"\" + item.id}, item]];\n\t        entry_item_ids = [];\n\t        if (this.registry.registry[item.id].master \n\t            && !(bibsection && bibsection.page_start && bibsection.page_length)) {\n\t            collapse_parallel = true;\n\t            this.parallel.StartCitation(sortedItems);\n\t            this.output.queue[0].strings.delimiter = \", \";\n\t            this.tmp.term_predecessor = false;\n\t            entry_item_ids.push(\"\" + CSL.getCite.call(this, item));\n\t            skips[item.id] = true;\n\t            siblings = this.registry.registry[item.id].siblings;\n\t            for (j = 0, jlen = siblings.length; j < jlen; j += 1) {\n\t                var k = this.registry.registry[item.id].siblings[j];\n\t                eyetem = this.retrieveItem(k);\n\t                entry_item_ids.push(\"\" + CSL.getCite.call(this, eyetem));\n\t                skips[eyetem.id] = true;\n\t            }\n\t            this.parallel.ComposeSet();\n\t            this.parallel.PruneOutputQueue();\n\t        } else if (!this.registry.registry[item.id].siblings) {\n\t            this.parallel.StartCitation(sortedItems);\n\t            this.tmp.term_predecessor = false;\n\t            entry_item_ids.push(\"\" + CSL.getCite.call(this, item));\n\t            if (bibsection && bibsection.page_start && bibsection.page_length) {\n\t                page_item_count += 1;\n\t            }\n\t        }\n\t        entry_item_data.push(\"\");\n\t        this.tmp.bibliography_pos += 1;\n\t        processed_item_ids.push(entry_item_ids);\n\t        this.output.endTag(\"bib_entry\");\n\t        if (this.output.queue[0].blobs.length && this.output.queue[0].blobs[0].blobs.length) {\n\t            if (collapse_parallel || !this.output.queue[0].blobs[0].blobs[0].strings) {\n\t                topblobs = this.output.queue[0].blobs;\n\t                collapse_parallel = false;\n\t            } else {\n\t                topblobs = this.output.queue[0].blobs[0].blobs;\n\t            }\n\t            topblobs[0].strings.prefix = this.bibliography.opt.layout_prefix + topblobs[0].strings.prefix;\n\t        }\n\t        for (var j=0,jlen=this.output.queue.length;j<jlen;j+=1) {\n\t            CSL.Output.Queue.purgeEmptyBlobs(this.output.queue[j]);\n\t        }\n\t        for (var j=0,jlen=this.output.queue.length;j<jlen;j+=1) {\n\t            this.output.adjust.upward(this.output.queue[j]);\n\t            this.output.adjust.leftward(this.output.queue[j]);\n\t            this.output.adjust.downward(this.output.queue[j],true);\n\t            this.output.adjust.fix(this.output.queue[j]);\n\t        }\n\t        res = this.output.string(this, this.output.queue)[0];\n\t        if (!res && this.opt.update_mode === CSL.NUMERIC) {\n\t            var err = (ret.length + 1) + \". [CSL STYLE ERROR: reference with no printed form.]\"\n\t            res = CSL.Output.Formats[this.opt.mode][\"@bibliography/entry\"](this, err) \n\t        }\n\t        if (res) {\n\t            ret.push(res);\n\t        }\n\t    }\n\t    var done = false;\n\t    if (bibsection && bibsection.page_start && bibsection.page_length) {\n\t        var last_expected_id = input.slice(-1)[0];\n\t        var last_seen_id = processed_item_ids.slice(-1)[0];\n\t        if (!last_expected_id || !last_seen_id || last_expected_id == last_seen_id) {\n\t            done = true;\n\t        }\n\t    }\n\t    this.tmp.disambig_override = false;\n\t    return [processed_item_ids, ret, done];\n\t};\n\tCSL.Engine.prototype.setCitationId = function (citation, force) {\n\t    var ret, id, direction;\n\t    ret = false;\n\t    if (!citation.citationID || force) {\n\t        id = Math.floor(Math.random() * 100000000000000);\n\t        while (true) {\n\t            direction = 0;\n\t            if (!this.registry.citationreg.citationById[id]) {\n\t                citation.citationID = \"a\" + id.toString(32);\n\t                break;\n\t            } else if (!direction && id < 50000000000000) {\n\t                direction = 1;\n\t            } else {\n\t                direction = -1;\n\t            }\n\t            if (direction === 1) {\n\t                id += 1;\n\t            } else {\n\t                id += -1;\n\t            }\n\t        }\n\t        ret = \"\" + id;\n\t    }\n\t    this.registry.citationreg.citationById[citation.citationID] = citation;\n\t    return ret;\n\t};\n\tCSL.Engine.prototype.rebuildProcessorState = function (citations, mode, uncitedItemIDs) {\n\t    if (!citations) {\n\t        citations = [];\n\t    }\n\t    if (!mode) {\n\t        mode = 'html';\n\t    }\n\t    var doneIDs = {};\n\t    var itemIDs = [];\n\t    for (var i=0,ilen=citations.length;i<ilen;i+=1) {\n\t        for (var j=0,jlen=citations[i].citationItems.length;j<jlen;j+=1) {\n\t            var itemID = \"\" + citations[i].citationItems[j].id;\n\t            if (!doneIDs[itemID]) {\n\t                itemIDs.push(itemID);\n\t            }\n\t            doneIDs[itemID] = true;\n\t        }\n\t    }\n\t    this.updateItems(itemIDs);\n\t    var pre = [];\n\t    var post = [];\n\t    var ret = [];\n\t    var oldMode = this.opt.mode;\n\t    this.setOutputFormat(mode);\n\t    for (var i=0,ilen=citations.length;i<ilen;i+=1) {\n\t        var res = this.processCitationCluster(citations[i],pre,post,CSL.ASSUME_ALL_ITEMS_REGISTERED);\n\t        pre.push([citations[i].citationID,citations[i].properties.noteIndex]);\n\t        for (var j=0,jlen=res[1].length;j<jlen;j+=1) {\n\t            var index = res[1][j][0];\n\t            ret[index] = [\n\t                pre[index][0],\n\t                pre[index][1],\n\t                res[1][j][1]\n\t            ];\n\t        }\n\t    }\n\t    this.updateUncitedItems(uncitedItemIDs);\n\t    this.setOutputFormat(oldMode);\n\t    return ret;\n\t}\n\tCSL.Engine.prototype.restoreProcessorState = function (citations) {\n\t    var i, ilen, j, jlen, item, Item, newitem, citationList, itemList, sortedItems;\n\t    citationList = [];\n\t    itemList = [];\n\t    if (!citations) {\n\t        citations = [];\n\t    }\n\t    var indexNumbers = [];\n\t    var citationIds = {};\n\t    for (i = 0, ilen = citations.length; i < ilen; i += 1) {\n\t        if (citationIds[citations[i].citationID]) {\n\t            this.setCitationId(citations[i], true);\n\t        }\n\t        citationIds[citations[i].citationID] = true;\n\t        indexNumbers.push(citations[i].properties.index);\n\t    }\n\t    var oldCitations = citations.slice();\n\t    oldCitations.sort(\n\t        function (a,b) {\n\t            if (a.properties.index < b.properties.index) {\n\t                return -1;\n\t            } else if (a.properties.index > b.properties.index) {\n\t                return 1;\n\t            } else {\n\t                return 0;\n\t            }\n\t        }\n\t    );\n\t    for (i = 0, ilen = oldCitations.length; i < ilen; i += 1) {\n\t        oldCitations[i].properties.index = i;\n\t    }\n\t    for (i = 0, ilen = oldCitations.length; i < ilen; i += 1) {\n\t        sortedItems = [];\n\t        for (j = 0, jlen = oldCitations[i].citationItems.length; j < jlen; j += 1) {\n\t            item = oldCitations[i].citationItems[j];\n\t            if (\"undefined\" === typeof item.sortkeys) {\n\t                item.sortkeys = [];\n\t            }\n\t            Item = this.retrieveItem(\"\" + item.id);\n\t            newitem = [Item, item];\n\t            sortedItems.push(newitem);\n\t            oldCitations[i].citationItems[j].item = Item;\n\t            itemList.push(\"\" + item.id);\n\t        }\n\t        if (!oldCitations[i].properties.unsorted) {\n\t            sortedItems.sort(this.citation.srt.compareCompositeKeys);\n\t        }\n\t        oldCitations[i].sortedItems = sortedItems;\n\t        this.registry.citationreg.citationById[oldCitations[i].citationID] = oldCitations[i];\n\t    }\n\t    this.updateItems(itemList);\n\t    for (i = 0, ilen = citations.length; i < ilen; i += 1) {\n\t        citationList.push([\"\" + citations[i].citationID, citations[i].properties.noteIndex]);\n\t    }\n\t    var ret = [];\n\t    if (citations && citations.length) {\n\t        ret = this.processCitationCluster(citations[0], [], citationList.slice(1));\n\t    } else {\n\t        this.registry = new CSL.Registry(this);\n\t        this.tmp = new CSL.Engine.Tmp();\n\t        this.disambiguate = new CSL.Disambiguation(this);\n\t    }\n\t    return ret;\n\t};\n\tCSL.Engine.prototype.updateItems = function (idList, nosort, rerun_ambigs, implicitUpdate) {\n\t    var debug = false;\n\t    var oldArea = this.tmp.area;\n\t    var oldRoot = this.tmp.root;\n\t    var oldExtension = this.tmp.extension;\n\t    this.tmp.area = \"citation\";\n\t    this.tmp.root = \"citation\";\n\t    this.tmp.extension = \"\";\n\t    if (!implicitUpdate) {\n\t        this.tmp.loadedItemIDs = {};\n\t    }\n\t    this.registry.init(idList);\n\t\tif (rerun_ambigs) {\n\t\t\tfor (var ambig in this.registry.ambigcites) {\n\t\t\t\tthis.registry.ambigsTouched[ambig] = true;\n\t\t\t}\n\t\t}\n\t    this.registry.dodeletes(this.registry.myhash);\n\t    this.registry.doinserts(this.registry.mylist);\n\t    this.registry.dorefreshes();\n\t    this.registry.rebuildlist();\n\t    this.registry.setsortkeys();\n\t    this.registry.setdisambigs();\n\t    if (!nosort) {\n\t        this.registry.sorttokens();\n\t    }\n\t    this.registry.renumber();\n\t    this.tmp.extension = oldExtension;\n\t    this.tmp.area = oldArea;\n\t    this.tmp.root = oldRoot;\n\t    return this.registry.getSortedIds();\n\t};\n\tCSL.Engine.prototype.updateUncitedItems = function (idList, nosort) {\n\t    var debug = false;\n\t    var oldArea = this.tmp.area;\n\t    var oldRoot = this.tmp.root;\n\t    var oldExtension = this.tmp.extension;\n\t    this.tmp.area = \"citation\";\n\t    this.tmp.root = \"citation\"\n\t    this.tmp.extension = \"\"\n\t    this.tmp.loadedItemIDs = {};\n\t    if (!idList) {\n\t        idList = [];\n\t    }\n\t    if (\"object\" == typeof idList) {\n\t        if (\"undefined\" == typeof idList.length) {\n\t            var idHash = idList;\n\t            idList = [];\n\t            for (var key in idHash) {\n\t                idList.push(key);\n\t            }\n\t        } else if (\"number\" == typeof idList.length) {\n\t            var idHash = {};\n\t            for (var i=0,ilen=idList.length;i<ilen;i+=1) {\n\t                idHash[idList[i]] = true;\n\t            }\n\t        }\n\t    }\n\t    this.registry.init(idList, true);\n\t    this.registry.dopurge(idHash);\n\t    this.registry.doinserts(this.registry.mylist);\n\t    this.registry.dorefreshes();\n\t    this.registry.rebuildlist();\n\t    this.registry.setsortkeys();\n\t    this.registry.setdisambigs();\n\t    if (!nosort) {\n\t        this.registry.sorttokens();\n\t    }\n\t    this.registry.renumber();\n\t    this.tmp.extension = oldExtension;\n\t    this.tmp.area = oldArea;\n\t    this.tmp.root = oldRoot;\n\t    return this.registry.getSortedIds();\n\t};\n\tCSL.localeResolve = function (langstr, defaultLocale) {\n\t    var ret, langlst;\n\t    if (!defaultLocale) {\n\t        defaultLocale = \"en-US\";\n\t    }\n\t    if (!langstr) {\n\t        langstr = defaultLocale;\n\t    }\n\t    ret = {};\n\t    langlst = langstr.split(/[\\-_]/);\n\t    ret.base = CSL.LANG_BASES[langlst[0]];\n\t    if (\"undefined\" === typeof ret.base) {\n\t        return {base:defaultLocale, best:langstr, bare:langlst[0]};\n\t    }\n\t    if (langlst.length === 1) {\n\t        ret.generic = true;\n\t    }\n\t    if (langlst.length === 1 || langlst[1] === \"x\") {\n\t        ret.best = ret.base.replace(\"_\", \"-\");\n\t    } else {\n\t        ret.best = langlst.slice(0, 2).join(\"-\");\n\t    }\n\t    ret.base = ret.base.replace(\"_\", \"-\");\n\t    ret.bare = langlst[0];\n\t    return ret;\n\t};\n\tCSL.Engine.prototype.localeConfigure = function (langspec, beShy) {\n\t    var localexml;\n\t    if (beShy && this.locale[langspec.best]) {\n\t        return;\n\t    }\n\t    localexml = CSL.setupXml(this.sys.retrieveLocale(\"en-US\"));\n\t    this.localeSet(localexml, \"en-US\", langspec.best);\n\t    if (langspec.best !== \"en-US\") {\n\t        if (langspec.base !== langspec.best) {\n\t            localexml = CSL.setupXml(this.sys.retrieveLocale(langspec.base));\n\t            this.localeSet(localexml, langspec.base, langspec.best);\n\t        }\n\t        localexml = CSL.setupXml(this.sys.retrieveLocale(langspec.best));\n\t        this.localeSet(localexml, langspec.best, langspec.best);        \n\t    }\n\t    this.localeSet(this.cslXml, \"\", langspec.best);\n\t    this.localeSet(this.cslXml, langspec.bare, langspec.best);\n\t    if (langspec.base !== langspec.best) {\n\t        this.localeSet(this.cslXml, langspec.base, langspec.best);\n\t    }\n\t    this.localeSet(this.cslXml, langspec.best, langspec.best);\n\t    if (\"undefined\" === typeof this.locale[langspec.best].terms[\"page-range-delimiter\"]) {\n\t        if ([\"fr\", \"pt\"].indexOf(langspec.best.slice(0, 2).toLowerCase()) > -1) {\n\t            this.locale[langspec.best].terms[\"page-range-delimiter\"] = \"-\";\n\t        } else {\n\t            this.locale[langspec.best].terms[\"page-range-delimiter\"] = \"\\u2013\";\n\t        }\n\t    }\n\t    if (\"undefined\" === typeof this.locale[langspec.best].terms[\"year-range-delimiter\"]) {\n\t        this.locale[langspec.best].terms[\"year-range-delimiter\"] = \"\\u2013\";\n\t    }\n\t    if (\"undefined\" === typeof this.locale[langspec.best].terms[\"citation-range-delimiter\"]) {\n\t        this.locale[langspec.best].terms[\"citation-range-delimiter\"] = \"\\u2013\";\n\t    }\n\t    if (this.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n\t        var localeLists = [\"default-locale\",\"locale-sort\",\"locale-translit\",\"locale-translat\"];\n\t        for (var i=0,ilen=localeLists.length;i<ilen;i+=1) {\n\t            for (var j=0,jlen=this.opt[localeLists[i]].length;j<jlen;j+=1) {\n\t                this.opt[localeLists[i]][j] = this.opt[localeLists[i]][j].toLowerCase();\n\t            }\n\t        }\n\t        this.opt.lang = this.opt.lang.toLowerCase();\n\t    }\n\t};\n\tCSL.Engine.prototype.localeSet = function (myxml, lang_in, lang_out) {\n\t    var blob, locale, nodes, attributes, pos, ppos, term, form, termname, styleopts, attr, date, attrname, len, genderform, target, i, ilen;\n\t    lang_in = lang_in.replace(\"_\", \"-\");\n\t    lang_out = lang_out.replace(\"_\", \"-\");\n\t    if (this.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n\t        lang_in = lang_in.toLowerCase();\n\t        lang_out = lang_out.toLowerCase();\n\t    }\n\t    if (!this.locale[lang_out]) {\n\t        this.locale[lang_out] = {};\n\t        this.locale[lang_out].terms = {};\n\t        this.locale[lang_out].opts = {};\n\t        this.locale[lang_out].opts[\"skip-words\"] = CSL.SKIP_WORDS;\n\t        if (!this.locale[lang_out].opts[\"leading-noise-words\"]) {\n\t            this.locale[lang_out].opts[\"leading-noise-words\"] = [];\n\t        }\n\t        this.locale[lang_out].dates = {};\n\t        this.locale[lang_out].ord = {'1.0.1':false,keys:{}};\n\t        this.locale[lang_out][\"noun-genders\"] = {};\n\t    }\n\t    locale = myxml.makeXml();\n\t    if (myxml.nodeNameIs(myxml.dataObj, 'locale')) {\n\t        locale = myxml.dataObj;\n\t    } else {\n\t        nodes = myxml.getNodesByName(myxml.dataObj, \"locale\");\n\t        for (pos = 0, len = myxml.numberofnodes(nodes); pos < len; pos += 1) {\n\t            blob = nodes[pos];\n\t            if (myxml.getAttributeValue(blob, 'lang', 'xml') === lang_in) {\n\t                locale = blob;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    nodes = myxml.getNodesByName(locale, 'type');\n\t    for (i = 0, ilen = myxml.numberofnodes(nodes); i < ilen; i += 1) {\n\t        var typenode = nodes[i];\n\t        var type = myxml.getAttributeValue(typenode, 'name');\n\t        var gender = myxml.getAttributeValue(typenode, 'gender');\n\t        this.opt.gender[type] = gender;\n\t    }\n\t    var hasCslOrdinals101 = myxml.getNodesByName(locale, 'term', 'ordinal').length;\n\t    if (hasCslOrdinals101) {\n\t        for (var key in this.locale[lang_out].ord.keys) {\n\t            delete this.locale[lang_out].terms[key];\n\t        }\n\t        this.locale[lang_out].ord = {\"1.0.1\":false,keys:{}};\n\t    }\n\t    nodes = myxml.getNodesByName(locale, 'term');\n\t    var ordinals101 = {\"last-digit\":{},\"last-two-digits\":{},\"whole-number\":{}};\n\t    var ordinals101_toggle = false;\n\t    var genderized_terms = {};\n\t    for (pos = 0, len = myxml.numberofnodes(nodes); pos < len; pos += 1) {\n\t        term = nodes[pos];\n\t        termname = myxml.getAttributeValue(term, 'name');\n\t        if (termname === \"sub verbo\") {\n\t            termname = \"sub-verbo\";\n\t        }\n\t        if (termname.slice(0,7) === \"ordinal\") {\n\t            var termstring = myxml.getNodeValue(term);\n\t            if (termname === \"ordinal\") {\n\t                ordinals101_toggle = true;\n\t            } else {\n\t                var match = myxml.getAttributeValue(term, 'match');\n\t                var termstub = termname.slice(8);\n\t                var genderform = myxml.getAttributeValue(term, 'gender-form');\n\t                if (!genderform) {\n\t                    genderform = \"neuter\";\n\t                }\n\t                if (!match) {\n\t                    match = \"last-two-digits\";\n\t                    if (termstub.slice(0,1) === \"0\") {\n\t                        match = \"last-digit\";\n\t                    }\n\t                }\n\t                if (termstub.slice(0,1) === \"0\") {\n\t                    termstub = termstub.slice(1);\n\t                }\n\t                if (!ordinals101[match][termstub]) {\n\t                    ordinals101[match][termstub] = {};\n\t                }\n\t                ordinals101[match][termstub][genderform] = termname;\n\t            }\n\t            this.locale[lang_out].ord.keys[termname] = true;\n\t        }\n\t        if (\"undefined\" === typeof this.locale[lang_out].terms[termname]) {\n\t            this.locale[lang_out].terms[termname] = {};\n\t        }\n\t        form = \"long\";\n\t        genderform = false;\n\t        if (myxml.getAttributeValue(term, 'form')) {\n\t            form = myxml.getAttributeValue(term, 'form');\n\t        }\n\t        if (myxml.getAttributeValue(term, 'gender-form')) {\n\t            genderform = myxml.getAttributeValue(term, 'gender-form');\n\t        }\n\t        if (myxml.getAttributeValue(term, 'gender')) {\n\t            this.locale[lang_out][\"noun-genders\"][termname] = myxml.getAttributeValue(term, 'gender');\n\t        }\n\t        if (genderform) {\n\t            this.locale[lang_out].terms[termname][genderform] = {};\n\t            this.locale[lang_out].terms[termname][genderform][form] = [];\n\t            target = this.locale[lang_out].terms[termname][genderform];\n\t            genderized_terms[termname] = true;\n\t        } else {\n\t            this.locale[lang_out].terms[termname][form] = [];\n\t            target = this.locale[lang_out].terms[termname];\n\t        }\n\t        if (myxml.numberofnodes(myxml.getNodesByName(term, 'multiple'))) {\n\t            target[form][0] = myxml.getNodeValue(term, 'single');\n\t            if (target[form][0].indexOf(\"%s\") > -1) {\n\t                this.opt.hasPlaceholderTerm = true;\n\t            }\n\t            target[form][1] = myxml.getNodeValue(term, 'multiple');\n\t            if (target[form][1].indexOf(\"%s\") > -1) {\n\t                this.opt.hasPlaceholderTerm = true;\n\t            }\n\t        } else {\n\t            target[form] = myxml.getNodeValue(term);\n\t            if (target[form].indexOf(\"%s\") > -1) {\n\t                this.opt.hasPlaceholderTerm = true;\n\t            }\n\t        }\n\t    }\n\t    if (ordinals101_toggle) {\n\t        for (var ikey in genderized_terms) {\n\t            var gender_segments = {};\n\t            var form_segments = 0;\n\t            for (var jkey in this.locale[lang_out].terms[ikey]) {\n\t                if ([\"masculine\",\"feminine\"].indexOf(jkey) > -1) {\n\t                    gender_segments[jkey] = this.locale[lang_out].terms[ikey][jkey];\n\t                } else {\n\t                    form_segments += 1;\n\t                }\n\t            }\n\t            if (!form_segments) {\n\t                if (gender_segments.feminine) {\n\t                    for (var jkey in gender_segments.feminine) {\n\t                        this.locale[lang_out].terms[ikey][jkey] = gender_segments.feminine[jkey];\n\t                    }\n\t                } else if (gender_segments.masculine) {\n\t                    for (var jkey in gender_segments.masculine) {\n\t                        this.locale[lang_out].terms[ikey][jkey] = gender_segments.masculine[jkey];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        this.locale[lang_out].ord['1.0.1'] = ordinals101;\n\t    }\n\t    for (termname in this.locale[lang_out].terms) {\n\t        for (i = 0, ilen = 2; i < ilen; i += 1) {\n\t            genderform = CSL.GENDERS[i];\n\t            if (this.locale[lang_out].terms[termname][genderform]) {\n\t                for (form in this.locale[lang_out].terms[termname]) {\n\t                    if (!this.locale[lang_out].terms[termname][genderform][form]) {\n\t                        this.locale[lang_out].terms[termname][genderform][form] = this.locale[lang_out].terms[termname][form];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    nodes = myxml.getNodesByName(locale, 'style-options');\n\t    for (pos = 0, len = myxml.numberofnodes(nodes); pos < len; pos += 1) {\n\t        if (true) {\n\t            styleopts = nodes[pos];\n\t            attributes = myxml.attributes(styleopts);\n\t            for (attrname in attributes) {\n\t                if (attributes.hasOwnProperty(attrname)) {\n\t                    if (attrname === \"@punctuation-in-quote\" || attrname === \"@limit-day-ordinals-to-day-1\") {\n\t                        if (attributes[attrname] === \"true\") {\n\t                            this.locale[lang_out].opts[attrname.slice(1)] = true;\n\t                        } else {\n\t                            this.locale[lang_out].opts[attrname.slice(1)] = false;\n\t                        }\n\t                    } else if (attrname === \"@jurisdiction-preference\") {\n\t                        var jurisdiction_preference = attributes[attrname].split(/\\s*,\\s*/);\n\t                        this.locale[lang_out].opts[attrname.slice(1)] = jurisdiction_preference;\n\t                    } else if (attrname === \"@skip-words\") {\n\t                        var skip_words = attributes[attrname].split(/\\s*,\\s*/);\n\t                        this.locale[lang_out].opts[attrname.slice(1)] = skip_words;\n\t                    } else if (attrname === \"@leading-noise-words\") {\n\t                        var val = attributes[attrname].split(/\\s*,\\s*/);\n\t                        this.locale[lang_out].opts[\"leading-noise-words\"] = val;\n\t                    } else if (attrname === \"@name-as-sort-order\") {\n\t                        this.locale[lang_out].opts[\"name-as-sort-order\"] = {};\n\t                        var lst = attributes[attrname].split(/\\s+/);\n\t                        for (var i=0,ilen=lst.length;i<ilen;i+=1) {\n\t                            this.locale[lang_out].opts[\"name-as-sort-order\"][lst[i]] = true;\n\t                        }\n\t                    } else if (attrname === \"@name-as-reverse-order\") {\n\t                        this.locale[lang_out].opts[\"name-as-reverse-order\"] = {};\n\t                        var lst = attributes[attrname].split(/\\s+/);\n\t                        for (var i=0,ilen=lst.length;i<ilen;i+=1) {\n\t                            this.locale[lang_out].opts[\"name-as-reverse-order\"][lst[i]] = true;\n\t                        }\n\t                    } else if (attrname === \"@name-never-short\") {\n\t                        this.locale[lang_out].opts[\"name-never-short\"] = {};\n\t                        var lst = attributes[attrname].split(/\\s+/);\n\t                        for (var i=0,ilen=lst.length;i<ilen;i+=1) {\n\t                            this.locale[lang_out].opts[\"name-never-short\"][lst[i]] = true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    nodes = myxml.getNodesByName(locale, 'date');\n\t    for (pos = 0, len = myxml.numberofnodes(nodes); pos < len; pos += 1) {\n\t        if (true) {\n\t            date = nodes[pos];\n\t            this.locale[lang_out].dates[myxml.getAttributeValue(date, \"form\")] = date;\n\t        }\n\t    }\n\t};\n\tCSL.getLocaleNames = function (myxml, preferredLocale) {\n\t    var stylexml = CSL.setupXml(myxml);\n\t    function extendLocaleList(localeList, locale) {\n\t        var forms = [\"base\", \"best\"];\n\t        if (locale) {\n\t            normalizedLocale = CSL.localeResolve(locale);\n\t            for (var i=0,ilen=forms.length;i<ilen;i++) {\n\t                if (normalizedLocale[forms[i]] && localeList.indexOf(normalizedLocale[forms[i]]) === -1) {\n\t                    localeList.push(normalizedLocale[forms[i]]);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    function sniffLocaleOnOneNodeName(nodeName) {\n\t        var nodes = stylexml.getNodesByName(stylexml.dataObj, nodeName);\n\t        for (var i=0,ilen=nodes.length;i<ilen;i++) {\n\t            var nodeLocales = stylexml.getAttributeValue(nodes[i], \"locale\");\n\t            if (nodeLocales) {\n\t                nodeLocales = nodeLocales.split(/ +/);\n\t                for (var j=0,jlen=nodeLocales.length;j<jlen;j++) {\n\t                    this.extendLocaleList(localeIDs, nodeLocales[j]);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    var localeIDs = [\"en-US\"];\n\t    extendLocaleList(localeIDs, preferredLocale);\n\t    var styleNode = stylexml.getNodesByName(stylexml.dataObj, \"style\")[0];\n\t    var defaultLocale = stylexml.getAttributeValue(styleNode, \"default-locale\");\n\t    extendLocaleList(localeIDs, defaultLocale);\n\t    var nodeNames = [\"layout\", \"if\", \"else-if\", \"condition\"];\n\t    for (var i=0,ilen=nodeNames.length;i<ilen;i++) {\n\t        sniffLocaleOnOneNodeName(stylexml, localeIDs, nodeNames[i]);\n\t    }\n\t    return localeIDs;\n\t};\n\tCSL.Node = {};\n\tCSL.Node.bibliography = {\n\t    build: function (state, target) {\n\t        if (this.tokentype === CSL.START) {\n\t            state.build.area = \"bibliography\";\n\t            state.build.root = \"bibliography\";\n\t            state.build.extension = \"\";\n\t            var func = function(state, Item) {\n\t                state.tmp.area = \"bibliography\";\n\t                state.tmp.root = \"bibliography\";\n\t                state.tmp.extension = \"\";\n\t            }\n\t            this.execs.push(func);\n\t        }\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node.choose = {\n\t    build: function (state, target) {\n\t        var func;\n\t        if (this.tokentype === CSL.START) {\n\t            func = function (state, Item) {\n\t                state.tmp.jump.push(undefined, CSL.LITERAL);\n\t            };\n\t        }\n\t        if (this.tokentype === CSL.END) {\n\t            func = function (state, Item) {\n\t                state.tmp.jump.pop();\n\t            };\n\t        }\n\t        this.execs.push(func);\n\t        target.push(this);\n\t    },\n\t    configure: function (state, pos) {\n\t        if (this.tokentype === CSL.END) {\n\t            state.configure.fail.push((pos));\n\t            state.configure.succeed.push((pos));\n\t        } else {\n\t            state.configure.fail.pop();\n\t            state.configure.succeed.pop();\n\t        }\n\t    }\n\t};\n\tCSL.Node.citation = {\n\t    build: function (state, target) {\n\t        if (this.tokentype === CSL.START) {\n\t            state.build.area = \"citation\";\n\t            state.build.root = \"citation\";\n\t            state.build.extension = \"\";\n\t            var func = function(state, Item) {\n\t                state.tmp.area = \"citation\";\n\t                state.tmp.root = \"citation\";\n\t                state.tmp.extension = \"\";\n\t            }\n\t            this.execs.push(func);\n\t        }\n\t        if (this.tokentype === CSL.END) {\n\t            state.opt.grouped_sort = state.opt.xclass === \"in-text\" \n\t                && (state.citation.opt.collapse \n\t                    && state.citation.opt.collapse.length)\n\t                || (state.citation.opt.cite_group_delimiter\n\t                    && state.citation.opt.cite_group_delimiter.length)\n\t                && state.opt.update_mode !== CSL.POSITION\n\t                && state.opt.update_mode !== CSL.NUMERIC;\n\t            if (state.opt.grouped_sort \n\t                && state.citation_sort.opt.sort_directions.length) {\n\t                var firstkey = state.citation_sort.opt.sort_directions[0].slice();\n\t                state.citation_sort.opt.sort_directions = [firstkey].concat(state.citation_sort.opt.sort_directions);\n\t            }\n\t            state.citation.srt = new CSL.Registry.Comparifier(state, \"citation_sort\");\n\t        }\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node[\"#comment\"] = {\n\t       build: function (state, target) {\n\t       }\n\t};\n\tCSL.Node.date = {\n\t    build: function (state, target) {\n\t        var func, date_obj, tok, len, pos, part, dpx, parts, mypos, start, end;\n\t        if (this.tokentype === CSL.START || this.tokentype === CSL.SINGLETON) {\n\t            state.build.date_parts = [];\n\t            state.build.date_variables = this.variables;\n\t            if (!state.build.extension) {\n\t                CSL.Util.substituteStart.call(this, state, target);\n\t            }\n\t            if (state.build.extension) {\n\t                func = CSL.dateMacroAsSortKey;\n\t            } else {\n\t                func = function (state, Item, item) {\n\t                    var key, dp;\n\t                    state.tmp.element_rendered_ok = false;\n\t                    state.tmp.donesies = [];\n\t                    state.tmp.dateparts = [];\n\t                    dp = [];\n\t                    if (this.variables.length\n\t                        && !(state.tmp.just_looking\n\t                             && this.variables[0] === \"accessed\")) {\n\t                        date_obj = Item[this.variables[0]];\n\t                        if (\"undefined\" === typeof date_obj) {\n\t                            date_obj = {\"date-parts\": [[0]] };\n\t                            if (state.opt.development_extensions.locator_date_and_revision) {\n\t                                if (item && this.variables[0] === \"locator-date\" && item[\"locator-date\"]) {\n\t                                    date_obj = item[\"locator-date\"];\n\t                                }\n\t                            }\n\t                        }\n\t                        state.tmp.date_object = date_obj;\n\t                        len = this.dateparts.length;\n\t                        for (pos = 0; pos < len; pos += 1) {\n\t                            part = this.dateparts[pos];\n\t                            if (\"undefined\" !== typeof state.tmp.date_object[(part +  \"_end\")]) {\n\t                                dp.push(part);\n\t                            } else if (part === \"month\" && \"undefined\" !== typeof state.tmp.date_object.season_end) {\n\t                                dp.push(part);\n\t                            }\n\t                        }\n\t                        dpx = [];\n\t                        parts = [\"year\", \"month\", \"day\"];\n\t                        len = parts.length;\n\t                        for (pos = 0; pos < len; pos += 1) {\n\t                            if (dp.indexOf(parts[pos]) > -1) {\n\t                                dpx.push(parts[pos]);\n\t                            }\n\t                        }\n\t                        dp = dpx.slice();\n\t                        mypos = 2;\n\t                        len = dp.length;\n\t                        for (pos = 0; pos < len; pos += 1) {\n\t                            part = dp[pos];\n\t                            start = state.tmp.date_object[part];\n\t                            end = state.tmp.date_object[(part + \"_end\")];\n\t                            if (start !== end) {\n\t                                mypos = pos;\n\t                                break;\n\t                            }\n\t                        }\n\t                        state.tmp.date_collapse_at = dp.slice(mypos);\n\t                    } else {\n\t                        state.tmp.date_object = false;\n\t                    }\n\t                };\n\t            }\n\t            this.execs.push(func);\n\t            func = function (state, Item) {\n\t                if (!Item[this.variables[0]]) return;\n\t                state.parallel.StartVariable(this.variables[0]);\n\t                state.output.startTag(\"date\", this);\n\t                if (this.variables[0] === \"issued\"\n\t                    && Item.type === \"legal_case\"\n\t                    && !state.tmp.extension\n\t                    && \"\" + Item[\"collection-number\"] === \"\" + state.tmp.date_object.year\n\t                    && this.dateparts.length === 1\n\t                    && this.dateparts[0] === \"year\") {\n\t                    for (var key in state.tmp.date_object) {\n\t                        if (state.tmp.date_object.hasOwnProperty(key)) {\n\t                            if (key.slice(0, 4) === \"year\") {\n\t                                state.tmp.issued_date = {};\n\t                                var lst = state.output.current.mystack.slice(-2)[0].blobs;\n\t                                state.tmp.issued_date.list = lst;\n\t                                state.tmp.issued_date.pos = lst.length - 1;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t            this.execs.push(func);\n\t        }\n\t        if (!state.build.extension && (this.tokentype === CSL.END || this.tokentype === CSL.SINGLETON)) {\n\t            func = function (state, Item) {\n\t                if (!Item[this.variables[0]]) return;\n\t                state.output.endTag();\n\t                state.parallel.CloseVariable(this.variables[0]);\n\t            };\n\t            this.execs.push(func);\n\t        }\n\t        target.push(this);\n\t        if (this.tokentype === CSL.END || this.tokentype === CSL.SINGLETON) {\n\t            if (!state.build.extension) {\n\t                CSL.Util.substituteEnd.call(this, state, target);\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Node[\"date-part\"] = {\n\t    build: function (state, target) {\n\t        var func, pos, len, decor, first_date, value, value_end, real, have_collapsed, invoked, precondition, known_year, bc, ad, bc_end, ad_end, ready, curr, dcurr, number, num, formatter, item, i, ilen;\n\t        if (!this.strings.form) {\n\t            this.strings.form = \"long\";\n\t        }\n\t        state.build.date_parts.push(this.strings.name);\n\t        var date_variable = state.build.date_variables[0];\n\t        func = function (state, Item) {\n\t            if (!state.tmp.date_object) {\n\t                return;\n\t            }\n\t            first_date = true;\n\t            value = \"\";\n\t            value_end = \"\";\n\t            state.tmp.donesies.push(this.strings.name);\n\t            if (state.tmp.date_object.literal && \"year\" === this.strings.name) {\n\t                state.parallel.AppendToVariable(state.tmp.date_object.literal);\n\t                state.output.append(state.tmp.date_object.literal, this);\n\t            }\n\t            if (state.tmp.date_object) {\n\t                value = state.tmp.date_object[this.strings.name];\n\t                value_end = state.tmp.date_object[(this.strings.name + \"_end\")];\n\t            }\n\t            if (\"year\" === this.strings.name && value === 0 && !state.tmp.suppress_decorations) {\n\t                value = false;\n\t            }\n\t            real = !state.tmp.suppress_decorations;\n\t            have_collapsed = state.tmp.have_collapsed;\n\t            invoked = state[state.tmp.area].opt.collapse === \"year-suffix\" || state[state.tmp.area].opt.collapse === \"year-suffix-ranged\";\n\t            precondition = state.opt[\"disambiguate-add-year-suffix\"];\n\t            if (real && precondition && invoked) {\n\t                state.tmp.years_used.push(value);\n\t                known_year = state.tmp.last_years_used.length >= state.tmp.years_used.length;\n\t                if (known_year && have_collapsed) {\n\t                    if (state.tmp.last_years_used[(state.tmp.years_used.length - 1)] === value) {\n\t                        value = false;\n\t                    }\n\t                }\n\t            }\n\t            if (\"undefined\" !== typeof value) {\n\t                bc = false;\n\t                ad = false;\n\t                bc_end = false;\n\t                ad_end = false;\n\t                if (\"year\" === this.strings.name) {\n\t                    if (parseInt(value, 10) < 500 && parseInt(value, 10) > 0) {\n\t                        ad = state.getTerm(\"ad\");\n\t                    }\n\t                    if (parseInt(value, 10) < 0) {\n\t                        bc = state.getTerm(\"bc\");\n\t                        value = (parseInt(value, 10) * -1);\n\t                    }\n\t                    if (value_end) {\n\t                        if (parseInt(value_end, 10) < 500 && parseInt(value_end, 10) > 0) {\n\t                            ad_end = state.getTerm(\"ad\");\n\t                        }\n\t                        if (parseInt(value_end, 10) < 0) {\n\t                            bc_end = state.getTerm(\"bc\");\n\t                            value_end = (parseInt(value_end, 10) * -1);\n\t                        }\n\t                    }\n\t                }\n\t                state.parallel.AppendToVariable(value);\n\t                var monthnameid = \"\"+state.tmp.date_object.month;\n\t                while (monthnameid.length < 2) {\n\t                    monthnameid = \"0\"+monthnameid;\n\t                }\n\t                monthnameid = \"month-\"+monthnameid;\n\t                var gender = state.locale[state.opt.lang][\"noun-genders\"][monthnameid];\n\t                if (this.strings.form) {\n\t                    var myform = this.strings.form;\n\t                    if (this.strings.name === \"day\") {\n\t                        if (myform === \"ordinal\"\n\t                            && state.locale[state.opt.lang].opts[\"limit-day-ordinals-to-day-1\"]\n\t                            && (\"\" + value) !== \"1\") {\n\t                            myform = \"numeric\";\n\t                        }\n\t                    }\n\t                    value = CSL.Util.Dates[this.strings.name][myform](state, value, gender, this.default_locale);\n\t                    if (\"month\" === this.strings.name) {\n\t                        if (state.tmp.strip_periods) {\n\t                            value = value.replace(/\\./g, \"\");\n\t                        } else {\n\t                            for (i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n\t                                if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n\t                                    value = value.replace(/\\./g, \"\");\n\t                                    break;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    if (value_end) {\n\t                        value_end = CSL.Util.Dates[this.strings.name][myform](state, value_end, gender, (\"accessed\" === date_variable), \"_end\");\n\t                        if (state.tmp.strip_periods) {\n\t                            value_end = value_end.replace(/\\./g, \"\");\n\t                        } else {\n\t                            for (i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n\t                                if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n\t                                    value_end = value_end.replace(/\\./g, \"\");\n\t                                    break;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t                state.output.openLevel(\"empty\");\n\t                if (state.tmp.date_collapse_at.length) {\n\t                    ready = true;\n\t                    len = state.tmp.date_collapse_at.length;\n\t                    for (pos = 0; pos < len; pos += 1) {\n\t                        item = state.tmp.date_collapse_at[pos];\n\t                        if (state.tmp.donesies.indexOf(item) === -1) {\n\t                            ready = false;\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (ready) {\n\t                        if (\"\" + value_end !== \"0\") {\n\t                            if (state.dateput.queue.length === 0) {\n\t                                first_date = true;\n\t                            }\n\t                            if (state.opt[\"year-range-format\"]\n\t                                && state.opt[\"year-range-format\"] !== \"expanded\"\n\t                                && !state.tmp.date_object.day\n\t                                && !state.tmp.date_object.month\n\t                                && !state.tmp.date_object.season\n\t                                && this.strings.name === \"year\"\n\t                                && value && value_end) {\n\t                                value_end = state.fun.year_mangler(value + \"-\" + value_end, true);\n\t                                var range_delimiter = state.getTerm(\"year-range-delimiter\");\n\t                                value_end = value_end.slice(value_end.indexOf(range_delimiter) + 1);\n\t                            }\n\t                            state.dateput.append(value_end, this);\n\t                            if (first_date) {\n\t                                state.dateput.current.value()[0].strings.prefix = \"\";\n\t                            }\n\t                        }\n\t                        state.output.append(value, this);\n\t                        curr = state.output.current.value();\n\t                        curr.blobs[(curr.blobs.length - 1)].strings.suffix = \"\";\n\t                        state.output.append(state.getTerm(\"year-range-delimiter\"), \"empty\");\n\t                        dcurr = state.dateput.current.value();\n\t                        curr.blobs = curr.blobs.concat(dcurr);\n\t                        state.dateput.string(state, state.dateput.queue);\n\t                        state.tmp.date_collapse_at = [];\n\t                    } else {\n\t                        state.output.append(value, this);\n\t                        if (state.tmp.date_collapse_at.indexOf(this.strings.name) > -1) {\n\t                            if (\"\" + value_end !== \"0\") {\n\t                                if (state.dateput.queue.length === 0) {\n\t                                    first_date = true;\n\t                                }\n\t                                state.dateput.openLevel(\"empty\");\n\t                                state.dateput.append(value_end, this);\n\t                                if (first_date) {\n\t                                    state.dateput.current.value().blobs[0].strings.prefix = \"\";\n\t                                }\n\t                                if (bc) {\n\t                                    state.dateput.append(bc);\n\t                                }\n\t                                if (ad) {\n\t                                    state.dateput.append(ad);\n\t                                }\n\t                                state.dateput.closeLevel();\n\t                            }\n\t                        }\n\t                    }\n\t                } else {\n\t                    state.output.append(value, this);\n\t                }\n\t                if (bc) {\n\t                    state.output.append(bc);\n\t                }\n\t                if (ad) {\n\t                    state.output.append(ad);\n\t                }\n\t                state.output.closeLevel();\n\t            } else if (\"month\" === this.strings.name) {\n\t                if (state.tmp.date_object.season) {\n\t                    value = \"\" + state.tmp.date_object.season;\n\t                    if (value && value.match(/^[1-4]$/)) {\n\t                        state.tmp.group_context.tip.variable_success = true;\n\t                        state.output.append(state.getTerm((\"season-0\" + value)), this);\n\t                    } else if (value) {\n\t                        state.output.append(value, this);\n\t                    }\n\t                }\n\t            }\n\t            state.tmp.value = [];\n\t            if (Item[date_variable] && (value || state.tmp.have_collapsed) && !state.opt.has_year_suffix && \"year\" === this.strings.name && !state.tmp.just_looking) {\n\t                if (state.registry.registry[Item.id] && state.registry.registry[Item.id].disambig.year_suffix !== false && !state.tmp.has_done_year_suffix) {\n\t                    state.tmp.has_done_year_suffix = true;\n\t                    num = parseInt(state.registry.registry[Item.id].disambig.year_suffix, 10);\n\t                    number = new CSL.NumericBlob(false, num, this, Item.id);\n\t                    this.successor_prefix = state[state.build.area].opt.layout_delimiter;\n\t                    this.splice_prefix = state[state.build.area].opt.layout_delimiter;\n\t                    formatter = new CSL.Util.Suffixator(CSL.SUFFIX_CHARS);\n\t                    number.setFormatter(formatter);\n\t                    if (state[state.tmp.area].opt.collapse === \"year-suffix-ranged\") {\n\t                        number.range_prefix = state.getTerm(\"citation-range-delimiter\");\n\t                    }\n\t                    if (state[state.tmp.area].opt.cite_group_delimiter) {\n\t                        number.successor_prefix = state[state.tmp.area].opt.cite_group_delimiter;\n\t                    } else if (state[state.tmp.area].opt[\"year-suffix-delimiter\"]) {\n\t                        number.successor_prefix = state[state.tmp.area].opt[\"year-suffix-delimiter\"];\n\t                    } else {\n\t                        number.successor_prefix = state[state.tmp.area].opt.layout_delimiter;\n\t                    }\n\t                    number.UGLY_DELIMITER_SUPPRESS_HACK = true;\n\t                    state.output.append(number, \"literal\");\n\t                }\n\t            }\n\t        };\n\t        this.execs.push(func);\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node[\"else-if\"] = {\n\t    build: function (state, target) {\n\t        CSL.Conditions.TopNode.call(this, state, target);\n\t        target.push(this);\n\t    },\n\t    configure: function (state, pos) {\n\t        CSL.Conditions.Configure.call(this, state, pos);\n\t    }\n\t};\n\tCSL.Node[\"else\"] = {\n\t    build: function (state, target) {\n\t        target.push(this);\n\t    },\n\t    configure: function (state, pos) {\n\t        if (this.tokentype === CSL.START) {\n\t            state.configure.fail[(state.configure.fail.length - 1)] = pos;\n\t        }\n\t    }\n\t};\n\tCSL.Node[\"et-al\"] = {\n\t    build: function (state, target) {\n\t        if (state.build.area === \"citation\" || state.build.area === \"bibliography\") {\n\t            var func = function (state, Item, item) {\n\t                state.tmp.etal_node = this;\n\t                if (\"string\" === typeof this.strings.term) {\n\t                    state.tmp.etal_term = this.strings.term;\n\t                }\n\t            }\n\t            this.execs.push(func);\n\t        }\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node.group = {\n\t    build: function (state, target, realGroup) {\n\t        var func, execs;\n\t        this.realGroup = realGroup;\n\t        if (this.tokentype === CSL.START) {\n\t            CSL.Util.substituteStart.call(this, state, target);\n\t            if (state.build.substitute_level.value()) {\n\t                state.build.substitute_level.replace((state.build.substitute_level.value() + 1));\n\t            }\n\t            if (!this.juris) {\n\t                target.push(this);\n\t            }\n\t            func = function (state, Item) {\n\t                state.output.startTag(\"group\", this);\n\t                if (this.strings.label_form_override) {\n\t                    if (!state.tmp.group_context.tip.label_form) {\n\t                        state.tmp.group_context.tip.label_form = this.strings.label_form_override;\n\t                    }\n\t                }\n\t                if (this.realGroup) {\n\t                    var condition = false;\n\t                    var force_suppress = false;\n\t                    if (state.tmp.group_context.mystack.length) {\n\t                        state.output.current.value().parent = state.tmp.group_context.tip.output_tip;\n\t                    }\n\t                    var label_form = state.tmp.group_context.tip.label_form;\n\t                    if (!label_form) {\n\t                        label_form = this.strings.label_form_override;\n\t                    }\n\t                    if (state.tmp.group_context.tip.condition) {\n\t                        condition = state.tmp.group_context.tip.condition;\n\t                        force_suppress = state.tmp.group_context.tip.force_suppress;\n\t                    } else if (this.strings.reject) {\n\t                        condition = {\n\t                            test: this.strings.reject,\n\t                            not: true\n\t                        }\n\t                        force_suppress = true;\n\t                        done_vars = [];\n\t                    } else if (this.strings.require) {\n\t                        condition = {\n\t                            test: this.strings.require,\n\t                            not: false\n\t                        }\n\t                        done_vars = [];\n\t                    }\n\t                    state.tmp.group_context.push({\n\t                        term_intended: false,\n\t                        variable_attempt: false,\n\t                        variable_success: false,\n\t                        variable_success_parent: state.tmp.group_context.tip.variable_success,\n\t                        output_tip: state.output.current.tip,\n\t                        label_form: label_form,\n\t                        parallel_conditions: this.strings.set_parallel_condition,\n\t                        condition: condition,\n\t                        force_suppress: force_suppress,\n\t                        done_vars: state.tmp.group_context.tip.done_vars.slice()\n\t                    });\n\t                }\n\t            };\n\t            execs = [];\n\t            execs.push(func);\n\t            this.execs = execs.concat(this.execs);\n\t            if (this.strings[\"has-publisher-and-publisher-place\"]) {\n\t                state.build[\"publisher-special\"] = true;\n\t                func = function (state, Item) {\n\t                    if (this.strings[\"subgroup-delimiter\"]\n\t                        && Item.publisher && Item[\"publisher-place\"]) {\n\t                        var publisher_lst = Item.publisher.split(/;\\s*/);\n\t                        var publisher_place_lst = Item[\"publisher-place\"].split(/;\\s*/);\n\t                        if (publisher_lst.length > 1\n\t                            && publisher_lst.length === publisher_place_lst.length) {\n\t                            state.publisherOutput = new CSL.PublisherOutput(state, this);\n\t                            state.publisherOutput[\"publisher-list\"] = publisher_lst;\n\t                            state.publisherOutput[\"publisher-place-list\"] = publisher_place_lst;\n\t                        }\n\t                    }\n\t                };\n\t                this.execs.push(func);\n\t            }\n\t            if (this.juris) {\n\t                for (var x=0,xlen=target.length;x<xlen;x++) {\n\t                    var token = target[x];\n\t                }\n\t                var choose_start = new CSL.Token(\"choose\", CSL.START);\n\t                CSL.Node.choose.build.call(choose_start, state, target);\n\t                var if_start = new CSL.Token(\"if\", CSL.START);\n\t                func = function (macroName) {\n\t                    return function (Item) {\n\t                        if (!state.sys.retrieveStyleModule || !CSL.MODULE_MACROS[macroName] || !Item.jurisdiction) return false;\n\t                        var jurisdictionList = state.getJurisdictionList(Item.jurisdiction);\n\t                        if (!state.opt.jurisdictions_seen[jurisdictionList[0]]) {\n\t                            var res = state.retrieveAllStyleModules(jurisdictionList);\n\t                            for (var jurisdiction in res) {\n\t                                var macroCount = 0;\n\t                                state.juris[jurisdiction] = {};\n\t                                var myXml = CSL.setupXml(res[jurisdiction]);\n\t                                var myNodes = myXml.getNodesByName(myXml.dataObj, \"law-module\");\n\t                                for (var i=0,ilen=myNodes.length;i<ilen;i++) {\n\t                                    var myTypes = myXml.getAttributeValue(myNodes[i],\"types\");\n\t                                    if (myTypes) {\n\t                                        state.juris[jurisdiction].types = {};\n\t                                        myTypes =  myTypes.split(/\\s+/);\n\t                                        for (var j=0,jlen=myTypes.length;j<jlen;j++) {\n\t                                            state.juris[jurisdiction].types[myTypes[j]] = true;\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (!state.juris[jurisdiction].types) {\n\t                                    state.juris[jurisdiction].types = CSL.MODULE_TYPES;\n\t                                }\n\t                                var myNodes = myXml.getNodesByName(myXml.dataObj, \"macro\");\n\t                                for (var i=0,ilen=myNodes.length;i<ilen;i++) {\n\t                                    var myName = myXml.getAttributeValue(myNodes[i], \"name\");\n\t                                    if (!CSL.MODULE_MACROS[myName]) {\n\t                                        CSL.debug(\"CSL: skipping non-modular macro name \\\"\" + myName + \"\\\" in module context\");\n\t                                        continue;\n\t                                    };\n\t                                    macroCount++;\n\t                                    state.juris[jurisdiction][myName] = [];\n\t                                    state.buildTokenLists(myNodes[i], state.juris[jurisdiction][myName]);\n\t                                    state.configureTokenList(state.juris[jurisdiction][myName]);\n\t                                }\n\t                            }\n\t                        }\n\t                        for (var i=0,ilen=jurisdictionList.length;i<ilen;i++) {\n\t                            var jurisdiction = jurisdictionList[i];\n\t                            if(state.juris[jurisdiction] && state.juris[jurisdiction].types[Item.type]) {\n\t                                Item[\"best-jurisdiction\"] = jurisdiction;\n\t                                return true;\n\t                            }\n\t                        }\n\t                        return false;\n\t                    };\n\t                }(this.juris);\n\t                if_start.tests.push(func);\n\t                if_start.test = state.fun.match.any(if_start, state, if_start.tests);\n\t                target.push(if_start);\n\t                var text_node = new CSL.Token(\"text\", CSL.SINGLETON);\n\t                func = function (state, Item, item) {\n\t                    var next = 0;\n\t                    if (state.juris[Item[\"best-jurisdiction\"]][this.juris]) {\n\t                        while (next < state.juris[Item[\"best-jurisdiction\"]][this.juris].length) {\n\t                            next = CSL.tokenExec.call(state, state.juris[Item[\"best-jurisdiction\"]][this.juris][next], Item, item);\n\t                        }\n\t                    }\n\t                }\n\t                text_node.juris = this.juris;\n\t                text_node.execs.push(func);\n\t                target.push(text_node);\n\t                var if_end = new CSL.Token(\"if\", CSL.END);\n\t                CSL.Node[\"if\"].build.call(if_end, state, target);\n\t                var else_start = new CSL.Token(\"else\", CSL.START);\n\t                CSL.Node[\"else\"].build.call(else_start, state, target);\n\t            }\n\t        }\n\t        if (this.tokentype === CSL.END) {\n\t            if (state.build[\"publisher-special\"]) {\n\t                state.build[\"publisher-special\"] = false;\n\t                if (\"string\" === typeof state[state.build.root].opt[\"name-delimiter\"]) {\n\t                    func = function (state, Item) {\n\t                        if (state.publisherOutput) {\n\t                            state.publisherOutput.render();\n\t                            state.publisherOutput = false;\n\t                        }\n\t                    };\n\t                    this.execs.push(func);\n\t                }\n\t            }\n\t            func = function (state, Item) {\n\t                state.output.endTag();\n\t                if (this.realGroup) {\n\t                    var flags = state.tmp.group_context.pop();\n\t                    if (state.tmp.group_context.tip.condition) {\n\t                        state.tmp.group_context.tip.force_suppress = flags.force_suppress;\n\t                    }\n\t                    if (!flags.force_suppress && (flags.variable_success || (flags.term_intended && !flags.variable_attempt))) {\n\t                        if (!this.isJurisLocatorLabel) {\n\t                            state.tmp.group_context.tip.variable_success = true;\n\t                        }\n\t                        var blobs = state.output.current.value().blobs;\n\t                        var pos = state.output.current.value().blobs.length - 1;\n\t                        if (!state.tmp.just_looking && \"undefined\" !== typeof flags.parallel_conditions) {\n\t                            var parallel_condition_object = {\n\t                                blobs: blobs,\n\t                                conditions: flags.parallel_conditions,\n\t                                id: Item.id,\n\t                                pos: pos\n\t                            };\n\t                            state.parallel.parallel_conditional_blobs_list.push(parallel_condition_object);\n\t                        }\n\t                    } else {\n\t                        state.tmp.group_context.tip.variable_attempt = flags.variable_attempt;\n\t                        if (flags.force_suppress && !state.tmp.group_context.tip.condition) {\n\t                            state.tmp.group_context.tip.variable_attempt = true;\n\t                            state.tmp.group_context.tip.variable_success = flags.variable_success_parent;\n\t                            for (var i=0,ilen=flags.done_vars.length;i<ilen;i++) {\n\t                                if (state.tmp.done_vars.indexOf(flags.done_vars[i]) > -1) {\n\t                                    state.tmp.done_vars = state.tmp.done_vars.slice(0, i).concat(state.tmp.done_vars.slice(i+1));\n\t                                }\n\t                            }\n\t                        }\n\t                        if (state.output.current.value().blobs) {\n\t                            state.output.current.value().blobs.pop();\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t            this.execs.push(func);\n\t            if (this.juris) {\n\t                var else_end = new CSL.Token(\"else\", CSL.END);\n\t                CSL.Node[\"else\"].build.call(else_end, state, target);\n\t                var choose_end = new CSL.Token(\"choose\", CSL.END);\n\t                CSL.Node.choose.build.call(choose_end, state, target);\n\t            }\n\t        }\n\t        if (this.tokentype === CSL.END) {\n\t            if (!this.juris) {\n\t                target.push(this);\n\t            }\n\t            if (state.build.substitute_level.value()) {\n\t                state.build.substitute_level.replace((state.build.substitute_level.value() - 1));\n\t            }\n\t            CSL.Util.substituteEnd.call(this, state, target);\n\t        }\n\t    }\n\t};\n\tCSL.Node[\"if\"] = {\n\t    build: function (state, target) {\n\t        CSL.Conditions.TopNode.call(this, state, target);\n\t        target.push(this);\n\t    },\n\t    configure: function (state, pos) {\n\t        CSL.Conditions.Configure.call(this, state, pos);\n\t    }\n\t};\n\tCSL.Node[\"conditions\"] = {\n\t    build: function (state, target) {\n\t        if (this.tokentype === CSL.START) {\n\t            state.tmp.conditions.addMatch(this.match);\n\t        }\n\t        if (this.tokentype === CSL.END) {\n\t            state.tmp.conditions.matchCombine();\n\t        }\n\t    }\n\t};\n\tCSL.Node[\"condition\"] = {\n\t    build: function (state, target) {\n\t        if (this.tokentype === CSL.SINGLETON) {\n\t            var test = state.fun.match[this.match](this, state, this.tests);\n\t            state.tmp.conditions.addTest(test);\n\t        }\n\t    }\n\t};\n\tCSL.Conditions = {};\n\tCSL.Conditions.TopNode = function (state, target) {\n\t    var func;\n\t    if (this.tokentype === CSL.START || this.tokentype === CSL.SINGLETON) {\n\t        if (this.locale) {\n\t            state.opt.lang = this.locale;\n\t        }\n\t        if (!this.tests || !this.tests.length) {\n\t            state.tmp.conditions = new CSL.Conditions.Engine(state, this);\n\t        } else {\n\t            this.test = state.fun.match[this.match](this, state, this.tests);\n\t        }\n\t    }\n\t    if (this.tokentype === CSL.END || this.tokentype === CSL.SINGLETON) {\n\t        func = function (state, Item) {\n\t            if (this.locale_default) {\n\t                state.output.current.value().old_locale = this.locale_default;\n\t                state.output.closeLevel(\"empty\");\n\t                state.opt.lang = this.locale_default;\n\t            }\n\t            var next = this[state.tmp.jump.value()];\n\t            return next;\n\t        };\n\t        this.execs.push(func);\n\t        if (this.locale_default) {\n\t            state.opt.lang = this.locale_default;\n\t        }\n\t    }\n\t};\n\tCSL.Conditions.Configure = function (state, pos) {\n\t    if (this.tokentype === CSL.START) {\n\t        this.fail = state.configure.fail.slice(-1)[0];\n\t        this.succeed = this.next;\n\t        state.configure.fail[(state.configure.fail.length - 1)] = pos;\n\t    } else if (this.tokentype === CSL.SINGLETON) {\n\t        this.fail = this.next;\n\t        this.succeed = state.configure.succeed.slice(-1)[0];\n\t        state.configure.fail[(state.configure.fail.length - 1)] = pos;\n\t    } else {\n\t        this.succeed = state.configure.succeed.slice(-1)[0];\n\t        this.fail = this.next;\n\t    }\n\t};\n\tCSL.Conditions.Engine = function (state, token) {\n\t    this.token = token;\n\t    this.state = state;\n\t};\n\tCSL.Conditions.Engine.prototype.addTest = function (test) {\n\t    this.token.tests.push(test);\n\t};\n\tCSL.Conditions.Engine.prototype.addMatch = function (match) {\n\t    this.token.match = match;\n\t};\n\tCSL.Conditions.Engine.prototype.matchCombine = function () {\n\t    this.token.test = this.state.fun.match[this.token.match](this.token, this.state, this.token.tests);\n\t};\n\tCSL.Node.info = {\n\t    build: function (state, target) {\n\t        if (this.tokentype === CSL.START) {\n\t            state.build.skip = \"info\";\n\t        } else {\n\t            state.build.skip = false;\n\t        }\n\t    }\n\t};\n\tCSL.Node.institution = {\n\t    build: function (state, target) {\n\t        if ([CSL.SINGLETON, CSL.START].indexOf(this.tokentype) > -1) {\n\t            var func = function (state, Item) {\n\t                if (\"string\" === typeof this.strings.delimiter) {\n\t                    state.tmp.institution_delimiter = this.strings.delimiter;\n\t                } else {\n\t                    state.tmp.institution_delimiter = state.tmp.name_delimiter;\n\t                }\n\t                var myand, and_default_prefix, and_suffix;\n\t                if (\"text\" === state.inheritOpt(this, \"and\")) {\n\t                    this.and_term = state.getTerm(\"and\", \"long\", 0);\n\t                } else if (\"symbol\" === state.inheritOpt(this, \"and\")) {\n\t                    if (state.opt.development_extensions.expect_and_symbol_form) {\n\t                        this.and_term = state.getTerm(\"and\", \"symbol\", 0);\n\t                    } else {\n\t                        this.and_term = \"&\";\n\t                    }\n\t                } else if (\"none\" === state.inheritOpt(this, \"and\")) {\n\t                    this.and_term = state.tmp.institution_delimiter;\n\t                }\n\t                if (\"undefined\" === typeof this.and_term && state.tmp.and_term) {\n\t                    this.and_term = state.getTerm(\"and\", \"long\", 0);\n\t                }\n\t                if (CSL.STARTSWITH_ROMANESQUE_REGEXP.test(this.and_term)) {\n\t                    this.and_prefix_single = \" \";\n\t                    this.and_prefix_multiple = \", \";\n\t                    if (\"string\" === typeof state.tmp.institution_delimiter) {\n\t                        this.and_prefix_multiple = state.tmp.institution_delimiter;\n\t                    }\n\t                    this.and_suffix = \" \";\n\t                } else {\n\t                    this.and_prefix_single = \"\";\n\t                    this.and_prefix_multiple = \"\";\n\t                    this.and_suffix = \"\";\n\t                }\n\t                if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"always\") {\n\t                    this.and_prefix_single = state.tmp.institution_delimiter;\n\t                } else if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"never\") {\n\t                    if (this.and_prefix_multiple) {\n\t                        this.and_prefix_multiple = \" \";\n\t                    }\n\t                }\n\t                this.and = {};\n\t                if (\"undefined\" !== typeof this.and_term) {\n\t                    state.output.append(this.and_term, \"empty\", true);\n\t                    this.and.single = state.output.pop();\n\t                    this.and.single.strings.prefix = this.and_prefix_single;\n\t                    this.and.single.strings.suffix = this.and_suffix;\n\t                    state.output.append(this.and_term, \"empty\", true);\n\t                    this.and.multiple = state.output.pop();\n\t                    this.and.multiple.strings.prefix = this.and_prefix_multiple;\n\t                    this.and.multiple.strings.suffix = this.and_suffix;\n\t                } else if (\"undefined\" !== this.strings.delimiter) {\n\t                    this.and.single = new CSL.Blob(state.tmp.institution_delimiter);\n\t                    this.and.single.strings.prefix = \"\";\n\t                    this.and.single.strings.suffix = \"\";\n\t                    this.and.multiple = new CSL.Blob(state.tmp.institution_delimiter);\n\t                    this.and.multiple.strings.prefix = \"\";\n\t                    this.and.multiple.strings.suffix = \"\";\n\t                }\n\t                state.nameOutput.institution = this;\n\t            };\n\t            this.execs.push(func);\n\t        }\n\t        target.push(this);\n\t    },\n\t    configure: function (state, pos) {\n\t        if ([CSL.SINGLETON, CSL.START].indexOf(this.tokentype) > -1) {\n\t            state.build.has_institution = true;\n\t        }\n\t    }\n\t};\n\tCSL.Node[\"institution-part\"] = {\n\t    build: function (state, target) {\n\t        var func;\n\t        if (\"long\" === this.strings.name) {\n\t            if (this.strings[\"if-short\"]) {\n\t                func = function (state, Item) {\n\t                    state.nameOutput.institutionpart[\"long-with-short\"] = this;\n\t                };\n\t            } else {\n\t                func = function (state, Item) {\n\t                    state.nameOutput.institutionpart[\"long\"] = this;\n\t                };\n\t            }\n\t        } else if (\"short\" === this.strings.name) {\n\t            func = function (state, Item) {\n\t                state.nameOutput.institutionpart[\"short\"] = this;\n\t            };\n\t        }\n\t        this.execs.push(func);\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node.key = {\n\t    build: function (state, target) {\n\t        target = state[state.build.root + \"_sort\"].tokens;\n\t        var func, i, ilen;\n\t        var debug = false;\n\t        var start_key = new CSL.Token(\"key\", CSL.START);\n\t        state.tmp.root = state.build.root;\n\t        start_key.strings[\"et-al-min\"] = state.inheritOpt(this, \"et-al-min\");\n\t        start_key.strings[\"et-al-use-first\"] = state.inheritOpt(this, \"et-al-use-first\");\n\t        start_key.strings[\"et-al-use-last\"] = state.inheritOpt(this, \"et-al-use-last\");\n\t        func = function (state, Item) {\n\t            state.tmp.done_vars = [];\n\t        };\n\t        start_key.execs.push(func);\n\t        state.opt.citation_number_sort_direction = this.strings.sort_direction;\n\t        func = function (state, Item) {\n\t            state.output.openLevel(\"empty\");\n\t        };\n\t        start_key.execs.push(func);\n\t        var sort_direction = [];\n\t        if (this.strings.sort_direction === CSL.DESCENDING) {\n\t            sort_direction.push(1);\n\t            sort_direction.push(-1);\n\t        } else {\n\t            sort_direction.push(-1);\n\t            sort_direction.push(1);\n\t        }\n\t        state[state.build.area].opt.sort_directions.push(sort_direction);\n\t        if (CSL.DATE_VARIABLES.indexOf(this.variables[0]) > -1) {\n\t            state.build.date_key = true;\n\t        }\n\t        func = function (state, Item) {\n\t            state.tmp.sort_key_flag = true;\n\t            if (state.inheritOpt(this, \"et-al-min\")) {\n\t                state.tmp[\"et-al-min\"] = state.inheritOpt(this, \"et-al-min\");\n\t            }\n\t            if (state.inheritOpt(this, \"et-al-use-first\")) {\n\t                state.tmp[\"et-al-use-first\"] = state.inheritOpt(this, \"et-al-use-first\");\n\t            }\n\t            if (\"boolean\" === typeof state.inheritOpt(this, \"et-al-use-last\")) {\n\t                state.tmp[\"et-al-use-last\"] = state.inheritOpt(this, \"et-al-use-last\");\n\t            }\n\t        };\n\t        start_key.execs.push(func);\n\t        target.push(start_key);\n\t        if (this.variables.length) {\n\t            var variable = this.variables[0];\n\t            if (variable === \"citation-number\") {\n\t                if (state.build.area === \"citation\" && state.build.extension === \"_sort\") {\n\t                    state.opt.citation_number_sort = false;\n\t                }\n\t                if (state.build.root === \"bibliography\" && state.build.extension === \"_sort\") {\n\t                    state.opt.citation_number_sort_used = false;\n\t                }\n\t            }\n\t            if (CSL.CREATORS.indexOf(variable) > -1) {\n\t                var names_start_token = new CSL.Token(\"names\", CSL.START);\n\t                names_start_token.tokentype = CSL.START;\n\t                names_start_token.variables = this.variables;\n\t                CSL.Node.names.build.call(names_start_token, state, target);\n\t                var name_token = new CSL.Token(\"name\", CSL.SINGLETON);\n\t                name_token.tokentype = CSL.SINGLETON;\n\t                name_token.strings[\"name-as-sort-order\"] = \"all\";\n\t                name_token.strings[\"sort-separator\"] = \" \";\n\t                name_token.strings[\"et-al-use-last\"] = state.inheritOpt(this, \"et-al-use-last\");\n\t                name_token.strings[\"et-al-min\"] = state.inheritOpt(this, \"et-al-min\");\n\t                name_token.strings[\"et-al-use-first\"] = state.inheritOpt(this, \"et-al-use-first\");\n\t                CSL.Node.name.build.call(name_token, state, target);\n\t                var institution_token = new CSL.Token(\"institution\", CSL.SINGLETON);\n\t                institution_token.tokentype = CSL.SINGLETON;\n\t                CSL.Node.institution.build.call(institution_token, state, target);\n\t                var names_end_token = new CSL.Token(\"names\", CSL.END);\n\t                names_end_token.tokentype = CSL.END;\n\t                CSL.Node.names.build.call(names_end_token, state, target);\n\t            } else {\n\t                var single_text = new CSL.Token(\"text\", CSL.SINGLETON);\n\t                single_text.dateparts = this.dateparts;\n\t                if (CSL.NUMERIC_VARIABLES.indexOf(variable) > -1) {\n\t                    func = function (state, Item) {\n\t                        var num, m;\n\t                        num = false;\n\t                        if (\"citation-number\" === variable) {\n\t                            num = state.registry.registry[Item.id].seq.toString();\n\t                        } else {\n\t                            num = Item[variable];\n\t                        }\n\t                        if (num) {\n\t                            num = CSL.Util.padding(num);\n\t                        }\n\t                        state.output.append(num, this);\n\t                    };\n\t                } else if (variable === \"citation-label\") {\n\t                    func = function (state, Item) {\n\t                        var trigraph = state.getCitationLabel(Item);\n\t                        state.output.append(trigraph, this);\n\t                    };\n\t                } else if (CSL.DATE_VARIABLES.indexOf(variable) > -1) {\n\t                    func = CSL.dateAsSortKey;\n\t                    single_text.variables = this.variables;\n\t                } else if (\"title\" === variable) {\n\t                    var abbrevfam = \"title\";\n\t                    var abbrfall = false;\n\t                    var altvar = false;\n\t                    var transfall = true;\n\t                    func = state.transform.getOutputFunction(this.variables, abbrevfam, abbrfall, altvar, transfall);\n\t                } else {\n\t                    func = function (state, Item) {\n\t                        var varval = Item[variable];\n\t                        state.output.append(varval, \"empty\");\n\t                    };\n\t                }\n\t                single_text.execs.push(func);\n\t                target.push(single_text);\n\t            }\n\t        } else { // macro\n\t            var token = new CSL.Token(\"text\", CSL.SINGLETON);\n\t            token.postponed_macro = this.postponed_macro;\n\t            CSL.expandMacro.call(state, token, target);\n\t        }\n\t        var end_key = new CSL.Token(\"key\", CSL.END);\n\t        func = function (state, Item) {\n\t            var keystring = state.output.string(state, state.output.queue);\n\t            if (state.sys.normalizeUnicode) {\n\t                keystring = state.sys.normalizeUnicode(keystring);\n\t            }\n\t            keystring = keystring ? (keystring.split(\" \").join(state.opt.sort_sep) + state.opt.sort_sep) : \"\";\n\t            if (\"\" === keystring) {\n\t                keystring = undefined;\n\t            }\n\t            if (\"string\" !== typeof keystring || state.tmp.empty_date) {\n\t                keystring = undefined;\n\t                state.tmp.empty_date = false;\n\t            }\n\t            state[state[state.tmp.area].root + \"_sort\"].keys.push(keystring);\n\t            state.tmp.value = [];\n\t        };\n\t        end_key.execs.push(func);\n\t        if (state.build.date_key) {\n\t            if (state.build.area === \"citation\" && state.build.extension === \"_sort\") {\n\t                state[state.build.area].opt.sort_directions.push([-1,1]);\n\t                func = function (state, Item) {\n\t                    var year_suffix = state.registry.registry[Item.id].disambig.year_suffix;\n\t                    if (!year_suffix) {\n\t                        year_suffix = 0;\n\t                    }\n\t                    var key = CSL.Util.padding(\"\" + year_suffix);\n\t                    state[state.tmp.area].keys.push(key);\n\t                }\n\t                end_key.execs.push(func);\n\t            }\n\t            state.build.date_key = false;\n\t        }\n\t        func = function (state, Item) {\n\t            state.tmp[\"et-al-min\"] = undefined;\n\t            state.tmp[\"et-al-use-first\"] = undefined;\n\t            state.tmp[\"et-al-use-last\"] = undefined;\n\t            state.tmp.sort_key_flag = false;\n\t        };\n\t        end_key.execs.push(func);\n\t        target.push(end_key);\n\t    }\n\t};\n\tCSL.Node.label = {\n\t    build: function (state, target) {\n\t        var debug = false;\n\t        if (this.strings.term) {\n\t            var plural = false;\n\t            if (!this.strings.form) {\n\t            }\n\t            var func = function (state, Item, item) {\n\t                var termtxt = CSL.evaluateLabel(this, state, Item, item);\n\t                if (item && this.strings.term === \"locator\") {\n\t                    state.parallel.StartVariable(\"label\");\n\t                    state.parallel.AppendToVariable(item.label);\n\t                    item.section_form_override = this.strings.form;\n\t                }\n\t                if (termtxt) {\n\t                    state.tmp.group_context.tip.term_intended = true;\n\t                }\n\t                CSL.UPDATE_GROUP_CONTEXT_CONDITION(state, termtxt);\n\t                if (termtxt.indexOf(\"%s\") === -1) {\n\t                    state.output.append(termtxt, this);\n\t                }\n\t                if (item && this.strings.term === \"locator\") {\n\t                    state.parallel.CloseVariable();\n\t                }\n\t            };\n\t            this.execs.push(func);\n\t        } else {\n\t            var namevars = state.build.names_variables.slice(-1)[0];\n\t            if (!state.build.name_label) {\n\t                state.build.name_label = {};\n\t            }\n\t            for (var i = 0, ilen = namevars.length; i < ilen; i += 1) {\n\t                if (!state.build.name_label[namevars[i]]) {\n\t                    state.build.name_label[namevars[i]] = {};\n\t                }\n\t            }\n\t            if (!state.build.name_flag) {\n\t                for (var i = 0, ilen = namevars.length; i < ilen; i += 1) {\n\t                    state.build.name_label[namevars[i]].before = this;\n\t                }\n\t            } else {\n\t                for (var i = 0, ilen = namevars.length; i < ilen; i += 1) {\n\t                    state.build.name_label[namevars[i]].after = this;\n\t                }\n\t            }\n\t        }\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node.layout = {\n\t    build: function (state, target) {\n\t        var func, prefix_token, suffix_token, tok;\n\t        function setSuffix() {\n\t            if (state.build.area === \"bibliography\") {\n\t                suffix_token = new CSL.Token(\"text\", CSL.SINGLETON);\n\t                func = function(state, Item, item) {\n\t                    var last_locale = state.tmp.cite_locales[state.tmp.cite_locales.length - 1];\n\t                    var suffix;\n\t                    if (state.tmp.cite_affixes[state.tmp.area][state.tmp.last_cite_locale]) {\n\t                        suffix = state.tmp.cite_affixes[state.tmp.area][state.tmp.last_cite_locale].suffix;\n\t                    } else {\n\t                        suffix = state.bibliography.opt.layout_suffix;\n\t                    }\n\t                    var topblob = state.output.current.value();\n\t                    if (state.opt.using_display) {\n\t                        topblob.blobs[topblob.blobs.length-1].strings.suffix = suffix;\n\t                    } else {\n\t                        topblob.strings.suffix = suffix;\n\t                    }\n\t                    if (state.bibliography.opt[\"second-field-align\"]) {\n\t                        state.output.endTag(\"bib_other\");\n\t                    }\n\t                };\n\t                suffix_token.execs.push(func);\n\t                target.push(suffix_token);\n\t            }\n\t        }\n\t        if (this.tokentype === CSL.START) {\n\t            if (this.locale_raw) {\n\t                state.build.current_default_locale = this.locale_raw;\n\t            } else {\n\t                state.build.current_default_locale = state.opt[\"default-locale\"];\n\t            }\n\t            func = function (state, Item, item) {\n\t                if (state.opt.development_extensions.apply_citation_wrapper\n\t                    && state.sys.wrapCitationEntry\n\t                    && !state.tmp.just_looking\n\t                    && Item.system_id \n\t                    && state.tmp.area === \"citation\") { \n\t                    cite_entry = new CSL.Token(\"group\", CSL.START);\n\t                    cite_entry.decorations = [[\"@cite\", \"entry\"]];\n\t                    state.output.startTag(\"cite_entry\", cite_entry);\n\t                    state.output.current.value().item_id = Item.system_id;\n\t                    if (item) {\n\t                        state.output.current.value().locator_txt = item.locator_txt;\n\t                        state.output.current.value().suffix_txt = item.suffix_txt;\n\t                    }\n\t                }\n\t            }\n\t            this.execs.push(func);\n\t        }\n\t        if (this.tokentype === CSL.START && !state.tmp.cite_affixes[state.build.area]) {\n\t            func = function (state, Item) {\n\t                state.tmp.done_vars = [];\n\t                if (!state.tmp.just_looking && state.registry.registry[Item.id].parallel) {\n\t                    state.tmp.done_vars.push(\"first-reference-note-number\");\n\t                }\n\t                state.tmp.rendered_name = false;\n\t            };\n\t            this.execs.push(func);\n\t            func = function (state, Item) {\n\t                state.tmp.sort_key_flag = false;\n\t            };\n\t            this.execs.push(func);\n\t            func = function (state, Item) {\n\t                state.tmp.nameset_counter = 0;\n\t            };\n\t            this.execs.push(func);\n\t            func = function (state, Item) {\n\t                var tok = new CSL.Token();\n\t                if (state.opt.development_extensions.rtl_support) {\n\t                    if ([\"ar\", \"he\", \"fa\", \"ur\", \"yi\", \"ps\", \"syr\"].indexOf(Item.language) > -1) {\n\t                        tok = new CSL.Token();\n\t                        tok.strings.prefix = \"\\u202b\";\n\t                        tok.strings.suffix = \"\\u202c\";\n\t                    }\n\t                }\n\t                state.output.openLevel(tok);\n\t            }\n\t            this.execs.push(func);\n\t            target.push(this);\n\t            if (state.opt.development_extensions.rtl_support && false) {\n\t                this.strings.prefix = this.strings.prefix.replace(/\\((.|$)/g,\"(\\u200e$1\");\n\t                this.strings.suffix = this.strings.suffix.replace(/\\)(.|$)/g,\")\\u200e$1\");\n\t            }\n\t            if (state.build.area === \"citation\") {\n\t                prefix_token = new CSL.Token(\"text\", CSL.SINGLETON);\n\t                func = function (state, Item, item) {\n\t                    var sp;\n\t                    if (item && item.prefix) {\n\t                        sp = \"\";\n\t                        var test_prefix = item.prefix.replace(/<[^>]+>/g, \"\").replace(/[\"'\\u201d\\u2019\\u00bb\\u202f\\u00a0 ]+$/g,\"\");\n\t                        var test_char = test_prefix.slice(-1);\n\t                        if (test_prefix.match(CSL.ENDSWITH_ROMANESQUE_REGEXP)) {\n\t                            sp = \" \";\n\t                        } else if (CSL.TERMINAL_PUNCTUATION.slice(0,-1).indexOf(test_char) > -1) {\n\t                            sp = \" \";\n\t                        } else if (test_char.match(/[\\)\\],0-9]/)) {\n\t                            sp = \" \";\n\t                        }\n\t                        var ignorePredecessor = false;\n\t                        if (CSL.TERMINAL_PUNCTUATION.slice(0,-1).indexOf(test_char) > -1 && item.prefix.trim().indexOf(\" \") > -1) {\n\t                            state.tmp.term_predecessor = false;\n\t                            ignorePredecessor = true;\n\t                        }\n\t                        prefix = (item.prefix + sp).replace(/\\s+/g, \" \");\n\t                        if (!state.tmp.just_looking) {\n\t                            prefix = state.output.checkNestedBrace.update(prefix);\n\t                        }\n\t                        state.output.append(prefix, this, false, ignorePredecessor);\n\t                    }\n\t                };\n\t                prefix_token.execs.push(func);\n\t                target.push(prefix_token);\n\t            }\n\t        }\n\t        var my_tok;\n\t        if (this.locale_raw) {\n\t            my_tok = new CSL.Token(\"dummy\", CSL.START);\n\t            my_tok.locale = this.locale_raw;\n\t            my_tok.strings.delimiter = this.strings.delimiter;\n\t            my_tok.strings.suffix = this.strings.suffix;\n\t            if (!state.tmp.cite_affixes[state.build.area]) {\n\t                state.tmp.cite_affixes[state.build.area] = {};\n\t            }\n\t        }\n\t        if (this.tokentype === CSL.START) {\n\t            state.build.layout_flag = true;\n\t            if (!this.locale_raw) {\n\t                state[state.tmp.area].opt.topdecor = [this.decorations];\n\t                state[(state.tmp.area + \"_sort\")].opt.topdecor = [this.decorations];\n\t                state[state.build.area].opt.layout_prefix = this.strings.prefix;\n\t                state[state.build.area].opt.layout_suffix = this.strings.suffix;\n\t                state[state.build.area].opt.layout_delimiter = this.strings.delimiter;\n\t                state[state.build.area].opt.layout_decorations = this.decorations;\n\t                if (state.tmp.cite_affixes[state.build.area]) {\n\t                    tok = new CSL.Token(\"else\", CSL.START);\n\t                    CSL.Node[\"else\"].build.call(tok, state, target);\n\t                }\n\t            } // !this.locale_raw\n\t            if (this.locale_raw) {\n\t                if (!state.build.layout_locale_flag) {\n\t                    var choose_tok = new CSL.Token(\"choose\", CSL.START);\n\t                    CSL.Node.choose.build.call(choose_tok, state, target);\n\t                    my_tok.name = \"if\";\n\t                    CSL.Attributes[\"@locale-internal\"].call(my_tok, state, this.locale_raw);\n\t                    CSL.Node[\"if\"].build.call(my_tok, state, target);\n\t                } else {\n\t                    my_tok.name = \"else-if\";\n\t                    CSL.Attributes[\"@locale-internal\"].call(my_tok, state, this.locale_raw);\n\t                    CSL.Node[\"else-if\"].build.call(my_tok, state, target);\n\t                }\n\t                state.tmp.cite_affixes[state.build.area][my_tok.locale] = {};\n\t                state.tmp.cite_affixes[state.build.area][my_tok.locale].delimiter = this.strings.delimiter;\n\t                state.tmp.cite_affixes[state.build.area][my_tok.locale].suffix = this.strings.suffix;\n\t            }\n\t        }\n\t        if (this.tokentype === CSL.END) {\n\t            if (this.locale_raw) {\n\t                setSuffix();\n\t                if (!state.build.layout_locale_flag) {\n\t                    my_tok.name = \"if\";\n\t                    my_tok.tokentype = CSL.END;\n\t                    CSL.Attributes[\"@locale-internal\"].call(my_tok, state, this.locale_raw);\n\t                    CSL.Node[\"if\"].build.call(my_tok, state, target);\n\t                    state.build.layout_locale_flag = true;\n\t                } else {\n\t                    my_tok.name = \"else-if\";\n\t                    my_tok.tokentype = CSL.END;\n\t                    CSL.Attributes[\"@locale-internal\"].call(my_tok, state, this.locale_raw);\n\t                    CSL.Node[\"else-if\"].build.call(my_tok, state, target);\n\t                }\n\t            }\n\t            if (!this.locale_raw) {\n\t                setSuffix();\n\t                if (state.tmp.cite_affixes[state.build.area]) {\n\t                    if (state.build.layout_locale_flag) {\n\t                        tok = new CSL.Token(\"else\", CSL.END);\n\t                        CSL.Node[\"else\"].build.call(tok, state, target);\n\t                        tok = new CSL.Token(\"choose\", CSL.END);\n\t                        CSL.Node.choose.build.call(tok, state, target);\n\t                    }\n\t                }\n\t                state.build_layout_locale_flag = true;\n\t                if (state.build.area === \"citation\") {\n\t                    suffix_token = new CSL.Token(\"text\", CSL.SINGLETON);\n\t                    func = function (state, Item, item) {\n\t                        var sp;\n\t                        if (item && item.suffix) {\n\t                            sp = \"\";\n\t                            if (item.suffix.match(CSL.STARTSWITH_ROMANESQUE_REGEXP)\n\t                                || ['[','('].indexOf(item.suffix.slice(0,1)) > -1) {\n\t                                sp = \" \";\n\t                            }\n\t                            var suffix = item.suffix;\n\t                            if (!state.tmp.just_looking) {\n\t                                suffix = state.output.checkNestedBrace.update(suffix);\n\t                            }\n\t                            state.output.append((sp + suffix), this);\n\t                        }\n\t                    };\n\t                    suffix_token.execs.push(func);\n\t                    target.push(suffix_token);\n\t                }\n\t                func = function (state, Item) {\n\t                    state.output.closeLevel();\n\t                };\n\t                this.execs.push(func);\n\t                func = function (state, Item) {\n\t                    if (state.opt.development_extensions.apply_citation_wrapper\n\t                        && state.sys.wrapCitationEntry\n\t                        && !state.tmp.just_looking\n\t                        && Item.system_id \n\t                        && state.tmp.area === \"citation\") { \n\t                        state.output.endTag(); // closes citation link wrapper\n\t                    }\n\t                }\n\t                this.execs.push(func);\n\t                target.push(this);\n\t                state.build.layout_flag = false;\n\t                state.build.layout_locale_flag = false;\n\t            } // !this.layout_raw\n\t        }\n\t    }\n\t};\n\tCSL.Node.macro = {\n\t    build: function (state, target) {}\n\t};\n\tCSL.NameOutput = function(state, Item, item, variables) {\n\t    this.debug = false;\n\t    this.state = state;\n\t    this.Item = Item;\n\t    this.item = item;\n\t    this.nameset_base = 0;\n\t    this.etal_spec = {};\n\t    this._first_creator_variable = false;\n\t    this._please_chop = false;\n\t};\n\tCSL.NameOutput.prototype.init = function (names) {\n\t    if (this.state.tmp.term_predecessor) {\n\t        this.state.tmp.subsequent_author_substitute_ok = false;\n\t    }\n\t    if (this.nameset_offset) {\n\t        this.nameset_base = this.nameset_base + this.nameset_offset;\n\t    }\n\t    this.nameset_offset = 0;\n\t    this.names = names;\n\t    this.variables = names.variables;\n\t    this.state.tmp.value = [];\n\t    this.state.tmp.rendered_name = [];\n\t    this.state.tmp.label_blob = false;\n\t    this.state.tmp.etal_node = false;\n\t    this.state.tmp.etal_term = false;\n\t    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t        if (this.Item[this.variables[i]] && this.Item[this.variables[i]].length) {\n\t            this.state.tmp.value = this.state.tmp.value.concat(this.Item[this.variables[i]]);\n\t        }\n\t    }\n\t    this[\"et-al\"] = undefined;\n\t    this[\"with\"] = undefined;\n\t    this.name = undefined;\n\t    this.institutionpart = {};\n\t    this.state.tmp.group_context.tip.variable_attempt = true;\n\t    this.labelVariable = this.variables[0];\n\t    if (!this.state.tmp.value.length) {\n\t        return;\n\t    }\n\t};\n\tCSL.NameOutput.prototype.reinit = function (names, labelVariable) {\n\t    this.labelVariable = labelVariable;\n\t    if (this.state.tmp.can_substitute.value()) {\n\t        this.nameset_offset = 0;\n\t        this.variables = names.variables;\n\t        var oldval = this.state.tmp.value.slice();\n\t        this.state.tmp.value = [];\n\t        for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t            if (this.Item[this.variables[i]] && this.Item[this.variables[i]].length) {\n\t                this.state.tmp.value = this.state.tmp.value.concat(this.Item[this.variables[i]]);\n\t            }\n\t        }\n\t        if (this.state.tmp.value.length) {\n\t            this.state.tmp.can_substitute.replace(false, CSL.LITERAL);\n\t        }\n\t        this.state.tmp.value = oldval;\n\t    }\n\t};\n\tCSL.NameOutput.prototype.outputNames = function () {\n\t    var i, ilen;\n\t    var variables = this.variables;\n\t    if (this.institution.and) {\n\t        if (!this.institution.and.single.blobs || !this.institution.and.single.blobs.length) {\n\t            this.institution.and.single.blobs = this.name.and.single.blobs;\n\t        }\n\t        if (!this.institution.and.multiple.blobs || !this.institution.and.multiple.blobs.length) {\n\t            this.institution.and.multiple.blobs = this.name.and.multiple.blobs;\n\t        }\n\t    }\n\t    this.variable_offset = {};\n\t    if (this.family) {\n\t        this.family_decor = CSL.Util.cloneToken(this.family);\n\t        this.family_decor.strings.prefix = \"\";\n\t        this.family_decor.strings.suffix = \"\";\n\t        for (i = 0, ilen = this.family.execs.length; i < ilen; i += 1) {\n\t            this.family.execs[i].call(this.family_decor, this.state, this.Item);\n\t        }\n\t    } else {\n\t        this.family_decor = false;\n\t    }\n\t    if (this.given) {\n\t        this.given_decor = CSL.Util.cloneToken(this.given);\n\t        this.given_decor.strings.prefix = \"\";\n\t        this.given_decor.strings.suffix = \"\";\n\t        for (i = 0, ilen = this.given.execs.length; i < ilen; i += 1) {\n\t            this.given.execs[i].call(this.given_decor, this.state, this.Item);\n\t        }\n\t    } else {\n\t        this.given_decor = false;\n\t    }\n\t    this.getEtAlConfig();\n\t    this.divideAndTransliterateNames();\n\t    this.truncatePersonalNameLists();\n\t    this.disambigNames();\n\t    this.constrainNames();\n\t    if (this.name.strings.form === \"count\") {\n\t        if (this.state.tmp.extension || this.names_count != 0) {\n\t            this.state.output.append(this.names_count, \"empty\");\n\t            this.state.tmp.group_context.tip.variable_success = true;\n\t        }\n\t        return;\n\t    }\n\t    this.setEtAlParameters();\n\t    this.setCommonTerm();\n\t    this.state.tmp.name_node = {};\n\t    this.state.tmp.name_node.children = [];\n\t    this.renderAllNames();\n\t    var blob_list = [];\n\t    for (i = 0, ilen = variables.length; i < ilen; i += 1) {\n\t        var v = variables[i];\n\t        var institution_sets = [];\n\t        var institutions = false;\n\t        var varblob = null;\n\t        if (!this.state.opt.development_extensions.spoof_institutional_affiliations) {\n\t            varblob = this._join([this.freeters[v]], \"\");\n\t        } else {\n\t            for (var j = 0, jlen = this.institutions[v].length; j < jlen; j += 1) {\n\t                institution_sets.push(this.joinPersonsAndInstitutions([this.persons[v][j], this.institutions[v][j]]));\n\t            }\n\t            if (this.institutions[v].length) {\n\t                var pos = this.nameset_base + this.variable_offset[v];\n\t                if (this.freeters[v].length) {\n\t                    pos += 1;\n\t                }\n\t                institutions = this.joinInstitutionSets(institution_sets, pos);\n\t            }\n\t            var varblob = this.joinFreetersAndInstitutionSets([this.freeters[v], institutions]);\n\t        }\n\t        if (varblob) {\n\t            if (!this.state.tmp.extension) {\n\t                varblob = this._applyLabels(varblob, v);\n\t            }\n\t            blob_list.push(varblob);\n\t        }\n\t        if (this.common_term) {\n\t            break;\n\t        }\n\t    }\n\t    this.state.output.openLevel(\"empty\");\n\t    this.state.output.current.value().strings.delimiter = this.state.inheritOpt(this.names, \"delimiter\", \"names-delimiter\");\n\t    for (i = 0, ilen = blob_list.length; i < ilen; i += 1) {\n\t        this.state.output.append(blob_list[i], \"literal\", true);\n\t    }\n\t    this.state.output.closeLevel(\"empty\");\n\t    var blob = this.state.output.pop();\n\t    var namesToken = CSL.Util.cloneToken(this.names);\n\t    this.state.output.append(blob, namesToken);\n\t    if (this.state.tmp.term_predecessor_name) {\n\t        this.state.tmp.term_predecessor = true;\n\t    }\n\t    this.state.tmp.name_node.top = this.state.output.current.value();\n\t    if (variables[0] !== \"authority\") {\n\t        var name_node_string = [];\n\t        var nameobjs = this.Item[variables[0]];\n\t        if (nameobjs) {\n\t            for (var i = 0, ilen = nameobjs.length; i < ilen; i += 1) {\n\t                substring = CSL.Util.Names.getRawName(nameobjs[i]);\n\t                if (substring) {\n\t                    name_node_string.push(substring);\n\t                }\n\t            }\n\t        }\n\t        name_node_string = name_node_string.join(\", \");\n\t        if (name_node_string) {\n\t            this.state.tmp.name_node.string = name_node_string;\n\t        }\n\t    }\n\t    if (this.state.tmp.name_node.string && !this.state.tmp.first_name_string) {\n\t        this.state.tmp.first_name_string = this.state.tmp.name_node.string;\n\t    }\n\t    if (\"classic\" === this.Item.type) {\n\t        var author_title = [];\n\t        if (this.state.tmp.first_name_string) {\n\t            author_title.push(this.state.tmp.first_name_string);\n\t        }\n\t        if (this.Item.title) {\n\t            author_title.push(this.Item.title);\n\t        }\n\t        author_title = author_title.join(\", \");\n\t        if (author_title && this.state.sys.getAbbreviation) {\n\t            this.state.transform.loadAbbreviation(\"default\", \"classic\", author_title);\n\t            if (this.state.transform.abbrevs[\"default\"].classic[author_title]) {\n\t                this.state.tmp.done_vars.push(\"title\");\n\t                this.state.output.append(this.state.transform.abbrevs[\"default\"].classic[author_title], \"empty\", true);\n\t                blob = this.state.output.pop();\n\t\t\t\t\tthis.state.tmp.name_node.top.blobs.pop();\n\t                this.state.tmp.name_node.top.blobs.push(blob);\n\t            }\n\t        }\n\t    }\n\t    this._collapseAuthor();\n\t    this.variables = [];\n\t};\n\tCSL.NameOutput.prototype._applyLabels = function (blob, v) {\n\t    var txt;\n\t    if (!this.label || !this.label[this.labelVariable]) {\n\t        return blob;\n\t    }\n\t    var plural = 0;\n\t    var num = this.freeters_count[v] + this.institutions_count[v];\n\t    if (num > 1) {\n\t        plural = 1;\n\t    } else {\n\t        for (var i = 0, ilen = this.persons[v].length; i < ilen; i += 1) {\n\t            num += this.persons_count[v][i];\n\t        }\n\t        if (num > 1) {\n\t            plural = 1;\n\t        }\n\t    }\n\t    if (this.label[this.labelVariable].before) {\n\t        if (\"number\" === typeof this.label[this.labelVariable].before.strings.plural) {\n\t            plural = this.label[this.labelVariable].before.strings.plural;\n\t        }\n\t        txt = this._buildLabel(v, plural, \"before\", this.labelVariable);\n\t        this.state.output.openLevel(\"empty\");\n\t        this.state.output.append(txt, this.label[this.labelVariable].before, true);\n\t        this.state.output.append(blob, \"literal\", true);\n\t        this.state.output.closeLevel(\"empty\");\n\t        blob = this.state.output.pop();\n\t    } else if (this.label[this.labelVariable].after) {\n\t        if (\"number\" === typeof this.label[this.labelVariable].after.strings.plural) {\n\t            plural = this.label[this.labelVariable].after.strings.plural;\n\t        }\n\t        txt = this._buildLabel(v, plural, \"after\", this.labelVariable);\n\t        this.state.output.openLevel(\"empty\");\n\t        this.state.output.append(blob, \"literal\", true);\n\t        this.state.output.append(txt, this.label[this.labelVariable].after, true);\n\t        this.state.tmp.label_blob = this.state.output.pop();\n\t        this.state.output.append(this.state.tmp.label_blob,\"literal\",true);\n\t        this.state.output.closeLevel(\"empty\");\n\t        blob = this.state.output.pop();\n\t    }\n\t    return blob;\n\t};\n\tCSL.NameOutput.prototype._buildLabel = function (term, plural, position, v) {\n\t    if (this.common_term) {\n\t        term = this.common_term;\n\t    }\n\t    var ret = false;\n\t    var node = this.label[v][position];\n\t    if (node) {\n\t        ret = CSL.castLabel(this.state, node, term, plural, CSL.TOLERANT);\n\t    }\n\t    return ret;\n\t};\n\tCSL.NameOutput.prototype._collapseAuthor = function () {\n\t    var myqueue, mystr, oldchars;\n\t    if (this.nameset_base === 0 && this.Item[this.variables[0]] && !this._first_creator_variable) {\n\t        this._first_creator_variable = this.variables[0];\n\t    }\n\t    if ((this.item && this.item[\"suppress-author\"] && this._first_creator_variable == this.variables[0])\n\t        || (this.state[this.state.tmp.area].opt.collapse \n\t            && this.state[this.state.tmp.area].opt.collapse.length)\n\t        || (this.state[this.state.tmp.area].opt.cite_group_delimiter \n\t            && this.state[this.state.tmp.area].opt.cite_group_delimiter.length)) {\n\t        if (this.state.tmp.authorstring_request) {\n\t            mystr = \"\";\n\t            myqueue = this.state.tmp.name_node.top.blobs.slice(-1)[0].blobs;\n\t            oldchars = this.state.tmp.offset_characters;\n\t            if (myqueue) {\n\t                mystr = this.state.output.string(this.state, myqueue, false);\n\t            }\n\t            this.state.tmp.offset_characters = oldchars;\n\t            this.state.registry.authorstrings[this.Item.id] = mystr;\n\t        } else if (!this.state.tmp.just_looking\n\t                   && !this.state.tmp.suppress_decorations && (this.item[\"suppress-author\"] || (this.state[this.state.tmp.area].opt.collapse && this.state[this.state.tmp.area].opt.collapse.length) || this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter)) {\n\t            mystr = \"\";\n\t            myqueue = this.state.tmp.name_node.top.blobs.slice(-1)[0].blobs;\n\t            oldchars = this.state.tmp.offset_characters;\n\t            if (myqueue) {\n\t                mystr = this.state.output.string(this.state, myqueue, false);\n\t            }\n\t            if (mystr === this.state.tmp.last_primary_names_string) {\n\t                if (this.item[\"suppress-author\"] || (this.state[this.state.tmp.area].opt.collapse && this.state[this.state.tmp.area].opt.collapse.length)) {\n\t                    this.state.tmp.name_node.top.blobs.pop();\n\t                    this.state.tmp.name_node.children = [];\n\t                    this.state.tmp.offset_characters = oldchars;\n\t                }\n\t                if (this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter) {\n\t                    this.state.tmp.use_cite_group_delimiter = true;\n\t                }\n\t            } else {\n\t                this.state.tmp.last_primary_names_string = mystr;\n\t                if (this.variables.indexOf(this._first_creator_variable) > -1 && this.item && this.item[\"suppress-author\"] && this.Item.type !== \"legal_case\") {\n\t                    this.state.tmp.name_node.top.blobs.pop();\n\t                    this.state.tmp.name_node.children = [];\n\t                    this.state.tmp.offset_characters = oldchars;\n\t                    this.state.tmp.term_predecessor = false;\n\t                }\n\t                this.state.tmp.have_collapsed = false;\n\t                if (this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter) {\n\t                    this.state.tmp.use_cite_group_delimiter = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype.isPerson = function (value) {\n\t    if (value.literal\n\t        || (!value.given && value.family && value.isInstitution)) {\n\t        return false;\n\t    } else {\n\t        return true;\n\t    }\n\t};\n\tCSL.NameOutput.prototype.truncatePersonalNameLists = function () {\n\t    var v, i, ilen, j, jlen, chopvar, values;\n\t    this.freeters_count = {};\n\t    this.persons_count = {};\n\t    this.institutions_count = {};\n\t    for (v in this.freeters) {\n\t        if (this.freeters.hasOwnProperty(v)) {\n\t            this.freeters_count[v] = this.freeters[v].length;\n\t            this.freeters[v] = this._truncateNameList(this.freeters, v);\n\t        }\n\t    }\n\t    for (v in this.persons) {\n\t        if (this.persons.hasOwnProperty(v)) {\n\t            this.institutions_count[v] = this.institutions[v].length;\n\t            this._truncateNameList(this.institutions, v);\n\t            this.persons[v] = this.persons[v].slice(0, this.institutions[v].length);\n\t            this.persons_count[v] = [];\n\t            for (j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n\t                this.persons_count[v][j] = this.persons[v][j].length;\n\t                this.persons[v][j] = this._truncateNameList(this.persons, v, j);\n\t            }\n\t        }\n\t    }\n\t    if (this.etal_min === 1 && this.etal_use_first === 1 \n\t        && !(this.state.tmp.extension\n\t             || this.state.tmp.just_looking)) {\n\t        chopvar = v;\n\t    } else {\n\t        chopvar = false;\n\t    }\n\t    if (chopvar || this._please_chop) {\n\t        for (i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t            v = this.variables[i];\n\t            if (this.freeters[v].length) {\n\t                if (this._please_chop === v) {\n\t                    this.freeters[v] = this.freeters[v].slice(1);\n\t                    this.freeters_count[v] += -1;\n\t                    this._please_chop = false;\n\t                } else if (chopvar && !this._please_chop) {\n\t                    this.freeters[v] = this.freeters[v].slice(0, 1);\n\t                    this.freeters_count[v] = 1;\n\t                    this.institutions[v] = [];\n\t                    this.persons[v] = [];\n\t                    this._please_chop = chopvar;\n\t                }\n\t            }\n\t            for (var j=0,jlen = this.persons[v].length;j<jlen;j++) {\n\t                if (this.persons[v][j].length) {\n\t                    if (this._please_chop === v) {\n\t                        this.persons[v][j] = this.persons[v][j].slice(1);\n\t                        this.persons_count[v][j] += -1;\n\t                        this._please_chop = false;\n\t                        break;\n\t                    } else if (chopvar && !this._please_chop) {\n\t                        this.freeters[v] = this.persons[v][j].slice(0, 1);\n\t                        this.freeters_count[v] = 1;\n\t                        this.institutions[v] = [];\n\t                        this.persons[v] = [];\n\t                        values = [];\n\t                        this._please_chop = chopvar;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            if (this.institutions[v].length) {\n\t                if (this._please_chop === v) {\n\t                    this.institutions[v] = this.institutions[v].slice(1);\n\t                    this.institutions_count[v] += -1;\n\t                    this._please_chop = false;\n\t                } else if (chopvar && !this._please_chop) {\n\t                    this.institutions[v] = this.institutions[v].slice(0, 1);\n\t                    this.institutions_count[v] = 1;\n\t                    values = [];\n\t                    this._please_chop = chopvar;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    for (i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t        if (this.institutions[v].length) {\n\t            this.nameset_offset += 1;\n\t        }\n\t        for (var j=0,jlen=this.persons[v].length;j<jlen;j++) {\n\t            if (this.persons[v][j].length) {\n\t                this.nameset_offset += 1;\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype._truncateNameList = function (container, variable, index) {\n\t    var lst;\n\t    if (\"undefined\" === typeof index) {\n\t        lst = container[variable];\n\t    } else {\n\t        lst = container[variable][index];\n\t    }\n\t    if (this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names \n\t        && lst.length > 50 \n\t        && lst.length > (this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names + 2)) {\n\t        var limit = this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names;\n\t        lst = lst.slice(0, limit+1).concat(lst.slice(-1));\n\t    }\n\t    return lst;\n\t};\n\tCSL.NameOutput.prototype.divideAndTransliterateNames = function () {\n\t    var i, ilen, j, jlen;\n\t    var Item = this.Item;\n\t    var variables = this.variables;\n\t    this.varnames = variables.slice();\n\t    this.freeters = {};\n\t    this.persons = {};\n\t    this.institutions = {};\n\t    for (i = 0, ilen = variables.length; i < ilen; i += 1) {\n\t        var v = variables[i];\n\t        this.variable_offset[v] = this.nameset_offset;\n\t        var values = this._normalizeVariableValue(Item, v);\n\t        if (this.name.strings[\"suppress-min\"] && values.length >= this.name.strings[\"suppress-min\"]) {\n\t            values = [];\n\t        }\n\t        if (this.name.strings[\"suppress-max\"] && values.length <= this.name.strings[\"suppress-max\"]) {\n\t            values = [];\n\t        }\n\t        this._getFreeters(v, values);\n\t        this._getPersonsAndInstitutions(v, values);\n\t        if (this.state.opt.development_extensions.spoof_institutional_affiliations) {\n\t            if (this.name.strings[\"suppress-min\"] === 0) {\n\t                this.freeters[v] = [];\n\t                for (j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n\t                    this.persons[v][j] = [];\n\t                }\n\t            } else if (this.institution.strings[\"suppress-min\"] === 0) {\n\t                this.institutions[v] = [];\n\t                this.freeters[v] = this.freeters[v].concat(this.persons[v]);\n\t                for (j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n\t                    for (var k = 0, klen = this.persons[v][j].length; k < klen; k += 1) {\n\t                        this.freeters[v].push(this.persons[v][j][k]);\n\t                    }\n\t                }\n\t                this.persons[v] = [];\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype._normalizeVariableValue = function (Item, variable) {\n\t    var names, name, i, ilen;\n\t    if (\"string\" === typeof Item[variable] || \"number\" === typeof Item[variable]) {\n\t        CSL.debug(\"name variable \\\"\" + variable + \"\\\" is string or number, not array. Attempting to fix.\");\n\t        names = [{literal: Item[variable] + \"\"}];\n\t    } else if (!Item[variable]) {\n\t        names = [];\n\t    } else if (\"number\" !== typeof Item[variable].length) {\n\t        CSL.debug(\"name variable \\\"\" + variable + \"\\\" is object, not array. Attempting to fix.\");\n\t        Item[variable] = [Item[variable]];\n\t        names = Item[variable].slice();\n\t    } else {\n\t        names = Item[variable].slice();\n\t    }\n\t    return names;\n\t};\n\tCSL.NameOutput.prototype._getFreeters = function (v, values) {\n\t    this.freeters[v] = [];\n\t    if (this.state.opt.development_extensions.spoof_institutional_affiliations) {\n\t        for (var i=values.length-1;i>-1;i--) {\n\t            if (this.isPerson(values[i])) {\n\t                var value = this._checkNickname(values.pop());\n\t                if (value) {\n\t                    this.freeters[v].push(value);\n\t                }\n\t            } else {\n\t                break;\n\t            }\n\t        }\n\t    } else {\n\t        for (var i=values.length-1;i>-1;i--) {\n\t            var value = values.pop();\n\t            if (this.isPerson(value)) {\n\t                var value = this._checkNickname(value);\n\t            }\n\t            this.freeters[v].push(value);\n\t        }\n\t    }\n\t    this.freeters[v].reverse();\n\t    if (this.freeters[v].length) {\n\t        this.nameset_offset += 1;\n\t    }\n\t};\n\tCSL.NameOutput.prototype._getPersonsAndInstitutions = function (v, values) {\n\t    this.persons[v] = [];\n\t    this.institutions[v] = [];\n\t    if (!this.state.opt.development_extensions.spoof_institutional_affiliations) return;\n\t    var persons = [];\n\t    var has_affiliates = false;\n\t    var first = true;\n\t    for (var i = values.length - 1; i > -1; i += -1) {\n\t        if (this.isPerson(values[i])) {\n\t            var value = this._checkNickname(values[i]);\n\t            if (value) {\n\t                persons.push(value);\n\t            }\n\t        } else {\n\t            has_affiliates = true;\n\t            this.institutions[v].push(values[i]);\n\t            if (!first) {\n\t                persons.reverse();\n\t                this.persons[v].push(persons);\n\t                persons = [];\n\t            }\n\t            first = false;\n\t        }\n\t    }\n\t    if (has_affiliates) {\n\t        persons.reverse();\n\t        this.persons[v].push(persons);\n\t        this.persons[v].reverse();\n\t        this.institutions[v].reverse();\n\t    }\n\t};\n\tCSL.NameOutput.prototype._clearValues = function (values) {\n\t    for (var i = values.length - 1; i > -1; i += -1) {\n\t        values.pop();\n\t    }\n\t};\n\tCSL.NameOutput.prototype._checkNickname = function (name) {\n\t    if ([\"interview\", \"personal_communication\"].indexOf(this.Item.type) > -1) {\n\t        var author = \"\";\n\t        author = CSL.Util.Names.getRawName(name);\n\t        if (author && this.state.sys.getAbbreviation && !(this.item && this.item[\"suppress-author\"])) {\n\t            this.state.transform.loadAbbreviation(\"default\", \"nickname\", author);\n\t            var myLocalName = this.state.transform.abbrevs[\"default\"].nickname[author];\n\t            if (myLocalName) {\n\t                if (myLocalName === \"!here>>>\") {\n\t                    name = false;\n\t                } else {\n\t                    name = {family:myLocalName,given:''};\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return name;\n\t};\n\tCSL.NameOutput.prototype.joinPersons = function (blobs, pos, j, tokenname) {\n\t    var ret;\n\t    if (!tokenname) {\n\t        tokenname = \"name\";\n\t    }\n\t    if (\"undefined\" === typeof j) {\n\t        if (this.etal_spec[pos].freeters === 1) {\n\t           ret = this._joinEtAl(blobs, tokenname);\n\t        } else if (this.etal_spec[pos].freeters === 2) {\n\t            ret = this._joinEllipsis(blobs, tokenname);\n\t        } else if (!this.state.tmp.sort_key_flag) {\n\t            ret = this._joinAnd(blobs, tokenname);\n\t        } else {\n\t            ret = this._join(blobs, \" \");\n\t        }\n\t    } else {\n\t        if (this.etal_spec[pos].persons[j] === 1) {\n\t            ret = this._joinEtAl(blobs, tokenname);\n\t        } else if (this.etal_spec[pos].persons[j] === 2) {\n\t            ret = this._joinEllipsis(blobs, tokenname);\n\t        } else if (!this.state.tmp.sort_key_flag) {\n\t            ret = this._joinAnd(blobs, tokenname);\n\t        } else {\n\t            ret = this._join(blobs, \" \");\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.NameOutput.prototype.joinInstitutionSets = function (blobs, pos) {\n\t    var ret;\n\t    if (this.etal_spec[pos].institutions === 1) {\n\t        ret = this._joinEtAl(blobs, \"institution\");\n\t    } else if (this.etal_spec[pos].institutions === 2) {\n\t        ret = this._joinEllipsis(blobs, \"institution\");\n\t    } else {\n\t        ret = this._joinAnd(blobs, \"institution\");\n\t    }\n\t    return ret;\n\t};\n\tCSL.NameOutput.prototype.joinPersonsAndInstitutions = function (blobs) {\n\t    return this._join(blobs, this.state.tmp.name_delimiter);\n\t};\n\tCSL.NameOutput.prototype.joinFreetersAndInstitutionSets = function (blobs) {\n\t    var ret = this._join(blobs, \"[never here]\", this[\"with\"].single, this[\"with\"].multiple);\n\t    return ret;\n\t};\n\tCSL.NameOutput.prototype._joinEtAl = function (blobs, tokenname) {\n\t    var blob = this._join(blobs, this.state.tmp.name_delimiter);\n\t    this.state.output.openLevel(this._getToken(tokenname));\n\t    this.state.output.current.value().strings.delimiter = \"\";\n\t    this.state.output.append(blob, \"literal\", true);\n\t    if (blobs.length > 1) {\n\t        this.state.output.append(this[\"et-al\"].multiple, \"literal\", true);\n\t    } else if (blobs.length === 1) {\n\t        this.state.output.append(this[\"et-al\"].single, \"literal\", true);\n\t    }\n\t    this.state.output.closeLevel();\n\t    return this.state.output.pop();\n\t};\n\tCSL.NameOutput.prototype._joinEllipsis = function (blobs, tokenname) {\n\t    return this._join(blobs, this.state.tmp.name_delimiter, this.name.ellipsis.single, this.name.ellipsis.multiple, tokenname);\n\t};\n\tCSL.NameOutput.prototype._joinAnd = function (blobs, tokenname) {\n\t    return this._join(blobs, this.state.inheritOpt(this[tokenname], \"delimiter\", (tokenname + \"-delimiter\"), \", \"), this[tokenname].and.single, this[tokenname].and.multiple, tokenname);\n\t};\n\tCSL.NameOutput.prototype._join = function (blobs, delimiter, single, multiple, tokenname) {\n\t    var i, ilen;\n\t    if (!blobs) {\n\t        return false;\n\t    }\n\t    for (i = blobs.length - 1; i > -1; i += -1) {\n\t        if (!blobs[i] || blobs[i].length === 0 || !blobs[i].blobs.length) {\n\t            blobs = blobs.slice(0, i).concat(blobs.slice(i + 1));\n\t        }\n\t    }\n\t    if (!blobs.length) {\n\t        return false;\n\t    } else if (single && blobs.length === 2) {\n\t        if (single) {\n\t            single = new CSL.Blob(single.blobs,single);\n\t        }\n\t        blobs = [blobs[0], single, blobs[1]];\n\t    } else {\n\t        var delimiter_offset;\n\t        if (multiple) {\n\t            delimiter_offset = 2;\n\t        } else {\n\t            delimiter_offset = 1;\n\t        }\n\t        for (i = 0, ilen = blobs.length - delimiter_offset; i < ilen; i += 1) {\n\t            blobs[i].strings.suffix += delimiter;\n\t        }\n\t        if (blobs.length > 1) {\n\t            var blob = blobs.pop();\n\t            if (multiple) {\n\t                multiple = new CSL.Blob(multiple.blobs,multiple);\n\t                blobs.push(multiple);\n\t            } else {\n\t                if (single) {\n\t                    single = new CSL.Blob(single.blobs,single);\n\t                }\n\t                blobs.push(single);\n\t            }\n\t            blobs.push(blob);\n\t        }\n\t    }\n\t    this.state.output.openLevel();\n\t    if (single && multiple) {\n\t        this.state.output.current.value().strings.delimiter = \"\";\n\t    }\n\t    for (i = 0, ilen = blobs.length; i < ilen; i += 1) {\n\t        this.state.output.append(blobs[i], false, true);\n\t    }\n\t    this.state.output.closeLevel();\n\t    return this.state.output.pop();\n\t};\n\tCSL.NameOutput.prototype._getToken = function (tokenname) {\n\t    var token = this[tokenname];\n\t    if (tokenname === \"institution\") {\n\t        var newtoken = new CSL.Token();\n\t        return newtoken;\n\t    }\n\t    return token;\n\t};\n\tCSL.NameOutput.prototype.setCommonTerm = function () {\n\t    var variables = this.variables;\n\t    var varnames = variables.slice();\n\t    varnames.sort();\n\t    this.common_term = varnames.join(\"\");\n\t    if (!this.common_term) {\n\t        return false;\n\t    }\n\t    var has_term = false;\n\t    if (this.label && this.label[this.variables[0]]) {\n\t        if (this.label[this.variables[0]].before) {\n\t            has_term = this.state.getTerm(this.common_term, this.label[this.variables[0]].before.strings.form, 0);\n\t        } else if (this.label[this.variables[0]].after) {\n\t            has_term = this.state.getTerm(this.common_term, this.label[this.variables[0]].after.strings.form, 0);\n\t        }\n\t    }\n\t    if (!this.state.locale[this.state.opt.lang].terms[this.common_term]\n\t        || !has_term\n\t        || this.variables.length < 2) {\n\t        this.common_term = false;\n\t        return;\n\t    }\n\t    var freeters_offset = 0;\n\t    for (var i = 0, ilen = this.variables.length - 1; i < ilen; i += 1) {\n\t        var v = this.variables[i];\n\t        var vv = this.variables[i + 1];\n\t        if (this.freeters[v].length || this.freeters[vv].length) {\n\t            if (this.etal_spec[v].freeters !== this.etal_spec[vv].freeters\n\t                || !this._compareNamesets(this.freeters[v], this.freeters[vv])) {\n\t                this.common_term = false;\n\t                return;\n\t            }\n\t            freeters_offset += 1;\n\t        }\n\t        if (this.persons[v].length !== this.persons[vv].length) {\n\t            this.common_term = false;\n\t            return;\n\t        }\n\t        for (var j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n\t            if (this.etal_spec[v].persons[j] !== this.etal_spec[vv].persons[j]\n\t                || !this._compareNamesets(this.persons[v][j], this.persons[vv][j])) {\n\t                this.common_term = false;\n\t                return;\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype._compareNamesets = function (base_nameset, nameset) {\n\t    if (base_nameset.length !== nameset.length) {\n\t        return false;\n\t    }\n\t    for (var i = 0, ilen = nameset.length; i < ilen; i += 1) {\n\t        var name = nameset[i];\n\t        for (var j = 0, jlen = CSL.NAME_PARTS.length; j < jlen; j += 1) {\n\t            var part = CSL.NAME_PARTS[j];\n\t            if (!base_nameset[i] || base_nameset[i][part] != nameset[i][part]) {\n\t                return false;\n\t            }\n\t        }\n\t    }\n\t    return true;\n\t};\n\tCSL.NameOutput.prototype.constrainNames = function () {\n\t    this.names_count = 0;\n\t    var pos;\n\t    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t        var v = this.variables[i];\n\t        pos = this.nameset_base + i;\n\t        if (this.freeters[v].length) {\n\t            this.state.tmp.names_max.push(this.freeters[v].length, \"literal\");\n\t            this._imposeNameConstraints(this.freeters, this.freeters_count, v, pos);\n\t            this.names_count += this.freeters[v].length;\n\t        }\n\t        if (this.institutions[v].length) {\n\t            this.state.tmp.names_max.push(this.institutions[v].length, \"literal\");\n\t            this._imposeNameConstraints(this.institutions, this.institutions_count, v, pos);\n\t            this.persons[v] = this.persons[v].slice(0, this.institutions[v].length);\n\t            this.names_count += this.institutions[v].length;\n\t        }\n\t        for (var j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n\t            if (this.persons[v][j].length) {\n\t                this.state.tmp.names_max.push(this.persons[v][j].length, \"literal\");\n\t                this._imposeNameConstraints(this.persons[v], this.persons_count[v], j, pos);\n\t                this.names_count += this.persons[v][j].length;\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype._imposeNameConstraints = function (lst, count, key, pos) {\n\t    var display_names = lst[key];\n\t    var discretionary_names_length = this.state.tmp[\"et-al-min\"];\n\t    if (this.state.tmp.suppress_decorations) {\n\t        if (this.state.tmp.disambig_request && this.state.tmp.disambig_request.names[pos]) {\n\t            discretionary_names_length = this.state.tmp.disambig_request.names[pos];\n\t        } else if (count[key] >= this.etal_min) {\n\t            discretionary_names_length = this.etal_use_first;\n\t        }\n\t    } else {\n\t        if (this.state.tmp.disambig_request \n\t            && this.state.tmp.disambig_request.names[pos] > this.etal_use_first) {\n\t            if (count[key] < this.etal_min) {\n\t                discretionary_names_length = count[key];\n\t            } else {\n\t                discretionary_names_length = this.state.tmp.disambig_request.names[pos];\n\t            }\n\t        } else if (count[key] >= this.etal_min) {\n\t            discretionary_names_length = this.etal_use_first;\n\t        }\n\t        if (this.etal_use_last && discretionary_names_length > (this.etal_min - 2)) {\n\t            discretionary_names_length = this.etal_min - 2;\n\t        }\n\t    }\n\t    var sane = this.etal_min >= this.etal_use_first;\n\t    var overlength = count[key] > discretionary_names_length;\n\t    if (discretionary_names_length > count[key]) {\n\t        discretionary_names_length = display_names.length;\n\t    }\n\t    if (sane && overlength) {\n\t        if (this.etal_use_last) {\n\t            lst[key] = display_names.slice(0, discretionary_names_length).concat(display_names.slice(-1));\n\t        } else {\n\t            lst[key] = display_names.slice(0, discretionary_names_length);\n\t        }\n\t    }\n\t    this.state.tmp.disambig_settings.names[pos] = lst[key].length;\n\t    this.state.disambiguate.padBase(this.state.tmp.disambig_settings);\n\t};\n\tCSL.NameOutput.prototype.disambigNames = function () {\n\t    var pos;\n\t    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t        var v = this.variables[i];\n\t        pos = this.nameset_base + i;\n\t        if (this.freeters[v].length) {\n\t            this._runDisambigNames(this.freeters[v], pos);\n\t        }\n\t        if (this.institutions[v].length) {\n\t            if (\"undefined\" === typeof this.state.tmp.disambig_settings.givens[pos]) {\n\t                this.state.tmp.disambig_settings.givens[pos] = [];\n\t            }\n\t            for (var j=0,jlen=this.institutions[v].length;j<jlen;j+=1) {\n\t                if (\"undefined\" === typeof this.state.tmp.disambig_settings.givens[pos][j]) {\n\t                    this.state.tmp.disambig_settings.givens[pos].push(2);\n\t                }\n\t            }\n\t        }\n\t        for (var j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n\t            if (this.persons[v][j].length) {\n\t                this._runDisambigNames(this.persons[v][j], pos);\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype._runDisambigNames = function (lst, pos) {\n\t    var chk, myform, myinitials, param, i, ilen, paramx;\n\t    for (i = 0, ilen = lst.length; i < ilen; i += 1) {\n\t        if (!lst[i].given && !lst[i].family) {\n\t            continue;\n\t        }\n\t        myinitials = this.state.inheritOpt(this.name, \"initialize-with\");\n\t        this.state.registry.namereg.addname(\"\" + this.Item.id, lst[i], i);\n\t        chk = this.state.tmp.disambig_settings.givens[pos];\n\t        if (\"undefined\" === typeof chk) {\n\t            for (var j = 0, jlen = pos + 1; j < jlen; j += 1) {\n\t                if (!this.state.tmp.disambig_settings.givens[j]) {\n\t                    this.state.tmp.disambig_settings.givens[j] = [];\n\t                }\n\t            }\n\t        }\n\t        chk = this.state.tmp.disambig_settings.givens[pos][i];\n\t        if (\"undefined\" === typeof chk) {\n\t            myform = this.state.inheritOpt(this.name, \"form\", \"name-form\");\n\t            param = this.state.registry.namereg.evalname(\"\" + this.Item.id, lst[i], i, 0, myform, myinitials);\n\t            this.state.tmp.disambig_settings.givens[pos].push(param);\n\t        }\n\t        myform = this.state.inheritOpt(this.name, \"form\", \"name-form\");\n\t        paramx = this.state.registry.namereg.evalname(\"\" + this.Item.id, lst[i], i, 0, myform, myinitials);\n\t        if (this.state.tmp.disambig_request) {\n\t            var val = this.state.tmp.disambig_settings.givens[pos][i];\n\t            if (val === 1 && \n\t                this.state.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\" && \n\t                (\"undefined\" === typeof this.state.inheritOpt(this.name, \"initialize-with\")\n\t                 || \"undefined\" === typeof lst[i].given)) {\n\t                val = 2;\n\t            }\n\t            param = val;\n\t            if (this.state.opt[\"disambiguate-add-givenname\"] && lst[i].given) {\n\t                param = this.state.registry.namereg.evalname(\"\" + this.Item.id, lst[i], i, param, this.state.inheritOpt(this.name, \"form\", \"name-form\"), this.state.inheritOpt(this.name, \"initialize-with\"));\n\t            }\n\t        } else {\n\t            param = paramx;\n\t        }\n\t        if (!this.state.tmp.just_looking && this.item && this.item.position === CSL.POSITION_FIRST) {\n\t            if (paramx > param) {\n\t                param = paramx;\n\t            }\n\t        }\n\t        if (!this.state.tmp.sort_key_flag) {\n\t            this.state.tmp.disambig_settings.givens[pos][i] = param;\n\t            if (\"string\" === typeof myinitials\n\t                && (\"undefined\" === typeof this.name.strings[\"initialize\"]\n\t                    || true === this.name.strings[\"initialize\"])) {\n\t                this.state.tmp.disambig_settings.use_initials = true;\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype.getEtAlConfig = function () {\n\t    var item = this.item;\n\t    this[\"et-al\"] = {};\n\t    this.state.output.append(this.etal_term, this.etal_style, true);\n\t    this[\"et-al\"].single = this.state.output.pop();\n\t    this[\"et-al\"].single.strings.suffix = this.etal_suffix;\n\t    this[\"et-al\"].single.strings.prefix = this.etal_prefix_single;\n\t    this.state.output.append(this.etal_term, this.etal_style, true);\n\t    this[\"et-al\"].multiple = this.state.output.pop();\n\t    this[\"et-al\"].multiple.strings.suffix = this.etal_suffix;\n\t    this[\"et-al\"].multiple.strings.prefix = this.etal_prefix_multiple;\n\t    if (\"undefined\" === typeof item) {\n\t        item = {};\n\t    }\n\t    if (item.position) {\n\t        if (this.state.inheritOpt(this.name, \"et-al-subsequent-min\")) {\n\t            this.etal_min = this.state.inheritOpt(this.name, \"et-al-subsequent-min\");\n\t        } else {\n\t            this.etal_min = this.state.inheritOpt(this.name, \"et-al-min\");\n\t        }\n\t        if (this.state.inheritOpt(this.name, \"et-al-subsequent-use-first\")) {\n\t            this.etal_use_first = this.state.inheritOpt(this.name, \"et-al-subsequent-use-first\");\n\t        } else {\n\t            this.etal_use_first = this.state.inheritOpt(this.name, \"et-al-use-first\");\n\t        }\n\t    } else {\n\t        if (this.state.tmp[\"et-al-min\"]) {\n\t            this.etal_min = this.state.tmp[\"et-al-min\"];\n\t        } else {\n\t            this.etal_min = this.state.inheritOpt(this.name, \"et-al-min\");\n\t        }\n\t        if (this.state.tmp[\"et-al-use-first\"]) {\n\t            this.etal_use_first = this.state.tmp[\"et-al-use-first\"];\n\t        } else {\n\t            this.etal_use_first = this.state.inheritOpt(this.name, \"et-al-use-first\");\n\t        }\n\t        if (\"boolean\" === typeof this.state.tmp[\"et-al-use-last\"]) {\n\t            this.etal_use_last = this.state.tmp[\"et-al-use-last\"];\n\t        } else {\n\t            this.etal_use_last = this.state.inheritOpt(this.name, \"et-al-use-last\");\n\t        }\n\t    }\n\t    if (!this.state.tmp[\"et-al-min\"]) {\n\t        this.state.tmp[\"et-al-min\"] = this.etal_min;\n\t    }\n\t};\n\tCSL.NameOutput.prototype.setEtAlParameters = function () {\n\t    var i, ilen, j, jlen;\n\t    for (i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t        var v = this.variables[i];\n\t        if (\"undefined\" === typeof this.etal_spec[v]) {\n\t            this.etal_spec[v] = {freeters:0,institutions:0,persons:[]};\n\t        }\n\t        this.etal_spec[this.nameset_base + i] = this.etal_spec[v];\n\t        if (this.freeters[v].length) {\n\t            this._setEtAlParameter(\"freeters\", v);\n\t        }\n\t        for (j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n\t            if (\"undefined\" === typeof this.etal_spec[v][j]) {\n\t                this.etal_spec[v].persons[j] = 0;\n\t            }\n\t            this._setEtAlParameter(\"persons\", v, j);\n\t        }\n\t        if (this.institutions[v].length) {\n\t            this._setEtAlParameter(\"institutions\", v);\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype._setEtAlParameter = function (type, v, j) {\n\t    var lst, count;\n\t    if (type === \"persons\") {\n\t        lst = this.persons[v][j];\n\t        count = this.persons_count[v][j];\n\t    } else {\n\t        lst = this[type][v];\n\t        count = this[type + \"_count\"][v];\n\t    }\n\t    if (lst.length < count && !this.state.tmp.sort_key_flag) {\n\t        if (this.etal_use_last) {\n\t            if (type === \"persons\") {\n\t                this.etal_spec[v].persons[j] = 2\n\t            } else {\n\t                this.etal_spec[v][type] = 2;\n\t            }\n\t        } else {\n\t            if (type === \"persons\") {\n\t                this.etal_spec[v].persons[j] = 1;\n\t            } else {\n\t                this.etal_spec[v][type] = 1;\n\t            }\n\t        }\n\t    } else {\n\t        if (type === \"persons\") {\n\t            this.etal_spec[v].persons[j] = 0;\n\t        } else {\n\t            this.etal_spec[v][type] = 0;\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype.renderAllNames = function () {\n\t    var pos;\n\t    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t        var v = this.variables[i];\n\t        if (this.freeters[v].length || this.institutions[v].length) {\n\t            if (!this.state.tmp.group_context.tip.condition) {\n\t                this.state.tmp.just_did_number = false;\n\t            }\n\t        }\n\t        pos = this.nameset_base + i;\n\t        if (this.freeters[v].length) {\n\t            this.freeters[v] = this._renderNames(v, this.freeters[v], pos);\n\t        }\n\t        for (var j = 0, jlen = this.institutions[v].length; j < jlen; j += 1) {\n\t            this.persons[v][j] = this._renderNames(v, this.persons[v][j], pos, j);\n\t        }\n\t    }\n\t    this.renderInstitutionNames();\n\t};\n\tCSL.NameOutput.prototype.renderInstitutionNames = function () {\n\t    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n\t        var v = this.variables[i];\n\t        for (var j = 0, jlen = this.institutions[v].length; j < jlen; j += 1) {\n\t            var institution, institution_short, institution_long, short_style, long_style;\n\t            var name = this.institutions[v][j];\n\t            var j, ret, optLangTag, jlen, key, localesets;\n\t            if (this.state.tmp.extension) {\n\t                localesets = [\"sort\"];\n\t            } else if (name.isInstitution || name.literal) {\n\t                localesets = this.state.opt['cite-lang-prefs'].institutions;\n\t            } else {\n\t                localesets = this.state.opt['cite-lang-prefs'].persons;\n\t            }\n\t            slot = {primary:'locale-orig',secondary:false,tertiary:false};\n\t\t        if (localesets) {\n\t\t\t        var slotnames = [\"primary\", \"secondary\", \"tertiary\"];\n\t\t\t        for (var k = 0, klen = slotnames.length; k < klen; k += 1) {\n\t\t\t\t        if (localesets.length - 1 <  k) {\n\t\t\t\t\t        break;\n\t\t\t\t        }\n\t                    if (localesets[k]) {\n\t\t\t\t            slot[slotnames[k]] = 'locale-' + localesets[k];\n\t                    }\n\t\t\t        }\n\t\t        } else {\n\t\t\t        slot.primary = 'locale-translat';\n\t\t        }\n\t\t        if (this.state.tmp.area !== \"bibliography\"\n\t\t\t        && !(this.state.tmp.area === \"citation\"\n\t\t\t\t         && this.state.opt.xclass === \"note\"\n\t\t\t\t         && this.item && !this.item.position)) {\n\t\t\t        slot.secondary = false;\n\t\t\t        slot.tertiary = false;\n\t\t        }\n\t            var res;\n\t            this.setRenderedName(name);\n\t            var institution = this._renderInstitutionName(v, name, slot, j);\n\t            this.institutions[v][j] = institution;\n\t        }\n\t    }\n\t}\n\tCSL.NameOutput.prototype._renderInstitutionName = function (v, name, slot, j) {\n\t    res = this.getName(name, slot.primary, true);\n\t    var primary = res.name;\n\t    var usedOrig = res.usedOrig;\n\t    if (primary) {\n\t        primary = this.fixupInstitution(primary, v, j);\n\t    }\n\t\tsecondary = false;\n\t\tif (slot.secondary) {\n\t        res = this.getName(name, slot.secondary, false, usedOrig);\n\t        secondary = res.name;\n\t        usedOrig = res.usedOrig;\n\t        if (secondary) {\n\t\t\t\tsecondary = this.fixupInstitution(secondary, v, j);\n\t        }\n\t\t}\n\t\ttertiary = false;\n\t\tif (slot.tertiary) {\n\t        res = this.getName(name, slot.tertiary, false, usedOrig);\n\t        tertiary = res.name;\n\t        if (tertiary) {\n\t\t\t\ttertiary = this.fixupInstitution(tertiary, v, j);\n\t        }\n\t\t}\n\t    var n = {\n\t        l: {\n\t            pri: false,\n\t            sec: false,\n\t            ter: false\n\t        },\n\t        s: {\n\t            pri: false,\n\t            sec: false,\n\t            ter: false\n\t        }\n\t    };\n\t    if (primary) {\n\t        n.l.pri = primary[\"long\"];\n\t        n.s.pri = primary[\"short\"].length ? primary[\"short\"] : primary[\"long\"];\n\t    }\n\t    if (secondary) {\n\t        n.l.sec = secondary[\"long\"];\n\t        n.s.sec = secondary[\"short\"].length ? secondary[\"short\"] : secondary[\"long\"];\n\t    }\n\t    if (tertiary) {\n\t        n.l.ter = tertiary[\"long\"];\n\t        n.s.ter = tertiary[\"short\"].length ? tertiary[\"short\"] : tertiary[\"long\"];\n\t    }\n\t    switch (this.institution.strings[\"institution-parts\"]) {\n\t    case \"short\":\n\t        if (primary[\"short\"].length) {\n\t            short_style = this._getShortStyle();\n\t            institution = [this._composeOneInstitutionPart([n.s.pri, n.s.sec, n.s.ter], slot, short_style, v)];\n\t        } else {\n\t            long_style = this._getLongStyle(primary, v, j);\n\t            institution = [this._composeOneInstitutionPart([n.l.pri, n.l.sec, n.l.ter], slot, long_style, v)];\n\t        }\n\t        break;\n\t    case \"short-long\":\n\t        long_style = this._getLongStyle(primary, v, j);\n\t        short_style = this._getShortStyle();\n\t        institution_short = this._renderOneInstitutionPart(primary[\"short\"], short_style);\n\t        institution_long = this._composeOneInstitutionPart([n.l.pri, n.l.sec, n.l.ter], slot, long_style, v);\n\t        institution = [institution_short, institution_long];\n\t        break;\n\t    case \"long-short\":\n\t        long_style = this._getLongStyle(primary, v, j);\n\t        short_style = this._getShortStyle();\n\t        institution_short = this._renderOneInstitutionPart(primary[\"short\"], short_style);\n\t        institution_long = this._composeOneInstitutionPart([n.l.pri, n.l.sec, n.l.ter], slot, long_style, v);\n\t        institution = [institution_long, institution_short];\n\t        break;\n\t    default:\n\t        long_style = this._getLongStyle(primary, v, j);\n\t        institution = [this._composeOneInstitutionPart([n.l.pri, n.l.sec, n.l.ter], slot, long_style, v)];\n\t        break;\n\t    }\n\t    var blob = this._join(institution, \" \");\n\t    this.state.tmp.name_node.children.push(blob);\n\t    return blob;\n\t};\n\tCSL.NameOutput.prototype._composeOneInstitutionPart = function (names, slot, style, v) {\n\t    var primary = false, secondary = false, tertiary = false, primary_tok, secondary_tok, tertiary_tok;\n\t    if (names[0]) {\n\t        primary_tok = CSL.Util.cloneToken(style);\n\t        if (this.state.opt.citeAffixes[slot.primary]){\n\t            if (\"<i>\" === this.state.opt.citeAffixes.institutions[slot.primary].prefix) {\n\t                var hasItalic = false;\n\t                for (var i = 0, ilen = primary_tok.decorations.length; i < ilen; i += 1) {\n\t                    if (style.decorations[i][0] === \"@font-style\"\n\t                        && primary_tok.decorations[i][1] === \"italic\") {\n\t                        hasItalic = true;\n\t                    }\n\t                }\n\t                if (!hasItalic) {\n\t                    primary_tok.decorations.push([\"@font-style\", \"italic\"])\n\t                }\n\t            }\n\t        }\n\t        primary = this._renderOneInstitutionPart(names[0], primary_tok);\n\t     }\n\t    if (names[1]) {\n\t        secondary = this._renderOneInstitutionPart(names[1], style);\n\t    }\n\t    if (names[2]) {\n\t        tertiary = this._renderOneInstitutionPart(names[2], style);\n\t    }\n\t    var institutionblob;\n\t    if (secondary || tertiary) {\n\t        this.state.output.openLevel(\"empty\");\n\t        this.state.output.append(primary);\n\t        secondary_tok = CSL.Util.cloneToken(style);\n\t        if (slot.secondary) {\n\t            secondary_tok.strings.prefix = this.state.opt.citeAffixes.institutions[slot.secondary].prefix;\n\t            secondary_tok.strings.suffix = this.state.opt.citeAffixes.institutions[slot.secondary].suffix;\n\t            if (!secondary_tok.strings.prefix) {\n\t                secondary_tok.strings.prefix = \" \";\n\t            }\n\t        }\n\t        var secondary_outer = new CSL.Token();\n\t        secondary_outer.decorations.push([\"@font-style\", \"normal\"]);\n\t        secondary_outer.decorations.push([\"@font-weight\", \"normal\"]);\n\t        this.state.output.openLevel(secondary_outer);\n\t        this.state.output.append(secondary, secondary_tok);\n\t        this.state.output.closeLevel();\n\t        tertiary_tok = CSL.Util.cloneToken(style);\n\t        if (slot.tertiary) {\n\t            tertiary_tok.strings.prefix = this.state.opt.citeAffixes.institutions[slot.tertiary].prefix;\n\t            tertiary_tok.strings.suffix = this.state.opt.citeAffixes.institutions[slot.tertiary].suffix;\n\t            if (!tertiary_tok.strings.prefix) {\n\t                tertiary_tok.strings.prefix = \" \";\n\t            }\n\t        }\n\t        var tertiary_outer = new CSL.Token();\n\t        tertiary_outer.decorations.push([\"@font-style\", \"normal\"]);\n\t        tertiary_outer.decorations.push([\"@font-weight\", \"normal\"]);\n\t        this.state.output.openLevel(tertiary_outer);\n\t        this.state.output.append(tertiary, tertiary_tok);\n\t        this.state.output.closeLevel();\n\t        this.state.output.closeLevel();\n\t        institutionblob = this.state.output.pop();\n\t    } else {\n\t        institutionblob = primary;\n\t    }\n\t    return institutionblob;\n\t}\n\tCSL.NameOutput.prototype._renderOneInstitutionPart = function (blobs, style) {\n\t    for (var i = 0, ilen = blobs.length; i < ilen; i += 1) {\n\t        if (blobs[i]) {\n\t            var str = blobs[i];\n\t            if (this.state.tmp.strip_periods) {\n\t                str = str.replace(/\\./g, \"\");\n\t            } else {\n\t                for (var j = 0, jlen = style.decorations.length; j < jlen; j += 1) {\n\t                    if (\"@strip-periods\" === style.decorations[j][0] && \"true\" === style.decorations[j][1]) {\n\t                        str = str.replace(/\\./g, \"\");\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            this.state.tmp.group_context.tip.variable_success = true;\n\t            this.state.tmp.can_substitute.replace(false, CSL.LITERAL);\n\t            if (str === \"!here>>>\") {\n\t                blobs[i] = false;\n\t            } else {\n\t                this.state.output.append(str, style, true);\n\t                blobs[i] = this.state.output.pop();\n\t            }\n\t        }\n\t    }\n\t    if (\"undefined\" === typeof this.institution.strings[\"part-separator\"]) {\n\t        this.institution.strings[\"part-separator\"] = this.state.tmp.name_delimiter;\n\t    }\n\t    return this._join(blobs, this.institution.strings[\"part-separator\"]);\n\t};\n\tCSL.NameOutput.prototype._renderNames = function (v, values, pos, j) {\n\t    var ret = false;\n\t    if (values.length) {\n\t        var names = [];\n\t        for (var i = 0, ilen = values.length; i < ilen; i += 1) {\n\t            var name = values[i];\n\t            var ret, optLangTag, jlen, key, localesets;\n\t            if (this.state.tmp.extension) {\n\t                localesets = [\"sort\"];\n\t            } else if (name.isInstitution || name.literal) {\n\t                localesets = this.state.opt['cite-lang-prefs'].institutions;\n\t            } else {\n\t                localesets = this.state.opt['cite-lang-prefs'].persons;\n\t            }\n\t            slot = {primary:'locale-orig',secondary:false,tertiary:false};\n\t\t        if (localesets) {\n\t\t\t        var slotnames = [\"primary\", \"secondary\", \"tertiary\"];\n\t\t\t        for (var k = 0, klen = slotnames.length; k < klen; k += 1) {\n\t\t\t\t        if (localesets.length - 1 <  k) {\n\t\t\t\t\t        break;\n\t\t\t\t        }\n\t\t\t\t        slot[slotnames[k]] = 'locale-' + localesets[k];\n\t\t\t        }\n\t\t        } else {\n\t\t\t        slot.primary = 'locale-translat';\n\t\t        }\n\t\t        if (this.state.tmp.sort_key_flag || (this.state.tmp.area !== \"bibliography\"\n\t\t\t        && !(this.state.tmp.area === \"citation\"\n\t\t\t\t         && this.state.opt.xclass === \"note\"\n\t\t\t\t         && this.item && !this.item.position))) {\n\t\t\t        slot.secondary = false;\n\t\t\t        slot.tertiary = false;\n\t\t        }\n\t            this.setRenderedName(name);\n\t            if (!name.literal && !name.isInstitution) {\n\t                var nameBlob = this._renderPersonalName(v, name, slot, pos, i, j);\n\t                var nameToken = CSL.Util.cloneToken(this.name);\n\t                this.state.output.append(nameBlob, nameToken, true);\n\t                names.push(this.state.output.pop());\n\t            } else {\n\t                names.push(this._renderInstitutionName(v, name, slot, j));\n\t            }\n\t        }\n\t        ret = this.joinPersons(names, pos, j);\n\t    }\n\t    return ret\n\t}\n\tCSL.NameOutput.prototype._renderPersonalName = function (v, name, slot, pos, i, j) {\n\t    var res = this.getName(name, slot.primary, true);\n\t    var primary = this._renderOnePersonalName(res.name, pos, i, j);\n\t\tsecondary = false;\n\t\tif (slot.secondary) {\n\t        res = this.getName(name, slot.secondary, false, res.usedOrig);\n\t        if (res.name) {\n\t\t\t\tsecondary = this._renderOnePersonalName(res.name, pos, i, j);\n\t        }\n\t\t}\n\t\ttertiary = false;\n\t\tif (slot.tertiary) {\n\t        res = this.getName(name, slot.tertiary, false, res.usedOrig);\n\t        if (res.name) {\n\t\t\t\ttertiary = this._renderOnePersonalName(res.name, pos, i, j);\n\t        }\n\t\t}\n\t    var personblob;\n\t    if (secondary || tertiary) {\n\t        this.state.output.openLevel(\"empty\");\n\t        this.state.output.append(primary);\n\t        secondary_tok = new CSL.Token();\n\t        if (slot.secondary) {\n\t            secondary_tok.strings.prefix = this.state.opt.citeAffixes.persons[slot.secondary].prefix;\n\t            secondary_tok.strings.suffix = this.state.opt.citeAffixes.persons[slot.secondary].suffix;\n\t            if (!secondary_tok.strings.prefix) {\n\t                secondary_tok.strings.prefix = \" \";\n\t            }\n\t        }\n\t        this.state.output.append(secondary, secondary_tok);\n\t        tertiary_tok = new CSL.Token();\n\t        if (slot.tertiary) {\n\t            tertiary_tok.strings.prefix = this.state.opt.citeAffixes.persons[slot.tertiary].prefix;\n\t            tertiary_tok.strings.suffix = this.state.opt.citeAffixes.persons[slot.tertiary].suffix;\n\t            if (!tertiary_tok.strings.prefix) {\n\t                tertiary_tok.strings.prefix = \" \";\n\t            }\n\t        }\n\t        this.state.output.append(tertiary, tertiary_tok);\n\t        this.state.output.closeLevel();\n\t        personblob = this.state.output.pop();\n\t    } else {\n\t        personblob = primary;\n\t    }\n\t    return personblob;\n\t};\n\tCSL.NameOutput.prototype._isRomanesque = function (name) {\n\t    var ret = 2;\n\t    if (!name.family.replace(/\\\"/g, '').match(CSL.ROMANESQUE_REGEXP)) {\n\t        ret = 0;\n\t    }\n\t    if (!ret && name.given && name.given.match(CSL.STARTSWITH_ROMANESQUE_REGEXP)) {\n\t        ret = 1;\n\t    }\n\t    if (ret == 2) {\n\t        if (name.multi && name.multi.main) {\n\t            var top_locale = name.multi.main.slice(0, 2);\n\t        } else if (this.Item.language) {\n\t            top_locale = this.Item.language.slice(0, 2);\n\t        }\n\t        if ([\"ja\", \"zh\"].indexOf(top_locale) > -1) {\n\t            ret = 1;\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.NameOutput.prototype._renderOnePersonalName = function (value, pos, i, j) {\n\t    var name = value;\n\t    var dropping_particle = this._droppingParticle(name, pos, j);\n\t    var family = this._familyName(name);\n\t    var non_dropping_particle = this._nonDroppingParticle(name);\n\t    var given = this._givenName(name, pos, i);\n\t    var suffix = this._nameSuffix(name);\n\t    if (this._isShort(pos, i) && !name[\"full-form-always\"]) {\n\t        dropping_particle = false;\n\t        given = false;\n\t        suffix = false;\n\t    }\n\t    var sort_sep = this.state.inheritOpt(this.name, \"sort-separator\");\n\t    if (!sort_sep) {\n\t        sort_sep = \"\";\n\t    }\n\t    var suffix_sep;\n\t    if (name[\"comma-suffix\"]) {\n\t        suffix_sep = \", \";\n\t    } else {\n\t        suffix_sep = \" \";\n\t    }\n\t    var romanesque = this._isRomanesque(name);\n\t    function hasJoiningPunctuation(blob) {\n\t        if (!blob) {\n\t            return false;\n\t        } else if (\"string\" === typeof blob.blobs) {\n\t            if ([\"\\u2019\", \"\\'\", \"-\", \" \"].indexOf(blob.blobs.slice(-1)) > -1) {\n\t                return true;\n\t            } else {\n\t                return false;\n\t            }\n\t        } else {\n\t            return hasJoiningPunctuation(blob.blobs[blob.blobs.length-1]);\n\t        }\n\t    }\n\t    var has_hyphenated_non_dropping_particle = hasJoiningPunctuation(non_dropping_particle);\n\t    var blob, merged, first, second;\n\t    if (romanesque === 0) {\n\t        blob = this._join([non_dropping_particle, family, given], \"\");\n\t    } else if (romanesque === 1 || name[\"static-ordering\"]) { // entry likes sort order\n\t        blob = this._join([non_dropping_particle, family, given], \" \");\n\t    } else if (name[\"reverse-ordering\"]) { // entry likes reverse order\n\t        blob = this._join([given, non_dropping_particle, family], \" \");\n\t    } else if (this.state.tmp.sort_key_flag) {\n\t        if (this.state.opt[\"demote-non-dropping-particle\"] === \"never\") {\n\t            first = this._join([non_dropping_particle, family, dropping_particle], \" \");\n\t            merged = this._join([first, given], this.state.opt.sort_sep);\n\t            blob = this._join([merged, suffix], \" \");\n\t        } else {\n\t            second = this._join([given, dropping_particle, non_dropping_particle], \" \");\n\t            merged = this._join([family, second], this.state.opt.sort_sep);\n\t            blob = this._join([merged, suffix], \" \");\n\t        }\n\t    } else if (this.state.inheritOpt(this.name, \"name-as-sort-order\") === \"all\" || (this.state.inheritOpt(this.name, \"name-as-sort-order\") === \"first\" && i === 0 && (j === 0 || \"undefined\" === typeof j))) {\n\t        if ([\"Lord\", \"Lady\"].indexOf(name.given) > -1) {\n\t            sort_sep = \", \";\n\t        }\n\t        if ([\"always\", \"display-and-sort\"].indexOf(this.state.opt[\"demote-non-dropping-particle\"]) > -1) {\n\t            second = this._join([given, dropping_particle], (name[\"comma-dropping-particle\"] + \" \"));\n\t            second = this._join([second, non_dropping_particle], \" \");\n\t            if (second && this.given) {\n\t                second.strings.prefix = this.given.strings.prefix;\n\t                second.strings.suffix = this.given.strings.suffix;\n\t            }\n\t            if (family && this.family) {\n\t                family.strings.prefix = this.family.strings.prefix;\n\t                family.strings.suffix = this.family.strings.suffix;\n\t            }\n\t            merged = this._join([family, second], sort_sep);\n\t            blob = this._join([merged, suffix], sort_sep);\n\t        } else {\n\t            if (has_hyphenated_non_dropping_particle) {\n\t                first = this._join([non_dropping_particle, family], \"\");\n\t            } else {\n\t                first = this._join([non_dropping_particle, family], \" \");\n\t            }\n\t            if (first && this.family) {\n\t                first.strings.prefix = this.family.strings.prefix;\n\t                first.strings.suffix = this.family.strings.suffix;\n\t            }\n\t            second = this._join([given, dropping_particle], (name[\"comma-dropping-particle\"] + \" \"));\n\t            if (second && this.given) {\n\t                second.strings.prefix = this.given.strings.prefix;\n\t                second.strings.suffix = this.given.strings.suffix;\n\t            }\n\t            merged = this._join([first, second], sort_sep);\n\t            blob = this._join([merged, suffix], sort_sep);\n\t        }\n\t    } else { // plain vanilla\n\t        if (name[\"dropping-particle\"] && name.family && !name[\"non-dropping-particle\"]) {\n\t            if ([\"'\",\"\\u02bc\",\"\\u2019\",\"-\"].indexOf(name[\"dropping-particle\"].slice(-1)) > -1) {\n\t                family = this._join([dropping_particle, family], \"\");\n\t                dropping_particle = false;\n\t            }\n\t        }\n\t        if (!this.state.tmp.term_predecessor) {\n\t        }\n\t        var space = \" \";\n\t        if (this.state.inheritOpt(this.name, \"initialize-with\")\n\t            && this.state.inheritOpt(this.name, \"initialize-with\").match(/[\\u00a0\\ufeff]/)\n\t            && [\"fr\", \"ru\", \"cs\"].indexOf(this.state.opt[\"default-locale\"][0].slice(0, 2)) > -1) {\n\t            space = \"\\u00a0\"\n\t        }\n\t        if (has_hyphenated_non_dropping_particle) {\n\t            second = this._join([non_dropping_particle, family], \"\");\n\t            second = this._join([dropping_particle, second], space);\n\t        } else {\n\t            second = this._join([dropping_particle, non_dropping_particle, family], space);\n\t        }\n\t        second = this._join([second, suffix], suffix_sep);\n\t        if (second && this.family) {\n\t            second.strings.prefix = this.family.strings.prefix;\n\t            second.strings.suffix = this.family.strings.suffix;\n\t        }\n\t        if (given && this.given) {\n\t            given.strings.prefix = this.given.strings.prefix;\n\t            given.strings.suffix = this.given.strings.suffix;\n\t        }\n\t        if (second.strings.prefix) {\n\t            name[\"comma-dropping-particle\"] = \"\";\n\t        }\n\t        blob = this._join([given, second], (name[\"comma-dropping-particle\"] + space));\n\t    }\n\t    this.state.tmp.group_context.tip.variable_success = true;\n\t    this.state.tmp.can_substitute.replace(false, CSL.LITERAL);\n\t    this.state.tmp.term_predecessor = true;\n\t    this.state.tmp.name_node.children.push(blob);\n\t    return blob;\n\t};\n\tCSL.NameOutput.prototype._isShort = function (pos, i) {\n\t    if (0 === this.state.tmp.disambig_settings.givens[pos][i]) {\n\t        return true;\n\t    } else {\n\t        return false;\n\t    }\n\t};\n\tCSL.NameOutput.prototype._normalizeNameInput = function (value) {\n\t    var name = {\n\t        literal:value.literal,\n\t        family:value.family,\n\t        isInstitution:value.isInstitution,\n\t        given:value.given,\n\t        suffix:value.suffix,\n\t        \"comma-suffix\":value[\"comma-suffix\"],\n\t        \"non-dropping-particle\":value[\"non-dropping-particle\"],\n\t        \"dropping-particle\":value[\"dropping-particle\"],\n\t        \"static-ordering\":value[\"static-ordering\"],\n\t        \"static-particles\":value[\"static-particles\"],\n\t        \"reverse-ordering\":value[\"reverse-ordering\"],\n\t        \"full-form-always\": value[\"full-form-always\"],\n\t        \"parse-names\":value[\"parse-names\"],\n\t        \"comma-dropping-particle\": \"\",\n\t        block_initialize:value.block_initialize,\n\t        multi:value.multi\n\t    };\n\t    this._parseName(name);\n\t    return name;\n\t};\n\tCSL.NameOutput.prototype._stripPeriods = function (tokname, str) {\n\t    var decor_tok = this[tokname + \"_decor\"];\n\t    if (str) {\n\t        if (this.state.tmp.strip_periods) {\n\t            str = str.replace(/\\./g, \"\");\n\t        } else  if (decor_tok) {\n\t            for (var i = 0, ilen = decor_tok.decorations.length; i < ilen; i += 1) {\n\t                if (\"@strip-periods\" === decor_tok.decorations[i][0] && \"true\" === decor_tok.decorations[i][1]) {\n\t                    str = str.replace(/\\./g, \"\");\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return str;\n\t};\n\tCSL.NameOutput.prototype._nonDroppingParticle = function (name) {\n\t    var ndp = name[\"non-dropping-particle\"];\n\t    if (ndp && this.state.tmp.sort_key_flag) {\n\t        ndp = ndp.replace(/[\\'\\u2019]/, \"\");\n\t    }\n\t    var str = this._stripPeriods(\"family\", ndp);\n\t    if (this.state.output.append(str, this.family_decor, true)) {\n\t        return this.state.output.pop();\n\t    }\n\t    return false;\n\t};\n\tCSL.NameOutput.prototype._droppingParticle = function (name, pos, j) {\n\t    var dp = name[\"dropping-particle\"];\n\t    if (dp && this.state.tmp.sort_key_flag) {\n\t        dp = dp.replace(/[\\'\\u2019]/, \"\");\n\t    }\n\t    var str = this._stripPeriods(\"given\", dp);\n\t    if (name[\"dropping-particle\"] && name[\"dropping-particle\"].match(/^et.?al[^a-z]$/)) {\n\t        if (this.state.inheritOpt(this.name, \"et-al-use-last\")) {\n\t            if (\"undefined\" === typeof j) { \n\t                this.etal_spec[pos].freeters = 2;\n\t            } else {\n\t                this.etal_spec[pos].persons = 2;\n\t            }\n\t        } else {\n\t            if (\"undefined\" === typeof j) { \n\t                this.etal_spec[pos].freeters = 1;\n\t            } else {\n\t                this.etal_spec[pos].persons = 1;\n\t            }\n\t        }\n\t        name[\"comma-dropping-particle\"] = \"\";\n\t    } else if (this.state.output.append(str, this.given_decor, true)) {\n\t        return this.state.output.pop();\n\t    }\n\t    return false;\n\t};\n\tCSL.NameOutput.prototype._familyName = function (name) {\n\t    var str = this._stripPeriods(\"family\", name.family);\n\t    if (this.state.output.append(str, this.family_decor, true)) {\n\t        return this.state.output.pop();\n\t    }\n\t    return false;\n\t};\n\tCSL.NameOutput.prototype._givenName = function (name, pos, i) {\n\t    if (this.state.inheritOpt(this.name, \"initialize\") === false) {\n\t        if (name.family && name.given && this.state.inheritOpt(this.name, \"initialize\") === false) {\n\t            name.given = CSL.Util.Names.initializeWith(this.state, name.given, this.state.inheritOpt(this.name, \"initialize-with\"), true);\n\t        }\n\t        name.given = CSL.Util.Names.unInitialize(this.state, name.given);\n\t    } else {\n\t        if (name.family && 1 === this.state.tmp.disambig_settings.givens[pos][i] && !name.block_initialize) {\n\t            var initialize_with = this.state.inheritOpt(this.name, \"initialize-with\");\n\t            name.given = CSL.Util.Names.initializeWith(this.state, name.given, initialize_with);\n\t        } else {\n\t            name.given = CSL.Util.Names.unInitialize(this.state, name.given);\n\t        }\n\t    }\n\t    var str = this._stripPeriods(\"given\", name.given);\n\t    var rendered = this.state.output.append(str, this.given_decor, true);\n\t    if (rendered) {\n\t        ret = this.state.output.pop();\n\t\t    return ret;\n\t    }\n\t    return false;\n\t};\n\tCSL.NameOutput.prototype._nameSuffix = function (name) {\n\t    var str = name.suffix;\n\t    if (\"string\" === typeof this.state.inheritOpt(this.name, \"initialize-with\")) {\n\t        str = CSL.Util.Names.initializeWith(this.state, name.suffix, this.state.inheritOpt(this.name, \"initialize-with\"), true);\n\t    }\n\t    str = this._stripPeriods(\"family\", str);\n\t    var toSuffix = '';\n\t    if (str && str.slice(-1) === '.') {\n\t\tstr = str.slice(0, -1);\n\t\ttoSuffix = '.';\n\t    }\n\t    var rendered = this.state.output.append(str, \"empty\", true);\n\t    if (rendered) {\n\t        ret = this.state.output.pop();\n\t\tret.strings.suffix = toSuffix + ret.strings.suffix;\n\t\treturn ret;\n\t    }\n\t    return false;\n\t};\n\tCSL.NameOutput.prototype._getLongStyle = function (name, v, i) {\n\t    var long_style, short_style;\n\t    if (name[\"short\"].length) {\n\t        if (this.institutionpart[\"long-with-short\"]) {\n\t            long_style = this.institutionpart[\"long-with-short\"];\n\t        } else {\n\t            long_style = this.institutionpart[\"long\"];\n\t        }\n\t    } else {\n\t        long_style = this.institutionpart[\"long\"];\n\t    }\n\t    if (!long_style) {\n\t        long_style = new CSL.Token();\n\t    }\n\t    return long_style;\n\t};\n\tCSL.NameOutput.prototype._getShortStyle = function () {\n\t    var short_style;\n\t    if (this.institutionpart[\"short\"]) {\n\t        short_style = this.institutionpart[\"short\"];\n\t    } else {\n\t        short_style = new CSL.Token();\n\t    }\n\t    return short_style;\n\t};\n\tCSL.NameOutput.prototype._parseName = function (name) {\n\t    var m, idx;\n\t    if (!name[\"parse-names\"] && \"undefined\" !== typeof name[\"parse-names\"]) {\n\t        return name;\n\t    }\n\t    if (name.family && !name.given && name.isInstitution) {\n\t        name.literal = name.family;\n\t        name.family = undefined;\n\t        name.isInstitution = undefined;\n\t    }\n\t    var noparse;\n\t    if (name.family \n\t        && (name.family.slice(0, 1) === '\"' && name.family.slice(-1) === '\"')\n\t        || (!name[\"parse-names\"] && \"undefined\" !== typeof name[\"parse-names\"])) {\n\t        name.family = name.family.slice(1, -1);\n\t        noparse = true;\n\t        name[\"parse-names\"] = 0;\n\t    } else {\n\t        noparse = false;\n\t    }\n\t    if (this.state.opt.development_extensions.parse_names) {\n\t        if (!name[\"non-dropping-particle\"] && name.family && !noparse && name.given) {\n\t            if (!name[\"static-particles\"]) {\n\t                CSL.parseParticles(name, true);\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NameOutput.prototype.getName = function (name, slotLocaleset, fallback, stopOrig) {\n\t    if (stopOrig && slotLocaleset === 'locale-orig') {\n\t        return {name:false,usedOrig:stopOrig};\n\t    }\n\t    if (!name.family) {\n\t        name.family = \"\";\n\t    }\n\t    if (!name.given) {\n\t        name.given = \"\";\n\t    }\n\t    var name_params = {};\n\t    name_params[\"static-ordering\"] = this.getStaticOrder(name);\n\t    var foundTag = true;\n\t    if (slotLocaleset !== 'locale-orig') {\n\t        foundTag = false;\n\t        if (name.multi) {\n\t            var langTags = this.state.opt[slotLocaleset]\n\t            for (i = 0, ilen = langTags.length; i < ilen; i += 1) {\n\t                langTag = langTags[i];\n\t                if (name.multi._key[langTag]) {\n\t                    foundTag = true;\n\t                    var isInstitution = name.isInstitution;\n\t                    name = name.multi._key[langTag];\n\t                    name.isInstitution = isInstitution;\n\t                    name_params = this.getNameParams(langTag);\n\t                    name_params.transliterated = true;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (!foundTag) {\n\t        var langTag = false;\n\t        if (name.multi && name.multi.main) {\n\t            langTag = name.multi.main;\n\t        } else if (this.Item.language) {\n\t            langTag = this.Item.language;\n\t        }\n\t        if (langTag) {\n\t            name_params = this.getNameParams(langTag);\n\t        }\n\t    }\n\t    if (!fallback && !foundTag) {\n\t        return {name:false,usedOrig:stopOrig};\n\t    }\n\t    if (!name.family) {\n\t        name.family = \"\";\n\t    }\n\t    if (!name.given) {\n\t        name.given = \"\";\n\t    }\n\t    name = {\n\t        family:name.family,\n\t        given:name.given,\n\t        \"non-dropping-particle\":name[\"non-dropping-particle\"],\n\t        \"dropping-particle\":name[\"dropping-particle\"],\n\t        suffix:name.suffix,\n\t        \"static-ordering\":name_params[\"static-ordering\"],\n\t        \"static-particles\":name[\"static-particles\"],\n\t        \"reverse-ordering\":name_params[\"reverse-ordering\"],\n\t        \"full-form-always\": name_params[\"full-form-always\"],\n\t        \"parse-names\":name[\"parse-names\"],\n\t        \"comma-suffix\":name[\"comma-suffix\"],\n\t        \"comma-dropping-particle\":name[\"comma-dropping-particle\"],\n\t        transliterated: name_params.transliterated,\n\t        block_initialize: name_params[\"block-initialize\"],\n\t        literal:name.literal,\n\t        isInstitution:name.isInstitution,\n\t        multi:name.multi\n\t    };\n\t    if (!name.literal && (!name.given && name.family && name.isInstitution)) {\n\t        name.literal = name.family;\n\t    }\n\t    if (name.literal) {\n\t        delete name.family;\n\t        delete name.given;\n\t    }\n\t    name = this._normalizeNameInput(name);\n\t    var usedOrig;\n\t    if (stopOrig) {\n\t        usedOrig = stopOrig;\n\t    } else {\n\t        usedOrig = !foundTag;\n\t    }\n\t    return {name:name,usedOrig:usedOrig};\n\t}\n\tCSL.NameOutput.prototype.getNameParams = function (langTag) {\n\t    var ret = {};\n\t    var langspec = CSL.localeResolve(this.Item.language, this.state.opt[\"default-locale\"][0]);\n\t    var try_locale = this.state.locale[langspec.best] ? langspec.best : this.state.opt[\"default-locale\"][0];\n\t    var name_as_sort_order = this.state.locale[try_locale].opts[\"name-as-sort-order\"]\n\t    var name_as_reverse_order = this.state.locale[try_locale].opts[\"name-as-reverse-order\"]\n\t    var name_never_short = this.state.locale[try_locale].opts[\"name-never-short\"]\n\t    var field_lang_bare = langTag.split(\"-\")[0];\n\t    if (name_as_sort_order && name_as_sort_order[field_lang_bare]) {\n\t        ret[\"static-ordering\"] = true;\n\t        ret[\"reverse-ordering\"] = false;\n\t    }\n\t    if (name_as_reverse_order && name_as_reverse_order[field_lang_bare]) {\n\t        ret[\"reverse-ordering\"] = true;\n\t        ret[\"static-ordering\"] = false;\n\t    }\n\t    if (name_never_short && name_never_short[field_lang_bare]) {\n\t        ret[\"full-form-always\"] = true;\n\t    }\n\t    if (ret[\"static-ordering\"]) {\n\t        ret[\"block-initialize\"] = true;\n\t    }\n\t    return ret;\n\t}\n\tCSL.NameOutput.prototype.setRenderedName = function (name) {\n\t    if (this.state.tmp.area === \"bibliography\") {\n\t        var strname = \"\";\n\t        for (var j=0,jlen=CSL.NAME_PARTS.length;j<jlen;j+=1) {\n\t            if (name[CSL.NAME_PARTS[j]]) {\n\t                strname += name[CSL.NAME_PARTS[j]];\n\t            }\n\t        }\n\t        this.state.tmp.rendered_name.push(strname);\n\t    }\n\t}\n\tCSL.NameOutput.prototype.fixupInstitution = function (name, varname, listpos) {\n\t    if (this.state.sys.getHumanForm && \"legal_case\" === this.Item.type && \"authority\" === varname) {\n\t        name.literal = this.state.sys.getHumanForm(this.Item.jurisdiction, name.literal);\n\t    }\n\t    name = this._splitInstitution(name, varname, listpos);\n\t    if (this.institution.strings[\"reverse-order\"]) {\n\t        name[\"long\"].reverse();\n\t    }\n\t    var long_form = name[\"long\"];\n\t    var short_form = name[\"long\"].slice();\n\t    var use_short_form = false;\n\t    if (this.state.sys.getAbbreviation) {\n\t        var jurisdiction = this.Item.jurisdiction;\n\t        for (var j = 0, jlen = long_form.length; j < jlen; j += 1) {\n\t            jurisdiction = this.state.transform.loadAbbreviation(jurisdiction, \"institution-part\", long_form[j]);\n\t            if (this.state.transform.abbrevs[jurisdiction][\"institution-part\"][long_form[j]]) {\n\t                short_form[j] = this.state.transform.abbrevs[jurisdiction][\"institution-part\"][long_form[j]];\n\t                use_short_form = true;\n\t            }\n\t        }\n\t    }\n\t    if (use_short_form) {\n\t        name[\"short\"] = short_form;\n\t    } else {\n\t        name[\"short\"] = [];\n\t    }\n\t    return name;\n\t}\n\tCSL.NameOutput.prototype.getStaticOrder = function (name, refresh) {\n\t    var static_ordering_val = false;\n\t    if (!refresh && name[\"static-ordering\"]) {\n\t        static_ordering_val = true;\n\t    } else if (this._isRomanesque(name) === 0) {\n\t        static_ordering_val = true;\n\t    } else if ((!name.multi || !name.multi.main) && this.Item.language && ['vi', 'hu'].indexOf(this.Item.language) > -1) {\n\t        static_ordering_val = true;\n\t    } else if (name.multi && name.multi.main && ['vi', 'hu'].indexOf(name.multi.main.slice(0,2)) > -1) {\n\t        static_ordering_val = true;\n\t    } else {\n\t        if (this.state.opt['auto-vietnamese-names']\n\t            && (CSL.VIETNAMESE_NAMES.exec(name.family + \" \" + name.given)\n\t                && CSL.VIETNAMESE_SPECIALS.exec(name.family + name.given))) {\n\t            static_ordering_val = true;\n\t        }\n\t    }\n\t    return static_ordering_val;\n\t}\n\tCSL.NameOutput.prototype._splitInstitution = function (value, v, i) {\n\t    var ret = {};\n\t    if (!value.literal && value.family) {\n\t        value.literal = value.family;\n\t        delete value.family;\n\t    }\n\t    var splitInstitution = value.literal.replace(/\\s*\\|\\s*/g, \"|\");\n\t    splitInstitution = splitInstitution.split(\"|\");\n\t    if (this.institution.strings.form === \"short\" && this.state.sys.getAbbreviation) {\n\t        var jurisdiction = this.Item.jurisdiction;\n\t        for (var j = splitInstitution.length; j > 0; j += -1) {\n\t            var str = splitInstitution.slice(0, j).join(\"|\");\n\t            jurisdiction = this.state.transform.loadAbbreviation(jurisdiction, \"institution-entire\", str);\n\t            if (this.state.transform.abbrevs[jurisdiction][\"institution-entire\"][str]) {\n\t                var splitLst = this.state.transform.abbrevs[jurisdiction][\"institution-entire\"][str];\n\t                splitLst = this.state.transform.quashCheck(splitLst);\n\t                var splitSplitLst = splitLst.split(/>>[0-9]{4}>>/);\n\t                var m = splitLst.match(/>>([0-9]{4})>>/);\n\t                splitLst = splitSplitLst.pop();\n\t                if (splitSplitLst.length > 0 && this.Item[\"original-date\"] && this.Item[\"original-date\"].year) {\n\t                    for (var k=m.length - 1; k > 0; k += -1) {\n\t                        if (parseInt(this.Item[\"original-date\"].year, 10) >= parseInt(m[k], 10)) {\n\t                            break;\n\t                        }\n\t                        splitLst = splitSplitLst.pop();\n\t                    }\n\t                }\n\t                splitLst = splitLst.replace(/\\s*\\|\\s*/g, \"|\");\n\t                splitInstitution = [splitLst];\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    splitInstitution.reverse();\n\t    ret[\"long\"] = this._trimInstitution(splitInstitution, v, i);\n\t    return ret;\n\t};\n\tCSL.NameOutput.prototype._trimInstitution = function (subunits, v, i) {\n\t    var use_first = false;\n\t    var append_last = false;\n\t    var s = subunits.slice();\n\t    var stop_last = false;\n\t    if (this.institution) {\n\t        if (\"undefined\" !== typeof this.institution.strings[\"use-first\"]) {\n\t            use_first = this.institution.strings[\"use-first\"];\n\t        }\n\t        if (\"undefined\" !== typeof this.institution.strings[\"stop-last\"]) {\n\t            stop_last = this.institution.strings[\"stop-last\"];\n\t        } else if (\"authority\" === v && this.state.tmp.authority_stop_last) {\n\t            stop_last = this.state.tmp.authority_stop_last;\n\t        }\n\t        if (stop_last) {\n\t            s = s.slice(0, stop_last);\n\t            subunits = subunits.slice(0, stop_last);\n\t        }\n\t        if (\"undefined\" !== typeof this.institution.strings[\"use-last\"]) {\n\t            append_last = this.institution.strings[\"use-last\"];\n\t        }\n\t        if (\"authority\" === v) {\n\t            if (stop_last) {\n\t                this.state.tmp.authority_stop_last = stop_last;\n\t            }\n\t            if (append_last)  {\n\t                this.state.tmp.authority_stop_last += (append_last * -1);\n\t            }\n\t        }\n\t    }\n\t    if (false === use_first) {\n\t        if (this.persons[v].length === 0) {\n\t            use_first = this.institution.strings[\"substitute-use-first\"];\n\t        }\n\t        if (!use_first) {\n\t            use_first = 0;\n\t        }\n\t    }\n\t    if (false === append_last) {\n\t        if (!use_first) {\n\t            append_last = subunits.length;\n\t        } else {\n\t            append_last = 0;\n\t        }\n\t    }\n\t    if (use_first > subunits.length - append_last) {\n\t        use_first = subunits.length - append_last;\n\t    }\n\t    subunits = subunits.slice(0, use_first);\n\t    s = s.slice(use_first);\n\t    if (append_last) {\n\t        if (append_last > s.length) {\n\t            append_last = s.length;\n\t        }\n\t        if (append_last) {\n\t            subunits = subunits.concat(s.slice((s.length - append_last)));\n\t        }\n\t    }\n\t    return subunits;\n\t};\n\tCSL.PublisherOutput = function (state, group_tok) {\n\t    this.state = state;\n\t    this.group_tok = group_tok;\n\t    this.varlist = [];\n\t};\n\tCSL.PublisherOutput.prototype.render = function () {\n\t    this.clearVars();\n\t    this.composeAndBlob();\n\t    this.composeElements();\n\t    this.composePublishers();\n\t    this.joinPublishers();\n\t};\n\tCSL.PublisherOutput.prototype.composeAndBlob = function () {\n\t    this.and_blob = {};\n\t    var and_term = false;\n\t    if (this.group_tok.strings.and === \"text\") {\n\t        and_term = this.state.getTerm(\"and\");\n\t    } else if (this.group_tok.strings.and === \"symbol\") {\n\t        and_term = \"&\";\n\t    }\n\t    var tok = new CSL.Token();\n\t    tok.strings.suffix = \" \";\n\t    tok.strings.prefix = \" \";\n\t    this.state.output.append(and_term, tok, true);\n\t    var no_delim = this.state.output.pop();\n\t    tok.strings.prefix = this.group_tok.strings[\"subgroup-delimiter\"];\n\t    this.state.output.append(and_term, tok, true);\n\t    var with_delim = this.state.output.pop();\n\t    this.and_blob.single = false;\n\t    this.and_blob.multiple = false;\n\t    if (and_term) {\n\t        if (this.group_tok.strings[\"subgroup-delimiter-precedes-last\"] === \"always\") {\n\t            this.and_blob.single = with_delim;\n\t        } else if (this.group_tok.strings[\"subgroup-delimiter-precedes-last\"] === \"never\") {\n\t            this.and_blob.single = no_delim;\n\t            this.and_blob.multiple = no_delim;\n\t        } else {\n\t            this.and_blob.single = no_delim;\n\t            this.and_blob.multiple = with_delim;\n\t        }\n\t    }\n\t};\n\tCSL.PublisherOutput.prototype.composeElements = function () {\n\t    for (var i = 0, ilen = 2; i < ilen; i += 1) {\n\t        var varname = [\"publisher\", \"publisher-place\"][i];\n\t        for (var j = 0, jlen = this[\"publisher-list\"].length; j < jlen; j += 1) {\n\t            var str = this[varname + \"-list\"][j];\n\t            var tok = this[varname + \"-token\"];\n\t            this.state.output.append(str, tok, true);\n\t            this[varname + \"-list\"][j] = this.state.output.pop();\n\t        }\n\t    }\n\t};\n\tCSL.PublisherOutput.prototype.composePublishers = function () {\n\t    var blobs;\n\t    for (var i = 0, ilen = this[\"publisher-list\"].length; i < ilen; i += 1) {\n\t        var ordered_list = [];\n\t        blobs = [this[this.varlist[0] + \"-list\"][i], this[this.varlist[1] + \"-list\"][i]];\n\t        this[\"publisher-list\"][i] = this._join(blobs, this.group_tok.strings.delimiter);\n\t    }\n\t};\n\tCSL.PublisherOutput.prototype.joinPublishers = function () {\n\t    var blobs = this[\"publisher-list\"];\n\t    var delim = this.name_delimiter;\n\t    var publishers = this._join(blobs, this.group_tok.strings[\"subgroup-delimiter\"], this.and_blob.single, this.and_blob.multiple, this.group_tok);\n\t    this.state.output.append(publishers, \"literal\");\n\t};\n\tCSL.PublisherOutput.prototype._join = CSL.NameOutput.prototype._join;\n\tCSL.PublisherOutput.prototype._getToken = CSL.NameOutput.prototype._getToken;\n\tCSL.PublisherOutput.prototype.clearVars = function () {\n\t    this.state.tmp[\"publisher-list\"] = false;\n\t    this.state.tmp[\"publisher-place-list\"] = false;\n\t    this.state.tmp[\"publisher-group-token\"] = false;\n\t    this.state.tmp[\"publisher-token\"] = false;\n\t    this.state.tmp[\"publisher-place-token\"] = false;\n\t};\n\tCSL.evaluateLabel = function (node, state, Item, item) {\n\t    var myterm;\n\t    if (\"locator\" === node.strings.term) {\n\t        if (item && item.label) {\n\t            if (item.label === \"sub verbo\") {\n\t                myterm = \"sub-verbo\";\n\t            } else {\n\t                myterm = item.label;\n\t            }\n\t        }\n\t        if (!myterm) {\n\t            myterm = \"page\";\n\t        }\n\t    } else {\n\t        myterm = node.strings.term;\n\t    }\n\t    var plural = node.strings.plural;\n\t    if (\"number\" !== typeof plural) {\n\t        var theItem = node.strings.term === \"locator\" ? item : Item;\n\t        state.processNumber(false, theItem, node.strings.term, Item.type);\n\t        plural = state.tmp.shadow_numbers[node.strings.term].plural;\n\t        if (!state.tmp.shadow_numbers[node.strings.term].labelForm\n\t           && !state.tmp.shadow_numbers[node.strings.term].labelDecorations) {\n\t            state.tmp.shadow_numbers[node.strings.term].labelForm = node.strings.form;\n\t            state.tmp.shadow_numbers[node.strings.term].labelDecorations = node.decorations.slice();\n\t        }\n\t        if ([\"locator\", \"number\", \"page\"].indexOf(node.strings.term) > -1 && state.tmp.shadow_numbers[node.strings.term].label) {\n\t            myterm = state.tmp.shadow_numbers[node.strings.term].label;\n\t        }\n\t        if (node.decorations && (state.opt.development_extensions.csl_reverse_lookup_support || state.sys.csl_reverse_lookup_support)) {\n\t            node.decorations.reverse();\n\t            node.decorations.push([\"@showid\",\"true\", node.cslid]);\n\t            node.decorations.reverse();\n\t        }\n\t    }\n\t    return CSL.castLabel(state, node, myterm, plural, CSL.TOLERANT);\n\t};\n\tCSL.castLabel = function (state, node, term, plural, mode) {\n\t    var label_form = node.strings.form;\n\t    if (state.tmp.group_context.tip.label_form && label_form !== \"static\") {\n\t        label_form = state.tmp.group_context.tip.label_form;\n\t    }\n\t    var ret = state.getTerm(term, label_form, plural, false, mode, node.default_locale);\n\t    if (state.tmp.strip_periods) {\n\t        ret = ret.replace(/\\./g, \"\");\n\t    } else {\n\t        for (var i = 0, ilen = node.decorations.length; i < ilen; i += 1) {\n\t            if (\"@strip-periods\" === node.decorations[i][0] && \"true\" === node.decorations[i][1]) {\n\t                ret = ret.replace(/\\./g, \"\");\n\t                break;\n\t            }\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.Node.name = {\n\t    build: function (state, target) {\n\t        var func, pos, len, attrname;\n\t        if ([CSL.SINGLETON, CSL.START].indexOf(this.tokentype) > -1) {\n\t            if (\"undefined\" === typeof state.tmp.root) {\n\t                var oldTmpRoot = undefined;\n\t                state.tmp.root = \"citation\";\n\t            } else {\n\t                var oldTmpRoot = state.tmp.root;\n\t            }\n\t            if (state.inheritOpt(this, \"et-al-subsequent-min\")\n\t                && (state.inheritOpt(this, \"et-al-subsequent-min\") !== state.inheritOpt(this, \"et-al-min\"))) {\n\t                state.opt.update_mode = CSL.POSITION;\n\t            }\n\t            if (state.inheritOpt(this, \"et-al-subsequent-use-first\")\n\t                && (state.inheritOpt(this, \"et-al-subsequent-use-first\") !== state.inheritOpt(this, \"et-al-use-first\"))) {\n\t                state.opt.update_mode = CSL.POSITION;\n\t            }\n\t            state.tmp.root = oldTmpRoot;\n\t            func = function (state, Item) {\n\t                state.tmp.etal_term = \"et-al\";\n\t                state.tmp.name_delimiter = state.inheritOpt(this, \"delimiter\", \"name-delimiter\", \", \");\n\t                state.tmp[\"delimiter-precedes-et-al\"] = state.inheritOpt(this, \"delimiter-precedes-et-al\");\n\t                if (\"text\" === state.inheritOpt(this, \"and\")) {\n\t                    this.and_term = state.getTerm(\"and\", \"long\", 0);\n\t                } else if (\"symbol\" === state.inheritOpt(this, \"and\")) {\n\t                    if (state.opt.development_extensions.expect_and_symbol_form) {\n\t                        this.and_term = state.getTerm(\"and\", \"symbol\", 0);\n\t                    } else {\n\t                        this.and_term = \"&\";\n\t                    }\n\t                }\n\t                state.tmp.and_term = this.and_term;\n\t                if (CSL.STARTSWITH_ROMANESQUE_REGEXP.test(this.and_term)) {\n\t                    this.and_prefix_single = \" \";\n\t                    this.and_prefix_multiple = \", \";\n\t                    if (\"string\" === typeof state.tmp.name_delimiter) {\n\t                        this.and_prefix_multiple = state.tmp.name_delimiter;\n\t                    }\n\t                    this.and_suffix = \" \";\n\t                } else {\n\t                    this.and_prefix_single = \"\";\n\t                    this.and_prefix_multiple = \"\";\n\t                    this.and_suffix = \"\";\n\t                }\n\t                if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"always\") {\n\t                    this.and_prefix_single = state.tmp.name_delimiter;\n\t                } else if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"never\") {\n\t                    if (this.and_prefix_multiple) {\n\t                        this.and_prefix_multiple = \" \";\n\t                    }\n\t                } else if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"after-inverted-name\") {\n\t                    if (this.and_prefix_single) {\n\t                        this.and_prefix_single = state.tmp.name_delimiter;\n\t                    }\n\t                    if (this.and_prefix_multiple) {\n\t                        this.and_prefix_multiple = \" \";\n\t                    }\n\t                }\n\t                this.and = {};\n\t                if (state.inheritOpt(this, \"and\")) {\n\t                    state.output.append(this.and_term, \"empty\", true);\n\t                    this.and.single = state.output.pop();\n\t                    this.and.single.strings.prefix = this.and_prefix_single;\n\t                    this.and.single.strings.suffix = this.and_suffix;\n\t                    state.output.append(this.and_term, \"empty\", true);\n\t                    this.and.multiple = state.output.pop();\n\t                    this.and.multiple.strings.prefix = this.and_prefix_multiple;\n\t                    this.and.multiple.strings.suffix = this.and_suffix;\n\t                } else if (state.tmp.name_delimiter) {\n\t                    this.and.single = new CSL.Blob(state.tmp.name_delimiter);\n\t                    this.and.single.strings.prefix = \"\";\n\t                    this.and.single.strings.suffix = \"\";\n\t                    this.and.multiple = new CSL.Blob(state.tmp.name_delimiter);\n\t                    this.and.multiple.strings.prefix = \"\";\n\t                    this.and.multiple.strings.suffix = \"\";\n\t                }\n\t                this.ellipsis = {};\n\t                if (state.inheritOpt(this, \"et-al-use-last\")) {\n\t                    this.ellipsis_term = \"\\u2026\";\n\t                    this.ellipsis_prefix_single = \" \";\n\t                    this.ellipsis_prefix_multiple =  state.inheritOpt(this, \"delimiter\", \"name-delimiter\", \", \");\n\t                    this.ellipsis_suffix = \" \";\n\t                    this.ellipsis.single = new CSL.Blob(this.ellipsis_term);\n\t                    this.ellipsis.single.strings.prefix = this.ellipsis_prefix_single;\n\t                    this.ellipsis.single.strings.suffix = this.ellipsis_suffix;\n\t                    this.ellipsis.multiple = new CSL.Blob(this.ellipsis_term);\n\t                    this.ellipsis.multiple.strings.prefix = this.ellipsis_prefix_multiple;\n\t                    this.ellipsis.multiple.strings.suffix = this.ellipsis_suffix;\n\t                }\n\t                if (\"undefined\" === typeof state.tmp[\"et-al-min\"]) {\n\t                    state.tmp[\"et-al-min\"] = state.inheritOpt(this, \"et-al-min\");\n\t                }\n\t                if (\"undefined\" === typeof state.tmp[\"et-al-use-first\"]) {\n\t                    state.tmp[\"et-al-use-first\"] = state.inheritOpt(this, \"et-al-use-first\");\n\t                }\n\t                if (\"undefined\" === typeof state.tmp[\"et-al-use-last\"]) {\n\t                    state.tmp[\"et-al-use-last\"] = state.inheritOpt(this, \"et-al-use-last\");\n\t                }\n\t                state.nameOutput.name = this;\n\t            };\n\t            state.build.name_flag = true;\n\t            this.execs.push(func);\n\t        }\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node[\"name-part\"] = {\n\t    build: function (state, target) {\n\t        state.build[this.strings.name] = this;\n\t    }\n\t};\n\tCSL.Node.names = {\n\t    build: function (state, target) {\n\t        var func, len, pos, attrname;\n\t        var debug = false;\n\t        if (this.tokentype === CSL.START || this.tokentype === CSL.SINGLETON) {\n\t            CSL.Util.substituteStart.call(this, state, target);\n\t            state.build.substitute_level.push(1);\n\t        }\n\t        if (this.tokentype === CSL.SINGLETON) {\n\t            state.build.names_variables.push(this.variables);\n\t            func = function (state, Item, item) {\n\t                var labelVariable = state.nameOutput.labelVariable;\n\t                state.nameOutput.reinit(this, labelVariable);\n\t            };\n\t            this.execs.push(func);\n\t        }\n\t        if (this.tokentype === CSL.START) {\n\t            state.build.names_flag = true;\n\t            state.build.names_level += 1;\n\t            if (state.build.names_level === 1) {\n\t                state.build.names_variables = [];\n\t                state.build.name_label = {};\n\t            }\n\t            state.build.names_variables.push(this.variables);\n\t            func = function (state, Item, item) {\n\t                state.tmp.can_substitute.push(true);\n\t                state.parallel.StartVariable(\"names\",this.variables[0]);\n\t                state.nameOutput.init(this);\n\t            };\n\t            this.execs.push(func);\n\t        }\n\t        if (this.tokentype === CSL.END) {\n\t            for (var i = 0, ilen = 3; i < ilen; i += 1) {\n\t                var key = [\"family\", \"given\", \"et-al\"][i];\n\t                this[key] = state.build[key];\n\t                if (state.build.names_level === 1) {\n\t                    state.build[key] = undefined;\n\t                }\n\t            }\n\t            this.label = state.build.name_label;\n\t            if (state.build.names_level === 1) {\n\t                state.build.name_label = {};\n\t            }\n\t            state.build.names_level += -1;\n\t            state.build.names_variables.pop();\n\t            func = function (state, Item, item) {\n\t                if (state.tmp.etal_node) {\n\t                    this.etal_style = state.tmp.etal_node;\n\t                } else {\n\t                    this.etal_style = \"empty\";\n\t                }\n\t                this.etal_term = state.getTerm(state.tmp.etal_term, \"long\", 0);\n\t                if (CSL.STARTSWITH_ROMANESQUE_REGEXP.test(this.etal_term)) {\n\t                    this.etal_prefix_single = \" \";\n\t                    this.etal_prefix_multiple = state.tmp.name_delimiter;\n\t                    if (state.tmp[\"delimiter-precedes-et-al\"] === \"always\") {\n\t                        this.etal_prefix_single = state.tmp.name_delimiter;\n\t                    } else if (state.tmp[\"delimiter-precedes-et-al\"] === \"never\") {\n\t                        this.etal_prefix_multiple = \" \";\n\t                    } else if (state.tmp[\"delimiter-precedes-et-al\"] === \"after-inverted-name\") {\n\t                        this.etal_prefix_single = state.tmp.name_delimiter;\n\t                        this.etal_prefix_multiple = \" \";\n\t                    }\n\t                    this.etal_suffix = \"\";\n\t                } else {\n\t                    this.etal_prefix_single = \"\";\n\t                    this.etal_prefix_multiple = \"\";\n\t                    this.etal_suffix = \"\";\n\t                }\n\t                for (var i = 0, ilen = 3; i < ilen; i += 1) {\n\t                    var key = [\"family\", \"given\"][i];\n\t                    state.nameOutput[key] = this[key];\n\t                }\n\t                state.nameOutput[\"with\"] = this[\"with\"];\n\t                var mywith = \"with\";\n\t                var with_default_prefix = \"\";\n\t                var with_suffix = \"\";\n\t                if (CSL.STARTSWITH_ROMANESQUE_REGEXP.test(mywith)) {\n\t                    with_default_prefix = \" \";\n\t                    with_suffix = \" \";\n\t                }\n\t                var thewith = {};\n\t                thewith.single = new CSL.Blob(mywith);\n\t                thewith.single.strings.suffix = with_suffix;\n\t                thewith.multiple = new CSL.Blob(mywith);\n\t                thewith.multiple.strings.suffix = with_suffix;\n\t                if (state.inheritOpt(state.nameOutput.name, \"delimiter-precedes-last\") === \"always\") {\n\t                    thewith.single.strings.prefix = state.inheritOpt(this, \"delimiter\", \"names-delimiter\");\n\t                    thewith.multiple.strings.prefix = state.inheritOpt(this, \"delimiter\", \"names-delimiter\");\n\t                } else if (state.inheritOpt(state.nameOutput.name, \"delimiter-precedes-last\") === \"contextual\") {\n\t                    thewith.single.strings.prefix = with_default_prefix;\n\t                    thewith.multiple.strings.prefix = state.inheritOpt(this, \"delimiter\", \"names-delimiter\");\n\t                } else if (state.inheritOpt(state.nameOutput.name, \"delimiter-precedes-last\") === \"after-inverted-name\") {\n\t                    thewith.single.strings.prefix = state.inheritOpt(this, \"delimiter\", \"names-delimiter\");\n\t                    thewith.multiple.strings.prefix = with_default_prefix;\n\t                } else {\n\t                    thewith.single.strings.prefix = with_default_prefix;\n\t                    thewith.multiple.strings.prefix = with_default_prefix;\n\t                }\n\t                state.nameOutput[\"with\"] = thewith;\n\t                state.nameOutput.label = this.label;\n\t                state.nameOutput.etal_style = this.etal_style;\n\t                state.nameOutput.etal_term = this.etal_term;\n\t                state.nameOutput.etal_prefix_single = this.etal_prefix_single;\n\t                state.nameOutput.etal_prefix_multiple = this.etal_prefix_multiple;\n\t                state.nameOutput.etal_suffix = this.etal_suffix;\n\t                state.nameOutput.outputNames();\n\t                state.tmp[\"et-al-use-first\"] = undefined;\n\t                state.tmp[\"et-al-min\"] = undefined;\n\t                state.tmp[\"et-al-use-last\"] = undefined;\n\t            };\n\t            this.execs.push(func);\n\t            func = function (state, Item) {\n\t                if (!state.tmp.can_substitute.pop()) {\n\t                    state.tmp.can_substitute.replace(false, CSL.LITERAL);\n\t                }\n\t                state.parallel.CloseVariable(\"names\");\n\t                if (state.tmp.can_substitute.mystack.length === 1) {\n\t                    state.tmp.can_block_substitute = false;\n\t                }\n\t            };\n\t            this.execs.push(func);\n\t            state.build.name_flag = false;\n\t        }\n\t        target.push(this);\n\t        if (this.tokentype === CSL.END || this.tokentype === CSL.SINGLETON) {\n\t            state.build.substitute_level.pop();\n\t            CSL.Util.substituteEnd.call(this, state, target);\n\t        }\n\t    }\n\t};\n\tCSL.Node.number = {\n\t    build: function (state, target) {\n\t        var func;\n\t        CSL.Util.substituteStart.call(this, state, target);\n\t        if (this.strings.form === \"roman\") {\n\t            this.formatter = state.fun.romanizer;\n\t        } else if (this.strings.form === \"ordinal\") {\n\t            this.formatter = state.fun.ordinalizer;\n\t        } else if (this.strings.form === \"long-ordinal\") {\n\t            this.formatter = state.fun.long_ordinalizer;\n\t        }\n\t        if (\"undefined\" === typeof this.successor_prefix) {\n\t            this.successor_prefix = state[state.build.area].opt.layout_delimiter;\n\t        }\n\t        if (\"undefined\" === typeof this.splice_prefix) {\n\t            this.splice_prefix = state[state.build.area].opt.layout_delimiter;\n\t        }\n\t        func = function (state, Item, item) {\n\t            var i, ilen, newlst, lst;\n\t            if (this.variables.length === 0) {\n\t                return;\n\t            }\n\t            if (\"undefined\" === typeof item) {\n\t                var item = {};\n\t            }\n\t            var varname, num, number, m, j, jlen;\n\t            varname = this.variables[0];\n\t            if (varname === \"locator\" && state.tmp.just_looking) {\n\t                return;\n\t            }\n\t            state.parallel.StartVariable(this.variables[0]);\n\t            if (this.variables[0] === \"locator\") {\n\t                state.parallel.AppendToVariable(Item.section);\n\t            } else {\n\t                state.parallel.AppendToVariable(Item[this.variables[0]]);\n\t            }\n\t            var rex = new RegExp(\"(?:&|, | and |\" + state.getTerm(\"page-range-delimiter\") + \")\");\n\t            if (varname === 'collection-number' && Item.type === 'legal_case') {\n\t                state.tmp.renders_collection_number = true;\n\t            }\n\t            var value = Item[this.variables[0]];\n\t            var form = \"long\";\n\t            if (this.strings.label_form_override) {\n\t                form = this.strings.label_form_override;\n\t            }\n\t            var node = this;\n\t            if (state.tmp.group_context.tip.force_suppress) {\n\t                return false;\n\t            }\n\t            if (varname === \"locator\") {\n\t                state.processNumber(node, item, varname, Item.type);\n\t            } else {\n\t                if (!state.tmp.group_context.tip.condition && Item[varname]) {\n\t                    state.tmp.just_did_number = true;\n\t                }\n\t                state.processNumber(node, Item, varname, Item.type);\n\t            }\n\t            CSL.Util.outputNumericField(state, varname, Item.id);\n\t            state.parallel.CloseVariable(\"number\");\n\t            if ([\"locator\", \"locator-extra\"].indexOf(this.variables_real[0]) > -1\n\t               && !state.tmp.just_looking) {\n\t                state.tmp.done_vars.push(this.variables_real[0]);\n\t                state.tmp.group_context.tip.done_vars.push(this.variables_real[0]);\n\t            }\n\t        };\n\t        this.execs.push(func);\n\t        target.push(this);\n\t        CSL.Util.substituteEnd.call(this, state, target);\n\t    }\n\t};\n\tCSL.Node.sort = {\n\t    build: function (state, target) {\n\t        target = state[state.build.root + \"_sort\"].tokens;\n\t        if (this.tokentype === CSL.START) {\n\t            if (state.build.area === \"citation\") {\n\t                state.parallel.use_parallels = false;\n\t                state.opt.sort_citations = true;\n\t            }\n\t            state.build.area = state.build.root + \"_sort\";\n\t            state.build.extension = \"_sort\";\n\t            var func = function (state, Item) {\n\t                if (state.opt.has_layout_locale) {\n\t                    var langspec = CSL.localeResolve(Item.language, state.opt[\"default-locale\"][0]);\n\t                    var sort_locales = state[state.tmp.area.slice(0,-5)].opt.sort_locales;\n\t                    var langForItem;\n\t                    for (var i=0,ilen=sort_locales.length;i<ilen;i+=1) {\n\t                        langForItem = sort_locales[i][langspec.bare];\n\t                        if (!langForItem) {\n\t                            langForItem = sort_locales[i][langspec.best];\n\t                        }\n\t                        if (langForItem) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!langForItem) {\n\t                        langForItem = state.opt[\"default-locale\"][0];\n\t                    }\n\t                    state.tmp.lang_sort_hold = state.opt.lang;\n\t                    state.opt.lang = langForItem;\n\t                }\n\t            }\n\t            this.execs.push(func);\n\t        }\n\t        if (this.tokentype === CSL.END) {\n\t            state.build.area = state.build.root;\n\t            state.build.extension = \"\";\n\t            var func = function (state, Item) {\n\t                if (state.opt.has_layout_locale) {\n\t                    state.opt.lang = state.tmp.lang_sort_hold;\n\t                    delete state.tmp.lang_sort_hold;\n\t                }\n\t            }\n\t            this.execs.push(func);\n\t        }\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node.substitute = {\n\t    build: function (state, target) {\n\t        var func;\n\t        if (this.tokentype === CSL.START) {\n\t            func = function (state, Item) {\n\t                state.tmp.can_block_substitute = true;\n\t                if (state.tmp.value.length) {\n\t                    state.tmp.can_substitute.replace(false, CSL.LITERAL);\n\t                }\n\t            };\n\t            this.execs.push(func);\n\t        }\n\t        target.push(this);\n\t    }\n\t};\n\tCSL.Node.text = {\n\t    build: function (state, target) {\n\t        var variable, func, form, plural, id, num, number, formatter, firstoutput, specialdelimiter, label, myname, names, name, year, suffix, term, dp, len, pos, n, m, value, flag;\n\t        if (this.postponed_macro) {\n\t            var group_start = CSL.Util.cloneToken(this);\n\t            group_start.name = \"group\";\n\t            group_start.tokentype = CSL.START;\n\t            CSL.Node.group.build.call(group_start, state, target);\n\t            CSL.expandMacro.call(state, this, target);\n\t            var group_end = CSL.Util.cloneToken(this);\n\t            group_end.name = \"group\";\n\t            group_end.tokentype = CSL.END;\n\t            if (this.postponed_macro === 'juris-locator-label') {\n\t                group_end.isJurisLocatorLabel = true;\n\t            }\n\t            CSL.Node.group.build.call(group_end, state, target);\n\t        } else {\n\t            CSL.Util.substituteStart.call(this, state, target);\n\t            if (!this.variables_real) {\n\t                this.variables_real = [];\n\t            }\n\t            if (!this.variables) {\n\t                this.variables = [];\n\t            }\n\t            form = \"long\";\n\t            plural = 0;\n\t            if (this.strings.form) {\n\t                form = this.strings.form;\n\t            }\n\t            if (this.strings.plural) {\n\t                plural = this.strings.plural;\n\t            }\n\t            if (\"citation-number\" === this.variables_real[0] || \"year-suffix\" === this.variables_real[0] || \"citation-label\" === this.variables_real[0]) {\n\t                if (this.variables_real[0] === \"citation-number\") {\n\t                    if (state.build.root === \"citation\") {\n\t                        state.opt.update_mode = CSL.NUMERIC;\n\t                    }\n\t                    if (state.build.root === \"bibliography\") {\n\t                        state.opt.bib_mode = CSL.NUMERIC;\n\t                    }\n\t                    if (state.build.area === \"bibliography_sort\") {\n\t                        state.opt.citation_number_sort_used = true;\n\t                    }\n\t                    if (\"citation-number\" === state[state.tmp.area].opt.collapse) {\n\t                        this.range_prefix = state.getTerm(\"citation-range-delimiter\");\n\t                    }\n\t                    this.successor_prefix = state[state.build.area].opt.layout_delimiter;\n\t                    this.splice_prefix = state[state.build.area].opt.layout_delimiter;\n\t                    func = function (state, Item, item) {\n\t                        id = \"\" + Item.id;\n\t                        if (!state.tmp.just_looking) {\n\t                            if (item && item[\"author-only\"]) {\n\t                                state.tmp.element_trace.replace(\"do-not-suppress-me\");\n\t                                var reference_term = state.getTerm(\"reference\", \"long\", \"singular\");\n\t                                if (\"undefined\" === typeof reference_term) {\n\t                                    reference_term = \"reference\";\n\t                                }\n\t                                term = CSL.Output.Formatters[\"capitalize-first\"](state, reference_term);\n\t                                state.output.append(term + \" \");\n\t                                state.tmp.last_element_trace = true;\n\t                            }\n\t                            if (item && item[\"suppress-author\"]) {\n\t                                if (state.tmp.last_element_trace) {\n\t                                    state.tmp.element_trace.replace(\"suppress-me\");\n\t                                }\n\t                                state.tmp.last_element_trace = false;\n\t                            }\n\t                            num = state.registry.registry[id].seq;\n\t                            if (state.opt.citation_number_slug) {\n\t                                state.output.append(state.opt.citation_number_slug, this);\n\t                            } else {\n\t                                number = new CSL.NumericBlob(false, num, this, Item.id);\n\t                                if (state.tmp.in_cite_predecessor) {\n\t                                    if (!state.tmp.just_looking) {\n\t                                    }\n\t                                    number.suppress_splice_prefix = true;\n\t                                }\n\t                                state.output.append(number, \"literal\");\n\t                            }\n\t                        }\n\t                    };\n\t                    this.execs.push(func);\n\t                } else if (this.variables_real[0] === \"year-suffix\") {\n\t                    state.opt.has_year_suffix = true;\n\t                    if (state[state.tmp.area].opt.collapse === \"year-suffix-ranged\") {\n\t                        this.range_prefix = state.getTerm(\"citation-range-delimiter\");\n\t                    }\n\t                    this.successor_prefix = state[state.build.area].opt.layout_delimiter;\n\t                    if (state[state.tmp.area].opt[\"year-suffix-delimiter\"]) {\n\t                        this.successor_prefix = state[state.build.area].opt[\"year-suffix-delimiter\"];\n\t                    }\n\t                    func = function (state, Item) {\n\t                        if (state.registry.registry[Item.id] && state.registry.registry[Item.id].disambig.year_suffix !== false && !state.tmp.just_looking) {\n\t                            num = parseInt(state.registry.registry[Item.id].disambig.year_suffix, 10);\n\t                            if (state[state.tmp.area].opt.cite_group_delimiter) {\n\t                                this.successor_prefix = state[state.tmp.area].opt.cite_group_delimiter;\n\t                            }\n\t                            number = new CSL.NumericBlob(false, num, this, Item.id);\n\t                            formatter = new CSL.Util.Suffixator(CSL.SUFFIX_CHARS);\n\t                            number.setFormatter(formatter);\n\t                            state.output.append(number, \"literal\");\n\t                            firstoutput = false;\n\t                            for (var i=0,ilen=state.tmp.group_context.mystack.length; i<ilen; i++) {\n\t                                flags = state.tmp.group_context.mystack[i];\n\t                                if (!flags.variable_success && (flags.variable_attempt || (!flags.variable_attempt && !flags.term_intended))) {\n\t                                    firstoutput = true;\n\t                                    break;\n\t                                }\n\t                            }\n\t                            specialdelimiter = state[state.tmp.area].opt[\"year-suffix-delimiter\"];\n\t                            if (firstoutput && specialdelimiter && !state.tmp.sort_key_flag) {\n\t                                state.tmp.splice_delimiter = state[state.tmp.area].opt[\"year-suffix-delimiter\"];\n\t                            }\n\t                        }\n\t                    };\n\t                    this.execs.push(func);\n\t                } else if (this.variables_real[0] === \"citation-label\") {\n\t                    state.opt.has_year_suffix = true;\n\t                    func = function (state, Item) {\n\t                        label = Item[\"citation-label\"];\n\t                        if (!label) {\n\t                            label = state.getCitationLabel(Item);\n\t                        }\n\t                        if (!state.tmp.just_looking) {\n\t                            suffix = \"\";\n\t                            if (state.registry.registry[Item.id] && state.registry.registry[Item.id].disambig.year_suffix !== false) {\n\t                                num = parseInt(state.registry.registry[Item.id].disambig.year_suffix, 10);\n\t                                suffix = state.fun.suffixator.format(num);\n\t                            }\n\t                            label += suffix;\n\t                        }\n\t                        state.output.append(label, this);\n\t                    };\n\t                    this.execs.push(func);\n\t                }\n\t            } else {\n\t                if (this.strings.term) {\n\t                    func = function (state, Item, item) {\n\t                        var gender = state.opt.gender[Item.type];\n\t                        var term = this.strings.term;\n\t                        term = state.getTerm(term, form, plural, gender, CSL.TOLERANT, this.default_locale);\n\t                        var myterm;\n\t                        if (term !== \"\") {\n\t                            state.tmp.group_context.tip.term_intended = true;\n\t                        }\n\t                        CSL.UPDATE_GROUP_CONTEXT_CONDITION(state, term);\n\t                        if (!state.tmp.term_predecessor && !(state.opt[\"class\"] === \"in-text\" && state.tmp.area === \"citation\")) {\n\t                            myterm = CSL.Output.Formatters[\"capitalize-first\"](state, term);\n\t                        } else {\n\t                            myterm = term;\n\t                        }\n\t                        if (state.tmp.strip_periods) {\n\t                            myterm = myterm.replace(/\\./g, \"\");\n\t                        } else {\n\t                            for (var i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n\t                                if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n\t                                    myterm = myterm.replace(/\\./g, \"\");\n\t                                    break;\n\t                                }\n\t                            }\n\t                        }\n\t                        state.output.append(myterm, this);\n\t                    };\n\t                    this.execs.push(func);\n\t                    state.build.term = false;\n\t                    state.build.form = false;\n\t                    state.build.plural = false;\n\t                } else if (this.variables_real.length) {\n\t                    func = function (state, Item, item) {\n\t                        if (this.variables_real[0] !== \"locator\") {\n\t                            state.tmp.have_collapsed = false;\n\t                        }\n\t                        var parallel_variable = this.variables[0];\n\t                        if (parallel_variable === \"title\" \n\t                            && (form === \"short\" || Item[\"title-short\"])) { \n\t                            parallel_variable = \"title-short\";\n\t                        }\n\t                        state.parallel.StartVariable(parallel_variable);\n\t                        state.parallel.AppendToVariable(Item[parallel_variable],parallel_variable);\n\t                        if (!state.tmp.group_context.tip.condition && Item[this.variables[0]]) {\n\t                            state.tmp.just_did_number = false;\n\t                        }\n\t                    };\n\t                    this.execs.push(func);\n\t                    if (CSL.MULTI_FIELDS.indexOf(this.variables_real[0]) > -1\n\t                        || [\"language-name\", \"language-name-original\"].indexOf(this.variables_real[0]) > -1) {\n\t                        var abbrevfam = this.variables[0];\n\t                        var abbrfall = false;\n\t                        var altvar = false;\n\t                        var transfall = false;\n\t                        if (form === \"short\") {\n\t                            if (this.variables_real[0] === \"container-title\") {\n\t                                altvar = \"journalAbbreviation\";\n\t                            } else if (this.variables_real[0] === \"title\") {\n\t                                altvar = \"title-short\";\n\t                            }\n\t                        } else {\n\t                            abbrevfam = false;\n\t                        }\n\t                        if (state.build.extension) {\n\t                            transfall = true;\n\t                        } else {\n\t                            transfall = true;\n\t                            abbrfall = true;\n\t\t\t\t\t\t\t}\n\t                        func = state.transform.getOutputFunction(this.variables, abbrevfam, abbrfall, altvar, transfall);\n\t                    } else {\n\t                        if (CSL.CITE_FIELDS.indexOf(this.variables_real[0]) > -1) {\n\t                            func = function (state, Item, item) {\n\t                                if (item && item[this.variables[0]]) {\n\t                                    state.processNumber(this, item, this.variables[0], Item.type);\n\t                                    CSL.Util.outputNumericField(state, this.variables[0], Item.id);\n\t                                    state.output.append(value, this, false, false, true);\n\t                                    if ([\"locator\", \"locator-extra\"].indexOf(this.variables_real[0]) > -1\n\t                                       && !state.tmp.just_looking) { \n\t                                        state.tmp.done_vars.push(this.variables_real[0]);\n\t                                    }\n\t                                }\n\t                            };\n\t                        } else  if ([\"page\", \"page-first\", \"chapter-number\", \"collection-number\", \"edition\", \"issue\", \"number\", \"number-of-pages\", \"number-of-volumes\", \"volume\"].indexOf(this.variables_real[0]) > -1) {\n\t                            func = function(state, Item) {\n\t                                state.processNumber(this, Item, this.variables[0], Item.type);\n\t                                CSL.Util.outputNumericField(state, this.variables[0], Item.id);\n\t                            }\n\t                        } else if ([\"URL\", \"DOI\"].indexOf(this.variables_real[0]) > -1) {\n\t                            func = function (state, Item) {\n\t                                var value;\n\t                                if (this.variables[0]) {\n\t                                    value = state.getVariable(Item, this.variables[0], form);\n\t                                    if (value) {\n\t                                        if (state.opt.development_extensions.wrap_url_and_doi) {\n\t                                            if (!this.decorations.length || this.decorations[0][0] !== \"@\" + this.variables[0]) {\n\t                                                this.decorations = [[\"@\" + this.variables[0], \"true\"]].concat(this.decorations);\n\t                                            }\n\t                                        } else {\n\t                                            if (this.decorations.length && this.decorations[0][0] === \"@\" + this.variables[0]) {\n\t                                                this.decorations = this.decorations.slice(1);\n\t                                            }\n\t                                        }\n\t                                        state.output.append(value, this, false, false, true);\n\t                                    }\n\t                                }\n\t                            };\n\t                        } else if (this.variables_real[0] === \"section\") {\n\t                            func = function (state, Item) {\n\t                                var value;\n\t                                value = state.getVariable(Item, this.variables[0], form);\n\t                                if (value) {\n\t                                    state.output.append(value, this);\n\t                                }\n\t                            };\n\t                        } else if (this.variables_real[0] === \"hereinafter\") {\n\t                            func = function (state, Item) {\n\t                                var value = state.transform.abbrevs[\"default\"][\"hereinafter\"][Item.id];\n\t                                if (value) {\n\t                                    state.output.append(value, this);\n\t                                    state.tmp.group_context.tip.variable_success = true;\n\t                                }\n\t                            }\n\t                        } else {\n\t                            func = function (state, Item) {\n\t                                var value;\n\t                                if (this.variables[0]) {\n\t                                    value = state.getVariable(Item, this.variables[0], form);\n\t                                    if (value) {\n\t                                        value = \"\" + value;\n\t                                        value = value.split(\"\\\\\").join(\"\");\n\t                                        state.output.append(value, this);\n\t                                    }\n\t                                }\n\t                            };\n\t                        }\n\t                    }\n\t                    this.execs.push(func);\n\t                    func = function (state, Item) {\n\t                        state.parallel.CloseVariable(\"text\");\n\t                    };\n\t                    this.execs.push(func);\n\t                } else if (this.strings.value) {\n\t                    func = function (state, Item) {\n\t                        state.tmp.group_context.tip.term_intended = true;\n\t                        CSL.UPDATE_GROUP_CONTEXT_CONDITION(state, this.strings.value, true);\n\t                        state.output.append(this.strings.value, this);\n\t                    };\n\t                    this.execs.push(func);\n\t                }\n\t            }\n\t            target.push(this);\n\t            CSL.Util.substituteEnd.call(this, state, target);\n\t        }\n\t    }\n\t};\n\tCSL.Attributes = {};\n\tCSL.Attributes[\"@genre\"] = function (state, arg) {\n\t    arg = arg.replace(\"-\", \" \");\n\t    var func = function (Item, item) {\n\t        var ret;\n\t        if (arg === Item.genre) {\n\t            return true;\n\t        }\n\t        return false;\n\t    }\n\t    this.tests.push(func);\n\t}\n\tCSL.Attributes[\"@disambiguate\"] = function (state, arg) {\n\t    if (arg === \"true\") {\n\t        state.opt.has_disambiguate = true;\n\t        var func = function (Item, item) {\n\t            state.tmp.disambiguate_maxMax += 1;\n\t            if (state.tmp.disambig_settings.disambiguate\n\t                && state.tmp.disambiguate_count < state.tmp.disambig_settings.disambiguate) {\n\t                state.tmp.disambiguate_count += 1;\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        this.tests.push(func);\n\t    } else if (arg === \"check-ambiguity-and-backreference\") {\n\t        var func = function (Item, item) {\n\t            if (state.registry.registry[Item.id].disambig.disambiguate && state.registry.registry[Item.id][\"citation-count\"] > 1) {\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        this.tests.push(func);\n\t    }\n\t};\n\tCSL.Attributes[\"@is-numeric\"] = function (state, arg, joiner) {\n\t    var variables = arg.split(/\\s+/);\n\t    var maketest = function(variable) {\n\t        return function (Item, item) {\n\t            var myitem = Item;\n\t            if ([\"locator\",\"locator-extra\"].indexOf(variable) > -1) {\n\t                myitem = item;\n\t            }\n\t            if (\"undefined\" === typeof myitem) {\n\t                return false;\n\t            }\n\t            if (CSL.NUMERIC_VARIABLES.indexOf(variable) > -1) {\n\t                if (!state.tmp.shadow_numbers[variable]) {\n\t                    state.processNumber(false, myitem, variable, Item.type);\n\t                }\n\t                if (myitem[variable] && state.tmp.shadow_numbers[variable].numeric) {\n\t                    return true;\n\t                }\n\t            } else if ([\"title\", \"locator-extra\",\"version\"].indexOf(variable) > -1) {\n\t                if (myitem[variable]) {\n\t                    if (myitem[variable].slice(-1) === \"\" + parseInt(myitem[variable].slice(-1), 10)) {\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t    }\n\t    for (var i=0; i<variables.length; i+=1) {\n\t        this.tests.push(maketest(variables[i]));\n\t    }\n\t};\n\tCSL.Attributes[\"@is-uncertain-date\"] = function (state, arg) {\n\t    var variables = arg.split(/\\s+/);\n\t    var maketest = function (myvariable) {\n\t        return function(Item, item) {\n\t            if (Item[myvariable] && Item[myvariable].circa) {\n\t                return true;\n\t            } else {\n\t                return false;\n\t            }\n\t        }\n\t    }\n\t    for (var i=0,ilen=variables.length;i<ilen;i+=1) {\n\t        this.tests.push(maketest(variables[i]));\n\t    };\n\t};\n\tCSL.Attributes[\"@locator\"] = function (state, arg) {\n\t    var trylabels = arg.replace(\"sub verbo\", \"sub-verbo\");\n\t    trylabels = trylabels.split(/\\s+/);\n\t    var maketest = function (trylabel) {\n\t        return function(Item, item) {\n\t            var label;\n\t            state.processNumber(false, item, \"locator\");\n\t            label = state.tmp.shadow_numbers.locator.label;\n\t            if (trylabel === label) {\n\t                return true;\n\t            } else {\n\t                return false;\n\t            }\n\t        }\n\t    }\n\t    for (var i=0,ilen=trylabels.length;i<ilen;i+=1) {\n\t        this.tests.push(maketest(trylabels[i]));\n\t    }\n\t};\n\tCSL.Attributes[\"@position\"] = function (state, arg) {\n\t    var tryposition;\n\t    state.opt.update_mode = CSL.POSITION;\n\t    state.parallel.use_parallels = null;\n\t    var trypositions = arg.split(/\\s+/);\n\t    var maketest = function(tryposition) {\n\t        return function (Item, item) {\n\t            if (state.tmp.area === \"bibliography\") {\n\t                return false;\n\t            }\n\t            if (item && \"undefined\" === typeof item.position) {\n\t                item.position = 0;\n\t            }\n\t            if (item && typeof item.position === \"number\") {\n\t                if (item.position === 0 && tryposition === 0) {\n\t                    return true;\n\t                } else if (tryposition > 0 && item.position >= tryposition) {\n\t                    return true;\n\t                }\n\t            } else if (tryposition === 0) {\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t    }\n\t    for (var i=0,ilen=trypositions.length;i<ilen;i+=1) {\n\t        var tryposition = trypositions[i];\n\t        if (tryposition === \"first\") {\n\t            tryposition = CSL.POSITION_FIRST;\n\t        } else if (tryposition === \"subsequent\") {\n\t            tryposition = CSL.POSITION_SUBSEQUENT;\n\t        } else if (tryposition === \"ibid\") {\n\t            tryposition = CSL.POSITION_IBID;\n\t        } else if (tryposition === \"ibid-with-locator\") {\n\t            tryposition = CSL.POSITION_IBID_WITH_LOCATOR;\n\t        }\n\t        if (\"near-note\" === tryposition) {\n\t            this.tests.push(function (Item, item) {\n\t                if (item && item.position >= CSL.POSITION_SUBSEQUENT && item[\"near-note\"]) {\n\t                    return true;\n\t                }\n\t                return false;\n\t            });\n\t        } else if (\"far-note\" === tryposition) {\n\t            this.tests.push(function (Item, item) {\n\t                if (item && item.position == CSL.POSITION_SUBSEQUENT && !item[\"near-note\"]) {\n\t                    return true;\n\t                }\n\t                return false;\n\t            });\n\t        } else {\n\t            this.tests.push(maketest(tryposition));\n\t        }\n\t    }\n\t};\n\tCSL.Attributes[\"@type\"] = function (state, arg) {\n\t    var types = arg.split(/\\s+/);\n\t    var maketest = function (mytype) {\n\t        return function(Item,item) {\n\t            var ret = (Item.type === mytype);\n\t            if (ret) {\n\t                return true;\n\t            } else {\n\t                return false;\n\t            }\n\t        }\n\t    }\n\t    var tests = [];\n\t    for (var i=0,ilen=types.length;i<ilen;i+=1) {\n\t        tests.push(maketest(types[i]));\n\t    }\n\t    this.tests.push(state.fun.match.any(this, state, tests));\n\t};\n\tCSL.Attributes[\"@variable\"] = function (state, arg) {\n\t    var func;\n\t    this.variables = arg.split(/\\s+/);\n\t    this.variables_real = this.variables.slice();\n\t    if (\"label\" === this.name && this.variables[0]) {\n\t        this.strings.term = this.variables[0];\n\t    } else if ([\"names\", \"date\", \"text\", \"number\"].indexOf(this.name) > -1) {\n\t        func = function (state, Item, item) {\n\t            for (var i = this.variables.length - 1; i > -1; i += -1) {\n\t                this.variables.pop();\n\t            }\n\t            for (var i=0,ilen=this.variables_real.length;i<ilen;i++) {\n\t                if (state.tmp.done_vars.indexOf(this.variables_real[i]) === -1 \n\t                    && !(item && Item.type === \"legal_case\" && item[\"suppress-author\"] && this.variables_real[i] === \"title\")\n\t                   ) {\n\t                    this.variables.push(this.variables_real[i]);\n\t                }\n\t                if (state.tmp.can_block_substitute) {\n\t                    state.tmp.done_vars.push(this.variables_real[i]);\n\t                }\n\t            }\n\t        };\n\t        this.execs.push(func);\n\t        func = function (state, Item, item) {\n\t            var mydate;\n\t            output = false;\n\t            for (var i=0,ilen=this.variables.length;i<ilen;i++) {\n\t                var variable = this.variables[i];\n\t                if ([\"authority\", \"committee\"].indexOf(variable) > -1\n\t                    && \"string\" === typeof Item[variable]\n\t                    && \"names\" === this.name) {\n\t                    var creatorParents = [];\n\t                    var isValid = true;\n\t                    var rawNames = Item[variable].split(/\\s*;\\s*/);\n\t                    var rawMultiNames = {};\n\t                    if (Item.multi && Item.multi._keys[variable]) {\n\t                        for (var langTag in Item.multi._keys[variable]) {\n\t                            rawMultiNames[langTag] = Item.multi._keys[variable][langTag].split(/\\s*;\\s*/);\n\t                            if (rawMultiNames[langTag].length !== rawNames.length) {\n\t                                isValid = false;\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t                    if (!isValid) {\n\t                        rawNames = [Item[variable]];\n\t                        rawMultiNames = Item.multi._keys[variable];\n\t                    }\n\t                    for (var j = 0, jlen = rawNames.length; j < jlen; j++) {\n\t                        var creatorParent = {\n\t                            literal:rawNames[j],\n\t                            multi:{\n\t                                _key:{}\n\t                            }\n\t                        };\n\t                        for (var langTag in rawMultiNames) {\n\t                            var creatorChild = {\n\t                                literal:rawMultiNames[langTag][j]\n\t                            }\n\t                            creatorParent.multi._key[langTag] = creatorChild;\n\t                        }\n\t                        rawNames[j] = creatorParent;\n\t                    }\n\t                    Item[variable] = rawNames;\n\t                }\n\t                if (this.strings.form === \"short\" && !Item[variable]) {\n\t                    if (variable === \"title\") {\n\t                        variable = \"title-short\";\n\t                    } else if (variable === \"container-title\") {\n\t                        variable = \"journalAbbreviation\";\n\t                    }\n\t                }\n\t                if (variable === \"year-suffix\") {\n\t                    output = true;\n\t                    break;\n\t                } else if (CSL.DATE_VARIABLES.indexOf(variable) > -1) {\n\t                    if (state.opt.development_extensions.locator_date_and_revision && \"locator-date\" === variable) {\n\t                        output = true;\n\t                        break;\n\t                    }\n\t                    if (Item[variable]) {\n\t                        for (var key in Item[variable]) {\n\t                            if (this.dateparts.indexOf(key) === -1 && \"literal\" !== key) {\n\t                                continue;\n\t                            }\n\t                            if (Item[variable][key]) {\n\t                                output = true;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (output) {\n\t                            break;\n\t                        }\n\t                    }\n\t                } else if (\"locator\" === variable) {\n\t                    if (item && item.locator) {\n\t                        output = true;\n\t                    }\n\t                    break;\n\t                } else if (\"locator-extra\" === variable) {\n\t                    if (item && item[\"locator-extra\"]) {\n\t                        output = true;\n\t                    }\n\t                    break;\n\t                } else if ([\"citation-number\",\"citation-label\"].indexOf(variable) > -1) {\n\t                    output = true;\n\t                    break;\n\t                } else if (\"first-reference-note-number\" === variable) {\n\t                    if (item && item[\"first-reference-note-number\"]) {\n\t                        output = true;\n\t                    }\n\t                    break;\n\t                } else if (\"hereinafter\" === variable) {\n\t                    if (state.transform.abbrevs[\"default\"].hereinafter[Item.id]\n\t                        && state.sys.getAbbreviation\n\t                        && Item.id) {\n\t                        output = true;\n\t                    }\n\t                    break;\n\t                } else if (\"object\" === typeof Item[variable]) {\n\t                    if (Item[variable].length) {\n\t                    }\n\t                    break;\n\t                } else if (\"string\" === typeof Item[variable] && Item[variable]) {\n\t                    output = true;\n\t                    break;\n\t                } else if (\"number\" === typeof Item[variable]) {\n\t                    output = true;\n\t                    break;\n\t                }\n\t                if (output) {\n\t                    break;\n\t                }\n\t            }\n\t            if (output) {\n\t                for (var i=0,ilen=this.variables_real.length;i<ilen;i++) {\n\t                    var variable = this.variables_real[i];\n\t                    if (variable !== \"citation-number\" || state.tmp.area !== \"bibliography\") {\n\t                        state.tmp.cite_renders_content = true;\n\t                    }\n\t                    state.tmp.group_context.tip.variable_success = true;\n\t                    if (state.tmp.can_substitute.value() \n\t                        && state.tmp.area === \"bibliography\"\n\t                        && \"string\" === typeof Item[variable]) {\n\t                        state.tmp.name_node.top = state.output.current.value();\n\t                        state.tmp.rendered_name.push(Item[variable]);\n\t                    }\n\t                }\n\t                state.tmp.can_substitute.replace(false,  CSL.LITERAL);\n\t            } else {\n\t                state.tmp.group_context.tip.variable_attempt = true;\n\t            }\n\t        };\n\t        this.execs.push(func);\n\t    } else if ([\"if\",  \"else-if\", \"condition\"].indexOf(this.name) > -1) {\n\t        var maketest = function (variable) {\n\t            return function(Item,item){\n\t                var myitem = Item;\n\t                if (item && [\"locator\", \"locator-extra\", \"first-reference-note-number\", \"locator-date\"].indexOf(variable) > -1) {\n\t                    myitem = item;\n\t                }\n\t                if (variable === \"hereinafter\" && state.sys.getAbbreviation && myitem.id) {\n\t                    if (state.transform.abbrevs[\"default\"].hereinafter[myitem.id]) {\n\t                        return true;\n\t                    }\n\t                } else if (myitem[variable]) {\n\t                    if (\"number\" === typeof myitem[variable] || \"string\" === typeof myitem[variable]) {\n\t                        return true;\n\t                    } else if (\"object\" === typeof myitem[variable]) {\n\t                        for (key in myitem[variable]) {\n\t                            if (myitem[variable][key]) {\n\t                                return true;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t                return false;\n\t            }\n\t        }\n\t        for (var i=0,ilen=this.variables.length;i<ilen;i+=1) {\n\t            this.tests.push(maketest(this.variables[i]));\n\t        }\n\t    }\n\t};\n\tCSL.Attributes[\"@page\"] = function (state, arg) {\n\t    var trylabels = arg.replace(\"sub verbo\", \"sub-verbo\");\n\t    trylabels = trylabels.split(/\\s+/);\n\t    var maketest = function (trylabel) {\n\t        return function(Item, item) {\n\t            var label;\n\t            state.processNumber(false, Item, \"page\", Item.type);\n\t            if (!state.tmp.shadow_numbers.page.label) {\n\t                label = \"page\";\n\t            } else if (state.tmp.shadow_numbers.page.label === \"sub verbo\") {\n\t                label = \"sub-verbo\";\n\t            } else {\n\t                label = state.tmp.shadow_numbers.page.label;\n\t            }\n\t            if (trylabel === label) {\n\t                return true;\n\t            } else {\n\t                return false;\n\t            }\n\t        }\n\t    }\n\t    for (var i=0,ilen=trylabels.length;i<ilen;i+=1) {\n\t        this.tests.push(maketest(trylabels[i]));\n\t    }\n\t};\n\tCSL.Attributes[\"@number\"] = function (state, arg) {\n\t    var trylabels = arg.replace(\"sub verbo\", \"sub-verbo\");\n\t    trylabels = trylabels.split(/\\s+/);\n\t    var maketest = function(trylabel) {\n\t        return function (Item, item) {\n\t            var label;\n\t            state.processNumber(false, Item, \"number\", Item.type);\n\t            if (!state.tmp.shadow_numbers.number.label) {\n\t                label = \"number\";\n\t            } else if (state.tmp.shadow_numbers.number.label === \"sub verbo\") {\n\t                label = \"sub-verbo\";\n\t            } else {\n\t                label = state.tmp.shadow_numbers.number.label;\n\t            }\n\t            if (trylabel === label) {\n\t                return true;\n\t            } else {\n\t                return false;\n\t            }\n\t        }\n\t    }\n\t    for (var i=0,ilen=trylabels.length;i<ilen;i+=1) {\n\t        this.tests.push(maketest(trylabels[i]));\n\t    }\n\t};\n\tCSL.Attributes[\"@jurisdiction\"] = function (state, arg) {\n\t    var tryjurisdictions = arg.split(/\\s+/);\n\t    for (var i=0,ilen=tryjurisdictions.length;i<ilen;i+=1) {\n\t        tryjurisdictions[i] = tryjurisdictions[i].split(\":\");\n\t    }\n\t    var maketests = function (tryjurisdiction) {\n\t        return function(Item,item){\n\t            if (!Item.jurisdiction) {\n\t                return false;\n\t            }\n\t            var jurisdictions = Item.jurisdiction.split(\":\");\n\t            for (var i=0,ilen=jurisdictions.length;i<ilen;i+=1) {\n\t                jurisdictions[i] = jurisdictions[i].split(\":\");\n\t            }\n\t            for (i=tryjurisdiction.length;i>0;i+=-1) {\n\t                var tryjurisdictionStr = tryjurisdiction.slice(0,i).join(\":\");\n\t                var jurisdiction = jurisdictions.slice(0,i).join(\":\");\n\t                if (tryjurisdictionStr !== jurisdiction) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        }\n\t    }\n\t    for (var i=0,ilen=tryjurisdictions.length;i<ilen;i+=1) {\n\t        var tryjurisdictionSlice = tryjurisdictions[i].slice();\n\t        this.tests.push(maketests(tryjurisdictionSlice));\n\t    }\n\t};\n\tCSL.Attributes[\"@context\"] = function (state, arg) {\n\t    var func = function (Item, item) {\n\t\t\tvar area = state.tmp.area.slice(0, arg.length);\n\t\t\tif (area === arg) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t    };\n\t    this.tests.push(func);\n\t};\n\tCSL.Attributes[\"@has-year-only\"] = function (state, arg) {\n\t    var trydates = arg.split(/\\s+/);\n\t    var maketest = function (trydate) {\n\t        return function(Item,item){\n\t            var date = Item[trydate];\n\t            if (!date || date.month || date.season) {\n\t                return false;\n\t            } else {\n\t                return true;\n\t            }\n\t        }\n\t    }\n\t    for (var i=0,ilen=trydates.length;i<ilen;i+=1) {\n\t        this.tests.push(maketest(trydates[i]));\n\t    }\n\t};\n\tCSL.Attributes[\"@has-to-month-or-season\"] = function (state, arg) {\n\t    var trydates = arg.split(/\\s+/);\n\t    var maketest = function (trydate) {\n\t        return function(Item,item){\n\t            var date = Item[trydate];\n\t            if (!date || (!date.month && !date.season) || date.day) {\n\t                return false;\n\t            } else {\n\t                return true;\n\t            }\n\t        }\n\t    }\n\t    for (var i=0,ilen=trydates.length;i<ilen;i+=1) {\n\t        this.tests.push(maketest(trydates[i]));\n\t    }\n\t};\n\tCSL.Attributes[\"@has-day\"] = function (state, arg) {\n\t    var trydates = arg.split(/\\s+/);\n\t    var maketest = function (trydate) {\n\t        return function(Item,item){\n\t            var date = Item[trydate];\n\t            if (!date || !date.day) {\n\t                return false;\n\t            } else {\n\t                return true;\n\t            }\n\t        }\n\t    }\n\t    for (var i=0,ilen=trydates.length;i<ilen;i+=1) {\n\t        this.tests.push(maketest(trydates[i]));\n\t    };\n\t};\n\tCSL.Attributes[\"@subjurisdictions\"] = function (state, arg) {\n\t    var trysubjurisdictions = parseInt(arg, 10);\n\t    var func = function (Item, item) {\n\t        var subjurisdictions = 0;\n\t        if (Item.jurisdiction) {\n\t            subjurisdictions = Item.jurisdiction.split(\":\").length;\n\t        }\n\t        if (subjurisdictions) {\n\t            subjurisdictions += -1;\n\t        }\n\t        if (subjurisdictions >= trysubjurisdictions) {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    this.tests.push(func);\n\t};\n\tCSL.Attributes[\"@is-plural\"] = function (state, arg) {\n\t    var func = function (Item, item) {\n\t        var nameList = Item[arg];\n\t        if (nameList && nameList.length) {\n\t            var persons = 0;\n\t            var institutions = 0;\n\t            var last_is_person = false;\n\t            for (var i = 0, ilen = nameList.length; i < ilen; i += 1) {\n\t                if (state.opt.development_extensions.spoof_institutional_affiliations\n\t                    && (nameList[i].literal || (nameList[i].isInstitution && nameList[i].family && !nameList[i].given))) {\n\t                    institutions += 1;\n\t                    last_is_person = false;\n\t                } else {\n\t                    persons += 1;\n\t                    last_is_person = true;\n\t                }\n\t            }\n\t            if (persons > 1) {\n\t                return true;\n\t            } else if (institutions > 1) {\n\t                return true;\n\t            } else if (institutions && last_is_person) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t    this.tests.push(func);\n\t};\n\tCSL.Attributes[\"@locale\"] = function (state, arg) {\n\t    var func, ret, len, pos, variable, myitem, langspec, lang, lst, i, ilen, fallback;\n\t    var locale_default = state.opt[\"default-locale\"][0];\n\t    if (this.name === \"layout\") {\n\t        this.locale_raw = arg;\n\t        if (this.tokentype === CSL.START) {\n\t            var locales = arg.split(/\\s+/);\n\t            var sort_locale = {};\n\t            var localeMaster = CSL.localeResolve(locales[0], locale_default);\n\t            if (localeMaster.generic) {\n\t                sort_locale[localeMaster.generic] = localeMaster.best;\n\t            } else {\n\t                sort_locale[localeMaster.best] = localeMaster.best;\n\t            }\n\t            for (var i=1,ilen=locales.length;i<ilen;i+=1) {\n\t                var localeServant = CSL.localeResolve(locales[i], locale_default);\n\t                if (localeServant.generic) {\n\t                    sort_locale[localeServant.generic] = localeMaster.best;\n\t                } else {\n\t                    sort_locale[localeServant.best] = localeMaster.best;\n\t                }\n\t            }\n\t            state[state.build.area].opt.sort_locales.push(sort_locale);\n\t        }\n\t        state.opt.has_layout_locale = true;\n\t    } else {\n\t        lst = arg.split(/\\s+/);\n\t        var locale_bares = [];\n\t        for (i = 0, ilen = lst.length; i < ilen; i += 1) {\n\t            lang = lst[i];\n\t            langspec = CSL.localeResolve(lang, locale_default);\n\t            if (lst[i].length === 2) {\n\t                locale_bares.push(langspec.bare);\n\t            }\n\t            state.localeConfigure(langspec, true);\n\t            lst[i] = langspec;\n\t        }\n\t        var locale_list = lst.slice();\n\t        var maketest = function (locale_list, locale_default,locale_bares) {\n\t            return function (Item, item) {\n\t                var key, res;\n\t                ret = [];\n\t                res = false;\n\t                var langspec = false;\n\t                var lang;\n\t                if (!Item.language) {\n\t                    lang = locale_default;\n\t                } else {\n\t                    lang = Item.language;\n\t                }\n\t                langspec = CSL.localeResolve(lang, locale_default);\n\t                for (i = 0, ilen = locale_list.length; i < ilen; i += 1) {\n\t                    if (langspec.best === locale_list[i].best) {\n\t                        res = true;\n\t                        break;\n\t                    }\n\t                }\n\t                if (!res && locale_bares.indexOf(langspec.bare) > -1) {\n\t                    res = true;\n\t                }\n\t                return res;\n\t            }\n\t        }\n\t        this.tests.push(maketest(locale_list,locale_default,locale_bares));\n\t    }\n\t};\n\tCSL.Attributes[\"@authority-residue\"] = function (state, arg) {\n\t    var maketest = function () {\n\t        var succeed = (arg === \"true\") ? true : false;\n\t        return function(Item, item) {\n\t            if (!Item.authority || !Item.authority[0] || !Item.authority[0].family) return !succeed;\n\t            var varLen = Item.authority[0].family.split(\"|\").length;\n\t            var stopLast = state.tmp.authority_stop_last;\n\t            if ((varLen + stopLast) > 0) {\n\t                return succeed;\n\t            } else {\n\t                return !succeed;\n\t            }\n\t        }\n\t    }\n\t    this.tests.push(maketest());\n\t}\n\tCSL.Attributes[\"@locale-internal\"] = function (state, arg) {\n\t    var func, ret, len, pos, variable, myitem, langspec, lang, lst, i, ilen, fallback;\n\t        lst = arg.split(/\\s+/);\n\t        this.locale_bares = [];\n\t        for (i = 0, ilen = lst.length; i < ilen; i += 1) {\n\t            lang = lst[i];\n\t            langspec = CSL.localeResolve(lang, state.opt[\"default-locale\"][0]);\n\t            if (lst[i].length === 2) {\n\t                this.locale_bares.push(langspec.bare);\n\t            }\n\t            state.localeConfigure(langspec);\n\t            lst[i] = langspec;\n\t        }\n\t        this.locale_default = state.opt[\"default-locale\"][0];\n\t        this.locale = lst[0].best;\n\t        this.locale_list = lst.slice();\n\t        var maketest = function (me) {\n\t            return function (Item, item) {\n\t                var key, res;\n\t                ret = [];\n\t                res = false;\n\t                var langspec = false;\n\t                if (Item.language) {\n\t                    lang = Item.language;\n\t                    langspec = CSL.localeResolve(lang, state.opt[\"default-locale\"][0]);\n\t                    if (langspec.best === state.opt[\"default-locale\"][0]) {\n\t                        langspec = false;\n\t                    }\n\t                }\n\t                if (langspec) {\n\t                    for (i = 0, ilen = me.locale_list.length; i < ilen; i += 1) {\n\t                        if (langspec.best === me.locale_list[i].best) {\n\t                            state.opt.lang = me.locale;\n\t                            state.tmp.last_cite_locale = me.locale;\n\t                            state.output.openLevel(\"empty\");\n\t                            state.output.current.value().new_locale = me.locale;\n\t                            res = true;\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!res && me.locale_bares.indexOf(langspec.bare) > -1) {\n\t                        state.opt.lang = me.locale;\n\t                        state.tmp.last_cite_locale = me.locale;\n\t                        state.output.openLevel(\"empty\");\n\t                        state.output.current.value().new_locale = me.locale;\n\t                        res = true;\n\t                    }\n\t                }\n\t                return res;\n\t            }\n\t        }\n\t        var me = this;\n\t        this.tests.push(maketest(me));\n\t}\n\tCSL.Attributes[\"@is-parallel\"] = function (state, arg) {\n\t    var values = arg.split(\" \");\n\t    for (var i = 0, ilen = values.length; i < ilen; i += 1) {\n\t        if (values[i] === \"true\") {\n\t            values[i] = true;\n\t        } else if (values[i] === \"false\") {\n\t            values[i] = false;\n\t        }\n\t    }\n\t    this.strings.set_parallel_condition = values;\n\t};\n\tCSL.Attributes[\"@require\"] = function (state, arg) {\n\t    this.strings.require = arg;\n\t}\n\tCSL.Attributes[\"@reject\"] = function (state, arg) {\n\t    this.strings.reject = arg;\n\t}\n\tCSL.Attributes[\"@gender\"] = function (state, arg) {\n\t    this.gender = arg;\n\t}\n\tCSL.Attributes[\"@cslid\"] = function (state, arg) {\n\t    this.cslid = parseInt(arg, 10);\n\t};\n\tCSL.Attributes[\"@label-form\"] = function (state, arg) {\n\t    this.strings.label_form_override = arg;\n\t};\n\tCSL.Attributes[\"@part-separator\"] = function (state, arg) {\n\t    this.strings[\"part-separator\"] = arg;\n\t};\n\tCSL.Attributes[\"@leading-noise-words\"] = function (state, arg) {\n\t    this[\"leading-noise-words\"] = arg;\n\t};\n\tCSL.Attributes[\"@name-never-short\"] = function (state, arg) {\n\t    this[\"name-never-short\"] = arg;\n\t};\n\tCSL.Attributes[\"@class\"] = function (state, arg) {\n\t    state.opt[\"class\"] = arg;\n\t};\n\tCSL.Attributes[\"@version\"] = function (state, arg) {\n\t    state.opt.version = arg;\n\t};\n\tCSL.Attributes[\"@value\"] = function (state, arg) {\n\t    this.strings.value = arg;\n\t};\n\tCSL.Attributes[\"@name\"] = function (state, arg) {\n\t    this.strings.name = arg;\n\t};\n\tCSL.Attributes[\"@form\"] = function (state, arg) {\n\t    this.strings.form = arg;\n\t};\n\tCSL.Attributes[\"@date-parts\"] = function (state, arg) {\n\t    this.strings[\"date-parts\"] = arg;\n\t};\n\tCSL.Attributes[\"@range-delimiter\"] = function (state, arg) {\n\t    this.strings[\"range-delimiter\"] = arg;\n\t};\n\tCSL.Attributes[\"@macro\"] = function (state, arg) {\n\t    this.postponed_macro = arg;\n\t};\n\tCSL.Attributes[\"@term\"] = function (state, arg) {\n\t    if (arg === \"sub verbo\") {\n\t        this.strings.term = \"sub-verbo\";\n\t    } else {\n\t        this.strings.term = arg;\n\t    }\n\t};\n\tCSL.Attributes[\"@xmlns\"] = function (state, arg) {};\n\tCSL.Attributes[\"@lang\"] = function (state, arg) {\n\t    if (arg) {\n\t        state.build.lang = arg;\n\t    }\n\t};\n\tCSL.Attributes[\"@lingo\"] = function (state, arg) {\n\t};\n\tCSL.Attributes[\"@macro-has-date\"] = function (state, arg) {\n\t    this[\"macro-has-date\"] = true;\n\t};\n\tCSL.Attributes[\"@suffix\"] = function (state, arg) {\n\t    this.strings.suffix = arg;\n\t};\n\tCSL.Attributes[\"@prefix\"] = function (state, arg) {\n\t    this.strings.prefix = arg;\n\t};\n\tCSL.Attributes[\"@delimiter\"] = function (state, arg) {\n\t    this.strings.delimiter = arg;\n\t};\n\tCSL.Attributes[\"@match\"] = function (state, arg) {\n\t    this.match = arg;\n\t};\n\tCSL.Attributes[\"@names-min\"] = function (state, arg) {\n\t    var val = parseInt(arg, 10);\n\t    if (state[state.build.area].opt.max_number_of_names < val) {\n\t        state[state.build.area].opt.max_number_of_names = val;\n\t    }\n\t    this.strings[\"et-al-min\"] = val;\n\t};\n\tCSL.Attributes[\"@names-use-first\"] = function (state, arg) {\n\t    this.strings[\"et-al-use-first\"] = parseInt(arg, 10);\n\t};\n\tCSL.Attributes[\"@names-use-last\"] = function (state, arg) {\n\t    if (arg === \"true\") {\n\t        this.strings[\"et-al-use-last\"] = true;\n\t    } else {\n\t        this.strings[\"et-al-use-last\"] = false;\n\t    }\n\t};\n\tCSL.Attributes[\"@sort\"] = function (state, arg) {\n\t    if (arg === \"descending\") {\n\t        this.strings.sort_direction = CSL.DESCENDING;\n\t    }\n\t};\n\tCSL.Attributes[\"@plural\"] = function (state, arg) {\n\t    if (\"always\" === arg || \"true\" === arg) {\n\t        this.strings.plural = 1;\n\t    } else if (\"never\" === arg || \"false\" === arg) {\n\t        this.strings.plural = 0;\n\t    } else if (\"contextual\" === arg) {\n\t        this.strings.plural = false;\n\t    }\n\t};\n\tCSL.Attributes[\"@has-publisher-and-publisher-place\"] = function (state, arg) {\n\t    this.strings[\"has-publisher-and-publisher-place\"] = true;\n\t};\n\tCSL.Attributes[\"@publisher-delimiter-precedes-last\"] = function (state, arg) {\n\t    this.strings[\"publisher-delimiter-precedes-last\"] = arg;\n\t};\n\tCSL.Attributes[\"@publisher-delimiter\"] = function (state, arg) {\n\t    this.strings[\"publisher-delimiter\"] = arg;\n\t};\n\tCSL.Attributes[\"@publisher-and\"] = function (state, arg) {\n\t    this.strings[\"publisher-and\"] = arg;\n\t};\n\tCSL.Attributes[\"@newdate\"] = function (state, arg) {\n\t};\n\tCSL.Attributes[\"@givenname-disambiguation-rule\"] = function (state, arg) {\n\t    if (CSL.GIVENNAME_DISAMBIGUATION_RULES.indexOf(arg) > -1) {\n\t        state.citation.opt[\"givenname-disambiguation-rule\"] = arg;\n\t    }\n\t};\n\tCSL.Attributes[\"@collapse\"] = function (state, arg) {\n\t    if (arg) {\n\t        state[this.name].opt.collapse = arg;\n\t    }\n\t};\n\tCSL.Attributes[\"@cite-group-delimiter\"] = function (state, arg) {\n\t    if (arg) {\n\t        state[state.tmp.area].opt.cite_group_delimiter = arg;\n\t    }\n\t};\n\tCSL.Attributes[\"@names-delimiter\"] = function (state, arg) {\n\t    state.setOpt(this, \"names-delimiter\", arg);\n\t};\n\tCSL.Attributes[\"@name-form\"] = function (state, arg) {\n\t    state.setOpt(this, \"name-form\", arg);\n\t};\n\tCSL.Attributes[\"@subgroup-delimiter\"] = function (state, arg) {\n\t    this.strings[\"subgroup-delimiter\"] = arg;\n\t};\n\tCSL.Attributes[\"@subgroup-delimiter-precedes-last\"] = function (state, arg) {\n\t    this.strings[\"subgroup-delimiter-precedes-last\"] = arg;\n\t};\n\tCSL.Attributes[\"@name-delimiter\"] = function (state, arg) {\n\t    state.setOpt(this, \"name-delimiter\", arg);\n\t};\n\tCSL.Attributes[\"@et-al-min\"] = function (state, arg) {\n\t    var val = parseInt(arg, 10);\n\t    if (state[state.build.area].opt.max_number_of_names < val) {\n\t        state[state.build.area].opt.max_number_of_names = val;\n\t    }\n\t    state.setOpt(this, \"et-al-min\", val);\n\t};\n\tCSL.Attributes[\"@et-al-use-first\"] = function (state, arg) {\n\t    state.setOpt(this, \"et-al-use-first\", parseInt(arg, 10));\n\t};\n\tCSL.Attributes[\"@et-al-use-last\"] = function (state, arg) {\n\t    if (arg === \"true\") {\n\t        state.setOpt(this, \"et-al-use-last\", true);\n\t    } else {\n\t        state.setOpt(this, \"et-al-use-last\", false);\n\t    }\n\t};\n\tCSL.Attributes[\"@et-al-subsequent-min\"] = function (state, arg) {\n\t    var val = parseInt(arg, 10);\n\t    if (state[state.build.area].opt.max_number_of_names < val) {\n\t        state[state.build.area].opt.max_number_of_names = val;\n\t    }\n\t    state.setOpt(this, \"et-al-subsequent-min\", val);\n\t};\n\tCSL.Attributes[\"@et-al-subsequent-use-first\"] = function (state, arg) {\n\t    state.setOpt(this, \"et-al-subsequent-use-first\", parseInt(arg, 10));\n\t};\n\tCSL.Attributes[\"@suppress-min\"] = function (state, arg) {\n\t    this.strings[\"suppress-min\"] = parseInt(arg, 10);\n\t};\n\tCSL.Attributes[\"@suppress-max\"] = function (state, arg) {\n\t    this.strings[\"suppress-max\"] = parseInt(arg, 10);\n\t};\n\tCSL.Attributes[\"@and\"] = function (state, arg) {\n\t    state.setOpt(this, \"and\", arg);\n\t};\n\tCSL.Attributes[\"@delimiter-precedes-last\"] = function (state, arg) {\n\t    state.setOpt(this, \"delimiter-precedes-last\", arg);\n\t};\n\tCSL.Attributes[\"@delimiter-precedes-et-al\"] = function (state, arg) {\n\t    state.setOpt(this, \"delimiter-precedes-et-al\", arg);\n\t};\n\tCSL.Attributes[\"@initialize-with\"] = function (state, arg) {\n\t    state.setOpt(this, \"initialize-with\", arg);\n\t};\n\tCSL.Attributes[\"@initialize\"] = function (state, arg) {\n\t    if (arg === \"false\") {\n\t        state.setOpt(this, \"initialize\", false);\n\t    }\n\t};\n\tCSL.Attributes[\"@name-as-reverse-order\"] = function (state, arg) {\n\t    this[\"name-as-reverse-order\"] = arg;\n\t};\n\tCSL.Attributes[\"@name-as-sort-order\"] = function (state, arg) {\n\t    if (this.name === \"style-options\") {\n\t        this[\"name-as-sort-order\"] = arg;\n\t    } else {\n\t        state.setOpt(this, \"name-as-sort-order\", arg);\n\t    }\n\t};\n\tCSL.Attributes[\"@sort-separator\"] = function (state, arg) {\n\t    state.setOpt(this, \"sort-separator\", arg);\n\t};\n\tCSL.Attributes[\"@year-suffix-delimiter\"] = function (state, arg) {\n\t    state[this.name].opt[\"year-suffix-delimiter\"] = arg;\n\t};\n\tCSL.Attributes[\"@after-collapse-delimiter\"] = function (state, arg) {\n\t    state[this.name].opt[\"after-collapse-delimiter\"] = arg;\n\t};\n\tCSL.Attributes[\"@subsequent-author-substitute\"] = function (state, arg) {\n\t    state[this.name].opt[\"subsequent-author-substitute\"] = arg;\n\t};\n\tCSL.Attributes[\"@subsequent-author-substitute-rule\"] = function (state, arg) {\n\t    state[this.name].opt[\"subsequent-author-substitute-rule\"] = arg;\n\t};\n\tCSL.Attributes[\"@disambiguate-add-names\"] = function (state, arg) {\n\t    if (arg === \"true\") {\n\t        state.opt[\"disambiguate-add-names\"] = true;\n\t    }\n\t};\n\tCSL.Attributes[\"@disambiguate-add-givenname\"] = function (state, arg) {\n\t    if (arg === \"true\") {\n\t        state.opt[\"disambiguate-add-givenname\"] = true;\n\t    }\n\t};\n\tCSL.Attributes[\"@disambiguate-add-year-suffix\"] = function (state, arg) {\n\t    if (arg === \"true\" && state.opt.xclass !== \"numeric\") {\n\t        state.opt[\"disambiguate-add-year-suffix\"] = true;\n\t    }\n\t};\n\tCSL.Attributes[\"@second-field-align\"] = function (state, arg) {\n\t    if (arg === \"flush\" || arg === \"margin\") {\n\t        state[this.name].opt[\"second-field-align\"] = arg;\n\t    }\n\t};\n\tCSL.Attributes[\"@hanging-indent\"] = function (state, arg) {\n\t    if (arg === \"true\") {\n\t        state[this.name].opt.hangingindent = true;\n\t    }\n\t};\n\tCSL.Attributes[\"@line-spacing\"] = function (state, arg) {\n\t    if (arg && arg.match(/^[.0-9]+$/)) {\n\t        state[this.name].opt[\"line-spacing\"] = parseFloat(arg, 10);\n\t    }\n\t};\n\tCSL.Attributes[\"@entry-spacing\"] = function (state, arg) {\n\t    if (arg && arg.match(/^[.0-9]+$/)) {\n\t        state[this.name].opt[\"entry-spacing\"] = parseFloat(arg, 10);\n\t    }\n\t};\n\tCSL.Attributes[\"@near-note-distance\"] = function (state, arg) {\n\t    state[this.name].opt[\"near-note-distance\"] = parseInt(arg, 10);\n\t};\n\tCSL.Attributes[\"@text-case\"] = function (state, arg) {\n\t    var func = function (state, Item) {\n\t        if (arg === \"normal\") {\n\t            this.text_case_normal = true;\n\t        } else {\n\t            this.strings[\"text-case\"] = arg;\n\t            if (arg === \"title\") {\n\t                var m = false;\n\t                var default_locale = state.opt[\"default-locale\"][0].slice(0, 2);\n\t                if (Item.jurisdiction) {\n\t                    this.strings[\"text-case\"] = \"passthrough\";\n\t                }\n\t            }\n\t        }\n\t    };\n\t    this.execs.push(func);\n\t};\n\tCSL.Attributes[\"@page-range-format\"] = function (state, arg) {\n\t    state.opt[\"page-range-format\"] = arg;\n\t};\n\tCSL.Attributes[\"@year-range-format\"] = function (state, arg) {\n\t    state.opt[\"year-range-format\"] = arg;\n\t};\n\tCSL.Attributes[\"@default-locale\"] = function (state, arg) {\n\t    if (this.name === 'style') {\n\t        var lst, len, pos, m, ret;\n\t        m = arg.match(/-x-(sort|translit|translat)-/g);\n\t        if (m) {\n\t            for (pos = 0, len = m.length; pos < len; pos += 1) {\n\t                m[pos] = m[pos].replace(/^-x-/, \"\").replace(/-$/, \"\");\n\t            }\n\t        }\n\t        lst = arg.split(/-x-(?:sort|translit|translat)-/);\n\t        ret = [lst[0]];\n\t        for (pos = 1, len = lst.length; pos < len; pos += 1) {\n\t            ret.push(m[pos - 1]);\n\t            ret.push(lst[pos]);\n\t        }\n\t        lst = ret.slice();\n\t        len = lst.length;\n\t        for (pos = 1; pos < len; pos += 2) {\n\t            state.opt[(\"locale-\" + lst[pos])].push(lst[(pos + 1)].replace(/^\\s*/g, \"\").replace(/\\s*$/g, \"\"));\n\t        }\n\t        if (lst.length) {\n\t            state.opt[\"default-locale\"] = lst.slice(0, 1);\n\t        } else {\n\t            state.opt[\"default-locale\"] = [\"en\"];\n\t        }\n\t    } else if (arg === \"true\") {\n\t        this.default_locale = true;\n\t    }\n\t};\n\tCSL.Attributes[\"@default-locale-sort\"] = function (state, arg) {\n\t    var lst, len, pos, m, ret;\n\t    state.opt[\"default-locale-sort\"] = arg;\n\t};\n\tCSL.Attributes[\"@demote-non-dropping-particle\"] = function (state, arg) {\n\t    state.opt[\"demote-non-dropping-particle\"] = arg;\n\t};\n\tCSL.Attributes[\"@initialize-with-hyphen\"] = function (state, arg) {\n\t    if (arg === \"false\") {\n\t        state.opt[\"initialize-with-hyphen\"] = false;\n\t    }\n\t};\n\tCSL.Attributes[\"@institution-parts\"] = function (state, arg) {\n\t    this.strings[\"institution-parts\"] = arg;\n\t};\n\tCSL.Attributes[\"@if-short\"] = function (state, arg) {\n\t    if (arg === \"true\") {\n\t        this.strings[\"if-short\"] = true;\n\t    }\n\t};\n\tCSL.Attributes[\"@substitute-use-first\"] = function (state, arg) {\n\t    this.strings[\"substitute-use-first\"] = parseInt(arg, 10);\n\t};\n\tCSL.Attributes[\"@use-first\"] = function (state, arg) {\n\t    this.strings[\"use-first\"] = parseInt(arg, 10);\n\t};\n\tCSL.Attributes[\"@stop-last\"] = function (state, arg) {\n\t    this.strings[\"stop-last\"] = parseInt(arg, 10) * -1;\n\t};\n\tCSL.Attributes[\"@use-last\"] = function (state, arg) {\n\t    this.strings[\"use-last\"] = parseInt(arg, 10);\n\t};\n\tCSL.Attributes[\"@reverse-order\"] = function (state, arg) {\n\t    if (\"true\" === arg) {\n\t        this.strings[\"reverse-order\"] = true;\n\t    }\n\t};\n\tCSL.Attributes[\"@display\"] = function (state, arg) {\n\t    if (state.bibliography.tokens.length === 2) {\n\t        state.opt.using_display = true;\n\t    }\n\t    this.strings.cls = arg;\n\t};\n\tCSL.Stack = function (val, literal) {\n\t    this.mystack = [];\n\t    if (literal || val) {\n\t        this.mystack.push(val);\n\t    }\n\t    this.tip = this.mystack[0];\n\t};\n\tCSL.Stack.prototype.push = function (val, literal) {\n\t    if (literal || val) {\n\t        this.mystack.push(val);\n\t    } else {\n\t        this.mystack.push(\"\");\n\t    }\n\t    this.tip = this.mystack[this.mystack.length - 1];\n\t};\n\tCSL.Stack.prototype.clear = function () {\n\t    this.mystack = [];\n\t    this.tip = {};\n\t};\n\tCSL.Stack.prototype.replace = function (val, literal) {\n\t    if (this.mystack.length === 0) {\n\t        throw \"Internal CSL processor error: attempt to replace nonexistent stack item with \" + val;\n\t    }\n\t    if (literal || val) {\n\t        this.mystack[(this.mystack.length - 1)] = val;\n\t    } else {\n\t        this.mystack[(this.mystack.length - 1)] = \"\";\n\t    }\n\t    this.tip = this.mystack[this.mystack.length - 1];\n\t};\n\tCSL.Stack.prototype.pop = function () {\n\t    var ret = this.mystack.pop();\n\t    if (this.mystack.length) {\n\t        this.tip = this.mystack[this.mystack.length - 1];\n\t    } else {\n\t        this.tip = {};\n\t    }\n\t    return ret;\n\t};\n\tCSL.Stack.prototype.value = function () {\n\t    return this.mystack.slice(-1)[0];\n\t};\n\tCSL.Stack.prototype.length = function () {\n\t    return this.mystack.length;\n\t};\n\tCSL.Parallel = function (state) {\n\t    this.state = state;\n\t    this.sets = new CSL.Stack([]);\n\t    this.try_cite = true;\n\t    this.use_parallels = false;\n\t    this.midVars = [\"section\", \"volume\", \"container-title\", \"collection-number\", \"issue\", \"page-first\", \"page\", \"number\"];\n\t    this.ignoreVarsLawGeneral = [\"first-reference-note-number\", \"locator\", \"label\",\"page-first\",\"page\",\"genre\"];\n\t    this.ignoreVarsLawProceduralHistory = [\"issued\", \"first-reference-note-number\", \"locator\", \"label\",\"page-first\",\"page\",\"genre\",\"jurisdiction\"];\n\t    this.ignoreVarsOrders = [\"first-reference-note-number\"];\n\t    this.ignoreVarsOther = [\"first-reference-note-number\", \"locator\", \"label\",\"section\",\"page-first\",\"page\"];\n\t};\n\tCSL.Parallel.prototype.isMid = function (variable) {\n\t    return (this.midVars.indexOf(variable) > -1);\n\t};\n\tCSL.Parallel.prototype.StartCitation = function (sortedItems, out) {\n\t    this.parallel_conditional_blobs_list = [];\n\t    if (this.use_parallels) {\n\t        this.sortedItems = sortedItems;\n\t        this.sortedItemsPos = -1;\n\t        this.sets.clear();\n\t        this.sets.push([]);\n\t        this.in_series = true;\n\t        this.delim_counter = 0;\n\t        this.delim_pointers = [];\n\t        if (out) {\n\t            this.out = out;\n\t        } else {\n\t            this.out = this.state.output.queue;\n\t        }\n\t        this.master_was_neutral_cite = true;\n\t    }\n\t};\n\tCSL.Parallel.prototype.StartCite = function (Item, item, prevItemID) {\n\t    var position, len, pos, x, curr, master, last_id, prev_locator, curr_locator, is_master, parallel;\n\t    if (this.use_parallels) {\n\t        if (this.sets.value().length && this.sets.value()[0].itemId == Item.id) {\n\t            this.ComposeSet();\n\t        }\n\t        this.sortedItemsPos += 1;\n\t        if (item) {\n\t            position = item.position;\n\t        }\n\t        this.try_cite = true;\n\t        var has_required_var = false;\n\t        for (var i = 0, ilen = CSL.PARALLEL_MATCH_VARS.length; i < ilen; i += 1) {\n\t            if (Item[CSL.PARALLEL_MATCH_VARS[i]]) {\n\t                has_required_var = true;\n\t                break;\n\t            }\n\t        }\n\t        var basics_ok = true;\n\t        var last_cite = this.sets.value().slice(-1)[0];\n\t        if (last_cite && last_cite.Item) {\n\t            var lastJuris = last_cite.Item.jurisdiction ? last_cite.Item.jurisdiction.split(\":\")[0] : \"\";\n\t            var thisJuris = Item.jurisdiction ? Item.jurisdiction.split(\":\")[0] : \"\";\n\t            if (last_cite.Item.title !== Item.title) {\n\t                basics_ok = false;\n\t            } else if (lastJuris !== thisJuris) {\n\t                basics_ok = false;\n\t            } else if (last_cite.Item.type !== Item.type) {\n\t                basics_ok = false;\n\t            } else if ([\"article-journal\",\"article-magazine\"].indexOf(Item.type) > -1) {\n\t                if (!this.state.opt.development_extensions.handle_parallel_articles\n\t                   || last_cite.Item[\"container-title\"] !== Item[\"container-title\"]) {\n\t                    basics_ok = false;\n\t                }\n\t            }\n\t        }\n\t        if (!basics_ok || !has_required_var || CSL.PARALLEL_TYPES.indexOf(Item.type) === -1) {\n\t            this.try_cite = true;\n\t            if (this.in_series) {\n\t                this.in_series = false;\n\t            }\n\t        }\n\t        this.cite = {};\n\t        this.cite.front = [];\n\t        this.cite.mid = [];\n\t        this.cite.back = [];\n\t        this.cite.front_collapse = {};\n\t        this.cite.back_forceme = [];\n\t        this.cite.position = position;\n\t        this.cite.Item = Item;\n\t        this.cite.itemId = \"\" + Item.id;\n\t        this.cite.prevItemID = \"\" + prevItemID;\n\t        this.target = \"front\";\n\t        if ([\"treaty\"].indexOf(Item.type) > -1) {\n\t            this.ignoreVars = this.ignoreVarsOrders;\n\t        } else if ([\"article-journal\",\"article-magazine\"].indexOf(Item.type) > -1) {\n\t            this.ignoreVars = this.ignoreVarsOther;\n\t        } else if (item && item.prefix) {\n\t            this.ignoreVars = this.ignoreVarsLawProceduralHistory;\n\t            this.cite.useProceduralHistory = true;\n\t            var prev = this.sets.value()[(this.sets.value().length - 1)];\n\t            if (prev && prev.back) {\n\t                for (var i=prev.back.length-1;i>-1;i+=-1) {\n\t                    if (prev.back[i] && prev[prev.back[i]]) {\n\t                        delete prev[prev.back[i]];\n\t                    }\n\t                }\n\t            }\n\t        } else {\n\t            this.ignoreVars = this.ignoreVarsLawGeneral;\n\t        }\n\t        if (this.sortedItems && this.sortedItemsPos > 0 && this.sortedItemsPos < this.sortedItems.length) {\n\t            curr = this.sortedItems[this.sortedItemsPos][1];\n\t            last_id = \"\" + this.sortedItems[(this.sortedItemsPos - 1)][1].id;\n\t            master = this.state.registry.registry[last_id].parallel;\n\t            prev_locator = false;\n\t            if (master == curr.id) {\n\t                len = this.sortedItemsPos - 1;\n\t                for (pos = len; pos > -1; pos += -1) {\n\t                    if (this.sortedItems[pos][1].id == Item.id) {\n\t                        prev_locator = this.sortedItems[pos][1].locator;\n\t                        break;\n\t                    }\n\t                }\n\t                curr_locator = this.sortedItems[this.sortedItemsPos][1].locator;\n\t                if (!prev_locator && curr_locator) {\n\t                    curr.position = CSL.POSITION_IBID_WITH_LOCATOR;\n\t                } else if (curr_locator === prev_locator) {\n\t                    curr.position = CSL.POSITION_IBID;\n\t                } else {\n\t                    curr.position = CSL.POSITION_IBID_WITH_LOCATOR;\n\t                }\n\t            }\n\t        } else if (this.state.registry.registry[Item.id]) {\n\t            this.state.registry.registry[Item.id].parallel = false;\n\t        } else {\n\t            this.try_cite = false;\n\t            this.force_collapse = false;\n\t            return;\n\t        }\n\t        this.force_collapse = false;\n\t        if (this.state.registry.registry[Item.id].parallel) {\n\t            this.force_collapse = true;\n\t        }\n\t    }\n\t};\n\tCSL.Parallel.prototype.StartVariable = function (variable, real_variable) {\n\t    if (this.use_parallels && (this.try_cite || this.force_collapse)) {\n\t        if (variable === \"names\") {\n\t            this.variable = variable + \":\" + this.target;\n\t        } else {\n\t            this.variable = variable;\n\t        }\n\t        if (this.ignoreVars.indexOf(variable) > -1) {\n\t            return;\n\t        }\n\t        if (variable === \"container-title\" && this.sets.value().length === 0) {\n\t            this.master_was_neutral_cite = false;\n\t        }\n\t        this.data = {};\n\t        this.data.value = \"\";\n\t        this.data.blobs = [];\n\t        var is_mid = this.isMid(variable);\n\t        if (real_variable === \"authority\" && this.variable === \"names:front\" && this.sets.value().length) {\n\t            var prev = this.sets.value()[(this.sets.value().length - 1)].Item;\n\t            var thisAuthority = false;\n\t            if (this.cite.Item.authority && this.cite.Item.authority.length) {\n\t                thisAuthority = this.cite.Item.authority[0].literal;\n\t            }\n\t            var thatAuthority = false;\n\t            if (prev.authority && prev.authority.length) {\n\t                thatAuthority = prev.authority[0].literal;\n\t            }\n\t            if (thisAuthority !== thatAuthority) {\n\t                this.try_cite = true;\n\t                this.in_series = false;\n\t            }\n\t         } else if (this.target === \"front\" && is_mid) {\n\t            this.target = \"mid\";\n\t        } else if (this.target === \"mid\" && !is_mid && this.cite.Item.title && variable !== \"names\") {\n\t            this.target = \"back\";\n\t        } else if (this.target === \"back\" && is_mid) {\n\t            this.try_cite = true;\n\t            this.in_series = false;\n\t        }\n\t        if (variable === \"number\") {\n\t            this.cite.front.push(this.variable);\n\t        } else if (CSL.PARALLEL_COLLAPSING_MID_VARSET.indexOf(variable) > -1) {\n\t            if ([\"article-journal\",\"article-magazine\"].indexOf(this.cite.Item.type) > -1) {\n\t                this.cite.mid.push(this.variable);\n\t            } else {\n\t                this.cite.front.push(this.variable);\n\t            }\n\t        } else {\n\t            this.cite[this.target].push(this.variable);\n\t        }\n\t   }\n\t};\n\tCSL.Parallel.prototype.AppendBlobPointer = function (blob) {\n\t    if (this.use_parallels) {\n\t        if (this.ignoreVars.indexOf(this.variable) > -1) {\n\t            return;\n\t        }\n\t        if (this.use_parallels && (this.force_collapse || this.try_cite)) {\n\t            if ([\"article-journal\", \"article-magazine\"].indexOf(this.cite.Item.type) > -1) {\n\t                if ([\"volume\",\"page\",\"page-first\",\"issue\"].indexOf(this.variable) > -1) {\n\t                    return;\n\t                }\n\t                if (\"container-title\" === this.variable && this.cite.mid.length > 1) {\n\t                    return;\n\t                }\n\t            }\n\t            if (this.variable && (this.try_cite || this.force_collapse) && blob && blob.blobs) {\n\t                if (!(this.cite.useProceduralHistory && this.target === \"back\")) {\n\t                    this.data.blobs.push([blob, blob.blobs.length]);\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Parallel.prototype.AppendToVariable = function (str, varname) {\n\t    if (this.use_parallels) {\n\t        if (this.ignoreVars.indexOf(this.variable) > -1) {\n\t            return;\n\t        }\n\t        if (this.try_cite || this.force_collapse) {\n\t            if (this.target !== \"back\" || true) {\n\t                this.data.value += \"::\" + str;\n\t            } else {\n\t                var prev = this.sets.value()[(this.sets.value().length - 1)];\n\t                if (prev) {\n\t                    if (prev[this.variable]) {\n\t                        if (prev[this.variable].value) {\n\t                            this.data.value += \"::\" + str;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Parallel.prototype.CloseVariable = function () {\n\t    if (this.use_parallels) {\n\t        if (this.ignoreVars.indexOf(this.variable) > -1) {\n\t            return;\n\t        }\n\t        if (this.try_cite || this.force_collapse) {\n\t            this.cite[this.variable] = this.data;\n\t            if (this.sets.value().length > 0) {\n\t                var prev = this.sets.value()[(this.sets.value().length - 1)];\n\t                if (this.target === \"front\" && this.variable === \"issued\") {\n\t                    if (this.data.value && this.master_was_neutral_cite) {\n\t                        this.target = \"mid\";\n\t                    }\n\t                }\n\t                if (this.target === \"front\") {\n\t                    if ((prev[this.variable] || this.data.value) && (!prev[this.variable] || this.data.value !== prev[this.variable].value)) {\n\t                        if (\"issued\" !== this.variable) {\n\t                            this.in_series = false;\n\t                        }\n\t                    }\n\t                } else if (this.target === \"mid\") {\n\t                    if (CSL.PARALLEL_COLLAPSING_MID_VARSET.indexOf(this.variable) > -1) {\n\t                        if (prev[this.variable]) {\n\t                            if (prev[this.variable].value === this.data.value) {\n\t                                this.cite.front_collapse[this.variable] = true;\n\t                            } else {\n\t                                this.cite.front_collapse[this.variable] = false;\n\t                            }\n\t                        } else {\n\t                            this.cite.front_collapse[this.variable] = false;\n\t                        }\n\t                    }\n\t                } else if (this.target === \"back\") {\n\t                    if (prev[this.variable]) {\n\t                        if (this.data.value !== prev[this.variable].value \n\t                            && this.sets.value().slice(-1)[0].back_forceme.indexOf(this.variable) === -1) {\n\t                            this.in_series = false;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        this.variable = false;\n\t    }\n\t};\n\tCSL.Parallel.prototype.CloseCite = function () {\n\t    var x, pos, len, has_issued, use_journal_info, volume_pos, container_title_pos, section_pos;\n\t    if (this.use_parallels && (this.force_collapse || this.try_cite)) {\n\t        use_journal_info = false;\n\t        if (!this.cite.front_collapse[\"container-title\"]) {\n\t            use_journal_info = true;\n\t        }\n\t        if (this.cite.front_collapse.volume === false) {\n\t            use_journal_info = true;\n\t        }\n\t        if (this.cite.front_collapse[\"collection-number\"] === false) {\n\t            use_journal_info = true;\n\t        }\n\t        if (this.cite.front_collapse.section === false) {\n\t            use_journal_info = true;\n\t        }\n\t        if (use_journal_info) {\n\t            this.cite.use_journal_info = true;\n\t            section_pos = this.cite.front.indexOf(\"section\");\n\t            if (section_pos > -1) {\n\t                this.cite.front = this.cite.front.slice(0,section_pos).concat(this.cite.front.slice(section_pos + 1));\n\t            }\n\t            volume_pos = this.cite.front.indexOf(\"volume\");\n\t            if (volume_pos > -1) {\n\t                this.cite.front = this.cite.front.slice(0,volume_pos).concat(this.cite.front.slice(volume_pos + 1));\n\t            }\n\t            container_title_pos = this.cite.front.indexOf(\"container-title\");\n\t            if (container_title_pos > -1) {\n\t                this.cite.front = this.cite.front.slice(0,container_title_pos).concat(this.cite.front.slice(container_title_pos + 1));\n\t            }\n\t            collection_number_pos = this.cite.front.indexOf(\"collection-number\");\n\t            if (collection_number_pos > -1) {\n\t                this.cite.front = this.cite.front.slice(0,collection_number_pos).concat(this.cite.front.slice(collection_number_pos + 1));\n\t            }\n\t        }\n\t        if (!this.in_series && !this.force_collapse) {\n\t            this.ComposeSet(true);\n\t        }\n\t        if (this.sets.value().length === 0) {\n\t            has_date = false;\n\t            for (pos = 0, len = this.cite.back.length; pos < len; pos += 1) {\n\t                x = this.cite.back[pos];\n\t                if (x === \"issued\" && this.cite[\"issued\"] && this.cite[\"issued\"].value) {\n\t                    has_date = true;\n\t                    break;\n\t                }\n\t            }\n\t            if (!has_date) {\n\t                this.cite.back_forceme.push(\"issued\");\n\t            }\n\t        } else {\n\t            var idx = this.cite.front.indexOf(\"issued\");\n\t            if (idx === -1 || this.master_was_neutral_cite) {\n\t                this.cite.back_forceme = this.sets.value().slice(-1)[0].back_forceme;\n\t            }\n\t            if (idx > -1) {\n\t                var prev = this.sets.value()[this.sets.value().length - 1];\n\t                if (!prev[\"issued\"]) {\n\t                    this.cite.front = this.cite.front.slice(0, idx).concat(this.cite.front.slice(idx + 1));\n\t                }\n\t            }\n\t            if (this.master_was_neutral_cite && this.cite.mid.indexOf(\"names:mid\") > -1) {\n\t                this.cite.front.push(\"names:mid\");\n\t            }\n\t        }\n\t        this.sets.value().push(this.cite);\n\t    }\n\t};\n\tCSL.Parallel.prototype.ComposeSet = function (next_output_in_progress) {\n\t    var cite, pos, master, len;\n\t    if (this.use_parallels && (this.force_collapse || this.try_cite)) {\n\t        var lengthCheck = this.sets.value().length;\n\t        if (this.sets.value().length === 1) {\n\t            if (!this.in_series) {\n\t                this.sets.value().pop();\n\t                this.delim_counter += 1;\n\t            }\n\t        } else {\n\t            len = this.sets.value().length;\n\t            for (pos = 0; pos < len; pos += 1) {\n\t                cite = this.sets.value()[pos];\n\t                if (pos === 0) {\n\t                    this.delim_counter += 1;\n\t                } else {\n\t                    if (!cite.Item.title && cite.use_journal_info) {\n\t                        this.delim_pointers.push(false);\n\t                    } else {\n\t                        this.delim_pointers.push(this.delim_counter);\n\t                    }\n\t                    this.delim_counter += 1;\n\t                }\n\t                if (CSL.POSITION_FIRST === cite.position) {\n\t                    if (pos === 0) {\n\t                        this.state.registry.registry[cite.itemId].master = true;\n\t                        this.state.registry.registry[cite.itemId].siblings = [];\n\t                        this.state.registry.registry[cite.itemId].parallel = false;\n\t                    } else {\n\t                        if (cite.prevItemID) {\n\t                            if (!this.state.registry.registry[cite.prevItemID].parallel) {\n\t                                this.state.registry.registry[cite.itemId].parallel = cite.prevItemID;\n\t                            } else {\n\t                                this.state.registry.registry[cite.itemId].parallel = this.state.registry.registry[cite.prevItemID].parallel;\n\t                            }\n\t                            this.state.registry.registry[cite.itemId].siblings = this.state.registry.registry[cite.prevItemID].siblings;\n\t                            if (!this.state.registry.registry[cite.itemId].siblings) {\n\t                                this.state.registry.registry[cite.itemId].siblings = [];\n\t                                CSL.debug(\"WARNING: adding missing siblings array to registry object\");\n\t                            }\n\t                            this.state.registry.registry[cite.itemId].siblings.push(cite.itemId);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            this.sets.push([]);\n\t        }\n\t        if (lengthCheck < 2) {\n\t            this.purgeGroupsIfParallel(false);\n\t        } else {\n\t            this.purgeGroupsIfParallel(true);\n\t        }\n\t        this.in_series = true;\n\t    }\n\t};\n\tCSL.Parallel.prototype.PruneOutputQueue = function () {\n\t    var len, pos, series, ppos, llen, cite;\n\t    if (this.use_parallels) {\n\t        len = this.sets.mystack.length;\n\t        for (pos = 0; pos < len; pos += 1) {\n\t            series = this.sets.mystack[pos];\n\t            if (series.length > 1) {\n\t                llen = series.length;\n\t                for (ppos = 0; ppos < llen; ppos += 1) {\n\t                    cite = series[ppos];\n\t                    if (ppos === 0) {\n\t                        this.purgeVariableBlobs(cite, cite.back);\n\t                    } else if (ppos === (series.length - 1)) {\n\t                        this.purgeVariableBlobs(cite, cite.front.concat(cite.back_forceme));\n\t                    } else {\n\t                        this.purgeVariableBlobs(cite, cite.front.concat(cite.back));\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Parallel.prototype.purgeVariableBlobs = function (cite, varnames) {\n\t    var len, pos, varname, b, llen, ppos, out;\n\t    if (this.use_parallels) {\n\t        out = this.state.output.current.value();\n\t        if (\"undefined\" === typeof out.length) {\n\t            out = out.blobs;\n\t        }\n\t        for (pos = 0, len = this.delim_pointers.length; pos < len; pos += 1) {\n\t            ppos = this.delim_pointers[pos];\n\t            if (ppos !== false) {\n\t                out[ppos].parallel_delimiter = \", \";\n\t            }\n\t        }\n\t        len = varnames.length - 1;\n\t        for (pos = len; pos > -1; pos += -1) {\n\t            varname = varnames[pos];\n\t            if (cite[varname]) {\n\t                llen = cite[varname].blobs.length - 1;\n\t                for (ppos = llen; ppos > -1; ppos += -1) {\n\t                    b = cite[varname].blobs[ppos];\n\t                    b[0].blobs = b[0].blobs.slice(0, b[1]).concat(b[0].blobs.slice((b[1] + 1)));\n\t                    this.state.tmp.has_purged_parallel = true;\n\t                    if (b[0] && b[0].strings && \"string\" == typeof b[0].strings.oops\n\t                        && b[0].parent && b[0].parent) {\n\t                        b[0].parent.parent.strings.delimiter = b[0].strings.oops;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Parallel.prototype.purgeGroupsIfParallel = function (original_condition) {\n\t    for (var i = this.parallel_conditional_blobs_list.length - 1; i > -1; i += -1) {\n\t        var obj = this.parallel_conditional_blobs_list[i];\n\t        var purgeme = true;\n\t        for (var j = 0, jlen = obj.conditions.length; j < jlen; j += 1) {\n\t            if (!(!obj.conditions[j] === !!original_condition\n\t                || (\"master\" === obj.conditions[j]\n\t                    && !this.state.registry.registry[obj.id].master)\n\t                || (\"servant\" === obj.conditions[j]\n\t                    && !this.state.registry.registry[obj.id].parallel))) {\n\t                var purgeme = false;\n\t                break;\n\t            }\n\t        }\n\t        if (purgeme) {\n\t            var buffer = [];\n\t            while (obj.blobs.length > obj.pos) {\n\t                buffer.push(obj.blobs.pop());\n\t            }\n\t            if (buffer.length) {\n\t                buffer.pop();\n\t            }\n\t            while (buffer.length) {\n\t                obj.blobs.push(buffer.pop());\n\t            }\n\t        }\n\t        this.parallel_conditional_blobs_list.pop();\n\t    }\n\t}\n\tCSL.Util = {};\n\tCSL.Util.Match = function () {\n\t    this.any = function (token, state, tests) {\n\t        return function (Item, item) {\n\t            for (var i=0, ilen=tests.length; i < ilen; i += 1) {\n\t                result = tests[i](Item, item);\n\t                if (result) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        };\n\t    };\n\t    this.none = function (token, state, tests) {\n\t        return function (Item, item) {\n\t            for (var i=0,ilen=tests.length;i<ilen;i+=1) {\n\t                result = tests[i](Item,item);\n\t                if (result) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t    };\n\t    this.all = function (token, state, tests) {\n\t        return function (Item, item) {\n\t            for (var i=0,ilen=tests.length;i<ilen;i+=1) {\n\t                result = tests[i](Item,item);\n\t                if (!result) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t    };\n\t    this[undefined] = this.all;\n\t    this.nand = function (token, state, tests) {\n\t        return function (Item, item) {\n\t            for (var i=0,ilen=tests.length;i<ilen;i+=1) {\n\t                result = tests[i](Item,item);\n\t                if (!result) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        };\n\t    };\n\t};\n\tCSL.Transform = function (state) {\n\t    var debug = false, abbreviations, token, fieldname, abbrev_family, opt;\n\t    this.abbrevs = {};\n\t    this.abbrevs[\"default\"] = new state.sys.AbbreviationSegments();\n\t    this.getTextSubField = getTextSubField;\n\t    function abbreviate(state, Item, altvar, basevalue, myabbrev_family, use_field) {\n\t        var value;\n\t        myabbrev_family = CSL.FIELD_CATEGORY_REMAP[myabbrev_family];\n\t        if (!myabbrev_family) {\n\t            return basevalue;\n\t        }\n\t        var variable = myabbrev_family;\n\t        value = \"\";\n\t        if (state.sys.getAbbreviation) {\n\t            var jurisdiction = state.transform.loadAbbreviation(Item.jurisdiction, myabbrev_family, basevalue, Item.type, true);\n\t            if (state.transform.abbrevs[jurisdiction][myabbrev_family] && basevalue && state.sys.getAbbreviation) {\n\t                if (state.transform.abbrevs[jurisdiction][myabbrev_family][basevalue]) {\n\t                    value = state.transform.abbrevs[jurisdiction][myabbrev_family][basevalue].replace(\"{stet}\",basevalue);\n\t                }\n\t            }\n\t        }\n\t        if (!value \n\t            && (!state.opt.development_extensions.require_explicit_legal_case_title_short || Item.type !== 'legal_case') \n\t            && altvar && Item[altvar] && use_field) {\n\t            value = Item[altvar];\n\t        }\n\t        if (!value) {\n\t            value = basevalue;\n\t        }\n\t        if (value && value.match(/^\\!(?:[^>]+,)*here(?:,[^>]+)*>>>/)) {\n\t            if (variable === \"jurisdiction\" && [\"treaty\", \"patent\"].indexOf(Item.type) > -1) {\n\t                value = value.replace(/^\\![^>]*>>>\\s*/, \"\");\n\t            } else {\n\t                value = false;\n\t            }\n\t        } \n\t        return value;\n\t    }\n\t    function getFieldLocale(Item,field) {\n\t        var ret = state.opt[\"default-locale\"][0].slice(0, 2)\n\t        var localeRex;\n\t        if (state.opt.development_extensions.strict_text_case_locales) {\n\t            localeRex = new RegExp(\"^([a-zA-Z]{2})(?:$|-.*| .*)\");\n\t        } else {\n\t            localeRex = new RegExp(\"^([a-zA-Z]{2})(?:$|-.*|.*)\");\n\t        }\n\t        if (Item.language) {\n\t            m = (\"\" + Item.language).match(localeRex);\n\t            if (m) {\n\t                ret = m[1];\n\t            } else {\n\t                ret = \"tlh\";\n\t            }\n\t        }\n\t        if (Item.multi && Item.multi && Item.multi.main && Item.multi.main[field]) {\n\t            ret = Item.multi.main[field];\n\t        }\n\t        if (!state.opt.development_extensions.strict_text_case_locales\n\t           || state.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n\t            ret = ret.toLowerCase();\n\t        }\n\t        return ret;\n\t    };\n\t    function getTextSubField (Item, field, locale_type, use_default, stopOrig) {\n\t        var m, lst, opt, o, oo, pos, key, ret, len, myret, opts;\n\t        var usedOrig = stopOrig;\n\t        var usingOrig = false;\n\t        if (!Item[field]) {\n\t            return {\n\t                name:\"\",\n\t                usedOrig:stopOrig,\n\t                token: CSL.Util.cloneToken(this)\n\t            };\n\t        }\n\t        ret = {name:\"\", usedOrig:stopOrig,locale:getFieldLocale(Item,field)};\n\t        opts = state.opt[locale_type];\n\t        var hasVal = false;\n\t        var jurisdictionName = false;\n\t        if (locale_type === 'locale-orig') {\n\t            if (stopOrig) {\n\t                ret = {name:\"\", usedOrig:stopOrig};\n\t            } else {\n\t                ret = {name:Item[field], usedOrig:false, locale:getFieldLocale(Item,field)};\n\t            }\n\t            hasVal = true;\n\t            usingOrig = true;\n\t        } else if (use_default && (\"undefined\" === typeof opts || opts.length === 0)) {\n\t            var ret = {name:Item[field], usedOrig:true, locale:getFieldLocale(Item,field)};\n\t            hasVal = true;\n\t            usingOrig = true;\n\t        }\n\t        if (!hasVal) {\n\t            for (var i = 0, ilen = opts.length; i < ilen; i += 1) {\n\t                opt = opts[i];\n\t                o = opt.split(/[\\-_]/)[0];\n\t                if (opt && Item.multi && Item.multi._keys[field] && Item.multi._keys[field][opt]) {\n\t                    ret.name = Item.multi._keys[field][opt];\n\t                    ret.locale = opt;\n\t                    if (field === 'jurisdiction') jurisdictionName = ret.name;\n\t                    break;\n\t                } else if (o && Item.multi && Item.multi._keys[field] && Item.multi._keys[field][o]) {\n\t                    ret.name = Item.multi._keys[field][o];\n\t                    ret.locale = o;\n\t                    if (field === 'jurisdiction') jurisdictionName = ret.name;\n\t                    break;\n\t                }\n\t            }\n\t            if (!ret.name && use_default) {\n\t                ret = {name:Item[field], usedOrig:true, locale:getFieldLocale(Item,field)};\n\t                usingOrig = true;\n\t            }\n\t        }\n\t        ret.token = CSL.Util.cloneToken(this);\n\t        if (state.sys.getHumanForm && field === 'jurisdiction' && ret.name) {\n\t            ret.name = CSL.getJurisdictionNameAndSuppress(state, Item[field], jurisdictionName);\n\t        } else if ([\"title\", \"container-title\"].indexOf(field) > -1) {\n\t            if (!usedOrig\n\t                && (!ret.token.strings[\"text-case\"]\n\t                    || ret.token.strings[\"text-case\"] === \"sentence\"\n\t                    || ret.token.strings[\"text-case\"] === \"normal\")) {\n\t                var locale = usingOrig ? false : ret.locale;\n\t                var seg = field.slice(0,-5);\n\t                var sentenceCase = ret.token.strings[\"text-case\"] === \"sentence\" ? true : false;\n\t                ret.name = CSL.titlecaseSentenceOrNormal(state, Item, seg, locale, sentenceCase);\n\t                delete ret.token.strings[\"text-case\"];\n\t            }\n\t        }\n\t        return ret;\n\t    }\n\t    function loadAbbreviation(jurisdiction, category, orig, itemType) {\n\t        var pos, len;\n\t        if (!jurisdiction) {\n\t            jurisdiction = \"default\";\n\t        }\n\t        if (!orig) {\n\t            if (!state.transform.abbrevs[jurisdiction]) {\n\t                state.transform.abbrevs[jurisdiction] = new state.sys.AbbreviationSegments();\n\t            }\n\t            if (!state.transform.abbrevs[jurisdiction][category]) {\n\t                state.transform.abbrevs[jurisdiction][category] = {};\n\t            }\n\t            return jurisdiction;\n\t        }\n\t        if (state.sys.getAbbreviation) {\n\t            jurisdiction = state.sys.getAbbreviation(state.opt.styleID, state.transform.abbrevs, jurisdiction, category, orig, itemType, true);\n\t            if (!jurisdiction) {\n\t                jurisdiction = \"default\";\n\t            }\n\t        }\n\t        return jurisdiction;\n\t    }\n\t    this.loadAbbreviation = loadAbbreviation;\n\t    function publisherCheck (tok, Item, primary, myabbrev_family) {\n\t        var varname = tok.variables[0];\n\t        if (state.publisherOutput && primary) {\n\t            if ([\"publisher\",\"publisher-place\"].indexOf(varname) === -1) {\n\t                return false;\n\t            } else {\n\t                state.publisherOutput[varname + \"-token\"] = tok;\n\t                state.publisherOutput.varlist.push(varname);\n\t                var lst = primary.split(/;\\s*/);\n\t                if (lst.length === state.publisherOutput[varname + \"-list\"].length) {\n\t                    state.publisherOutput[varname + \"-list\"] = lst;\n\t                }\n\t                for (var i = 0, ilen = lst.length; i < ilen; i += 1) {\n\t                    lst[i] = abbreviate(state, Item, false, lst[i], myabbrev_family, true);\n\t                }\n\t                state.tmp[varname + \"-token\"] = tok;\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t    function getOutputFunction(variables, myabbrev_family, abbreviation_fallback, alternative_varname, transform_fallback) {\n\t        var localesets;\n\t        var langPrefs = CSL.LangPrefsMap[variables[0]];\n\t        if (!langPrefs) {\n\t            localesets = false;\n\t        } else {\n\t            localesets = state.opt['cite-lang-prefs'][langPrefs];\n\t        }\n\t        return function (state, Item, item, usedOrig) {\n\t            var primary, primary_locale, secondary, secondary_locale, tertiary, tertiary_locale, primary_tok, group_tok, key;\n\t            if (!variables[0] || (!Item[variables[0]] && !Item[alternative_varname])) {\n\t                return null;\n\t            }\n\t            var slot = {primary:false, secondary:false, tertiary:false};\n\t            if (state.tmp.area.slice(-5) === \"_sort\") {\n\t                slot.primary = 'locale-sort';\n\t            } else {\n\t                if (localesets) {\n\t                    var slotnames = [\"primary\", \"secondary\", \"tertiary\"];\n\t                    for (var i = 0, ilen = slotnames.length; i < ilen; i += 1) {\n\t                        if (localesets.length - 1 <  i) {\n\t                            break;\n\t                        }\n\t                        if (localesets[i]) {\n\t                            slot[slotnames[i]] = 'locale-' + localesets[i];\n\t                        }\n\t                    }\n\t                } else {\n\t                    slot.primary = 'locale-orig';\n\t                }\n\t            }\n\t            if (variables[0] === \"title-short\" \n\t                || (state.tmp.area !== \"bibliography\"\n\t                    && !(state.tmp.area === \"citation\"\n\t                         && state.opt.xclass === \"note\"\n\t                         && item && !item.position))) {\n\t                slot.secondary = false;\n\t                slot.tertiary = false;\n\t            }\n\t            if (state.tmp[\"publisher-list\"]) {\n\t                if (variables[0] === \"publisher\") {\n\t                    state.tmp[\"publisher-token\"] = this;\n\t                } else if (variables[0] === \"publisher-place\") {\n\t                    state.tmp[\"publisher-place-token\"] = this;\n\t                }\n\t                return null;\n\t            }\n\t            var res = getTextSubField.call(this, Item, variables[0], slot.primary, true);\n\t            primary = res.name;\n\t            primary_locale = res.locale;\n\t            var primary_tok = res.token;\n\t            var primaryUsedOrig = res.usedOrig;\n\t            if (publisherCheck(this, Item, primary, myabbrev_family)) {\n\t                return null;\n\t            }\n\t            secondary = false;\n\t            tertiary = false;\n\t            if (slot.secondary) {\n\t                res = getTextSubField.call(this, Item, variables[0], slot.secondary, false, res.usedOrig);\n\t                secondary = res.name;\n\t                secondary_locale = res.locale;\n\t                var secondary_tok = res.token;\n\t            }\n\t            if (slot.tertiary) {\n\t                res = getTextSubField.call(this, Item, variables[0], slot.tertiary, false, res.usedOrig);\n\t                tertiary = res.name;\n\t                tertiary_locale = res.locale;\n\t                var tertiary_tok = res.token;\n\t            }\n\t            if (myabbrev_family) {\n\t                primary = abbreviate(state, Item, alternative_varname, primary, myabbrev_family, true);\n\t                if (primary) {\n\t                    primary = quashCheck(primary);\n\t                }\n\t                secondary = abbreviate(state, Item, false, secondary, myabbrev_family, true);\n\t                tertiary = abbreviate(state, Item, false, tertiary, myabbrev_family, true);\n\t            }\n\t            var primaryPrefix;\n\t            if (slot.primary === \"locale-translit\") {\n\t                primaryPrefix = state.opt.citeAffixes[langPrefs][slot.primary].prefix;\n\t            }                \n\t            if (primaryPrefix === \"<i>\" && variables[0] === 'title' && !primaryUsedOrig) {\n\t                var hasItalic = false;\n\t                for (var i = 0, ilen = primary_tok.decorations.length; i < ilen; i += 1) {\n\t                    if (primary_tok.decorations[i][0] === \"@font-style\"\n\t                        && primary_tok.decorations[i][1] === \"italic\") {\n\t                        hasItalic = true;\n\t                    }\n\t                }\n\t                if (!hasItalic) {\n\t                    primary_tok.decorations.push([\"@font-style\", \"italic\"])\n\t                }\n\t            }\n\t            if (primary_locale !== \"en\" && primary_tok.strings[\"text-case\"] === \"title\") {\n\t                primary_tok.strings[\"text-case\"] = \"passthrough\";\n\t            }\n\t            if (\"title\" === variables[0]) {\n\t                primary = CSL.demoteNoiseWords(state, primary, this[\"leading-noise-words\"]);\n\t            }\n\t            if (secondary || tertiary) {\n\t                state.output.openLevel(\"empty\");\n\t                primary_tok.strings.suffix = primary_tok.strings.suffix.replace(/[ .,]+$/,\"\");\n\t                state.output.append(primary, primary_tok);\n\t                if (secondary) {\n\t                    secondary_tok.strings.prefix = state.opt.citeAffixes[langPrefs][slot.secondary].prefix;\n\t                    secondary_tok.strings.suffix = state.opt.citeAffixes[langPrefs][slot.secondary].suffix;\n\t                    if (!secondary_tok.strings.prefix) {\n\t                        secondary_tok.strings.prefix = \" \";\n\t                    }\n\t                    for (var i = secondary_tok.decorations.length - 1; i > -1; i += -1) {\n\t                        if (['@quotes/true', '@font-style/italic', '@font-style/oblique', '@font-weight/bold'].indexOf(secondary_tok.decorations[i].join('/')) > -1) {\n\t                            secondary_tok.decorations = secondary_tok.decorations.slice(0, i).concat(secondary_tok.decorations.slice(i + 1))\n\t                        }\n\t                    }\n\t                    if (secondary_locale !== \"en\" && secondary_tok.strings[\"text-case\"] === \"title\") {\n\t                        secondary_tok.strings[\"text-case\"] = \"passthrough\";\n\t                    }\n\t                    var secondary_outer = new CSL.Token();\n\t                    secondary_outer.decorations.push([\"@font-style\", \"normal\"]);\n\t                    secondary_outer.decorations.push([\"@font-weight\", \"normal\"]);\n\t                    state.output.openLevel(secondary_outer);\n\t                    state.output.append(secondary, secondary_tok);\n\t                    state.output.closeLevel();\n\t                    var blob_obj = state.output.current.value();\n\t                    var blobs_pos = state.output.current.value().blobs.length - 1;\n\t                    if (state.parallel.use_parallels) {\n\t                        state.parallel.cite.front.push(variables[0] + \":secondary\");\n\t                        state.parallel.cite[variables[0] + \":secondary\"] = {blobs:[[blob_obj, blobs_pos]]};\n\t                    }\n\t                }\n\t                if (tertiary) {\n\t                    tertiary_tok.strings.prefix = state.opt.citeAffixes[langPrefs][slot.tertiary].prefix;\n\t                    tertiary_tok.strings.suffix = state.opt.citeAffixes[langPrefs][slot.tertiary].suffix;\n\t                    if (!tertiary_tok.strings.prefix) {\n\t                        tertiary_tok.strings.prefix = \" \";\n\t                    }\n\t                    for (var i = tertiary_tok.decorations.length - 1; i > -1; i += -1) {\n\t                        if (['@quotes/true', '@font-style/italic', '@font-style/oblique', '@font-weight/bold'].indexOf(tertiary_tok.decorations[i].join('/')) > -1) {\n\t                            tertiary_tok.decorations = tertiary_tok.decorations.slice(0, i).concat(tertiary_tok.decorations.slice(i + 1))\n\t                        }\n\t                    }\n\t                    if (tertiary_locale !== \"en\" && tertiary_tok.strings[\"text-case\"] === \"title\") {\n\t                        tertiary_tok.strings[\"text-case\"] = \"passthrough\";\n\t                    }\n\t                    var tertiary_outer = new CSL.Token();\n\t                    tertiary_outer.decorations.push([\"@font-style\", \"normal\"]);\n\t                    tertiary_outer.decorations.push([\"@font-weight\", \"normal\"]);\n\t                    state.output.openLevel(tertiary_outer);\n\t                    state.output.append(tertiary, tertiary_tok);\n\t                    state.output.closeLevel();\n\t                    var blob_obj = state.output.current.value();\n\t                    var blobs_pos = state.output.current.value().blobs.length - 1;\n\t                    if (state.parallel.use_parallels) {\n\t                        state.parallel.cite.front.push(variables[0] + \":tertiary\");\n\t                        state.parallel.cite[variables[0] + \":tertiary\"] = {blobs:[[blob_obj, blobs_pos]]};\n\t                    }\n\t                }\n\t                state.output.closeLevel();\n\t            } else {\n\t                state.output.append(primary, primary_tok);\n\t            }\n\t            return null;\n\t        };\n\t    }\n\t    this.getOutputFunction = getOutputFunction;\n\t    function quashCheck(value) {\n\t        var m = value.match(/^!([-,_a-z]+)>>>/);\n\t        if (m) {\n\t            var fields = m[1].split(\",\");\n\t            value = value.slice(m[0].length);\n\t            for (var i = 0, ilen = fields.length; i < ilen; i += 1) {\n\t                if (state.tmp.done_vars.indexOf(fields[i]) === -1) {\n\t                    state.tmp.done_vars.push(fields[i]);\n\t                }\n\t            }\n\t        }\n\t        return value;\n\t    }\n\t    this.quashCheck = quashCheck;\n\t};\n\tCSL.Token = function (name, tokentype) {\n\t    this.name = name;\n\t    this.strings = {};\n\t    this.strings.delimiter = undefined;\n\t    this.strings.prefix = \"\";\n\t    this.strings.suffix = \"\";\n\t    this.decorations = [];\n\t    this.variables = [];\n\t    this.execs = [];\n\t    this.tokentype = tokentype;\n\t    this.evaluator = false;\n\t    this.tests = [];\n\t    this.rawtests = [];\n\t    this.succeed = false;\n\t    this.fail = false;\n\t    this.next = false;\n\t};\n\tCSL.Util.cloneToken = function (token) {\n\t    var newtok, key, pos, len;\n\t    if (\"string\" === typeof token) {\n\t        return token;\n\t    }\n\t    newtok = new CSL.Token(token.name, token.tokentype);\n\t    for (key in token.strings) {\n\t        if (token.strings.hasOwnProperty(key)) {\n\t            newtok.strings[key] = token.strings[key];\n\t        }\n\t    }\n\t    if (token.decorations) {\n\t        newtok.decorations = [];\n\t        for (pos = 0, len = token.decorations.length; pos < len; pos += 1) {\n\t            newtok.decorations.push(token.decorations[pos].slice());\n\t        }\n\t    }\n\t    if (token.variables) {\n\t        newtok.variables = token.variables.slice();\n\t    }\n\t    if (token.execs) {\n\t        newtok.execs = token.execs.slice();\n\t        newtok.tests = token.tests.slice();\n\t        newtok.rawtests = token.tests.slice();\n\t    }\n\t    return newtok;\n\t};\n\tCSL.AmbigConfig = function () {\n\t    this.maxvals = [];\n\t    this.minval = 1;\n\t    this.names = [];\n\t    this.givens = [];\n\t    this.year_suffix = false;\n\t    this.disambiguate = 0;\n\t};\n\tCSL.Blob = function (str, token, levelname) {\n\t    var len, pos, key;\n\t    this.levelname = levelname;\n\t    if (token) {\n\t        this.strings = {\"prefix\":\"\",\"suffix\":\"\"};\n\t        for (key in token.strings) {\n\t            if (token.strings.hasOwnProperty(key)) {\n\t                this.strings[key] = token.strings[key];\n\t            }\n\t        }\n\t        this.decorations = [];\n\t        if (token.decorations === undefined) {\n\t            len = 0;\n\t        } else {\n\t            len = token.decorations.length;\n\t        }\n\t        for (pos = 0; pos < len; pos += 1) {\n\t            this.decorations.push(token.decorations[pos].slice());\n\t        }\n\t    } else {\n\t        this.strings = {};\n\t        this.strings.prefix = \"\";\n\t        this.strings.suffix = \"\";\n\t        this.strings.delimiter = \"\";\n\t        this.decorations = [];\n\t    }\n\t    if (\"string\" === typeof str) {\n\t        this.blobs = str;\n\t    } else if (str) {\n\t        this.blobs = [str];\n\t    } else {\n\t        this.blobs = [];\n\t    }\n\t    this.alldecor = [this.decorations];\n\t};\n\tCSL.Blob.prototype.push = function (blob) {\n\t    if (\"string\" === typeof this.blobs) {\n\t        throw \"Attempt to push blob onto string object\";\n\t    } else if (false !== blob) {\n\t        blob.alldecor = blob.alldecor.concat(this.alldecor);\n\t        this.blobs.push(blob);\n\t    }\n\t};\n\tCSL.NumericBlob = function (particle, num, mother_token, id) {\n\t    this.id = id;\n\t    this.alldecor = [];\n\t    this.num = num;\n\t    this.particle = particle;\n\t    this.blobs = num.toString();\n\t    this.status = CSL.START;\n\t    this.strings = {};\n\t    if (mother_token) {\n\t        this.gender = mother_token.gender;\n\t        this.decorations = mother_token.decorations;\n\t        this.strings.prefix = mother_token.strings.prefix;\n\t        this.strings.suffix = mother_token.strings.suffix;\n\t        this.strings[\"text-case\"] = mother_token.strings[\"text-case\"];\n\t        this.successor_prefix = mother_token.successor_prefix;\n\t        this.range_prefix = mother_token.range_prefix;\n\t        this.splice_prefix = mother_token.splice_prefix;\n\t        this.formatter = mother_token.formatter;\n\t        if (!this.formatter) {\n\t            this.formatter =  new CSL.Output.DefaultFormatter();\n\t        }\n\t        if (this.formatter) {\n\t            this.type = this.formatter.format(1);\n\t        }\n\t    } else {\n\t        this.decorations = [];\n\t        this.strings.prefix = \"\";\n\t        this.strings.suffix = \"\";\n\t        this.successor_prefix = \"\";\n\t        this.range_prefix = \"\";\n\t        this.splice_prefix = \"\";\n\t        this.formatter = new CSL.Output.DefaultFormatter();\n\t    }\n\t};\n\tCSL.NumericBlob.prototype.setFormatter = function (formatter) {\n\t    this.formatter = formatter;\n\t    this.type = this.formatter.format(1);\n\t};\n\tCSL.Output.DefaultFormatter = function () {};\n\tCSL.Output.DefaultFormatter.prototype.format = function (num) {\n\t    return num.toString();\n\t};\n\tCSL.NumericBlob.prototype.checkNext = function (next,start) {\n\t    if (start) {\n\t        this.status = CSL.START;\n\t        if (\"object\" === typeof next) {\n\t            if (next.num === (this.num + 1)) {\n\t                next.status = CSL.SUCCESSOR;\n\t            } else {\n\t                next.status = CSL.SEEN;\n\t            }\n\t        }\n\t    } else if (! next || !next.num || this.type !== next.type || next.num !== (this.num + 1)) {\n\t        if (this.status === CSL.SUCCESSOR_OF_SUCCESSOR) {\n\t            this.status = CSL.END;\n\t        }\n\t        if (\"object\" === typeof next) { \n\t           next.status = CSL.SEEN;\n\t        }\n\t    } else { // next number is in the sequence\n\t        if (this.status === CSL.START || this.status === CSL.SEEN) {\n\t            next.status = CSL.SUCCESSOR;\n\t        } else if (this.status === CSL.SUCCESSOR || this.status === CSL.SUCCESSOR_OF_SUCCESSOR) {\n\t            if (this.range_prefix) {\n\t                next.status = CSL.SUCCESSOR_OF_SUCCESSOR;\n\t                this.status = CSL.SUPPRESS;\n\t            } else {\n\t                next.status = CSL.SUCCESSOR;\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.NumericBlob.prototype.checkLast = function (last) {\n\t    if (this.status === CSL.SEEN \n\t    || (last.num !== (this.num - 1) && this.status === CSL.SUCCESSOR)) {\n\t        this.status = CSL.SUCCESSOR;\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\tCSL.Util.fixDateNode = function (parent, pos, node) {\n\t    var form, variable, datexml, subnode, partname, attr, val, prefix, suffix, children, key, subchildren, kkey, display, cslid;\n\t    var lingo = this.cslXml.getAttributeValue(node, \"lingo\");\n\t    var default_locale = this.cslXml.getAttributeValue(node, \"default-locale\");\n\t    this.build.date_key = true;\n\t    form = this.cslXml.getAttributeValue(node, \"form\");\n\t    var lingo;\n\t    if (default_locale) {\n\t        lingo = this.opt[\"default-locale\"][0];\n\t    } else {\n\t        lingo = this.cslXml.getAttributeValue(node, \"lingo\");\n\t    }\n\t    if (!this.getDate(form, default_locale)) {\n\t        return parent;\n\t    }\n\t    var dateparts = this.cslXml.getAttributeValue(node, \"date-parts\");\n\t    variable = this.cslXml.getAttributeValue(node, \"variable\");\n\t    prefix = this.cslXml.getAttributeValue(node, \"prefix\");\n\t    suffix = this.cslXml.getAttributeValue(node, \"suffix\");\n\t    display = this.cslXml.getAttributeValue(node, \"display\");\n\t    cslid = this.cslXml.getAttributeValue(node, \"cslid\");\n\t    datexml = this.cslXml.nodeCopy(this.getDate(form, default_locale));\n\t    this.cslXml.setAttribute(datexml, 'lingo', this.opt.lang);\n\t    this.cslXml.setAttribute(datexml, 'form', form);\n\t    this.cslXml.setAttribute(datexml, 'date-parts', dateparts);\n\t    this.cslXml.setAttribute(datexml, \"cslid\", cslid);\n\t    this.cslXml.setAttribute(datexml, 'variable', variable);\n\t    this.cslXml.setAttribute(datexml, 'default-locale', default_locale);\n\t    if (prefix) {\n\t        this.cslXml.setAttribute(datexml, \"prefix\", prefix);\n\t    }\n\t    if (suffix) {\n\t        this.cslXml.setAttribute(datexml, \"suffix\", suffix);\n\t    }\n\t    if (display) {\n\t        this.cslXml.setAttribute(datexml, \"display\", display);\n\t    }\n\t    children = this.cslXml.children(datexml);\n\t    for (key in children) {\n\t        subnode = children[key];\n\t        if (\"date-part\" === this.cslXml.nodename(subnode)) {\n\t            partname = this.cslXml.getAttributeValue(subnode, \"name\");\n\t            if (default_locale) {\n\t                this.cslXml.setAttributeOnNodeIdentifiedByNameAttribute(datexml, \"date-part\", partname, \"@default-locale\", \"true\");\n\t            }\n\t        }\n\t    }\n\t    children = this.cslXml.children(node);\n\t    for (key in children) {\n\t        subnode = children[key];\n\t        if (\"date-part\" === this.cslXml.nodename(subnode)) {\n\t            partname = this.cslXml.getAttributeValue(subnode, \"name\");\n\t            subchildren = this.cslXml.attributes(subnode);\n\t            for (attr in subchildren) {\n\t                if (\"@name\" === attr) {\n\t                    continue;\n\t                }\n\t                if (lingo && lingo !== this.opt.lang) {\n\t                    if ([\"@suffix\", \"@prefix\", \"@form\"].indexOf(attr) > -1) {\n\t                        continue;\n\t                    }\n\t                }\n\t                val = subchildren[attr];\n\t                this.cslXml.setAttributeOnNodeIdentifiedByNameAttribute(datexml, \"date-part\", partname, attr, val);\n\t            }\n\t        }\n\t    }\n\t    if (\"year\" === this.cslXml.getAttributeValue(node, \"date-parts\")) {\n\t        this.cslXml.deleteNodeByNameAttribute(datexml, 'month');\n\t        this.cslXml.deleteNodeByNameAttribute(datexml, 'day');\n\t    } else if (\"year-month\" === this.cslXml.getAttributeValue(node, \"date-parts\")) {\n\t        this.cslXml.deleteNodeByNameAttribute(datexml, 'day');\n\t    } else if (\"month-day\" === this.cslXml.getAttributeValue(node, \"date-parts\")) {\n\t        var childNodes = this.cslXml.children(datexml);\n\t        for (var i=1,ilen=this.cslXml.numberofnodes(childNodes);i<ilen;i++) {\n\t            if (this.cslXml.getAttributeValue(childNodes[i], 'name') === \"year\") {\n\t                this.cslXml.setAttribute(childNodes[i-1], \"suffix\", \"\");\n\t                break;\n\t            }\n\t        }\n\t        this.cslXml.deleteNodeByNameAttribute(datexml, 'year');\n\t    }\n\t    return this.cslXml.insertChildNodeAfter(parent, node, pos, datexml);\n\t};\n\tCSL.dateMacroAsSortKey = function (state, Item) {\n\t    CSL.dateAsSortKey.call(this, state, Item, true);\n\t};\n\tCSL.dateAsSortKey = function (state, Item, isMacro) {\n\t    var dp, elem, value, e, yr, prefix, i, ilen, num;\n\t    var variable = this.variables[0];\n\t    var macroFlag = \"empty\";\n\t    if (isMacro && state.tmp.extension) {\n\t        macroFlag = \"macro-with-date\";\n\t    }\n\t    dp = Item[variable];\n\t    if (\"undefined\" === typeof dp) {\n\t        dp = {\"date-parts\": [[0]] };\n\t        if (!dp.year) {\n\t            state.tmp.empty_date = true;\n\t        }\n\t    }\n\t    if (\"undefined\" === typeof this.dateparts) {\n\t        this.dateparts = [\"year\", \"month\", \"day\"];\n\t    }\n\t    if (dp.raw) {\n\t        dp = state.fun.dateparser.parseDateToArray(dp.raw);\n\t    } else if (dp[\"date-parts\"]) {\n\t        dp = state.dateParseArray(dp);\n\t    }\n\t    if (\"undefined\" === typeof dp) {\n\t        dp = {};\n\t    }\n\t    for (i = 0, ilen = CSL.DATE_PARTS_INTERNAL.length; i < ilen; i += 1) {\n\t        elem = CSL.DATE_PARTS_INTERNAL[i];\n\t        value = 0;\n\t        e = elem;\n\t        if (e.slice(-4) === \"_end\") {\n\t            e = e.slice(0, -4);\n\t        }\n\t        if (dp[elem] && this.dateparts.indexOf(e) > -1) {\n\t            value = dp[elem];\n\t        }\n\t        if (elem.slice(0, 4) === \"year\") {\n\t            yr = CSL.Util.Dates[e].numeric(state, value);\n\t            prefix = \"Y\";\n\t            if (yr[0] === \"-\") {\n\t                prefix = \"X\";\n\t                yr = yr.slice(1);\n\t                yr = 9999 - parseInt(yr, 10);\n\t            }\n\t            state.output.append(CSL.Util.Dates[elem.slice(0, 4)].numeric(state, (prefix + yr)), macroFlag);\n\t        } else {\n\t            value = CSL.Util.Dates[e][\"numeric-leading-zeros\"](state, value);\n\t            if (!value) {\n\t                value = \"00\";\n\t            }\n\t            state.output.append(value, macroFlag);\n\t        }\n\t    }\n\t};\n\tCSL.Engine.prototype.dateParseArray = function (date_obj) {\n\t    var ret, field, dpos, ppos, dp, exts, llen, pos, len, pppos, lllen;\n\t    ret = {};\n\t    for (field in date_obj) {\n\t        if (field === \"date-parts\") {\n\t            dp = date_obj[\"date-parts\"];\n\t            if (dp.length > 1) {\n\t                if (dp[0].length !== dp[1].length) {\n\t                    CSL.error(\"CSL data error: element mismatch in date range input.\");\n\t                }\n\t            }\n\t            exts = [\"\", \"_end\"];\n\t            for (var i = 0, ilen = dp.length; i < ilen; i += 1) {\n\t                for (var j = 0, jlen = CSL.DATE_PARTS.length; j < jlen; j += 1) {\n\t                    if (\"undefined\" === typeof dp[i][j]) {\n\t                        ret[(CSL.DATE_PARTS[j] + exts[i])] = dp[i][j];\n\t                    } else {\n\t                        ret[(CSL.DATE_PARTS[j] + exts[i])] = parseInt(dp[i][j], 10);\n\t                    }\n\t                }\n\t            }\n\t        } else if (date_obj.hasOwnProperty(field)) {\n\t            if (field === \"literal\" && \"object\" === typeof date_obj.literal && \"string\" === typeof date_obj.literal.part) {\n\t                CSL.debug(\"Warning: fixing up weird literal date value\");\n\t                ret.literal = date_obj.literal.part;\n\t            } else {\n\t                ret[field] = date_obj[field];\n\t            }\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.Util.Names = {};\n\tCSL.Util.Names.compareNamesets = CSL.NameOutput.prototype._compareNamesets;\n\tCSL.Util.Names.unInitialize = function (state, name) {\n\t    var i, ilen, namelist, punctlist, ret;\n\t    if (!name) {\n\t        return \"\";\n\t    }\n\t    namelist = name.split(/(?:\\-|\\s+)/);\n\t    punctlist = name.match(/(\\-|\\s+)/g);\n\t    ret = \"\";\n\t    for (i = 0, ilen = namelist.length; i < ilen; i += 1) {\n\t        if (CSL.ALL_ROMANESQUE_REGEXP.exec(namelist[i].slice(0,-1)) \n\t            && namelist[i] \n\t            && namelist[i] !== namelist[i].toUpperCase()) {\n\t            namelist[i] = namelist[i].slice(0, 1) + namelist[i].slice(1, 2).toLowerCase() + namelist[i].slice(2);\n\t        }\n\t        ret += namelist[i];\n\t        if (i < ilen - 1) {\n\t            ret += punctlist[i];\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.Util.Names.initializeWith = function (state, name, terminator, normalizeOnly) {\n\t    var i, ilen, j, jlen, n, m, mm, str, lst, ret;\n\t    if (!name) {\n\t        return \"\";\n\t    }\n\t    if (!terminator) {\n\t        terminator = \"\";\n\t    }\n\t    if ([\"Lord\", \"Lady\"].indexOf(name) > -1\n\t        || (!name.match(CSL.STARTSWITH_ROMANESQUE_REGEXP)\n\t            && !terminator.match(\"%s\"))) {\n\t        return name;\n\t    }\n\t    var namelist = name;\n\t    if (state.opt[\"initialize-with-hyphen\"] === false) {\n\t        namelist = namelist.replace(/\\-/g, \" \");\n\t    }\n\t    namelist = namelist.replace(/\\s*\\-\\s*/g, \"-\").replace(/\\s+/g, \" \");\n\t    namelist = namelist.replace(/-([a-z])/g, \"\\u2013$1\");\n\t    mm = namelist.match(/[\\-\\s]+/g);\n\t    lst = namelist.split(/[\\-\\s]+/);\n\t    if (lst.length === 0) {\n\t        namelist = mm;\n\t    } else {\n\t        namelist = [lst[0]];\n\t        for (i = 1, ilen = lst.length; i < ilen; i += 1) {\n\t            namelist.push(mm[i - 1]);\n\t            namelist.push(lst[i]);\n\t        }\n\t    }\n\t    lst = namelist;\n\t    for (i = lst.length -1; i > -1; i += -1) {\n\t        if (lst[i] && lst[i].slice(0, -1).indexOf(\".\") > -1) {\n\t            var lstend = lst.slice(i + 1);\n\t            var lstmid = lst[i].slice(0, -1).split(\".\");\n\t            lst = lst.slice(0, i);\n\t            for (j = 0, jlen = lstmid.length; j < jlen; j += 1) {\n\t                lst.push(lstmid[j] + \".\");\n\t                if (j < lstmid.length - 1) {\n\t                    lst.push(\" \");\n\t                }\n\t            }\n\t            lst = lst.concat(lstend);\n\t        }\n\t    }\n\t    if (normalizeOnly) {\n\t        ret = CSL.Util.Names.doNormalize(state, lst, terminator);\n\t    } else {\n\t        ret = CSL.Util.Names.doInitialize(state, lst, terminator);\n\t    }\n\t    ret = ret.replace(/\\u2013([a-z])/g, \"-$1\");\n\t    return ret;\n\t};\n\tCSL.Util.Names.doNormalize = function (state, namelist, terminator, mode) {\n\t    var i, ilen;\n\t    terminator = terminator ? terminator : \"\";\n\t    var isAbbrev = [];\n\t    for (i = 0, ilen = namelist.length; i < ilen; i += 1) {\n\t        if (namelist[i].length > 1 && namelist[i].slice(-1) === \".\") {\n\t            namelist[i] = namelist[i].slice(0, -1);\n\t            isAbbrev.push(true);\n\t        } else if (namelist[i].length === 1 && namelist[i].toUpperCase() === namelist[i]) {\n\t            isAbbrev.push(true);\n\t        } else {\n\t            isAbbrev.push(false);\n\t        }\n\t    }\n\t    var ret = [];\n\t    for (i = 0, ilen = namelist.length; i < ilen; i += 2) {\n\t        if (isAbbrev[i]) {\n\t            if (i < namelist.length - 2) {\n\t                namelist[i + 1] = \"\";\n\t                if ((!terminator || terminator.slice(-1) && terminator.slice(-1) !== \" \")\n\t                    && namelist[i].length && namelist[i].match(CSL.ALL_ROMANESQUE_REGEXP)\n\t                    && (namelist[i].length > 1 || namelist[i + 2].length > 1)) {\n\t                    namelist[i + 1] = \" \";\n\t                }\n\t                if (namelist[i + 2].length > 1) {\n\t                    namelist[i] = namelist[i] + terminator.replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020\\ufeff\\u00a0]+$/, \"\");\n\t                } else {\n\t                    namelist[i] = namelist[i] + terminator;\n\t                }\n\t            }\n\t            if (i === namelist.length - 1) {\n\t                namelist[i] = namelist[i] + terminator;\n\t            }\n\t        }\n\t    }\n\t    return namelist.join(\"\").replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020\\ufeff\\u00a0]+$/,\"\").replace(/\\s*\\-\\s*/g, \"-\").replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020]+/g, \" \");\n\t};\n\tCSL.Util.Names.doInitialize = function (state, namelist, terminator, mode) {\n\t    var i, ilen, m, j, jlen, lst, n;\n\t    for (i = 0, ilen = namelist.length; i < ilen; i += 2) {\n\t        n = namelist[i];\n\t        if (!n) {\n\t            continue;\n\t        }\n\t        m = n.match(CSL.NAME_INITIAL_REGEXP);\n\t        if (!m && (!n.match(CSL.STARTSWITH_ROMANESQUE_REGEXP) && n.length > 1 && terminator.match(\"%s\"))) {\n\t            m = n.match(/(.)(.*)/);\n\t        }\n\t        if (m && m[1] === m[1].toUpperCase()) {\n\t            var extra = \"\";\n\t            if (m[2]) {\n\t                var s = \"\";\n\t                lst = m[2].split(\"\");\n\t                for (j = 0, jlen = lst.length; j < jlen; j += 1) {\n\t                    var c = lst[j];\n\t                    if (c === c.toUpperCase()) {\n\t                        s += c;\n\t                    } else {\n\t                        break;\n\t                    }\n\t                }\n\t                if (s.length < m[2].length) {\n\t                    extra = s.toLocaleLowerCase();\n\t                }\n\t            }\n\t            namelist[i] = m[1].toLocaleUpperCase() + extra;\n\t            if (i < (ilen - 1)) {\n\t                if (terminator.match(\"%s\")) {\n\t                    namelist[i] = terminator.replace(\"%s\", namelist[i]);\n\t                } else {\n\t                    if (namelist[i + 1].indexOf(\"-\") > -1) {\n\t                        namelist[i + 1] = terminator + namelist[i + 1];\n\t                    } else {\n\t                        namelist[i + 1] = terminator;\n\t                    }\n\t                }\n\t            } else {\n\t                if (terminator.match(\"%s\")) {\n\t                    namelist[i] = terminator.replace(\"%s\", namelist[i]);\n\t                } else {\n\t                    namelist.push(terminator);\n\t                }\n\t            }\n\t        } else if (n.match(CSL.ROMANESQUE_REGEXP)) {\n\t            namelist[i] = \" \" + n;\n\t        }\n\t    }\n\t    var ret = namelist.join(\"\");\n\t    ret = ret.replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020\\ufeff\\u00a0]+$/,\"\").replace(/\\s*\\-\\s*/g, \"-\").replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020]+/g, \" \");\n\t    return ret;\n\t};\n\tCSL.Util.Names.getRawName = function (name) {\n\t    var ret = [];\n\t    if (name.given) {\n\t        ret.push(name.given);\n\t    }\n\t    if (name.family) {\n\t        ret.push(name.family);\n\t    }\n\t    return ret.join(\" \");\n\t};\n\tCSL.Util.Dates = {};\n\tCSL.Util.Dates.year = {};\n\tCSL.Util.Dates.year[\"long\"] = function (state, num) {\n\t    if (!num) {\n\t        if (\"boolean\" === typeof num) {\n\t            num = \"\";\n\t        } else {\n\t            num = 0;\n\t        }\n\t    }\n\t    return num.toString();\n\t};\n\tCSL.Util.Dates.year.imperial = function (state, num, end, makeShort) {\n\t    if (!num) {\n\t        if (\"boolean\" === typeof num) {\n\t            num = \"\";\n\t        } else {\n\t            num = 0;\n\t        }\n\t    }\n\t    end = end ? \"_end\" : \"\";\n\t    var month = state.tmp.date_object[\"month\" + end];\n\t    month = month ? \"\"+month : \"1\";\n\t    while (month.length < 2) {\n\t        month = \"0\" + month;\n\t    }\n\t    var day = state.tmp.date_object[\"day\" + end];\n\t    day = day ? \"\"+day : \"1\";\n\t    while (day.length < 2) {\n\t        day = \"0\" + day;\n\t    }\n\t    var date = parseInt(num + month + day, 10);\n\t    var label;\n\t    var offset;\n\t    if (date >= 18680908 && date < 19120730) {\n\t        label = '\\u660e\\u6cbb';\n\t        offset = 1867;\n\t    } else if (date >= 19120730 && date < 19261225) {\n\t        label = '\\u5927\\u6b63';\n\t        offset = 1911;\n\t    } else if (date >= 19261225 && date < 19890108) {\n\t        label = '\\u662d\\u548c';\n\t        offset = 1925;\n\t    } else if (date >= 19890108) {\n\t        label = '\\u5e73\\u6210';\n\t        offset = 1988;\n\t    }\n\t    if (label && offset) {\n\t        if (!state.transform.abbrevs['default']['number'][label]) {\n\t            state.transform.loadAbbreviation('default', \"number\", label);\n\t        }\n\t        if (state.transform.abbrevs['default']['number'][label]) {\n\t            label = state.transform.abbrevs['default']['number'][label];\n\t        };\n\t        year = label + (num - offset);\n\t    }\n\t    return year;\n\t};\n\tCSL.Util.Dates.year[\"short\"] = function (state, num) {\n\t    num = num.toString();\n\t    if (num && num.length === 4) {\n\t        return num.substr(2);\n\t    }\n\t};\n\tCSL.Util.Dates.year.numeric = function (state, num) {\n\t    var m, pre;\n\t    num = \"\" + num;\n\t    m = num.match(/([0-9]*)$/);\n\t    if (m) {\n\t        pre = num.slice(0, m[1].length * -1);\n\t        num = m[1];\n\t    } else {\n\t        pre = num;\n\t        num = \"\";\n\t    }\n\t    while (num.length < 4) {\n\t        num = \"0\" + num;\n\t    }\n\t    return (pre + num);\n\t};\n\tCSL.Util.Dates.normalizeMonth = function (num, useSeason) {\n\t    var ret;\n\t    if (!num) {\n\t        num = 0;\n\t    }\n\t    num = \"\" + num;\n\t    if (!num.match(/^[0-9]+$/)) {\n\t        num = 0;\n\t    }\n\t    num = parseInt(num, 10);\n\t    if (useSeason) {\n\t        var res = {stub: \"month-\", num: num};\n\t        if (res.num < 1 || res.num > 20) {\n\t            res.num = 0;\n\t        } else if (res.num > 16) {\n\t            res.stub = \"season-\";\n\t            res.num = res.num - 16;\n\t        } else if (res.num > 12) {\n\t            res.stub = \"season-\";\n\t            res.num = res.num - 12;\n\t        }\n\t        ret = res;\n\t    } else {\n\t        if (num < 1 || num > 12) {\n\t            num = 0;\n\t        }\n\t        ret = num;\n\t    }\n\t    return ret;\n\t}\n\tCSL.Util.Dates.month = {};\n\tCSL.Util.Dates.month.numeric = function (state, num) {\n\t    var num = CSL.Util.Dates.normalizeMonth(num);\n\t    if (!num) {\n\t        num = \"\";\n\t    }\n\t    return num;\n\t};\n\tCSL.Util.Dates.month[\"numeric-leading-zeros\"] = function (state, num) {\n\t    var num = CSL.Util.Dates.normalizeMonth(num);\n\t    if (!num) {\n\t        num = \"\";\n\t    } else {\n\t        num = \"\" + num;\n\t        while (num.length < 2) {\n\t            num = \"0\" + num;\n\t        }\n\t    }\n\t    return num;\n\t};\n\tCSL.Util.Dates.month[\"long\"] = function (state, num, gender, forceDefaultLocale) {\n\t    var res = CSL.Util.Dates.normalizeMonth(num, true);\n\t    var num = res.num;\n\t    if (!num) {\n\t        num = \"\";\n\t    } else {\n\t        num = \"\" + num;\n\t        while (num.length < 2) {\n\t            num = \"0\" + num;\n\t        }\n\t        num = state.getTerm(res.stub + num, \"long\", 0, 0, false, forceDefaultLocale);\n\t    }\n\t    return num;\n\t};\n\tCSL.Util.Dates.month[\"short\"] = function (state, num, gender, forceDefaultLocale) {\n\t    var res = CSL.Util.Dates.normalizeMonth(num, true);\n\t    var num = res.num;\n\t    if (!num) {\n\t        num = \"\";\n\t    } else {\n\t        num = \"\" + num;\n\t        while (num.length < 2) {\n\t            num = \"0\" + num;\n\t        }\n\t        num = state.getTerm(res.stub + num, \"short\", 0, 0, false, forceDefaultLocale);\n\t    }\n\t    return num;\n\t};\n\tCSL.Util.Dates.day = {};\n\tCSL.Util.Dates.day.numeric = function (state, num) {\n\t    return num.toString();\n\t};\n\tCSL.Util.Dates.day[\"long\"] = CSL.Util.Dates.day.numeric;\n\tCSL.Util.Dates.day[\"numeric-leading-zeros\"] = function (state, num) {\n\t    if (!num) {\n\t        num = 0;\n\t    }\n\t    num = num.toString();\n\t    while (num.length < 2) {\n\t        num = \"0\" + num;\n\t    }\n\t    return num.toString();\n\t};\n\tCSL.Util.Dates.day.ordinal = function (state, num, gender) {\n\t    return state.fun.ordinalizer.format(num, gender);\n\t};\n\tCSL.Util.Sort = {};\n\tCSL.Util.Sort.strip_prepositions = function (str) {\n\t    var m;\n\t    if (\"string\" === typeof str) {\n\t        m = str.toLocaleLowerCase();\n\t        m = str.match(/^((a|an|the)\\s+)/);\n\t    }\n\t    if (m) {\n\t        str = str.substr(m[1].length);\n\t    }\n\t    return str;\n\t};\n\tCSL.Util.substituteStart = function (state, target) {\n\t    var element_trace, display, bib_first, func, choose_start, if_start, nodetypes;\n\t    func = function (state, Item) {\n\t        for (var i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n\t            if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n\t                state.tmp.strip_periods += 1;\n\t                break;\n\t            }\n\t        }\n\t    };\n\t    this.execs.push(func);\n\t    if (this.decorations && (state.opt.development_extensions.csl_reverse_lookup_support || state.sys.csl_reverse_lookup_support)) {\n\t        this.decorations.reverse();\n\t        this.decorations.push([\"@showid\",\"true\", this.cslid]);\n\t        this.decorations.reverse();\n\t    }\n\t    nodetypes = [\"number\", \"date\", \"names\"];\n\t    if ((\"text\" === this.name && !this.postponed_macro) || nodetypes.indexOf(this.name) > -1) {\n\t        element_trace = function (state, Item, item) {\n\t            if (state.tmp.element_trace.value() === \"author\" || \"names\" === this.name) {\n\t                if (item && item[\"author-only\"]) {\n\t                    state.tmp.element_trace.push(\"do-not-suppress-me\");\n\t                } else if (item && item[\"suppress-author\"]) {\n\t                }\n\t            } else {\n\t                if (item && item[\"author-only\"]) {\n\t                    state.tmp.element_trace.push(\"suppress-me\");\n\t                } else if (item && item[\"suppress-author\"]) {\n\t                    state.tmp.element_trace.push(\"do-not-suppress-me\");\n\t                }\n\t            }\n\t        };\n\t        this.execs.push(element_trace);\n\t    }\n\t    display = this.strings.cls;\n\t    this.strings.cls = false;\n\t    if (state.build.render_nesting_level === 0) {\n\t        if (state.build.area === \"bibliography\" && state.bibliography.opt[\"second-field-align\"]) {\n\t            bib_first = new CSL.Token(\"group\", CSL.START);\n\t            bib_first.decorations = [[\"@display\", \"left-margin\"]];\n\t            func = function (state, Item) {\n\t                if (!state.tmp.render_seen) {\n\t                    bib_first.strings.first_blob = Item.id;\n\t                    state.output.startTag(\"bib_first\", bib_first);\n\t                }\n\t            };\n\t            bib_first.execs.push(func);\n\t            target.push(bib_first);\n\t        } else if (CSL.DISPLAY_CLASSES.indexOf(display) > -1) {\n\t            bib_first = new CSL.Token(\"group\", CSL.START);\n\t            bib_first.decorations = [[\"@display\", display]];\n\t            func = function (state, Item) {\n\t                bib_first.strings.first_blob = Item.id;\n\t                state.output.startTag(\"bib_first\", bib_first);\n\t            };\n\t            bib_first.execs.push(func);\n\t            target.push(bib_first);\n\t        }\n\t        state.build.cls = display;\n\t    }\n\t    state.build.render_nesting_level += 1;\n\t    if (state.build.substitute_level.value() === 1) {\n\t        choose_start = new CSL.Token(\"choose\", CSL.START);\n\t        CSL.Node.choose.build.call(choose_start, state, target);\n\t        if_start = new CSL.Token(\"if\", CSL.START);\n\t        func = function (Item,item) {\n\t            if (state.tmp.can_substitute.value()) {\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        if_start.tests.push(func);\n\t        if_start.test = state.fun.match.any(this, state, if_start.tests);\n\t        target.push(if_start);\n\t    }\n\t    if (state.sys.variableWrapper\n\t        && this.variables_real\n\t        && this.variables_real.length) {\n\t        func = function (state, Item, item) {\n\t            if (!state.tmp.just_looking && !state.tmp.suppress_decorations) {\n\t                variable_entry = new CSL.Token(\"text\", CSL.START);\n\t                variable_entry.decorations = [[\"@showid\", \"true\"]];\n\t                state.output.startTag(\"variable_entry\", variable_entry);\n\t                var position = null;\n\t                if (item) {\n\t                    position = item.position;\n\t                }\n\t                if (!position) position = 0;\n\t                var positionMap = [\n\t                    \"first\",\n\t                    \"subsequent\",\n\t                    \"ibid\",\n\t                    \"ibid-with-locator\"\n\t                ]\n\t                var noteNumber = 0;\n\t                if (item && item.noteIndex) {\n\t                    noteNumber = item.noteIndex;\n\t                }\n\t                var firstReferenceNoteNumber = 0;\n\t                if (item && item['first-reference-note-number']) {\n\t                    firstReferenceNoteNumber = item['first-reference-note-number'];\n\t                }\n\t                var citationNumber = 0;\n\t                if (item && item['citation-number']) {\n\t                    citationNumber = item['citation-number'];\n\t                }\n\t                var index = 0;\n\t                if (item && item.index) {\n\t                    index = item.index;\n\t                }\n\t                var params = {\n\t                    itemData: Item,\n\t                    variableNames: this.variables,\n\t                    context: state.tmp.area,\n\t                    xclass: state.opt.xclass,\n\t                    position: positionMap[position],\n\t                    \"note-number\": noteNumber,\n\t                    \"first-reference-note-number\": firstReferenceNoteNumber,\n\t                    \"citation-number\": citationNumber,\n\t                    \"index\": index,\n\t                    \"mode\": state.opt.mode\n\t                };\n\t                state.output.current.value().params = params;\n\t            }\n\t        }\n\t        this.execs.push(func);\n\t    }\n\t};\n\tCSL.Util.substituteEnd = function (state, target) {\n\t    var func, bib_first_end, bib_other, if_end, choose_end, toplevel, hasval, author_substitute, str;\n\t    if (state.sys.variableWrapper\n\t        && (this.hasVariable || (this.variables_real && this.variables_real.length))) {\n\t        func = function (state,Item) {\n\t            if (!state.tmp.just_looking && !state.tmp.suppress_decorations) {\n\t                state.output.endTag(\"variable_entry\");\n\t            }\n\t        }\n\t        this.execs.push(func);\n\t    }\n\t    func = function (state, Item) {\n\t        for (var i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n\t            if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n\t                state.tmp.strip_periods += -1;\n\t                break;\n\t            }\n\t        }\n\t    };\n\t    this.execs.push(func);\n\t    state.build.render_nesting_level += -1;\n\t    if (state.build.render_nesting_level === 0) {\n\t        if (state.build.cls) {\n\t            func = function (state, Item) {\n\t                state.output.endTag(\"bib_first\");\n\t            };\n\t            this.execs.push(func);\n\t            state.build.cls = false;\n\t        } else if (state.build.area === \"bibliography\" && state.bibliography.opt[\"second-field-align\"]) {\n\t            bib_first_end = new CSL.Token(\"group\", CSL.END);\n\t            func = function (state, Item) {\n\t                if (!state.tmp.render_seen) {\n\t                    state.output.endTag(\"bib_first\"); // closes bib_first\n\t                }\n\t            };\n\t            bib_first_end.execs.push(func);\n\t            target.push(bib_first_end);\n\t            bib_other = new CSL.Token(\"group\", CSL.START);\n\t            bib_other.decorations = [[\"@display\", \"right-inline\"]];\n\t            func = function (state, Item) {\n\t                if (!state.tmp.render_seen) {\n\t                    state.tmp.render_seen = true;\n\t                    state.output.startTag(\"bib_other\", bib_other);\n\t                }\n\t            };\n\t            bib_other.execs.push(func);\n\t            target.push(bib_other);\n\t        }\n\t    }\n\t    if (state.build.substitute_level.value() === 1) {\n\t        if_end = new CSL.Token(\"if\", CSL.END);\n\t        target.push(if_end);\n\t        choose_end = new CSL.Token(\"choose\", CSL.END);\n\t        CSL.Node.choose.build.call(choose_end, state, target);\n\t    }\n\t    if (\"names\" === this.name || (\"text\" === this.name && this.variables_real !== \"title\")) {\n\t        author_substitute = new CSL.Token(\"text\", CSL.SINGLETON);\n\t        func = function (state, Item) {\n\t            if (state.tmp.area !== \"bibliography\") return;\n\t            if (\"string\" !== typeof state.bibliography.opt[\"subsequent-author-substitute\"]) return;\n\t            if (this.variables_real && !Item[this.variables_real]) return;\n\t            if (state.tmp.substituted_variable !== this.variables_real) {\n\t                return;\n\t            }\n\t            var subrule = state.bibliography.opt[\"subsequent-author-substitute-rule\"];\n\t            var i, ilen;\n\t            var printing = !state.tmp.suppress_decorations;\n\t            if (printing && state.tmp.subsequent_author_substitute_ok) {\n\t                if (state.tmp.rendered_name) {\n\t                    if (\"partial-each\" === subrule || \"partial-first\" === subrule) {\n\t                        var dosub = true;\n\t                        var rendered_name = [];\n\t                        for (i = 0, ilen = state.tmp.name_node.children.length; i < ilen; i += 1) {\n\t                            var name = state.tmp.rendered_name[i];\n\t                            if (dosub\n\t                                && state.tmp.last_rendered_name && state.tmp.last_rendered_name.length > (i - 1)\n\t                                && name && !name.localeCompare(state.tmp.last_rendered_name[i])) {\n\t                                str = new CSL.Blob(state[state.tmp.area].opt[\"subsequent-author-substitute\"]);\n\t                                state.tmp.name_node.children[i].blobs = [str];\n\t                                if (\"partial-first\" === subrule) {\n\t                                    dosub = false;\n\t                                }\n\t                            } else {\n\t                                dosub = false;\n\t                            }\n\t                            rendered_name.push(name);\n\t                        }\n\t                        state.tmp.last_rendered_name = rendered_name;\n\t                    } else if (\"complete-each\" === subrule) {\n\t                        var rendered_name = state.tmp.rendered_name.join(\",\");\n\t                        if (rendered_name) {\n\t                            if (state.tmp.last_rendered_name && !rendered_name.localeCompare(state.tmp.last_rendered_name)) {\n\t                                for (i = 0, ilen = state.tmp.name_node.children.length; i < ilen; i += 1) {\n\t                                    str = new CSL.Blob(state[state.tmp.area].opt[\"subsequent-author-substitute\"]);\n\t                                    state.tmp.name_node.children[i].blobs = [str];\n\t                                }\n\t                            }\n\t                            state.tmp.last_rendered_name = rendered_name;\n\t                        }\n\t                    } else {\n\t                        var rendered_name = state.tmp.rendered_name.join(\",\");\n\t                        if (rendered_name) {\n\t                            if (state.tmp.last_rendered_name && !rendered_name.localeCompare(state.tmp.last_rendered_name)) {\n\t                                str = new CSL.Blob(state[state.tmp.area].opt[\"subsequent-author-substitute\"]);\n\t                                if (state.tmp.label_blob) {\n\t                                    state.tmp.name_node.top.blobs = [str,state.tmp.label_blob];\n\t                                } else if (state.tmp.name_node.top.blobs.length) {\n\t                                    state.tmp.name_node.top.blobs[0].blobs = [str];\n\t                                } else {\n\t                                    state.tmp.name_node.top.blobs = [str];\n\t                                }\n\t                                state.tmp.substituted_variable = this.variables_real;\n\t                            }\n\t                            state.tmp.last_rendered_name = rendered_name;\n\t                        }\n\t                    }\n\t                    state.tmp.subsequent_author_substitute_ok = false;\n\t                }\n\t            }\n\t        };\n\t        this.execs.push(func);\n\t    }\n\t    if ((\"text\" === this.name && !this.postponed_macro) || [\"number\", \"date\", \"names\"].indexOf(this.name) > -1) {\n\t        func = function (state, Item) {\n\t            state.tmp.element_trace.pop();\n\t        };\n\t        this.execs.push(func);\n\t    }\n\t};\n\tCSL.Util.padding = function (num) {\n\t    var m = num.match(/\\s*(-{0,1}[0-9]+)/);\n\t    if (m) {\n\t        num = parseInt(m[1], 10);\n\t        if (num < 0) {\n\t            num = 99999999999999999999 + num;\n\t        }\n\t        num = \"\" + num;\n\t        while (num.length < 20) {\n\t            num = \"0\" + num;\n\t        }\n\t    }\n\t    return num;\n\t};\n\tCSL.Util.LongOrdinalizer = function () {};\n\tCSL.Util.LongOrdinalizer.prototype.init = function (state) {\n\t    this.state = state;\n\t};\n\tCSL.Util.LongOrdinalizer.prototype.format = function (num, gender) {\n\t    if (num < 10) {\n\t        num = \"0\" + num;\n\t    }\n\t    var ret = CSL.Engine.getField(\n\t        CSL.LOOSE, \n\t        this.state.locale[this.state.opt.lang].terms,\n\t        \"long-ordinal-\" + num,\n\t        \"long\", \n\t        0, \n\t        gender\n\t    );\n\t    if (!ret) {\n\t        ret = this.state.fun.ordinalizer.format(num, gender);\n\t    }\n\t    this.state.tmp.cite_renders_content = true;\n\t    return ret;\n\t};\n\tCSL.Util.Ordinalizer = function (state) {\n\t    this.state = state;\n\t    this.suffixes = {};\n\t};\n\tCSL.Util.Ordinalizer.prototype.init = function () {\n\t    if (!this.suffixes[this.state.opt.lang]) {\n\t        this.suffixes[this.state.opt.lang] = {};\n\t        for (var i = 0, ilen = 3; i < ilen; i += 1) {\n\t            var gender = [undefined, \"masculine\", \"feminine\"][i];\n\t            this.suffixes[this.state.opt.lang][gender] = [];\n\t            for (var j = 1; j < 5; j += 1) {\n\t                var ordinal = this.state.getTerm(\"ordinal-0\" + j, \"long\", false, gender);\n\t                if (\"undefined\" === typeof ordinal) {\n\t                    delete this.suffixes[this.state.opt.lang][gender];\n\t                    break;\n\t                }\n\t                this.suffixes[this.state.opt.lang][gender].push(ordinal);\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Util.Ordinalizer.prototype.format = function (num, gender) {\n\t    var str;\n\t    num = parseInt(num, 10);\n\t    str = \"\" + num;\n\t    var suffix = \"\";\n\t    var trygenders = [];\n\t    if (gender) {\n\t        trygenders.push(gender);\n\t    }\n\t    trygenders.push(\"neuter\");\n\t    if (this.state.locale[this.state.opt.lang].ord[\"1.0.1\"]) {\n\t        suffix = this.state.getTerm(\"ordinal\",false,0,gender);\n\t        var trygender;\n\t        for (var i = 0, ilen = trygenders.length; i < ilen; i += 1) {\n\t            trygender = trygenders[i];\n\t            var ordinfo = this.state.locale[this.state.opt.lang].ord[\"1.0.1\"];\n\t            if (ordinfo[\"whole-number\"][str] && ordinfo[\"whole-number\"][str][trygender]) {\n\t                suffix = this.state.getTerm(this.state.locale[this.state.opt.lang].ord[\"1.0.1\"][\"whole-number\"][str][trygender],false,0,gender);\n\t            } else if (ordinfo[\"last-two-digits\"][str.slice(str.length - 2)] && ordinfo[\"last-two-digits\"][str.slice(str.length - 2)][trygender]) {\n\t                suffix = this.state.getTerm(this.state.locale[this.state.opt.lang].ord[\"1.0.1\"][\"last-two-digits\"][str.slice(str.length - 2)][trygender],false,0,gender);\n\t            } else if (ordinfo[\"last-digit\"][str.slice(str.length - 1)] && ordinfo[\"last-digit\"][str.slice(str.length - 1)][trygender]) {\n\t                suffix = this.state.getTerm(this.state.locale[this.state.opt.lang].ord[\"1.0.1\"][\"last-digit\"][str.slice(str.length - 1)][trygender],false,0,gender);\n\t            }\n\t            if (suffix) {\n\t                break;\n\t            }\n\t        }\n\t    } else {\n\t        if (!gender) {\n\t            gender = undefined;\n\t        }\n\t        this.state.fun.ordinalizer.init();\n\t        if ((num / 10) % 10 === 1 || (num > 10 && num < 20)) {\n\t            suffix = this.suffixes[this.state.opt.lang][gender][3];\n\t        } else if (num % 10 === 1 && num % 100 !== 11) {\n\t            suffix = this.suffixes[this.state.opt.lang][gender][0];\n\t        } else if (num % 10 === 2 && num % 100 !== 12) {\n\t            suffix = this.suffixes[this.state.opt.lang][gender][1];\n\t        } else if (num % 10 === 3 && num % 100 !== 13) {\n\t            suffix = this.suffixes[this.state.opt.lang][gender][2];\n\t        } else {\n\t            suffix = this.suffixes[this.state.opt.lang][gender][3];\n\t        }\n\t    }\n\t    str = str += suffix;\n\t    return str;\n\t};\n\tCSL.Util.Romanizer = function () {};\n\tCSL.Util.Romanizer.prototype.format = function (num) {\n\t    var ret, pos, n, numstr, len;\n\t    ret = \"\";\n\t    if (num < 6000) {\n\t        numstr = num.toString().split(\"\");\n\t        numstr.reverse();\n\t        pos = 0;\n\t        n = 0;\n\t        len = numstr.length;\n\t        for (pos = 0; pos < len; pos += 1) {\n\t            n = parseInt(numstr[pos], 10);\n\t            ret = CSL.ROMAN_NUMERALS[pos][n] + ret;\n\t        }\n\t    }\n\t    return ret;\n\t};\n\tCSL.Util.Suffixator = function (slist) {\n\t    if (!slist) {\n\t        slist = CSL.SUFFIX_CHARS;\n\t    }\n\t    this.slist = slist.split(\",\");\n\t};\n\tCSL.Util.Suffixator.prototype.format = function (N) {\n\t    var X;\n\t    N += 1;\n\t    var key = \"\";\n\t    do {\n\t        X = ((N % 26) === 0) ? 26 : (N % 26);\n\t        key = this.slist[X-1] + key;\n\t        N = (N - X) / 26;\n\t    } while ( N !== 0 );\n\t    return key;\n\t};\n\tCSL.Engine.prototype.processNumber = function (node, ItemObject, variable, type) {\n\t    var val, m, i, ilen, j, jlen;\n\t    var debug = false;\n\t    var me = this;\n\t    function normalizeFieldValue(str, defaultLabel) {\n\t        str = str.trim();\n\t        var m = str.match(/^([^ ]+)/);\n\t        if (m && !CSL.STATUTE_SUBDIV_STRINGS[m[1]]) {\n\t            var embeddedLabel = null;\n\t            if (variable === \"locator\" ) {\n\t                if (ItemObject.label) {\n\t                    embeddedLabel = CSL.STATUTE_SUBDIV_STRINGS_REVERSE[ItemObject.label];\n\t                } else {\n\t                    embeddedLabel = \"p.\";\n\t                }\n\t            } else {\n\t                embeddedLabel = CSL.STATUTE_SUBDIV_STRINGS_REVERSE[variable];\n\t            }\n\t            if (embeddedLabel) {\n\t                str = embeddedLabel + \" \" + str;\n\t            }\n\t        }\n\t        return str;\n\t    }\n\t    function composeNumberInfo(origLabel, label, val, joiningSuffix) {\n\t        joiningSuffix = joiningSuffix ? joiningSuffix : \"\";\n\t        var info = {};\n\t        if (!label && !CSL.STATUTE_SUBDIV_STRINGS_REVERSE[variable]) {\n\t                label = \"var:\"+variable;\n\t        }\n\t        if (label) {\n\t            var m = label.match(/(\\s*)([^\\s]*)(\\s*)/);\n\t            info.label = m[2];\n\t            info.origLabel = origLabel;\n\t            info.labelSuffix = m[3] ? m[3] : \"\";\n\t            info.plural = 0;\n\t            info.labelVisibility = false;\n\t        }\n\t        var m = val.match(/^([a-zA-Z0]*)([0-9]+(?:[a-zA-Z]*|[-,a-zA-Z]+))$/);\n\t        if (m) {\n\t            info.particle = m[1];\n\t            info.value = m[2];\n\t        } else {\n\t            info.particle = \"\";\n\t            info.value = val;\n\t        }\n\t        info.joiningSuffix = joiningSuffix.replace(/\\s*-\\s*/, \"-\");\n\t        return info;\n\t    };\n\t    function fixupSubsections(elems) {\n\t        for (var i=elems.length-2;i>-1;i-=2) {\n\t            if (elems[i] === \"-\"\n\t               && elems[i-1].match(/^(?:(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z])\\.  *)*[0-9]+[,a-zA-Z]+$/)\n\t               && elems[i+1].match(/^[,a-zA-Z]+$/)) {\n\t                elems[i-1] = elems.slice(i-1,i+2).join(\"\");\n\t                elems = elems.slice(0,i).concat(elems.slice(i+2));\n\t            }\n\t        }\n\t        return elems;\n\t    }\n\t    function parseString(str, defaultLabel) {\n\t        defaultLabel = defaultLabel ? defaultLabel : \"\";\n\t        str = normalizeFieldValue(str, defaultLabel);\n\t        var elems = [];\n\t        var m = str.match(/(,\\s+|\\s*\\\\*[\\-\\u2013]+\\s*|\\s*&\\s*)/g);\n\t        if (m) {\n\t            var lst = str.split(/(?:,\\s+|\\s*\\\\*[\\-\\u2013]+\\s*|\\s*&\\s*)/);\n\t            for (var i=0,ilen=lst.length-1; i<ilen; i++) {\n\t                elems.push(lst[i]);\n\t                elems.push(m[i]);\n\t            }\n\t            elems.push(lst[lst.length-1]);\n\t            elems = fixupSubsections(elems);\n\t        } else {\n\t            var elems = [str];\n\t        }\n\t        var values = [];\n\t        var label = defaultLabel;\n\t        var origLabel = \"\";\n\t        for (var i=0,ilen=elems.length;i<ilen;i += 2) {\n\t            var m = elems[i].match(/((?:^| )(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z])\\. *)/g);\n\t            if (m) {\n\t                var lst = elems[i].split(/(?:(?:^| )(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z])\\. *)/);\n\t                for (var j=lst.length-1;j>0;j--) {\n\t                    if (lst[j-1] && (!lst[j].match(/^[0-9]+([-,:a-zA-Z]*)$/) || !lst[j-1].match(/^[0-9]+([-,:a-zA-Z]*)$/))) {\n\t                        lst[j-1] = lst[j-1] + m[j-1] + lst[j];\n\t                        lst = lst.slice(0,j).concat(lst.slice(j+1))\n\t                        m = m.slice(0,j-1).concat(m.slice(j))\n\t                    }\n\t                }\n\t                if (m.length > 0 && i === 0) {\n\t                    var slug = m[0].trim();\n\t                    if (!CSL.STATUTE_SUBDIV_STRINGS[slug]\n\t                        || !me.getTerm(CSL.STATUTE_SUBDIV_STRINGS[slug])\n\t                        || ([\"locator\", \"number\"].indexOf(variable) === -1 && CSL.STATUTE_SUBDIV_STRINGS[slug] !== variable)) {\n\t                        m = m.slice(1);\n\t                        lst[0] = lst[0] + \" \" + slug + \" \" + lst[1];\n\t                        lst = lst.slice(0,1).concat(lst.slice(2))\n\t                    }\n\t                }\n\t                for (var j=0,jlen=lst.length; j<jlen; j++) {\n\t                    if (lst[j] || j === (lst.length-1)) {\n\t                        label = m[j-1] ? m[j-1] : label;\n\t                        var origLabel = j > 1 ? m[j-1] : \"\";\n\t                        var str = lst[j] ? lst[j].trim() : \"\";\n\t                        if (j === (lst.length-1)) {\n\t                            values.push(composeNumberInfo(origLabel, label, str, elems[i+1]));\n\t                        } else {\n\t                            values.push(composeNumberInfo(origLabel, label, str));\n\t                        }\n\t                    }\n\t                }\n\t            } else {\n\t                values.push(composeNumberInfo(origLabel, label, elems[i], elems[i+1]));\n\t            }\n\t        }\n\t        return values;\n\t    }\n\t    function setSpaces(values) {\n\t        for (var i=0,ilen=values.length-1;i<ilen;i++) {\n\t            if (!values[i].joiningSuffix && values[i+1].label) {\n\t                values[i].joiningSuffix = \" \";\n\t            }\n\t        }\n\t    }\n\t    function fixNumericAndCount(values, i, currentLabelInfo) {\n\t        var master = values[currentLabelInfo.pos];\n\t        var val = values[i].value;\n\t        var isEscapedHyphen = master.joiningSuffix === \"\\\\-\";\n\t        if (val.particle && val.particle !== master.particle) {\n\t            currentLabelInfo.collapsible = false;\n\t        }\n\t        var mVal = val.match(/^[0-9]+([-,:a-zA-Z]*)$/);\n\t        var mCurrentLabel = master.value.match(/^[0-9]+([-,:a-zA-Z]*)$/);\n\t        if (!val || !mVal || !mCurrentLabel || isEscapedHyphen) {\n\t            currentLabelInfo.collapsible = false;\n\t            if (!val || !mCurrentLabel) {\n\t                currentLabelInfo.numeric = false;\n\t            }\n\t            if (isEscapedHyphen) {\n\t                currentLabelInfo.count--;\n\t            }\n\t        }\n\t        if ((mVal && mVal[1]) || (mCurrentLabel && mCurrentLabel[1])) {\n\t            currentLabelInfo.collapsible = false;\n\t        }\n\t        var isCollapsible = currentLabelInfo.collapsible;\n\t        if (!isCollapsible && i>0 && val.match(/^[ivxlcmIVXLCM]+$/) && values[i-1].value.match(/^[ivxlcmIVXLCM]+$/)) {\n\t            isCollapsible = true;\n\t        }\n\t        for (var j=currentLabelInfo.pos,jlen=values.length; j<jlen; j++) {\n\t            if (currentLabelInfo.label === values[j].label && currentLabelInfo.count > 1 && isCollapsible) {\n\t                values[j].plural = 1;\n\t            }\n\t            values[j].numeric = currentLabelInfo.numeric;\n\t            values[j].collapsible = currentLabelInfo.collapsible;\n\t        }\n\t        currentLabelInfo.label = values[i].label;\n\t        currentLabelInfo.count = 1;\n\t        currentLabelInfo.pos = i;\n\t        currentLabelInfo.numeric = true;\n\t        currentLabelInfo.collapsible = true;\n\t    }\n\t    function setPluralsAndNumerics(values) {\n\t        var currentLabelInfo = {\n\t            label: null,\n\t            count: 1,\n\t            numeric: true,\n\t            collapsible: true,\n\t            pos: 0\n\t        }\n\t        var masterLabel = values.length ? values[0].label : null;\n\t        for (var i=0,ilen=values.length;i<ilen;i++) {\n\t            if (values[i].label) {\n\t                if (values[i].label === currentLabelInfo.label) {\n\t                    currentLabelInfo.count++;\n\t                } else {\n\t                    fixNumericAndCount(values, i, currentLabelInfo);\n\t                    if (currentLabelInfo.pos === 0) {\n\t                        if (variable === \"locator\" || variable === \"number\") {\n\t                            if (!me.getTerm(CSL.STATUTE_SUBDIV_STRINGS[currentLabelInfo.label]) && currentLabelInfo.label.slice(0, 4) !== \"var:\") {\n\t                                values[currentLabelInfo.pos].labelVisibility = true;\n\t                            }\n\t                        }\n\t                        if ([\"locator\", \"number\"].indexOf(variable) === -1) {\n\t                            if (CSL.STATUTE_SUBDIV_STRINGS[currentLabelInfo.label] !== variable && currentLabelInfo.label.slice(0, 4) !== \"var:\") {\n\t                                values[0].labelVisibility = true;\n\t                            }\n\t                        }\n\t                    } else {\n\t                        if (values[i-1].label !== values[i].label && currentLabelInfo.label.slice(0, 4) !== \"var:\") {\n\t                            values[currentLabelInfo.pos].labelVisibility = true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        fixNumericAndCount(values, values.length-1, currentLabelInfo);\n\t        if (values.length && values[0].numeric && variable.slice(0, 10) === \"number-of-\") {\n\t            if (parseInt(ItemObject[variable], 10) > 1) {\n\t                values[0].plural = 1;\n\t            }\n\t        }\n\t        for (var i=0,ilen=values.length;i<ilen;i++) {\n\t            if (!values[i].numeric) {\n\t                var origLabel = values[i].origLabel ? values[i].origLabel : \"\";\n\t                values[i].value = (origLabel + values[i].value).trim();\n\t                if (values[i].label !== values[0].label) {\n\t                    values[i].label = \"\";\n\t                }\n\t            }\n\t        }\n\t    }        \n\t    function setStyling(values) {\n\t        var masterNode = CSL.Util.cloneToken(node);\n\t        var masterStyling = new CSL.Token();\n\t        if (!me.tmp.just_looking) {\n\t            for (var j=masterNode.decorations.length-1;j>-1;j--) {\n\t                if (masterNode.decorations[j][0] === \"@quotes\") {\n\t                    masterStyling.decorations = masterStyling.decorations.concat(masterNode.decorations.slice(j, j+1));\n\t                    masterNode.decorations = masterNode.decorations.slice(0, j).concat(masterNode.decorations.slice(j+1))\n\t                }\n\t            }\n\t            masterStyling.strings.prefix = masterNode.strings.prefix;\n\t            masterNode.strings.prefix = \"\";\n\t            masterStyling.strings.suffix = masterNode.strings.suffix;\n\t            masterNode.strings.suffix = \"\";\n\t        }\n\t        var masterLabel = values.length ? values[0].label : null;\n\t        if (values.length) {\n\t            for (var i=0,ilen=values.length; i<ilen; i++) {\n\t                var val = values[i];\n\t                var newnode = CSL.Util.cloneToken(masterNode);\n\t                newnode.gender = node.gender;\n\t                if (masterLabel === val.label) {\n\t                    newnode.formatter = node.formatter;\n\t                }\n\t                if (val.numeric) {\n\t                    newnode.successor_prefix = val.successor_prefix;\n\t                }\n\t                newnode.strings.suffix = newnode.strings.suffix + stripHyphenBackslash(val.joiningSuffix);\n\t                val.styling = newnode;\n\t            }\n\t            if (!me.tmp.just_looking) {\n\t                if (values[0].value.slice(0,1) === \"\\\"\" && values[values.length-1].value.slice(-1) === \"\\\"\") {\n\t                    values[0].value = values[0].value.slice(1);\n\t                    values[values.length-1].value = values[values.length-1].value.slice(0,-1);\n\t                    masterStyling.decorations.push([\"@quotes\", true]);\n\t                }\n\t            }\n\t        }\n\t        return masterStyling;\n\t    }\n\t    function stripHyphenBackslash(joiningSuffix) {\n\t        return joiningSuffix.replace(\"\\\\-\", \"-\");\n\t    }\n\t    function fixupRangeDelimiter(variable, val, rangeDelimiter, isNumeric) {\n\t        var isPage = checkPage(variable, val);\n\t        var hasTerm = checkTerm(variable, val);\n\t        if (hasTerm && rangeDelimiter === \"-\") {\n\t            if (isNumeric) {\n\t                if (isPage || [\"locator\", \"issue\", \"volume\", \"edition\", \"number\"].indexOf(variable) > -1) {\n\t                    rangeDelimiter = me.getTerm(\"page-range-delimiter\")\n\t                    if (!rangeDelimiter) {\n\t                        rangeDelimiter = \"\\u2013\";\n\t                    }\n\t                }\n\t                if (variable === \"collection-number\") {\n\t                    rangeDelimiter = me.getTerm(\"year-range-delimiter\");\n\t                    if (!rangeDelimiter) {\n\t                        rangeDelimiter = \"\\u2013\";\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return rangeDelimiter;\n\t    }\n\t    function checkPage(variable, val) {\n\t        return variable === \"page\" \n\t            || (variable === \"locator\" && ([\"p.\"].indexOf(val.label) > -1));\n\t    }\n\t    function checkTerm(variable, val) {\n\t        var ret = true;\n\t        if (variable === \"locator\") {\n\t            ret = !!me.getTerm(CSL.STATUTE_SUBDIV_STRINGS[val.label]);\n\t        }\n\t        return ret;\n\t    }\n\t    function manglePageNumbers(values, i, currentInfo) {\n\t        if (i<1) return;\n\t        if (currentInfo.count !== 2) {\n\t            return;\n\t        }\n\t        if (values[i-1].particle !== values[i].particle) {\n\t            return;\n\t        }\n\t        if (values[i-1].joiningSuffix !== \"-\") {\n\t            currentInfo.count = 1;\n\t            return;\n\t        }\n\t        if (!me.opt[\"page-range-format\"] && parseInt(values[i-1].value, 10) > parseInt(values[i].value, 10)) {\n\t            values[i-1].joiningSuffix = fixupRangeDelimiter(variable, values[i], values[i-1].joiningSuffix, true);\n\t            return;\n\t        }\n\t        var val = values[i];\n\t        var isPage = checkPage(variable, val);\n\t        if (isPage) {\n\t            var str = values[i-1].particle + values[i-1].value + \" - \" + values[i].particle + values[i].value;\n\t            str = me.fun.page_mangler(str);\n\t        } else {\n\t            str = values[i-1].value + stripHyphenBackslash(values[i-1].joiningSuffix) + values[i].value;\n\t        }\n\t        var m = str.match(/^([a-zA-Z]?0*)([0-9]+)(\\s*[^0-9]+\\s*)([-,a-zA-Z]?0*)([0-9]+)$/);\n\t        if (m) {\n\t            var rangeDelimiter = m[3];\n\t            rangeDelimiter = fixupRangeDelimiter(variable, val, rangeDelimiter, values[i].numeric);\n\t            values[i-1].particle = m[1];\n\t            values[i-1].value = m[2];\n\t            values[i-1].joiningSuffix = rangeDelimiter;\n\t            values[i].particle = m[4];\n\t            values[i].value = m[5];\n\t        }\n\t        currentInfo.count = 0;\n\t    }\n\t    function fixRanges(values) {\n\t        if (!node) return;\n\t        if ([\"page\", \"page-first\", \"chapter-number\", \"collection-number\", \"edition\", \"issue\", \"number\", \"number-of-pages\", \"number-of-volumes\", \"volume\", \"locator\"].indexOf(variable) === -1) return;\n\t        var currentInfo = {\n\t            count: 0,\n\t            label: null,\n\t            lastHadRangeDelimiter: false\n\t        }\n\t        for (var i=0,ilen=values.length; i<ilen; i++) {\n\t            var val = values[i];\n\t            if (!val.collapsible) {\n\t                currentInfo.count = 0;\n\t                currentInfo.label = null;\n\t                var isNumeric = val.numeric;\n\t                if (i<(values.length-1) && !isNumeric && val.value.match(/^[ivxlcmIVXLCM]+$/) && values[i+1].value.match(/^[ivxlcmIVXLCM]+$/)) {\n\t                    isNumeric = true;\n\t                }\n\t                val.joiningSuffix = fixupRangeDelimiter(variable, val, val.joiningSuffix, isNumeric);\n\t            } else if (currentInfo.label === val.label && val.joiningSuffix === \"-\") {\n\t                currentInfo.count = 1;\n\t            } else if (currentInfo.label === val.label && val.joiningSuffix !== \"-\") {\n\t                currentInfo.count++;\n\t                if (currentInfo.count === 2) {\n\t                    manglePageNumbers(values, i, currentInfo);\n\t                }\n\t            } else if (currentInfo.label !== val.label) {\n\t                currentInfo.label = val.label;\n\t                currentInfo.count = 1;\n\t            } else {\n\t                currentInfo.count = 1;\n\t                currentInfo.label = val.label;\n\t            }\n\t        }\n\t        if (currentInfo.count === 2) {\n\t            manglePageNumbers(values, values.length-1, currentInfo);\n\t        }\n\t    }\n\t    function setVariableParams(shadow_numbers, variable, values) {\n\t        var obj = shadow_numbers[variable];\n\t        if (values.length) {\n\t            obj.numeric = values[0].numeric;\n\t            obj.collapsible = values[0].collapsible;\n\t            obj.plural = values[0].plural;\n\t            obj.label = CSL.STATUTE_SUBDIV_STRINGS[values[0].label];\n\t            if (variable === \"number\" && obj.label === \"issue\" && me.getTerm(\"number\")) {\n\t                obj.label = \"number\";\n\t            }\n\t        }\n\t    }\n\t    if (node && this.tmp.shadow_numbers[variable] && this.tmp.shadow_numbers[variable].values.length) {\n\t        var values = this.tmp.shadow_numbers[variable].values;\n\t        fixRanges(values);\n\t            this.tmp.shadow_numbers[variable].masterStyling = setStyling(values);\n\t        return;\n\t    }\n\t    if (!this.tmp.shadow_numbers[variable]) {\n\t        this.tmp.shadow_numbers[variable] = {\n\t            values:[]\n\t        };\n\t    }\n\t    if (!ItemObject) {\n\t        return;\n\t    }\n\t    var languageRole = CSL.LangPrefsMap[variable];\n\t    if (languageRole) {\n\t        var localeType = this.opt[\"cite-lang-prefs\"][languageRole][0];\n\t        val = this.transform.getTextSubField(ItemObject, variable, \"locale-\"+localeType, true);\n\t        val = val.name;\n\t    } else {\n\t        val = ItemObject[variable];\n\t    }\n\t    if (val && this.sys.getAbbreviation) {\n\t        var jurisdiction = this.transform.loadAbbreviation(ItemObject.jurisdiction, \"number\", val);\n\t        if (this.transform.abbrevs[jurisdiction].number) {\n\t            if (this.transform.abbrevs[jurisdiction].number[val]) {\n\t                val = this.transform.abbrevs[jurisdiction].number[val];\n\t            } else {\n\t                if (\"undefined\" !== typeof this.transform.abbrevs[jurisdiction].number[val]) {\n\t                    delete this.transform.abbrevs[jurisdiction].number[val];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (\"undefined\" !== typeof val && (\"string\" === typeof val || \"number\" === typeof val)) {\n\t        if (\"number\" === typeof val) {\n\t            val = \"\" + val;\n\t        }\n\t        var defaultLabel = CSL.STATUTE_SUBDIV_STRINGS_REVERSE[variable];\n\t        if (!this.tmp.shadow_numbers.values) {\n\t            var values = parseString(val, defaultLabel);\n\t            setSpaces(values);\n\t            setPluralsAndNumerics(values);\n\t            this.tmp.shadow_numbers[variable].values = values;\n\t        }\n\t        if (node) {\n\t            fixRanges(values);\n\t            this.tmp.shadow_numbers[variable].masterStyling = setStyling(values)\n\t        }\n\t        setVariableParams(this.tmp.shadow_numbers, variable, values);\n\t    }\n\t};\n\tCSL.Util.outputNumericField = function(state, varname, itemID) {\n\t    state.output.openLevel(state.tmp.shadow_numbers[varname].masterStyling);\n\t    var nums = state.tmp.shadow_numbers[varname].values;\n\t    var masterLabel = nums.length ? nums[0].label : null;\n\t    var labelForm = state.tmp.shadow_numbers[varname].labelForm;\n\t    var embeddedLabelForm;\n\t    if (labelForm) {\n\t        embeddedLabelForm = labelForm\n\t    } else {\n\t        embeddedLabelForm = \"short\";\n\t    }\n\t    var labelDecorations = state.tmp.shadow_numbers[varname].labelDecorations;\n\t    var lastLabelName = null;\n\t    for (var i=0,ilen=nums.length;i<ilen;i++) {\n\t        var num = nums[i];\n\t        var label = \"\";\n\t        if (num.label) {\n\t            var labelName;\n\t            if ('var:' === num.label.slice(0,4)) {\n\t                labelName = num.label.slice(4);\n\t            } else {\n\t                labelName = CSL.STATUTE_SUBDIV_STRINGS[num.label];\n\t            }\n\t            if (labelName) {\n\t                if (num.label === masterLabel) {\n\t                    label = state.getTerm(labelName, labelForm, num.plural);\n\t                } else {\n\t                    label = state.getTerm(labelName, embeddedLabelForm, num.plural);\n\t                }\n\t            }\n\t        }\n\t        var labelPlaceholderPos = -1;\n\t        if (label) {\n\t            labelPlaceholderPos = label.indexOf(\"%s\");\n\t        }\n\t        var numStyling = CSL.Util.cloneToken(num.styling);\n\t        numStyling.formatter = num.styling.formatter;\n\t        numStyling.type = num.styling.type;\n\t        numStyling.num = num.styling.num;\n\t        numStyling.gender = num.styling.gender;\n\t        if (labelPlaceholderPos > 0 && labelPlaceholderPos < (label.length-2)) {\n\t            numStyling.strings.prefix += label.slice(0,labelPlaceholderPos);\n\t            numStyling.strings.suffix = label.slice(labelPlaceholderPos+2) + numStyling.strings.suffix;\n\t        } else if (num.labelVisibility) {\n\t            if (!label) {\n\t                label = num.label;\n\t                labelName = num.label;\n\t            }\n\t            if (labelPlaceholderPos > 0) {\n\t                var prefixLabelStyling = new CSL.Token();\n\t                prefixLabelStyling.decorations = labelDecorations;\n\t                state.output.append(label.slice(0,labelPlaceholderPos), prefixLabelStyling);\n\t            } else if (labelPlaceholderPos === (label.length-2) || labelPlaceholderPos === -1) {\n\t                state.output.append(label+num.labelSuffix, \"empty\");\n\t            }\n\t        }\n\t        if (num.collapsible) {\n\t            if (num.value.match(/^[0-9]+$/)) {\n\t                var blob = new CSL.NumericBlob(num.particle, parseInt(num.value, 10), numStyling, itemID);\n\t            } else {\n\t                var blob = new CSL.NumericBlob(num.particle, num.value, numStyling, itemID);\n\t            }\n\t            if (\"undefined\" === typeof blob.gender) {\n\t                blob.gender = state.locale[state.opt.lang][\"noun-genders\"][varname];\n\t            }\n\t            state.output.append(blob, \"literal\");\n\t        } else {\n\t            state.output.append(num.particle + num.value, numStyling)\n\t        }\n\t        if (labelPlaceholderPos === 0 && labelPlaceholderPos < (label.length-2)) {\n\t            if (lastLabelName === null) {\n\t                lastLabelName = labelName;\n\t            }\n\t            if (labelName !== lastLabelName || i === (nums.length-1)) {\n\t                var suffixLabelStyling = new CSL.Token();\n\t                suffixLabelStyling.decorations = labelDecorations;\n\t                state.output.append(label.slice(labelPlaceholderPos+2), suffixLabelStyling);\n\t            }\n\t        }\n\t        lastLabelName === labelName;\n\t    }\n\t    state.output.closeLevel();\n\t}\n\tCSL.Util.PageRangeMangler = {};\n\tCSL.Util.PageRangeMangler.getFunction = function (state, rangeType) {\n\t    var rangerex, pos, len, stringify, listify, expand, minimize, minimize_internal, chicago, lst, m, b, e, ret, begin, end, ret_func, ppos, llen;\n\t    var range_delimiter = state.getTerm(rangeType + \"-range-delimiter\");\n\t    rangerex = /([a-zA-Z]*)([0-9]+)\\s*(?:\\u2013|-)\\s*([a-zA-Z]*)([0-9]+)/;\n\t    stringify = function (lst) {\n\t        len = lst.length;\n\t        for (pos = 1; pos < len; pos += 2) {\n\t            if (\"object\" === typeof lst[pos]) {\n\t                lst[pos] = lst[pos].join(\"\");\n\t            }\n\t        }\n\t        var ret = lst.join(\"\");\n\t        ret = ret.replace(/([^\\\\])\\-/g, \"$1\"+state.getTerm(rangeType + \"-range-delimiter\"));\n\t        return ret;\n\t    };\n\t    listify = function (str) {\n\t        var m, lst, ret;\n\t        var hyphens = \"\\\\s+\\\\-\\\\s+\";\n\t        var this_range_delimiter = range_delimiter === \"-\" ? \"\" : range_delimiter;\n\t        var delimRex = new RegExp(\"([^\\\\\\\\])[-\" + this_range_delimiter + \"\\\\u2013]\", \"g\");\n\t        str = str.replace(delimRex, \"$1 - \").replace(/\\s+-\\s+/g, \" - \");\n\t        var rexm = new RegExp(\"([a-zA-Z]*[0-9]+\" + hyphens + \"[a-zA-Z]*[0-9]+)\", \"g\");\n\t        var rexlst = new RegExp(\"[a-zA-Z]*[0-9]+\" + hyphens + \"[a-zA-Z]*[0-9]+\");\n\t        m = str.match(rexm);\n\t        lst = str.split(rexlst);\n\t        if (lst.length === 0) {\n\t            ret = m;\n\t        } else {\n\t            ret = [lst[0]];\n\t            for (pos = 1, len = lst.length; pos < len; pos += 1) {\n\t                ret.push(m[pos - 1].replace(/\\s*\\-\\s*/g, \"-\"));\n\t                ret.push(lst[pos]);\n\t            }\n\t        }\n\t        return ret;\n\t    };\n\t    expand = function (str) {\n\t        str = \"\" + str;\n\t        lst = listify(str);\n\t        len = lst.length;\n\t        for (pos = 1; pos < len; pos += 2) {\n\t            m = lst[pos].match(rangerex);\n\t            if (m) {\n\t                if (!m[3] || m[1] === m[3]) {\n\t                    if (m[4].length < m[2].length) {\n\t                        m[4] = m[2].slice(0, (m[2].length - m[4].length)) + m[4];\n\t                    }\n\t                    if (parseInt(m[2], 10) < parseInt(m[4], 10)) {\n\t                        m[3] = range_delimiter + m[1];\n\t                        lst[pos] = m.slice(1);\n\t                    }\n\t                }\n\t            }\n\t            if (\"string\" === typeof lst[pos]) {\n\t                lst[pos] = lst[pos].replace(/\\-/g, range_delimiter);\n\t            }\n\t        }\n\t        return lst;\n\t    };\n\t    minimize = function (lst, minchars, isyear) {\n\t        len = lst.length;\n\t        for (var i = 1, ilen = lst.length; i < ilen; i += 2) {\n\t            lst[i][3] = minimize_internal(lst[i][1], lst[i][3], minchars, isyear);\n\t            if (lst[i][2].slice(1) === lst[i][0]) {\n\t                lst[i][2] = range_delimiter;\n\t            }\n\t        }\n\t        return stringify(lst);\n\t    };\n\t    minimize_internal = function (begin, end, minchars, isyear) {\n\t        if (!minchars) {\n\t            minchars = 0;\n\t        }\n\t        b = (\"\" + begin).split(\"\");\n\t        e = (\"\" + end).split(\"\");\n\t        ret = e.slice();\n\t        ret.reverse();\n\t        if (b.length === e.length) {\n\t            for (var i = 0, ilen = b.length; i < ilen; i += 1) {\n\t                if (b[i] === e[i] && ret.length > minchars) {\n\t                    ret.pop();\n\t                } else {\n\t                    if (minchars && isyear && ret.length === 3) {\n\t                        var front = b.slice(0, i);\n\t                        front.reverse();\n\t                        ret = ret.concat(front);\n\t                    }\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        ret.reverse();\n\t        return ret.join(\"\");\n\t    };\n\t    chicago = function (lst) {\n\t        len = lst.length;\n\t        for (pos = 1; pos < len; pos += 2) {\n\t            if (\"object\" === typeof lst[pos]) {\n\t                m = lst[pos];\n\t                begin = parseInt(m[1], 10);\n\t                end = parseInt(m[3], 10);\n\t                if (begin > 100 && begin % 100 && parseInt((begin / 100), 10) === parseInt((end / 100), 10)) {\n\t                    m[3] = \"\" + (end % 100);\n\t                } else if (begin >= 10000) {\n\t                    m[3] = \"\" + (end % 1000);\n\t                }\n\t            }\n\t            if (m[2].slice(1) === m[0]) {\n\t                m[2] = range_delimiter;\n\t            }\n\t        }\n\t        return stringify(lst);\n\t    };\n\t    var sniff = function (str, func, minchars, isyear) {\n\t        var ret;\n\t\t\tstr = \"\" + str;\n\t\t\tvar lst = expand(str);\n\t        var ret = func(lst, minchars, isyear);\n\t        return ret;\n\t    }\n\t    if (!state.opt[rangeType + \"-range-format\"]) {\n\t        ret_func = function (str) {\n\t            return sniff(str, stringify);\n\t        };\n\t    } else if (state.opt[rangeType + \"-range-format\"] === \"expanded\") {\n\t        ret_func = function (str) {\n\t            return sniff(str, stringify);\n\t        };\n\t    } else if (state.opt[rangeType + \"-range-format\"] === \"minimal\") {\n\t        ret_func = function (str) {\n\t            return sniff(str, minimize);\n\t        };\n\t    } else if (state.opt[rangeType + \"-range-format\"] === \"minimal-two\") {\n\t        ret_func = function (str, isyear) {\n\t            return sniff(str, minimize, 2, isyear);\n\t        };\n\t    } else if (state.opt[rangeType + \"-range-format\"] === \"chicago\") {\n\t        ret_func = function (str) {\n\t            return sniff(str, chicago);\n\t        };\n\t    }\n\t    return ret_func;\n\t};\n\tCSL.Util.FlipFlopper = function(state) {\n\t    this.processTags = processTags;\n\t    var _nestingState = [];\n\t    var _nestingData = {\n\t        \"<span class=\\\"nocase\\\">\": {\n\t            type: \"nocase\",\n\t            opener: \"<span class=\\\"nocase\\\">\",\n\t            closer: \"</span>\",\n\t            attr: null,\n\t            outer: null,\n\t            flipflop: null\n\t        },\n\t        \"<span class=\\\"nodecor\\\">\": {\n\t            type: \"nodecor\",\n\t            opener: \"<span class=\\\"nodecor\\\">\",\n\t            closer: \"</span>\",\n\t            attr: \"@class\",\n\t            outer: \"nodecor\",\n\t            flipflop: {\n\t                \"nodecor\": \"nodecor\"\n\t            }\n\t        },\n\t        \"<span style=\\\"font-variant:small-caps;\\\">\": {\n\t            type: \"tag\",\n\t            opener: \"<span style=\\\"font-variant:small-caps;\\\">\",\n\t            closer: \"</span>\",\n\t            attr: \"@font-variant\",\n\t            outer: \"small-caps\",\n\t            flipflop: {\n\t                \"small-caps\": \"normal\",\n\t                \"normal\": \"small-caps\"\n\t            }\n\t        },\n\t        \"<sc>\": {\n\t            type: \"tag\",\n\t            opener: \"<sc>\",\n\t            closer: \"</sc>\",\n\t            attr: \"@font-variant\",\n\t            outer: \"small-caps\",\n\t            flipflop: {\n\t                \"small-caps\": \"normal\",\n\t                \"normal\": \"small-caps\"\n\t            }\n\t        },\n\t        \"<i>\": {\n\t            type: \"tag\",\n\t            opener: \"<i>\",\n\t            closer: \"</i>\",\n\t            attr: \"@font-style\",\n\t            outer: \"italic\",\n\t            flipflop: {\n\t                \"italic\": \"normal\",\n\t                \"normal\": \"italic\"\n\t            }\n\t        },\n\t        \"<b>\": {\n\t            type: \"tag\",\n\t            opener: \"<b>\",\n\t            closer: \"</b>\",\n\t            attr: \"@font-weight\",\n\t            outer: \"bold\",\n\t            flipflop: {\n\t                \"bold\": \"normal\",\n\t                \"normal\": \"bold\"\n\t            }\n\t        },\n\t        \"<sup>\": {\n\t            type: \"tag\",\n\t            opener: \"<sup>\",\n\t            closer: \"</sup>\",\n\t            attr: \"@vertical-align\",\n\t            outer: \"sup\",\n\t            flipflop: {\n\t                \"sub\": \"sup\",\n\t                \"sup\": \"sup\"\n\t            }\n\t        },\n\t        \"<sub>\": {\n\t            type: \"tag\",\n\t            opener: \"<sub>\",\n\t            closer: \"</sub>\",\n\t            attr: \"@vertical-align\",\n\t            outer: \"sub\",\n\t            flipflop: {\n\t                \"sup\": \"sub\",\n\t                \"sub\": \"sub\"\n\t            }\n\t        },\n\t        \" \\\"\": {\n\t            type: \"quote\",\n\t            opener: \" \\\"\",\n\t            closer: \"\\\"\",\n\t            attr: \"@quotes\",\n\t            outer: \"true\",\n\t            flipflop: {\n\t                \"true\": \"inner\",\n\t                \"inner\": \"true\",\n\t                \"false\": \"true\"\n\t            }\n\t        },\n\t        \" \\'\": {\n\t            type: \"quote\",\n\t            opener: \" \\'\",\n\t            closer: \"\\'\",\n\t            attr: \"@quotes\",\n\t            outer: \"inner\",\n\t            flipflop: {\n\t                \"true\": \"inner\",\n\t                \"inner\": \"true\",\n\t                \"false\": \"true\"\n\t            }\n\t        }\n\t    }\n\t    _nestingData[\"(\\\"\"] = _nestingData[\" \\\"\"]\n\t    _nestingData[\"(\\'\"] = _nestingData[\" \\'\"]\n\t    var localeOpenQuote = state.getTerm(\"open-quote\");\n\t    var localeCloseQuote = state.getTerm(\"close-quote\");\n\t    var localeOpenInnerQuote = state.getTerm(\"open-inner-quote\");\n\t    var localeCloseInnerQuote = state.getTerm(\"close-inner-quote\");\n\t    if (localeOpenQuote && localeCloseQuote && [\" \\\"\",\" \\'\",\"\\\"\",\"\\'\"].indexOf(localeOpenQuote) === -1) {\n\t        _nestingData[localeOpenQuote] = JSON.parse(JSON.stringify(_nestingData[\" \\\"\"]));\n\t        _nestingData[localeOpenQuote].opener = localeOpenQuote;\n\t        _nestingData[localeOpenQuote].closer = localeCloseQuote;\n\t    }\n\t    if (localeOpenInnerQuote && localeCloseInnerQuote && [\" \\\"\",\" \\'\",\"\\\"\",\"\\'\"].indexOf(localeOpenInnerQuote) === -1) {\n\t        _nestingData[localeOpenInnerQuote] = JSON.parse(JSON.stringify(_nestingData[\" \\'\"]));\n\t        _nestingData[localeOpenInnerQuote].opener = localeOpenInnerQuote;\n\t        _nestingData[localeOpenInnerQuote].closer = localeCloseInnerQuote;\n\t    }\n\t    var _nestingQuoteReverse = function() {\n\t        var ret = {};\n\t        for (var key of Object.keys(_nestingData)) {\n\t            if (_nestingData[key].type === \"quote\") {\n\t                ret[_nestingData[key].closer] = _nestingData[key];\n\t            }\n\t        }\n\t        return ret;\n\t    }();\n\t    var _nestingDataAttr = function() {\n\t        var ret = {};\n\t        for (var key of Object.keys(_nestingData)) {\n\t            if (_nestingData[key].type === \"nocase\") continue;\n\t            var attr = _nestingData[key].attr;\n\t            var outer = _nestingData[key].outer;\n\t            var inner = _nestingData[key].flipflop[_nestingData[key].outer];\n\t            ret[attr + \"/\" + outer] = _nestingData[key];\n\t            ret[attr + \"/\" + inner] = _nestingData[key];\n\t        }\n\t        return ret;\n\t    }();\n\t    function _setOuterQuoteForm(quot) {\n\t        var flip = {\n\t            \" \\'\": \" \\\"\",\n\t            \" \\\"\": \" \\'\",\n\t            \"(\\\"\": \"(\\'\",\n\t            \"(\\'\": \"(\\\"\"\n\t        }\n\t        _nestingData[quot].outer = \"true\";\n\t        _nestingData[flip[quot]].outer = \"inner\";\n\t    }\n\t    function _getNestingOpenerParams(opener) {\n\t        var openers = [];\n\t        var closer;\n\t        for (var key of Object.keys(_nestingData)) {\n\t            if (_nestingData[opener].type !== \"quote\" || !_nestingData[opener]) {\n\t                openers.push(key);\n\t            }\n\t        }\n\t        var ret = _nestingData[opener];\n\t        ret.opener = new RegExp(\"^(?:\" + openers.map(function(str){return str.replace(\"(\", \"\\\\(\")}).join(\"|\") + \")\"); \n\t        return ret;\n\t    }\n\t    var _nestingParams = function() {\n\t        var ret = {};\n\t        for (var key of Object.keys(_nestingData)) {\n\t            ret[key] = _getNestingOpenerParams(key);\n\t        }\n\t        return ret;\n\t    }()\n\t    var _tagRex = function() {\n\t        var openers = [];\n\t        var closers = [];\n\t        var vals = {};\n\t        for (var opener in _nestingParams) {\n\t            openers.push(opener);\n\t            vals[_nestingParams[opener].closer] = true;\n\t        }\n\t        for (var closer of Object.keys(vals)) {\n\t            closers.push(closer);\n\t        }\n\t        var all = openers.concat(closers).map(function(str){return str.replace(\"(\", \"\\\\(\")}).join(\"|\");\n\t        return {\n\t            matchAll: new RegExp(\"((?:\" + all + \"))\", \"g\"),\n\t            splitAll: new RegExp(\"(?:\" + all + \")\", \"g\"),\n\t            open: new RegExp(\"(^(?:\" + openers.map(function(str){return str.replace(\"(\", \"\\\\(\")}).join(\"|\") + \")$)\"),\n\t            close: new RegExp(\"(^(?:\" + closers.join(\"|\") + \")$)\"),\n\t        }\n\t    }();\n\t    function _nestingFix (tag, pos) {\n\t        return _pushNestingState(tag, pos);\n\t    }\n\t    function _pushNestingState(tag, pos) {\n\t        if (tag.match(_tagRex.open)) {\n\t            return _tryOpen(tag, pos);\n\t        } else {\n\t            return _tryClose(tag, pos);\n\t        }\n\t    }\n\t    function _tryOpen(tag, pos) {\n\t        var params = _nestingState[_nestingState.length - 1];\n\t        if (!params || tag.match(params.opener)) {\n\t            _nestingState.push({\n\t                type: _nestingParams[tag].type,\n\t                opener: _nestingParams[tag].opener,\n\t                closer: _nestingParams[tag].closer,\n\t                pos: pos\n\t            });\n\t            return false;\n\t        } else {\n\t            _nestingState.pop()\n\t            _nestingState.push({\n\t                type: _nestingParams[tag].type,\n\t                opener: _nestingParams[tag].opener,\n\t                closer: _nestingParams[tag].closer,\n\t                pos: pos\n\t            });\n\t            return {\n\t                fixtag: params.pos\n\t            };\n\t        }\n\t    }\n\t    function _tryClose(tag, pos) {\n\t        var params = _nestingState[_nestingState.length - 1];\n\t        if (params && tag === params.closer) {\n\t            _nestingState.pop()\n\t            if (params.type === \"nocase\") {\n\t                return {\n\t                    nocase: {\n\t                        open: params.pos,\n\t                        close: pos\n\t                    }\n\t                }\n\t            } else {\n\t                return false;\n\t            }\n\t        } else {\n\t            if (params) {\n\t                return {\n\t                    fixtag: params.pos\n\t                };\n\t            } else {\n\t                return {\n\t                    fixtag: pos\n\t                };\n\t            }\n\t        }\n\t    }\n\t    function _doppelString(str) {\n\t        var forcedSpaces = [];\n\t        str = str.replace(/(<span)\\s+(style=\\\"font-variant:)\\s*(small-caps);?\\\"[^>]*(>)/g, \"$1 $2$3;\\\"$4\");\n\t        str = str.replace(/(<span)\\s+(class=\\\"no(?:case|decor)\\\")[^>]*(>)/g, \"$1 $2$3\");\n\t        var match = str.match(_tagRex.matchAll);\n\t        if (!match) {\n\t            return {\n\t                tags: [],\n\t                strings: [str],\n\t                forcedSpaces: []\n\t            };\n\t        }\n\t        var split = str.split(_tagRex.splitAll);\n\t        for (var i=0,ilen=match.length-1;i<ilen;i++) {\n\t            if (_nestingData[match[i]]) {\n\t                if (split[i+1] === \"\" && [\"\\\"\", \"'\"].indexOf(match[i+1]) > -1) {\n\t                    match[i+1] = \" \" + match[i+1]\n\t                    forcedSpaces.push(true);\n\t                } else {\n\t                    forcedSpaces.push(false);\n\t                }\n\t            }\n\t        }\n\t        return {\n\t            tags: match,\n\t            strings: split,\n\t            forcedSpaces: forcedSpaces\n\t        }\n\t    }\n\t    function _undoppelString(obj) {\n\t        var lst = obj.strings.slice(-1);\n\t        for (var i=obj.tags.length-1; i>-1; i+=-1) {\n\t            lst.push(obj.tags[i]);\n\t            lst.push(obj.strings[i]);\n\t        }\n\t        lst.reverse();\n\t        return lst.join(\"|\");\n\t    }\n\t    var _TagReg = function(blob) {\n\t        this.set = set;\n\t        this.pair = pair;\n\t        this.pop = pop;\n\t        _stack = [];\n\t        function set(tag) {\n\t            var attr = _nestingData[tag].attr;\n\t            var decor = null;\n\t            for (var i=_stack.length-1;i>-1;i--) {\n\t                var _decor = _stack[i];\n\t                if (_decor[0] === attr) {\n\t                    decor = _decor;\n\t                    break;\n\t                }\n\t            }\n\t            if (!decor) {\n\t                var allTheDecor = [state[state.tmp.area].opt.layout_decorations].concat(blob.alldecor)\n\t                outer:\n\t                for (var i=allTheDecor.length-1;i>-1;i--) {\n\t                    var decorset = allTheDecor[i];\n\t                    if (!decorset) continue;\n\t                    for (var j=decorset.length-1;j>-1;j--) {\n\t                        var _decor = decorset[j];\n\t                        if (_decor[0] === attr) {\n\t                            decor = _decor;\n\t                            break outer;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (!decor) {\n\t                decor = [attr, _nestingData[tag].outer];\n\t            } else {\n\t                decor = [attr, _nestingData[tag].flipflop[decor[1]]];\n\t            }\n\t            _stack.push(decor);\n\t        }\n\t        function pair() {\n\t            return _stack[_stack.length-1];\n\t        }\n\t        function pop() {\n\t            _stack.pop();\n\t        }\n\t    }\n\t    function _apostropheForce(tag, str) {\n\t        if (tag === \"\\'\") {\n\t            if (str && str.match(/^[^\\.\\?\\:\\;\\ ]/)) {\n\t                return true;\n\t            }\n\t        } else if (tag === \" \\'\" && str && str.match(/^[\\ ]/)) {\n\t            return true;\n\t        }\n\t        return false;\n\t    }\n\t    function _undoppelToQueue(blob, doppel, leadingSpace) {\n\t        var TOP = blob;\n\t        var firstString = true;\n\t        var tagReg = new _TagReg(blob);\n\t        blob.blobs = [];\n\t        function Stack (blob) {\n\t            this.stack = [blob];\n\t            this.latest = blob;\n\t            this.addStyling = function(str, decor, forcedSpace) {\n\t                if (firstString) {\n\t                    if (str.slice(0, 1) === \" \") {\n\t                        str = str.slice(1);\n\t                    }\n\t                    if (str.slice(0, 1) === \" \") {\n\t                        str = str.slice(1);\n\t                    }\n\t                    firstString = false;\n\t                }\n\t                this.latest = this.stack[this.stack.length-1];\n\t                if (decor) {\n\t                    if (\"string\" === typeof this.latest.blobs) {\n\t                        var child = new CSL.Blob();\n\t                        child.blobs = this.latest.blobs;\n\t                        child.alldecor = this.latest.alldecor.slice();\n\t                        this.latest.blobs = [child];\n\t                    }\n\t                    var tok = new CSL.Token();\n\t                    var newblob = new CSL.Blob(null, tok);\n\t                    newblob.alldecor = this.latest.alldecor.slice();\n\t                    if (decor[0] === \"@class\" && decor[1] === \"nodecor\") {\n\t                        var newdecorset = [];\n\t                        var seen = {};\n\t                        var allTheDecor = [state[state.tmp.area].opt.layout_decorations].concat(newblob.alldecor)\n\t                        for (var i=allTheDecor.length-1;i>-1;i--) {\n\t                            var _decorset = allTheDecor[i];\n\t                            if (!_decorset) continue;\n\t                            for (var j=_decorset.length-1;j>-1;j--) {\n\t                                var _olddecor = _decorset[j];\n\t                                if ([\"@font-weight\", \"@font-style\", \"@font-variant\"].indexOf(_olddecor[0]) > -1\n\t                                    && !seen[_olddecor[0]]) {\n\t                                    if (decor[1] !== \"normal\") {\n\t                                        newblob.decorations.push([_olddecor[0], \"normal\"]);\n\t                                        newdecorset.push([_olddecor[0], \"normal\"])\n\t                                    }\n\t                                    seen[_olddecor[0]] = true;\n\t                                }\n\t                            }\n\t                        }\n\t                        newblob.alldecor.push(newdecorset);\n\t                    } else {\n\t                        newblob.decorations.push(decor);\n\t                        newblob.alldecor.push([decor]);\n\t                    }\n\t                    this.latest.blobs.push(newblob);\n\t                    this.stack.push(newblob);\n\t                    this.latest = newblob;\n\t                    if (str) {\n\t                        var tok = new CSL.Token();\n\t                        var newblob = new CSL.Blob(null, tok);\n\t                        newblob.blobs = str;\n\t                        newblob.alldecor = this.latest.alldecor.slice();\n\t                        this.latest.blobs.push(newblob);\n\t                    }\n\t                } else {\n\t                    if (str) {\n\t                        var child = new CSL.Blob();\n\t                        child.blobs = str;\n\t                        child.alldecor = this.latest.alldecor.slice();\n\t                        this.latest.blobs.push(child);\n\t                    }\n\t                }\n\t            }\n\t            this.popStyling = function() {\n\t                this.stack.pop();\n\t            }\n\t        };\n\t        var stack = new Stack(blob);\n\t        if (doppel.strings.length) {\n\t            var str = doppel.strings[0];\n\t            if (leadingSpace) {\n\t                str = \" \" + str;\n\t            }\n\t            stack.addStyling(str);\n\t        }\n\t        for (var i=0,ilen=doppel.tags.length;i<ilen;i++) {\n\t            var tag = doppel.tags[i];\n\t            var str = doppel.strings[i+1];\n\t            if (tag.match(_tagRex.open)) {\n\t                tagReg.set(tag);\n\t                stack.addStyling(str, tagReg.pair());\n\t            } else {\n\t                tagReg.pop();\n\t                stack.popStyling();\n\t                stack.addStyling(str);\n\t            }\n\t        }\n\t    }\n\t    function processTags(blob) {\n\t        var str = blob.blobs;\n\t        var leadingSpace = false;\n\t        if (str.slice(0, 1) === \" \" && !str.match(/^\\s+[\\'\\\"]/)) {\n\t            leadingSpace = true;\n\t        }\n\t        var str = \" \" + str;\n\t        var doppel = _doppelString(str);\n\t        if (doppel.tags.length === 0) return;\n\t        var quoteFormSeen = false;\n\t    \tfor (var i=0,ilen=doppel.tags.length;i<ilen;i++) {\n\t            var tag = doppel.tags[i];\n\t            var str = doppel.strings[i+1];\n\t            if (_apostropheForce(tag, str)) {\n\t                if (tag === \" \\'\") {\n\t                    doppel.strings[i+1] = \" \\u2019\" + doppel.strings[i+1];\n\t                } else {\n\t                    doppel.strings[i+1] = \"\\u2019\" + doppel.strings[i+1];\n\t                }\n\t                doppel.tags[i] = \"\";\n\t            } else {\n\t                var tagInfo;\n\t                while (true) {\n\t                    tagInfo = _nestingFix(tag, i);\n\t                    if (tagInfo) {\n\t                        if (Object.keys(tagInfo).indexOf(\"fixtag\") > -1) {\n\t                            if (tag.match(_tagRex.close)\n\t                                && tag === \"\\'\") {\n\t                                doppel.strings[i+1] = \"\\u2019\" + doppel.strings[i+1];\n\t                                doppel.tags[i] = \"\";\n\t                            } else {\n\t                                var failedTag = doppel.tags[tagInfo.fixtag];\n\t                                if (doppel.forcedSpaces[tagInfo.fixtag-1]) {\n\t                                    failedTag = failedTag.slice(1);\n\t                                }\n\t                                doppel.strings[tagInfo.fixtag+1] = failedTag + doppel.strings[tagInfo.fixtag+1];\n\t                                doppel.tags[tagInfo.fixtag] = \"\";\n\t                            }\n\t                            if (_nestingState.length > 0) {\n\t                                _nestingState.pop();\n\t                            } else {\n\t                                break;\n\t                            }\n\t                        } else if (tagInfo.nocase) {\n\t                            doppel.tags[tagInfo.nocase.open] = \"\";\n\t                            doppel.tags[tagInfo.nocase.close] = \"\";\n\t                            break;\n\t                        } else {\n\t                            break;\n\t                        }\n\t                    } else {\n\t                        break;\n\t                    }\n\t                }\n\t                if (tagInfo && (tagInfo.fixtag|| tagInfo.fixtag === 0)) {\n\t                    doppel.strings[i+1] = doppel.tags[i] + doppel.strings[i+1];\n\t                    doppel.tags[i] = \"\";\n\t                }\n\t            }\n\t        }\n\t        for (var i=_nestingState.length-1;i>-1;i--) {\n\t            var tagPos = _nestingState[i].pos\n\t            var tag = doppel.tags[tagPos];\n\t            if (tag === \" \\'\" || tag === \"\\'\") {\n\t                doppel.strings[tagPos+1] = \" \\u2019\" + doppel.strings[tagPos+1];\n\t            } else {\n\t                doppel.strings[tagPos+1] = doppel.tags[tagPos] + doppel.strings[tagPos+1];\n\t            }\n\t            doppel.tags[tagPos] = \"\";\n\t            _nestingState.pop();\n\t        }\n\t        for (var i=doppel.tags.length-1;i>-1;i--) {\n\t            if (!doppel.tags[i]) {\n\t                doppel.tags = doppel.tags.slice(0,i).concat(doppel.tags.slice(i+1));\n\t                doppel.strings[i] = doppel.strings[i] + doppel.strings[i+1];\n\t                doppel.strings = doppel.strings.slice(0,i+1).concat(doppel.strings.slice(i+2));\n\t            }\n\t        }\n\t        for (var i=0,ilen=doppel.tags.length;i<ilen;i++) {\n\t            var tag = doppel.tags[i];\n\t            var forcedSpace = doppel.forcedSpaces[i-1];\n\t            if ([\" \\\"\", \" \\'\", \"(\\\"\", \"(\\'\"].indexOf(tag) > -1) {\n\t                if (!quoteFormSeen) {\n\t                    _setOuterQuoteForm(tag);\n\t                    quoteFormSeen = true;\n\t                }\n\t                if (!forcedSpace) {\n\t                    doppel.strings[i] += tag.slice(0, 1);\n\t                }\n\t            }\n\t        }\n\t        _undoppelToQueue(blob, doppel, leadingSpace);\n\t    }\n\t}\n\tCSL.Output.Formatters = new function () {\n\t    this.passthrough = passthrough;\n\t    this.lowercase = lowercase;\n\t    this.uppercase = uppercase;\n\t    this.sentence = sentence;\n\t    this.title = title;\n\t    this[\"capitalize-first\"] = capitalizeFirst;\n\t    this[\"capitalize-all\"] = capitalizeAll;\n\t    var rexStr = \"(?:\\u2018|\\u2019|\\u201C|\\u201D| \\\"| \\'|\\\"|\\'|[-\\–\\—\\/.,;?!:]|\\\\[|\\\\]|\\\\(|\\\\)|<span style=\\\"font-variant: small-caps;\\\">|<span class=\\\"no(?:case|decor)\\\">|<\\/span>|<\\/?(?:i|sc|b|sub|sup)>)\";\n\t    tagDoppel = new CSL.Doppeler(rexStr, function(str) {\n\t        return str.replace(/(<span)\\s+(class=\\\"no(?:case|decor)\\\")[^>]*(>)/g, \"$1 $2$3\").replace(/(<span)\\s+(style=\\\"font-variant:)\\s*(small-caps);?(\\\")[^>]*(>)/g, \"$1 $2 $3;$4$5\");\n\t    });\n\t    wordDoppel = new CSL.Doppeler(\"(?:[\\u0020\\u00A0\\u2000-\\u200B\\u205F\\u3000]+)\");\n\t    var _tagParams = {\n\t        \"<span style=\\\"font-variant: small-caps;\\\">\": \"</span>\",\n\t        \"<span class=\\\"nocase\\\">\": \"</span>\",\n\t        \"<span class=\\\"nodecor\\\">\": \"</span>\"\n\t    }\n\t    function _capitalise (word, force) {\n\t        var m = word.match(/(^\\s*)((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))(.*)/);\n\t        if (m && !(m[2].match(/^[\\u0370-\\u03FF]$/) && !m[3])) {\n\t            return m[1] + m[2].toUpperCase() + m[3];\n\t        }\n\t        return word;\n\t    }\n\t    function _textcaseEngine(config, string) {\n\t        if (!string) {\n\t            return \"\";\n\t        }\n\t        config.doppel = tagDoppel.split(string);\n\t        var quoteParams = {\n\t            \" \\\"\": {\n\t                opener: \" \\'\",\n\t                closer: \"\\\"\"\n\t            },\n\t            \" \\'\": {\n\t                opener: \" \\\"\",\n\t                closer: \"\\'\"\n\t            },\n\t            \"\\u2018\": {\n\t                opener: \"\\u2018\",\n\t                closer: \"\\u2019\"\n\t            },\n\t            \"\\u201C\": {\n\t                opener: \"\\u201C\",\n\t                closer: \"\\u201D\"\n\t            },\n\t        }\n\t        function quoteFix (tag, positions) {\n\t            var m = tag.match(/(^(?:\\u2018|\\u2019|\\u201C|\\u201D|\\\"|\\')|(?: \\\"| \\')$)/);\n\t            if (m) {\n\t                return pushQuoteState(m[1], positions);\n\t            }\n\t        }\n\t        function pushQuoteState(tag, pos) {\n\t            var isOpener = [\"\\u201C\", \"\\u2018\", \" \\\"\", \" \\'\"].indexOf(tag) > -1 ? true : false;\n\t            if (isOpener) {\n\t                return tryOpen(tag, pos);\n\t            } else {\n\t                return tryClose(tag, pos);\n\t            }\n\t        }\n\t        function tryOpen(tag, pos) {\n\t            if (config.quoteState.length === 0 || tag === config.quoteState[config.quoteState.length - 1].opener) {\n\t                config.quoteState.push({\n\t                    opener: quoteParams[tag].opener,\n\t                    closer: quoteParams[tag].closer,\n\t                    pos: pos\n\t                });\n\t                return false;\n\t            } else {\n\t                var prevPos = config.quoteState[config.quoteState.length-1].pos;\n\t                config.quoteState.pop()\n\t                config.quoteState.push({\n\t                    opener: quoteParams[tag].opener,\n\t                    closer: quoteParams[tag].closer,\n\t                    positions: pos\n\t                });\n\t                return prevPos;\n\t            }\n\t        }\n\t        function tryClose(tag, pos) {\n\t            if (config.quoteState.length > 0 && tag === config.quoteState[config.quoteState.length - 1].closer) {\n\t                config.quoteState.pop()\n\t            } else {\n\t                return pos;\n\t            }\n\t        }\n\t        if (config.doppel.strings.length && config.doppel.strings[0].trim()) {\n\t            config.doppel.strings[0] = config.capitaliseWords(config.doppel.strings[0], 0, config.doppel.tags[0]);\n\t        }\n\t    \tfor (var i=0,ilen=config.doppel.tags.length;i<ilen;i++) {\n\t            var tag = config.doppel.tags[i];\n\t            var str = config.doppel.strings[i+1];\n\t            if (config.tagState !== null) {\n\t                if (_tagParams[tag]) {\n\t                    config.tagState.push(_tagParams[tag]);\n\t                } else if (config.tagState.length && tag === config.tagState[config.tagState.length - 1]) {\n\t                    config.tagState.pop();\n\t                }\n\t            }\n\t            if (config.afterPunct !== null) {\n\t                if (tag.match(/[\\!\\?\\:]$/)) {\n\t                    config.afterPunct = true;\n\t                }\n\t            }\n\t            if (config.tagState.length === 0) {\n\t                config.doppel.strings[i+1] = config.capitaliseWords(str, i+1, config.doppel,config.doppel.tags[i+1]);\n\t            } else if (config.doppel.strings[i+1].trim()) {\n\t                config.lastWordPos = null;\n\t            }\n\t            if (config.quoteState !== null) {\n\t                var quotePos = quoteFix(tag, i);\n\t                if (quotePos || quotePos === 0) {\n\t                    var origChar = config.doppel.origStrings[quotePos+1].slice(0, 1);\n\t                    config.doppel.strings[quotePos+1] = origChar + config.doppel.strings[quotePos+1].slice(1);\n\t                    config.lastWordPos = null;\n\t                }\n\t            }\n\t            if (config.isFirst) {\n\t                if (str.trim()) {\n\t                    config.isFirst = false;\n\t                }\n\t            }\n\t            if (config.afterPunct) {\n\t                if (str.trim()) {\n\t                    config.afterPunct = false;\n\t                }\n\t            }\n\t        }\n\t        if (config.quoteState) {\n\t            for (var i=0,ilen=config.quoteState.length;i<ilen;i++) {\n\t                var quotePos = config.quoteState[i].pos;\n\t                if (typeof quotePos !== 'undefined') {\n\t                    var origChar = config.doppel.origStrings[quotePos+1].slice(0, 1);\n\t                    config.doppel.strings[quotePos+1] = origChar + config.doppel.strings[quotePos+1].slice(1);\n\t                }\n\t            }\n\t        }\n\t        if (config.lastWordPos) {\n\t            var lastWords = wordDoppel.split(config.doppel.strings[config.lastWordPos.strings]);\n\t            var lastWord = _capitalise(lastWords.strings[config.lastWordPos.words]);\n\t            lastWords.strings[config.lastWordPos.words] = lastWord;\n\t            config.doppel.strings[config.lastWordPos.strings] = wordDoppel.join(lastWords);\n\t        }\n\t        return tagDoppel.join(config.doppel);\n\t    }\n\t    function passthrough (state, str) {\n\t        return str;\n\t    }\n\t    function lowercase(state, string) {\n\t        var config = {\n\t            quoteState: null,\n\t            capitaliseWords: function(str) {\n\t                var words = str.split(\" \");\n\t                for (var i=0,ilen=words.length;i<ilen;i++) {\n\t                    var word = words[i];\n\t                    if (word) {\n\t                        words[i] = word.toLowerCase();\n\t                    }\n\t                }\n\t                return words.join(\" \");\n\t            },\n\t            skipWordsRex: null,\n\t            tagState: [],\n\t            afterPunct: null,\n\t            isFirst: null\n\t        }\n\t        return _textcaseEngine(config, string);\n\t    }\n\t    function uppercase(state, string) {\n\t        var config = {\n\t            quoteState: null,\n\t            capitaliseWords: function(str) {\n\t                var words = str.split(\" \");\n\t                for (var i=0,ilen=words.length;i<ilen;i++) {\n\t                    var word = words[i];\n\t                    if (word) {\n\t                        words[i] = word.toUpperCase();\n\t                    }\n\t                }\n\t                return words.join(\" \");\n\t            },\n\t            skipWordsRex: null,\n\t            tagState: [],\n\t            afterPunct: null,\n\t            isFirst: null\n\t        }\n\t        return _textcaseEngine(config, string);\n\t    }\n\t    function sentence(state, string) {\n\t        var config = {\n\t            quoteState: [],\n\t            capitaliseWords: function(str) {\n\t                var words = str.split(\" \");\n\t                for (var i=0,ilen=words.length;i<ilen;i++) {\n\t                    var word = words[i];\n\t                    if (word) {\n\t                        if (config.isFirst) {\n\t                            words[i] = _capitalise(word);\n\t                            config.isFirst = false;\n\t                        } else {\n\t                            words[i] = word.toLowerCase();\n\t                        }\n\t                    }\n\t                }\n\t                return words.join(\" \");\n\t            },\n\t            skipWordsRex: null,\n\t            tagState: [],\n\t            afterPunct: null,\n\t            isFirst: true\n\t        }\n\t        return _textcaseEngine(config, string);\n\t    }\n\t    function title(state, string) {\n\t        var config = {\n\t            quoteState: [],\n\t            capitaliseWords: function(str, i, followingTag) {\n\t                if (str.trim()) {\n\t                    var words = str.split(/[ \\u00A0]+/);\n\t                    var wordle = wordDoppel.split(str);\n\t                    var words = wordle.strings;\n\t                    for (var j=0,jlen=words.length;j<jlen;j++) {\n\t                        var word = words[j];\n\t                        if (!word) continue;\n\t                        if (word.length > 1 && !word.toLowerCase().match(config.skipWordsRex)) {\n\t                            words[j] = _capitalise(words[j]);\n\t                        } else if (j === (words.length - 1) && followingTag === \"-\") {\n\t                            words[j] = _capitalise(words[j]);\n\t                        } else if (config.isFirst) {\n\t                            words[j] = _capitalise(words[j]);\n\t                        } else if (config.afterPunct) {\n\t                            words[j] = _capitalise(words[j]);\n\t                        }\n\t                        config.afterPunct = false;\n\t                        config.isFirst = false;\n\t                        config.lastWordPos = {\n\t                            strings: i,\n\t                            words: j\n\t                        }\n\t                    }\n\t                    str = wordDoppel.join(wordle);\n\t                }\n\t                return str;\n\t            },\n\t            skipWordsRex: state.locale[state.opt.lang].opts[\"skip-words-regexp\"],\n\t            tagState: [],\n\t            afterPunct: false,\n\t            isFirst: true\n\t        }\n\t        return _textcaseEngine(config, string);\n\t    }\n\t    function capitalizeFirst(state, string) {\n\t        var config = {\n\t            quoteState: [],\n\t            capitaliseWords: function(str) {\n\t                var words = str.split(\" \");\n\t                for (var i=0,ilen=words.length;i<ilen;i++) {\n\t                    var word = words[i];\n\t                    if (word) {\n\t                        if (config.isFirst) {\n\t                            words[i] = _capitalise(word);\n\t                            config.isFirst = false;\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                return words.join(\" \");\n\t            },\n\t            skipWordsRex: null,\n\t            tagState: [],\n\t            afterPunct: null,\n\t            isFirst: true\n\t        }\n\t        return _textcaseEngine(config, string);\n\t    }\n\t    function capitalizeAll (state, string) {\n\t        var config = {\n\t            quoteState: [],\n\t            capitaliseWords: function(str) {\n\t                var words = str.split(\" \");\n\t                for (var i=0,ilen=words.length;i<ilen;i++) {\n\t                    var word = words[i];\n\t                    if (word) {\n\t                        words[i] = _capitalise(word);\n\t                    }\n\t                }\n\t                return words.join(\" \");\n\t            },\n\t            skipWordsRex: null,\n\t            tagState: [],\n\t            afterPunct: null,\n\t            isFirst: null\n\t        }\n\t        return _textcaseEngine(config, string);\n\t    }\n\t}\n\tCSL.Output.Formats = function () {};\n\tCSL.Output.Formats.prototype.html = {\n\t    \"text_escape\": function (text) {\n\t        if (!text) {\n\t            text = \"\";\n\t        }\n\t        return text.replace(/&/g, \"&#38;\")\n\t            .replace(/</g, \"&#60;\")\n\t            .replace(/>/g, \"&#62;\")\n\t            .replace(/\\s\\s/g, \"\\u00A0 \")\n\t            .replace(CSL.SUPERSCRIPTS_REGEXP,\n\t                     function(aChar) {\n\t                         return \"<sup>\" + CSL.SUPERSCRIPTS[aChar] + \"</sup>\";\n\t                     });\n\t    },\n\t    \"bibstart\": \"<div class=\\\"csl-bib-body\\\">\\n\",\n\t    \"bibend\": \"</div>\",\n\t    \"@font-style/italic\": \"<i>%%STRING%%</i>\",\n\t    \"@font-style/oblique\": \"<em>%%STRING%%</em>\",\n\t    \"@font-style/normal\": \"<span style=\\\"font-style:normal;\\\">%%STRING%%</span>\",\n\t    \"@font-variant/small-caps\": \"<span style=\\\"font-variant:small-caps;\\\">%%STRING%%</span>\",\n\t    \"@passthrough/true\": CSL.Output.Formatters.passthrough,\n\t    \"@font-variant/normal\": \"<span style=\\\"font-variant:normal;\\\">%%STRING%%</span>\",\n\t    \"@font-weight/bold\": \"<b>%%STRING%%</b>\",\n\t    \"@font-weight/normal\": \"<span style=\\\"font-weight:normal;\\\">%%STRING%%</span>\",\n\t    \"@font-weight/light\": false,\n\t    \"@text-decoration/none\": \"<span style=\\\"text-decoration:none;\\\">%%STRING%%</span>\",\n\t    \"@text-decoration/underline\": \"<span style=\\\"text-decoration:underline;\\\">%%STRING%%</span>\",\n\t    \"@vertical-align/sup\": \"<sup>%%STRING%%</sup>\",\n\t    \"@vertical-align/sub\": \"<sub>%%STRING%%</sub>\",\n\t    \"@vertical-align/baseline\": \"<span style=\\\"baseline\\\">%%STRING%%</span>\",\n\t    \"@strip-periods/true\": CSL.Output.Formatters.passthrough,\n\t    \"@strip-periods/false\": CSL.Output.Formatters.passthrough,\n\t    \"@quotes/true\": function (state, str) {\n\t        if (\"undefined\" === typeof str) {\n\t            return state.getTerm(\"open-quote\");\n\t        }\n\t        return state.getTerm(\"open-quote\") + str + state.getTerm(\"close-quote\");\n\t    },\n\t    \"@quotes/inner\": function (state, str) {\n\t        if (\"undefined\" === typeof str) {\n\t            return \"\\u2019\";\n\t        }\n\t        return state.getTerm(\"open-inner-quote\") + str + state.getTerm(\"close-inner-quote\");\n\t    },\n\t    \"@quotes/false\": false,\n\t    \"@cite/entry\": function (state, str) {\n\t        return state.sys.wrapCitationEntry(str, this.item_id, this.locator_txt, this.suffix_txt);\n\t\t},\n\t    \"@bibliography/entry\": function (state, str) {\n\t        var insert = \"\";\n\t        if (state.sys.embedBibliographyEntry) {\n\t            insert = state.sys.embedBibliographyEntry(this.item_id) + \"\\n\";\n\t        }\n\t        return \"  <div class=\\\"csl-entry\\\">\" + str + \"</div>\\n\" + insert;\n\t    },\n\t    \"@display/block\": function (state, str) {\n\t        return \"\\n\\n    <div class=\\\"csl-block\\\">\" + str + \"</div>\\n\";\n\t    },\n\t    \"@display/left-margin\": function (state, str) {\n\t        return \"\\n    <div class=\\\"csl-left-margin\\\">\" + str + \"</div>\";\n\t    },\n\t    \"@display/right-inline\": function (state, str) {\n\t        return \"<div class=\\\"csl-right-inline\\\">\" + str + \"</div>\\n  \";\n\t    },\n\t    \"@display/indent\": function (state, str) {\n\t        return \"<div class=\\\"csl-indent\\\">\" + str + \"</div>\\n  \";\n\t    },\n\t    \"@showid/true\": function (state, str, cslid) {\n\t        if (!state.tmp.just_looking && ! state.tmp.suppress_decorations) {\n\t            if (cslid) {\n\t                return \"<span class=\\\"\" + state.opt.nodenames[cslid] + \"\\\" cslid=\\\"\" + cslid + \"\\\">\" + str + \"</span>\";\n\t            } else if (this.params && \"string\" === typeof str) {\n\t                var prePunct = \"\";\n\t                if (str) {\n\t                    var m = str.match(CSL.VARIABLE_WRAPPER_PREPUNCT_REX);\n\t                    prePunct = m[1];\n\t                    str = m[2];\n\t                }\n\t                var postPunct = \"\";\n\t                if (str && CSL.SWAPPING_PUNCTUATION.indexOf(str.slice(-1)) > -1) {\n\t                    postPunct = str.slice(-1);\n\t                    str = str.slice(0,-1);\n\t                }\n\t                return state.sys.variableWrapper(this.params, prePunct, str, postPunct);\n\t            } else {\n\t                return str;\n\t            }\n\t        } else {\n\t            return str;\n\t        }\n\t    },\n\t    \"@URL/true\": function (state, str) {\n\t        return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n\t    },\n\t    \"@DOI/true\": function (state, str) {\n\t        return \"<a href=\\\"http://dx.doi.org/\" + str + \"\\\">\" + str + \"</a>\";\n\t    }\n\t};\n\tCSL.Output.Formats.prototype.text = {\n\t    \"text_escape\": function (text) {\n\t        if (!text) {\n\t            text = \"\";\n\t        }\n\t        return text;\n\t    },\n\t    \"bibstart\": \"\",\n\t    \"bibend\": \"\",\n\t    \"@font-style/italic\": false,\n\t    \"@font-style/oblique\": false,\n\t    \"@font-style/normal\": false,\n\t    \"@font-variant/small-caps\": false,\n\t    \"@passthrough/true\": CSL.Output.Formatters.passthrough,\n\t    \"@font-variant/normal\": false,\n\t    \"@font-weight/bold\": false,\n\t    \"@font-weight/normal\": false,\n\t    \"@font-weight/light\": false,\n\t    \"@text-decoration/none\": false,\n\t    \"@text-decoration/underline\": false,\n\t    \"@vertical-align/baseline\": false,\n\t    \"@vertical-align/sup\": false,\n\t    \"@vertical-align/sub\": false,\n\t    \"@strip-periods/true\": CSL.Output.Formatters.passthrough,\n\t    \"@strip-periods/false\": CSL.Output.Formatters.passthrough,\n\t    \"@quotes/true\": function (state, str) {\n\t        if (\"undefined\" === typeof str) {\n\t            return state.getTerm(\"open-quote\");\n\t        }\n\t        return state.getTerm(\"open-quote\") + str + state.getTerm(\"close-quote\");\n\t    },\n\t    \"@quotes/inner\": function (state, str) {\n\t        if (\"undefined\" === typeof str) {\n\t            return \"\\u2019\";\n\t        }\n\t        return state.getTerm(\"open-inner-quote\") + str + state.getTerm(\"close-inner-quote\");\n\t    },\n\t    \"@quotes/false\": false,\n\t    \"@cite/entry\": function (state, str) {\n\t\t\treturn state.sys.wrapCitationEntry(str, this.item_id, this.locator_txt, this.suffix_txt);\n\t\t},\n\t    \"@bibliography/entry\": function (state, str) {\n\t        return str+\"\\n\";\n\t    },\n\t    \"@display/block\": function (state, str) {\n\t        return \"\\n\"+str;\n\t    },\n\t    \"@display/left-margin\": function (state, str) {\n\t        return str;\n\t    },\n\t    \"@display/right-inline\": function (state, str) {\n\t        return str;\n\t    },\n\t    \"@display/indent\": function (state, str) {\n\t        return \"\\n    \"+str;\n\t    },\n\t    \"@showid/true\": function (state, str, cslid) {\n\t        return str;\n\t    },\n\t    \"@URL/true\": function (state, str) {\n\t        return str;\n\t    },\n\t    \"@DOI/true\": function (state, str) {\n\t        return str;\n\t    }\n\t};\n\tCSL.Output.Formats.prototype.rtf = {\n\t    \"text_escape\": function (text) {\n\t        if (!text) {\n\t            text = \"\";\n\t        }\n\t        return text\n\t        .replace(/([\\\\{}])/g, \"\\\\$1\")\n\t        .replace(CSL.SUPERSCRIPTS_REGEXP,\n\t                 function(aChar) {\n\t                     return \"\\\\super \" + CSL.SUPERSCRIPTS[aChar] + \"\\\\nosupersub{}\";\n\t                 })\n\t        .replace(/[\\u007F-\\uFFFF]/g,\n\t                 function(aChar) { return \"\\\\uc0\\\\u\"+aChar.charCodeAt(0).toString()+\"{}\"; })\n\t        .split(\"\\t\").join(\"\\\\tab{}\");\n\t    },\n\t    \"@passthrough/true\": CSL.Output.Formatters.passthrough,\n\t    \"@font-style/italic\":\"{\\\\i{}%%STRING%%}\",\n\t    \"@font-style/normal\":\"{\\\\i0{}%%STRING%%}\",\n\t    \"@font-style/oblique\":\"{\\\\i{}%%STRING%%}\",\n\t    \"@font-variant/small-caps\":\"{\\\\scaps %%STRING%%}\",\n\t    \"@font-variant/normal\":\"{\\\\scaps0{}%%STRING%%}\",\n\t    \"@font-weight/bold\":\"{\\\\b{}%%STRING%%}\",\n\t    \"@font-weight/normal\":\"{\\\\b0{}%%STRING%%}\",\n\t    \"@font-weight/light\":false,\n\t    \"@text-decoration/none\":false,\n\t    \"@text-decoration/underline\":\"{\\\\ul{}%%STRING%%}\",\n\t    \"@vertical-align/baseline\":false,\n\t    \"@vertical-align/sup\":\"\\\\super %%STRING%%\\\\nosupersub{}\",\n\t    \"@vertical-align/sub\":\"\\\\sub %%STRING%%\\\\nosupersub{}\",\n\t    \"@strip-periods/true\": CSL.Output.Formatters.passthrough,\n\t    \"@strip-periods/false\": CSL.Output.Formatters.passthrough,\n\t    \"@quotes/true\": function (state, str) {\n\t        if (\"undefined\" === typeof str) {\n\t            return CSL.Output.Formats.rtf.text_escape(state.getTerm(\"open-quote\"));\n\t        }\n\t        return CSL.Output.Formats.rtf.text_escape(state.getTerm(\"open-quote\")) + str + CSL.Output.Formats.rtf.text_escape(state.getTerm(\"close-quote\"));\n\t    },\n\t    \"@quotes/inner\": function (state, str) {\n\t        if (\"undefined\" === typeof str) {\n\t            return CSL.Output.Formats.rtf.text_escape(\"\\u2019\");\n\t        }\n\t        return CSL.Output.Formats.rtf.text_escape(state.getTerm(\"open-inner-quote\")) + str + CSL.Output.Formats.rtf.text_escape(state.getTerm(\"close-inner-quote\"));\n\t    },\n\t    \"@quotes/false\": false,\n\t    \"bibstart\":\"{\\\\rtf \",\n\t    \"bibend\":\"}\",\n\t    \"@display/block\": \"\\\\line{}%%STRING%%\\\\line\\r\\n\",\n\t    \"@cite/entry\": function (state, str) {\n\t        return str;\n\t\t},\n\t    \"@cite/entry\": function (state, str) {\n\t\t\treturn state.sys.wrapCitationEntry(str, this.item_id, this.locator_txt, this.suffix_txt);\n\t\t},\n\t    \"@bibliography/entry\": function(state,str){\n\t        return str;\n\t    },\n\t    \"@display/left-margin\": function(state,str){\n\t        return str+\"\\\\tab \";\n\t    },\n\t    \"@display/right-inline\": function (state, str) {\n\t        return str+\"\\r\\n\";\n\t    },\n\t    \"@display/indent\": function (state, str) {\n\t        return \"\\n\\\\tab \"+str+\"\\\\line\\r\\n\";\n\t    },\n\t    \"@showid/true\": function (state, str, cslid) {\n\t        if (!state.tmp.just_looking && ! state.tmp.suppress_decorations) {\n\t            var prePunct = \"\";\n\t            if (str) {\n\t                var m = str.match(CSL.VARIABLE_WRAPPER_PREPUNCT_REX);\n\t                prePunct = m[1];\n\t                str = m[2];\n\t            }\n\t            var postPunct = \"\";\n\t            if (str && CSL.SWAPPING_PUNCTUATION.indexOf(str.slice(-1)) > -1) {\n\t                postPunct = str.slice(-1);\n\t                str = str.slice(0,-1);\n\t            }\n\t            return state.sys.variableWrapper(this.params, prePunct, str, postPunct);\n\t        } else {\n\t            return str;\n\t        }\n\t    },\n\t    \"@URL/true\": function (state, str) {\n\t        return str;\n\t    },\n\t    \"@DOI/true\": function (state, str) {\n\t        return str;\n\t    }\n\t};\n\tCSL.Output.Formats = new CSL.Output.Formats();\n\tCSL.Registry = function (state) {\n\t    var pos, len, ret, i, ilen;\n\t    this.debug = false;\n\t    this.state = state;\n\t    this.registry = {};\n\t    this.reflist = [];\n\t    this.refhash = {};\n\t    this.namereg = new CSL.Registry.NameReg(state);\n\t    this.citationreg = new CSL.Registry.CitationReg(state);\n\t    this.authorstrings = {};\n\t    this.mylist = [];\n\t    this.myhash = {};\n\t    this.deletes = [];\n\t    this.inserts = [];\n\t    this.uncited = {};\n\t    this.refreshes = {};\n\t    this.akeys = {};\n\t    this.oldseq = {};\n\t    this.return_data = {};\n\t    this.ambigcites = {};\n\t    this.ambigresets = {};\n\t    this.sorter = new CSL.Registry.Comparifier(state, \"bibliography_sort\");\n\t    this.getSortedIds = function () {\n\t        ret = [];\n\t        for (i = 0, ilen = this.reflist.length; i < ilen; i += 1) {\n\t            ret.push(\"\" + this.reflist[i].id);\n\t        }\n\t        return ret;\n\t    };\n\t    this.getSortedRegistryItems = function () {\n\t        ret = [];\n\t        for (i = 0, ilen = this.reflist.length; i < ilen; i += 1) {\n\t            ret.push(this.reflist[i]);\n\t        }\n\t        return ret;\n\t    };\n\t};\n\tCSL.Registry.prototype.init = function (itemIDs, uncited_flag) {\n\t    var i, ilen;\n\t    this.oldseq = {};\n\t    if (uncited_flag) {\n\t        this.uncited = {};\n\t        for (var i=0,ilen=itemIDs.length;i<ilen; i += 1) {\n\t            if (!this.myhash[itemIDs[i]]) {\n\t                this.mylist.push(\"\" + itemIDs[i]);\n\t            }\n\t            this.uncited[itemIDs[i]] = true;\n\t            this.myhash[itemIDs[i]] = true;\n\t        }\n\t    } else {\n\t        for (var key in this.uncited) {\n\t            itemIDs.push(key);\n\t        }\n\t        var myhash = {};\n\t        for (i=itemIDs.length-1;i>-1; i += -1) {\n\t            if (myhash[itemIDs[i]]) {\n\t                itemIDs = itemIDs.slice(0, i).concat(itemIDs.slice(i + 1));\n\t            } else {\n\t                myhash[itemIDs[i]] = true;\n\t            }\n\t        }\n\t        this.mylist = [];\n\t        for (var i=0,ilen=itemIDs.length;i<ilen;i+=1) {\n\t            this.mylist.push(\"\" + itemIDs[i]);\n\t        }\n\t        this.myhash = myhash;\n\t    }\n\t    this.refreshes = {};\n\t    this.touched = {};\n\t    this.ambigsTouched = {};\n\t    this.ambigresets = {};\n\t};\n\tCSL.Registry.prototype.dopurge = function (myhash) {\n\t    for (var i=this.mylist.length-1;i>-1;i+=-1) {\n\t        if (this.citationreg.citationsByItemId) {\n\t            if (!this.citationreg.citationsByItemId[this.mylist[i]] && !myhash[this.mylist[i]]) {\n\t                delete this.myhash[this.mylist[i]];\n\t                this.mylist = this.mylist.slice(0,i).concat(this.mylist.slice(i+1));\n\t            }\n\t        }\n\t    }\n\t    this.dodeletes(this.myhash);\n\t};\n\tCSL.Registry.prototype.dodeletes = function (myhash) {\n\t    var otheritems, key, ambig, pos, len, items, kkey, mypos, id;\n\t    if (\"string\" === typeof myhash) {\n\t        myhash = {};\n\t        myhash[myhash] = true;\n\t    }\n\t    for (key in this.registry) {\n\t        if (!myhash[key]) {\n\t            if (this.uncited[key]) {\n\t                continue;\n\t            }\n\t            otheritems = this.namereg.delitems(key);\n\t            for (kkey in otheritems) {\n\t                this.refreshes[kkey] = true;\n\t            }\n\t            ambig = this.registry[key].ambig;\n\t            mypos = this.ambigcites[ambig].indexOf(key);\n\t            if (mypos > -1) {\n\t                items = this.ambigcites[ambig].slice();\n\t                this.ambigcites[ambig] = items.slice(0, mypos).concat(items.slice(mypos+1, items.length));\n\t                this.ambigresets[ambig] = this.ambigcites[ambig].length;\n\t            }\n\t            len = this.ambigcites[ambig].length;\n\t            for (pos = 0; pos < len; pos += 1) {\n\t                id = \"\" + this.ambigcites[ambig][pos];\n\t                this.refreshes[id] = true;\n\t            }\n\t            if (this.registry[key].siblings) {\n\t                if (this.registry[key].siblings.length == 1) {\n\t                    var loneSiblingID = this.registry[key].siblings[0];\n\t                    this.registry[loneSiblingID].master = true;\n\t                    this.registry[loneSiblingID].siblings.pop();\n\t                    this.registry[loneSiblingID].parallel = false;\n\t                } else if (this.registry[key].siblings.length > 1) {\n\t                    var removeIDs = [key];\n\t                    if (this.registry[key].master) {\n\t                        var newmasterID = this.registry[key].siblings[0];\n\t                        var newmaster = this.registry[newmasterID];\n\t                        newmaster.master = true;\n\t                        newmaster.parallel = false;\n\t                        removeIDs.push(newmasterID);\n\t                        for (var k = 0, klen = this.registry[key].siblings.length; k < klen; k += 1) {\n\t                            this.registry[this.registry[key].siblings[k]].parallel = newmasterID;\n\t                        }\n\t                    }\n\t                    var buffer = [];\n\t                    for (var k = this.registry[key].siblings.length - 1; k > -1; k += -1) {\n\t                        var siblingID = this.registry[key].siblings.pop();\n\t                        if (removeIDs.indexOf(siblingID) === -1) {\n\t                            buffer.push(siblingID)\n\t                        }\n\t                    }\n\t                    for (var k = buffer.length - 1; k > -1; k += -1) {\n\t                        this.registry[key].siblings.push(buffer[k]);\n\t                    }\n\t                }\n\t            }\n\t            delete this.registry[key];\n\t            delete this.refhash[key];\n\t            this.return_data.bibchange = true;\n\t        }\n\t    }\n\t};\n\tCSL.Registry.prototype.doinserts = function (mylist) {\n\t    var len, pos, item, Item, akey, newitem, abase, j, jlen, k, klen, i, ilen;\n\t    if (\"string\" === typeof mylist) {\n\t        mylist = [mylist];\n\t    }\n\t    for (i = 0, ilen = mylist.length; i < ilen; i += 1) {\n\t        item = mylist[i];\n\t        if (!this.registry[item]) {\n\t            Item = this.state.retrieveItem(item);\n\t            akey = CSL.getAmbiguousCite.call(this.state, Item);\n\t            this.ambigsTouched[akey] = true;\n\t            if (!Item.legislation_id) {\n\t                this.akeys[akey] = true;\n\t            }\n\t            newitem = {\n\t                \"id\": \"\" + item,\n\t                \"seq\": 0,\n\t                \"offset\": 0,\n\t                \"sortkeys\": false,\n\t                \"ambig\": false,\n\t                \"rendered\": false,\n\t                \"disambig\": false,\n\t                \"ref\": Item\n\t            };\n\t            this.registry[item] = newitem;\n\t            if (this.citationreg.citationsByItemId && this.citationreg.citationsByItemId[item]) {\n\t                this.registry[item][\"first-reference-note-number\"] = this.citationreg.citationsByItemId[item][0].properties.noteIndex;\n\t            }\n\t            abase = CSL.getAmbigConfig.call(this.state);\n\t            this.registerAmbigToken(akey, item, abase);\n\t            this.touched[item] = true;\n\t            this.return_data.bibchange = true;\n\t        }\n\t    }\n\t};\n\tCSL.Registry.prototype.rebuildlist = function () {\n\t    var count, len, pos, item;\n\t    this.reflist = [];\n\t    if (this.state.opt.citation_number_sort_direction === CSL.DESCENDING\n\t       && this.state.opt.citation_number_sort_used) {\n\t    }\n\t    len = this.mylist.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        item = this.mylist[pos];\n\t        this.reflist.push(this.registry[item]);\n\t        this.oldseq[item] = this.registry[item].seq;\n\t        this.registry[item].seq = (pos + 1);\n\t    }\n\t    if (this.state.opt.citation_number_sort_direction === CSL.DESCENDING\n\t       && this.state.opt.citation_number_sort_used) {\n\t    }\n\t};\n\tCSL.Registry.prototype.dorefreshes = function () {\n\t    var key, regtoken, Item, old_akey, akey, abase;\n\t    for (key in this.refreshes) {\n\t        regtoken = this.registry[key];\n\t        if (!regtoken) {\n\t            continue;\n\t        }\n\t        regtoken.sortkeys = undefined;\n\t        Item = this.state.retrieveItem(key);\n\t        var akey = regtoken.ambig;\n\t        if (\"undefined\" === typeof akey) {\n\t            this.state.tmp.disambig_settings = false;\n\t            akey = CSL.getAmbiguousCite.call(this.state, Item);\n\t            abase = CSL.getAmbigConfig.call(this.state);\n\t            this.registerAmbigToken(akey, key, abase);\n\t        }\n\t        for (var akkey in this.ambigresets) {\n\t            if (this.ambigresets[akkey] === 1) {\n\t                var loneKey = this.ambigcites[akey][0];\n\t                var Item = this.state.retrieveItem(loneKey);\n\t                this.registry[loneKey].disambig = new CSL.AmbigConfig;\n\t                this.state.tmp.disambig_settings = false;\n\t                var akey = CSL.getAmbiguousCite.call(this.state, Item);\n\t                var abase = CSL.getAmbigConfig.call(this.state);\n\t                this.registerAmbigToken(akey, loneKey, abase);\n\t            }\n\t        }\n\t        this.state.tmp.taintedItemIDs[key] = true;\n\t        this.ambigsTouched[akey] = true;\n\t        if (!Item.legislation_id) {\n\t            this.akeys[akey] = true;\n\t        }\n\t        this.touched[key] = true;\n\t    }\n\t};\n\tCSL.Registry.prototype.setdisambigs = function () {\n\t    var akey, leftovers, key, pos, len, id;\n\t    this.leftovers = [];\n\t    for (akey in this.ambigsTouched) {\n\t        this.state.disambiguate.run(akey);\n\t    }\n\t    this.ambigsTouched = {};\n\t    this.akeys = {};\n\t};\n\tCSL.Registry.prototype.renumber = function () {\n\t    var len, pos, item;\n\t    if (this.state.opt.citation_number_sort_direction === CSL.DESCENDING\n\t       && this.state.opt.citation_number_sort_used) {\n\t    }\n\t    len = this.reflist.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        item = this.reflist[pos];\n\t        item.seq = (pos + 1);\n\t        if (this.state.opt.update_mode === CSL.NUMERIC && item.seq != this.oldseq[item.id]) {\n\t            this.state.tmp.taintedItemIDs[item.id] = true;\n\t        }\n\t        if (this.state.opt.bib_mode === CSL.NUMERIC && item.seq != this.oldseq[item.id]) {\n\t            this.return_data.bibchange = true;\n\t        }\n\t    }\n\t    if (this.state.opt.citation_number_sort_direction === CSL.DESCENDING\n\t       && this.state.opt.citation_number_sort_used) {\n\t        this.reflist.reverse();\n\t    }\n\t};\n\tCSL.Registry.prototype.setsortkeys = function () {\n\t    var key;\n\t    for (var i = 0, ilen = this.mylist.length; i < ilen; i += 1) {\n\t        var key = this.mylist[i];\n\t        if (this.touched[key] || this.state.tmp.taintedItemIDs[key] || !this.registry[key].sortkeys) {\n\t            this.registry[key].sortkeys = CSL.getSortKeys.call(this.state, this.state.retrieveItem(key), \"bibliography_sort\");\n\t        }\n\t    }\n\t};\n\tCSL.Registry.prototype.sorttokens = function () {\n\t    this.reflist.sort(this.sorter.compareKeys);\n\t};\n\tCSL.Registry.Comparifier = function (state, keyset) {\n\t    var sort_directions, len, pos, compareKeys;\n\t    var sortCompare = CSL.getSortCompare(state.opt[\"default-locale-sort\"]);\n\t    sort_directions = state[keyset].opt.sort_directions;\n\t    this.compareKeys = function (a, b) {\n\t        len = a.sortkeys ? a.sortkeys.length : 0;\n\t        for (pos = 0; pos < len; pos += 1) {\n\t            var cmp = 0;\n\t            if (a.sortkeys[pos] === b.sortkeys[pos]) {\n\t                cmp = 0;\n\t            } else if (\"undefined\" === typeof a.sortkeys[pos]) {\n\t                cmp = sort_directions[pos][1];\n\t            } else if (\"undefined\" === typeof b.sortkeys[pos]) {\n\t                cmp = sort_directions[pos][0];\n\t            } else {\n\t                cmp = sortCompare(a.sortkeys[pos], b.sortkeys[pos]);\n\t            }\n\t            if (0 < cmp) {\n\t                return sort_directions[pos][1];\n\t            } else if (0 > cmp) {\n\t                return sort_directions[pos][0];\n\t            }\n\t        }\n\t        if (a.seq > b.seq) {\n\t            return 1;\n\t        } else if (a.seq < b.seq) {\n\t            return -1;\n\t        }\n\t        return 0;\n\t    };\n\t    compareKeys = this.compareKeys;\n\t    this.compareCompositeKeys = function (a, b) {\n\t        return compareKeys(a[1], b[1]);\n\t    };\n\t};\n\tCSL.Registry.prototype.compareRegistryTokens = function (a, b) {\n\t    if (a.seq > b.seq) {\n\t        return 1;\n\t    } else if (a.seq < b.seq) {\n\t        return -1;\n\t    }\n\t    return 0;\n\t};\n\tCSL.Registry.prototype.registerAmbigToken = function (akey, id, ambig_config) {\n\t    if (this.registry[id] && this.registry[id].disambig && this.registry[id].disambig.names) {\n\t        for (var i = 0, ilen = ambig_config.names.length; i < ilen; i += 1) {\n\t            var new_names_params = ambig_config.names[i];\n\t            var old_names_params = this.registry[id].disambig.names[i];\n\t            if (new_names_params !== old_names_params) {\n\t                this.state.tmp.taintedItemIDs[id] = true;\n\t            } else if (ambig_config.givens[i]) {\n\t                for (var j=0,jlen=ambig_config.givens[i].length;j<jlen;j+=1) {\n\t                    var new_gnames_params = ambig_config.givens[i][j];\n\t                    var old_gnames_params = this.registry[id].disambig.givens[i][j];\n\t                    if (new_gnames_params !== old_gnames_params) {\n\t                        this.state.tmp.taintedItemIDs[id] = true;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (!this.ambigcites[akey]) {\n\t        this.ambigcites[akey] = [];\n\t    }\n\t    if (this.ambigcites[akey].indexOf(\"\" + id) === -1) {\n\t        this.ambigcites[akey].push(\"\" + id);\n\t    }\n\t    this.registry[id].ambig = akey;\n\t    var dome = false;\n\t    this.registry[id].disambig = CSL.cloneAmbigConfig(ambig_config);\n\t};\n\tCSL.getSortKeys = function (Item, key_type) {\n\t    var area, root, extension, strip_prepositions, use_parallels, len, pos;\n\t    area = this.tmp.area;\n\t    root = this.tmp.root;\n\t    extension = this.tmp.extension;\n\t    strip_prepositions = CSL.Util.Sort.strip_prepositions;\n\t    this.tmp.area = key_type;\n\t    this.tmp.root = key_type.indexOf(\"_\") > -1 ? key_type.slice(0,-5) : key_type;\n\t    this.tmp.extension = \"_sort\";\n\t    this.tmp.disambig_override = true;\n\t    this.tmp.disambig_request = false;\n\t    this.parallel.use_parallels = (this.parallel.use_parallels === true || this.parallel.use_parallels === null) ? null : false;\n\t    this.tmp.suppress_decorations = true;\n\t    CSL.getCite.call(this, Item);\n\t    this.tmp.suppress_decorations = false;\n\t    this.parallel.use_parallels = this.parallel.use_parallels === null ? true : false;\n\t    this.tmp.disambig_override = false;\n\t    len = this[key_type].keys.length;\n\t    for (pos = 0; pos < len; pos += 1) {\n\t        this[key_type].keys[pos] = strip_prepositions(this[key_type].keys[pos]);\n\t    }\n\t    this.tmp.area = area;\n\t    this.tmp.root = root;\n\t    this.tmp.extension = extension;\n\t    return this[key_type].keys;\n\t};\n\tCSL.Registry.NameReg = function (state) {\n\t    var pkey, ikey, skey, floor, ceiling, dagopt, gdropt, ret, pos, items, strip_periods, set_keys, evalname, delitems, addname, key, myitems, i, ilen;\n\t    this.state = state;\n\t    this.namereg = {};\n\t    this.nameind = {};\n\t    this.nameindpkeys = {};\n\t    this.itemkeyreg = {};\n\t    strip_periods = function (str) {\n\t        if (!str) {\n\t            str = \"\";\n\t        }\n\t        return str.replace(/\\./g, \" \").replace(/\\s+/g, \" \").replace(/\\s+$/,\"\");\n\t    };\n\t    set_keys = function (state, itemid, nameobj) {\n\t        pkey = strip_periods(nameobj.family);\n\t        skey = strip_periods(nameobj.given);\n\t        var m = skey.match(/[,\\!]* ([^,]+)$/);\n\t        if (m && m[1] === m[1].toLowerCase()) {\n\t            skey = skey.replace(/[,\\!]* [^,]+$/, \"\");\n\t        }\n\t        ikey = CSL.Util.Names.initializeWith(state, skey, \"%s\");\n\t        if (state.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\") {\n\t            pkey = \"\" + itemid + pkey;\n\t        }\n\t    };\n\t    evalname = function (item_id, nameobj, namenum, request_base, form, initials) {\n\t        var pos, len, items, param;\n\t        if (state.tmp.area.slice(0, 12) === \"bibliography\" && !form) {\n\t            if (\"string\" === typeof initials) {\n\t                return 1;\n\t            } else {\n\t                return 2;\n\t            }\n\t        }\n\t        var res = state.nameOutput.getName(nameobj, \"locale-translit\", true);\n\t        nameobj = res.name;\n\t        set_keys(this.state, \"\" + item_id, nameobj);\n\t        param = 2;\n\t        dagopt = state.opt[\"disambiguate-add-givenname\"];\n\t        gdropt = state.citation.opt[\"givenname-disambiguation-rule\"];\n\t        var gdropt_orig = gdropt;\n\t        if (gdropt === \"by-cite\") {\n\t            gdropt = \"all-names\";\n\t        }\n\t        if (\"short\" === form) {\n\t            param = 0;\n\t        } else if (\"string\" === typeof initials) {\n\t            param = 1;\n\t        }\n\t        if (\"undefined\" === typeof this.namereg[pkey] || \"undefined\" === typeof this.namereg[pkey].ikey[ikey]) {\n\t            return param;\n\t        }\n\t        if (gdropt_orig === \"by-cite\" && param <= request_base) {\n\t            return request_base;\n\t        }\n\t        if (!dagopt) {\n\t            return param;\n\t        }\n\t        if (\"string\" === typeof gdropt && gdropt.slice(0, 12) === \"primary-name\" && namenum > 0) {\n\t            return param;\n\t        }\n\t        if (!gdropt || gdropt === \"all-names\" || gdropt === \"primary-name\") {\n\t            if (this.namereg[pkey].count > 1) {\n\t                param = 1;\n\t            }\n\t            if ((this.namereg[pkey].ikey \n\t                 && this.namereg[pkey].ikey[ikey].count > 1)\n\t                || (this.namereg[pkey].count > 1 \n\t                    && \"string\" !== typeof initials)) {\n\t                param = 2;\n\t            }\n\t        } else if (gdropt === \"all-names-with-initials\" || gdropt === \"primary-name-with-initials\") {\n\t            if (this.namereg[pkey].count > 1) {\n\t                param = 1;\n\t            } else {\n\t                param = 0;\n\t            }\n\t        }\n\t        if (!state.registry.registry[item_id]) {\n\t            if (form == \"short\") {\n\t                return 0;\n\t            } else if (\"string\" == typeof initials) {\n\t                return 1;\n\t            }\n\t        } else {\n\t            return param;\n\t        }\n\t    };\n\t    delitems = function (ids) {\n\t        var item, pos, len, posA, posB, id, fullkey, llen, ppos, otherid;\n\t        if (\"string\" === typeof ids || \"number\" === typeof ids) {\n\t            ids = [\"\" + ids];\n\t        }\n\t        ret = {};\n\t        len = ids.length;\n\t        for (pos = 0; pos < len; pos += 1) {\n\t            id = \"\" + ids[pos];\n\t            if (!this.nameind[id]) {\n\t                continue;\n\t            }\n\t            for (fullkey in this.nameind[id]) {\n\t                if (this.nameind[id].hasOwnProperty(fullkey)) {\n\t                    key = fullkey.split(\"::\");\n\t                    pkey = key[0];\n\t                    ikey = key[1];\n\t                    skey = key[2];\n\t                    if (\"undefined\" === typeof this.namereg[pkey]) {\n\t                        continue;\n\t                    }\n\t                    items = this.namereg[pkey].items;\n\t                    if (skey && this.namereg[pkey].ikey[ikey] && this.namereg[pkey].ikey[ikey].skey[skey]) {\n\t                        myitems = this.namereg[pkey].ikey[ikey].skey[skey].items;\n\t                        posB = myitems.indexOf(\"\" + id);\n\t                        if (posB > -1) {\n\t                            this.namereg[pkey].ikey[ikey].skey[skey].items = myitems.slice(0, posB).concat(myitems.slice([(posB + 1)]));\n\t                        }\n\t                        if (this.namereg[pkey].ikey[ikey].skey[skey].items.length === 0) {\n\t                            delete this.namereg[pkey].ikey[ikey].skey[skey];\n\t                            this.namereg[pkey].ikey[ikey].count += -1;\n\t                            if (this.namereg[pkey].ikey[ikey].count < 2) {\n\t                                for (i = 0, ilen = this.namereg[pkey].ikey[ikey].items.length; i < ilen; i += 1) {\n\t                                    state.tmp.taintedItemIDs[this.namereg[pkey].ikey[ikey].items[i]] = true;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    if (ikey && this.namereg[pkey].ikey[ikey]) {\n\t                        posB = this.namereg[pkey].ikey[ikey].items.indexOf(\"\" + id);\n\t                        if (posB > -1) {\n\t                            items = this.namereg[pkey].ikey[ikey].items.slice();\n\t                            this.namereg[pkey].ikey[ikey].items = items.slice(0, posB).concat(items.slice([posB + 1]));\n\t                        }\n\t                        if (this.namereg[pkey].ikey[ikey].items.length === 0) {\n\t                            delete this.namereg[pkey].ikey[ikey];\n\t                            this.namereg[pkey].count += -1;\n\t                            if (this.namereg[pkey].count < 2) {\n\t                                for (i = 0, ilen = this.namereg[pkey].items.length; i < ilen; i += 1) {\n\t                                    state.tmp.taintedItemIDs[this.namereg[pkey].items[i]] = true;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    if (pkey) {\n\t                        posB = this.namereg[pkey].items.indexOf(\"\" + id);\n\t                        if (posB > -1) {\n\t                            items = this.namereg[pkey].items.slice();\n\t                            this.namereg[pkey].items = items.slice(0, posB).concat(items.slice([posB + 1], items.length));\n\t                        }\n\t                        if (this.namereg[pkey].items.length < 2) {\n\t                            delete this.namereg[pkey];\n\t                        }\n\t                    }\n\t                    delete this.nameind[id][fullkey];\n\t                }\n\t            }\n\t            delete this.nameind[id];\n\t            delete this.nameindpkeys[id];\n\t        }\n\t        return ret;\n\t    };\n\t    addname = function (item_id, nameobj, pos) {\n\t        var i, ilen;\n\t        var res = state.nameOutput.getName(nameobj, \"locale-translit\", true);\n\t        nameobj = res.name;\n\t        if (state.citation.opt[\"givenname-disambiguation-rule\"]\n\t            && state.citation.opt[\"givenname-disambiguation-rule\"].slice(0, 8) === \"primary-\"\n\t            && pos !== 0) {\n\t                return;\n\t        }\n\t        set_keys(this.state, \"\" + item_id, nameobj);\n\t        if (pkey) {\n\t            if (\"undefined\" === typeof this.namereg[pkey]) {\n\t                this.namereg[pkey] = {};\n\t                this.namereg[pkey].count = 0;\n\t                this.namereg[pkey].ikey = {};\n\t                this.namereg[pkey].items = [item_id];\n\t            } else if (this.namereg[pkey].items.indexOf(item_id) === -1) {\n\t                this.namereg[pkey].items.push(item_id);\n\t            }\n\t        }\n\t        if (pkey && ikey) {\n\t            if (\"undefined\" === typeof this.namereg[pkey].ikey[ikey]) {\n\t                this.namereg[pkey].ikey[ikey] = {};\n\t                this.namereg[pkey].ikey[ikey].count = 0;\n\t                this.namereg[pkey].ikey[ikey].skey = {};\n\t                this.namereg[pkey].ikey[ikey].items = [item_id];\n\t                this.namereg[pkey].count += 1;\n\t                if (this.namereg[pkey].count === 2) {\n\t                    for (i = 0, ilen = this.namereg[pkey].items.length; i < ilen; i += 1) {\n\t                        state.tmp.taintedItemIDs[this.namereg[pkey].items[i]] = true;\n\t                    }\n\t                }\n\t            } else if (this.namereg[pkey].ikey[ikey].items.indexOf(item_id) === -1) {\n\t                this.namereg[pkey].ikey[ikey].items.push(item_id);\n\t            }\n\t        }\n\t        if (pkey && ikey && skey) {\n\t            if (\"undefined\" === typeof this.namereg[pkey].ikey[ikey].skey[skey]) {\n\t                this.namereg[pkey].ikey[ikey].skey[skey] = {};\n\t                this.namereg[pkey].ikey[ikey].skey[skey].items = [item_id];\n\t                this.namereg[pkey].ikey[ikey].count += 1;\n\t                if (this.namereg[pkey].ikey[ikey].count === 2) {\n\t                    for (i = 0, ilen = this.namereg[pkey].ikey[ikey].items.length; i < ilen; i += 1) {\n\t                        state.tmp.taintedItemIDs[this.namereg[pkey].ikey[ikey].items[i]] = true;\n\t                    }\n\t                }\n\t            } else if (this.namereg[pkey].ikey[ikey].skey[skey].items.indexOf(item_id) === -1) {\n\t                this.namereg[pkey].ikey[ikey].skey[skey].items.push(item_id);\n\t            }\n\t        }\n\t        if (\"undefined\" === typeof this.nameind[item_id]) {\n\t            this.nameind[item_id] = {};\n\t            this.nameindpkeys[item_id] = {};\n\t        }\n\t        if (pkey) {\n\t            this.nameind[item_id][pkey + \"::\" + ikey + \"::\" + skey] = true;\n\t            this.nameindpkeys[item_id][pkey] = this.namereg[pkey];\n\t        }\n\t    };\n\t    this.addname = addname;\n\t    this.delitems = delitems;\n\t    this.evalname = evalname;\n\t};\n\tCSL.Registry.CitationReg = function (state) {\n\t    this.citationById = {};\n\t    this.citationByIndex = [];\n\t};\n\tCSL.Disambiguation = function (state) {\n\t    this.state = state;\n\t    this.sys = this.state.sys;\n\t    this.registry = state.registry.registry;\n\t    this.ambigcites = state.registry.ambigcites;\n\t    this.configModes();\n\t    this.debug = false;\n\t};\n\tCSL.Disambiguation.prototype.run = function(akey) {\n\t    if (!this.modes.length) {\n\t        return;\n\t    }\n\t    this.akey = akey;\n\t    if (this.initVars(akey)) {\n\t        this.runDisambig();\n\t    }\n\t};\n\tCSL.Disambiguation.prototype.runDisambig = function () {\n\t    var pos, len, ppos, llen, pppos, lllen, ismax;\n\t    this.initGivens = true;\n\t    while (this.lists.length) {\n\t        this.gnameset = 0;\n\t        this.gname = 0;\n\t        this.clashes = [1, 0];\n\t        while(this.lists[0][1].length) {\n\t            this.listpos = 0;\n\t            if (!this.base) {\n\t                this.base = this.lists[0][0];\n\t            }\n\t            var names_used = [];\n\t            ismax = this.incrementDisambig();\n\t            this.scanItems(this.lists[0]);\n\t            this.evalScan(ismax);\n\t        }\n\t        this.lists = this.lists.slice(1);\n\t    }\n\t};\n\tCSL.Disambiguation.prototype.scanItems = function (list) {\n\t    var pos, len, Item, otherItem, ItemCite, ignore, base;\n\t    this.Item = list[1][0];\n\t    this.ItemCite = CSL.getAmbiguousCite.call(this.state, this.Item, this.base, true);\n\t    this.scanlist = list[1];\n\t    this.partners = [];\n\t    this.partners.push(this.Item);\n\t    this.nonpartners = [];\n\t    var clashes = 0;\n\t    for (var pos = 1, len = list[1].length; pos < len; pos += 1) {\n\t        otherItem = list[1][pos];\n\t        var otherItemCite = CSL.getAmbiguousCite.call(this.state, otherItem, this.base, true);\n\t        if (this.ItemCite === otherItemCite) {\n\t            clashes += 1;\n\t            this.partners.push(otherItem);\n\t        } else {\n\t            this.nonpartners.push(otherItem);\n\t        }\n\t    }\n\t    this.clashes[0] = this.clashes[1];\n\t    this.clashes[1] = clashes;\n\t};\n\tCSL.Disambiguation.prototype.evalScan = function (maxed) {\n\t    this[this.modes[this.modeindex]](maxed);\n\t    if (maxed) {\n\t        if (this.modeindex < this.modes.length - 1) {\n\t            this.modeindex += 1;\n\t        } else {\n\t            this.lists[this.listpos + 1] = [this.base, []];\n\t        }\n\t    }\n\t};\n\tCSL.Disambiguation.prototype.disNames = function (ismax) {\n\t    var pos, len, mybase, i, ilen;\n\t    if (this.clashes[1] === 0 && this.nonpartners.length === 1) {\n\t        this.captureStepToBase();\n\t        this.state.registry.registerAmbigToken(this.akey, \"\" + this.nonpartners[0].id, this.betterbase);\n\t        this.state.registry.registerAmbigToken(this.akey, \"\" + this.partners[0].id, this.betterbase);\n\t        this.lists[this.listpos] = [this.betterbase, []];\n\t    } else if (this.clashes[1] === 0) {\n\t        this.captureStepToBase();\n\t        this.state.registry.registerAmbigToken(this.akey, \"\" + this.partners[0].id, this.betterbase);\n\t        this.lists[this.listpos] = [this.betterbase, this.nonpartners];\n\t        if (this.nonpartners.length) {\n\t            this.initGivens = true;\n\t        }\n\t    } else if (this.nonpartners.length === 1) {\n\t        this.captureStepToBase();\n\t        this.state.registry.registerAmbigToken(this.akey, \"\" + this.nonpartners[0].id, this.betterbase);\n\t        this.lists[this.listpos] = [this.betterbase, this.partners];\n\t    } else if (this.clashes[1] < this.clashes[0]) {\n\t        this.captureStepToBase();\n\t        this.lists[this.listpos] = [this.betterbase, this.partners];\n\t        this.lists.push([this.betterbase, this.nonpartners]);\n\t    } else {\n\t        if (ismax) {\n\t            this.lists[this.listpos] = [this.betterbase, this.nonpartners];\n\t            this.lists.push([this.betterbase, this.partners]);\n\t            if (this.modeindex === this.modes.length - 1) {\n\t                for (var i = 0, ilen = this.partners.length; i < ilen; i += 1) {\n\t                    this.state.registry.registerAmbigToken(this.akey, \"\" + this.partners[i].id, this.betterbase);\n\t                }\n\t                this.lists[this.listpos] = [this.betterbase, []];\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Disambiguation.prototype.disExtraText = function () {\n\t    var pos, len, mybase;\n\t    var done = false;\n\t    if (this.clashes[1] === 0 && this.nonpartners.length < 2) {\n\t        done = true;\n\t    }\n\t    if (!done && (!this.base.disambiguate || this.state.tmp.disambiguate_count !== this.state.tmp.disambiguate_maxMax)) {\n\t        this.modeindex = 0;\n\t        this.base.disambiguate = this.state.tmp.disambiguate_count;\n\t        this.betterbase.disambiguate = this.state.tmp.disambiguate_count;\n\t        if (!this.base.disambiguate) {\n\t            this.initGivens = true;\n\t            this.base.disambiguate = 1;\n\t            for (var i = 0, ilen = this.lists[this.listpos][1].length; i < ilen; i += 1) {\n\t                this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][i].id] = true;\n\t            }\n\t        } else {\n\t            this.disNames();\n\t        }\n\t    } else if (done || this.state.tmp.disambiguate_count === this.state.tmp.disambiguate_maxMax) {\n\t        if (done || this.modeindex === this.modes.length - 1) {\n\t            var base = this.lists[this.listpos][0];\n\t            for (var i = 0, ilen = this.lists[this.listpos][1].length; i < ilen; i += 1) {\n\t                this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][i].id] = true;\n\t                this.state.registry.registerAmbigToken(this.akey, \"\" + this.lists[this.listpos][1][i].id, base);\n\t            }\n\t            this.lists[this.listpos] = [this.betterbase, []];\n\t        } else {\n\t            this.modeindex = this.modes.length - 1;\n\t            var base = this.lists[this.listpos][0];\n\t            base.disambiguate = true;\n\t            for (var i = 0, ilen = this.lists[this.listpos][1].length; i < ilen; i += 1) {\n\t                this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][i].id] = true;\n\t                this.state.registry.registerAmbigToken(this.akey, \"\" + this.lists[this.listpos][1][i].id, base);\n\t            }\n\t        }\n\t    }\n\t};\n\tCSL.Disambiguation.prototype.disYears = function () {\n\t    var pos, len, tokens, token, item;\n\t    tokens = [];\n\t    var base = this.lists[this.listpos][0];\n\t    if (this.clashes[1]) {\n\t\t\tfor (var i = 0, ilen = this.state.registry.mylist.length; i < ilen; i += 1) {\n\t\t\t\tvar origid = this.state.registry.mylist[i];\n\t\t\t\tfor (var j = 0, jlen = this.lists[this.listpos][1].length; j < jlen; j += 1) {\n\t\t\t\t\tvar token = this.lists[this.listpos][1][j];\n\t\t\t\t\tif (token.id == origid) {\n\t\t\t\t\t\ttokens.push(this.registry[token.id]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t    }\n\t    tokens.sort(this.state.registry.sorter.compareKeys);\n\t    for (var pos = 0, len = tokens.length; pos < len; pos += 1) {\n\t        base.year_suffix = \"\"+pos;\n\t        var oldBase = this.state.registry.registry[tokens[pos].id].disambig;\n\t        this.state.registry.registerAmbigToken(this.akey, \"\" + tokens[pos].id, base);\n\t        if (CSL.ambigConfigDiff(oldBase,base)) {\n\t            this.state.tmp.taintedItemIDs[tokens[pos].id] = true;\n\t        }\n\t    }\n\t    this.lists[this.listpos] = [this.betterbase, []];\n\t};\n\tCSL.Disambiguation.prototype.incrementDisambig = function () {\n\t    var val;\n\t    if (this.initGivens) {\n\t        this.initGivens = false;\n\t        return false;\n\t    }\n\t    var maxed = false;\n\t    var increment_names = true;\n\t    var increment_givens = true;\n\t    if (\"disNames\" === this.modes[this.modeindex]) {\n\t        increment_names = false;\n\t        if (\"number\" !== typeof this.givensMax) {\n\t            increment_names = true;\n\t        }\n\t        var increment_namesets = false;\n\t        if (\"number\" !== typeof this.namesMax) {\n\t            increment_namesets = true;\n\t        }\n\t        if (\"number\" === typeof this.givensMax) {\n\t            if (this.base.givens.length && this.base.givens[this.gnameset][this.gname] < this.givensMax) {\n\t                this.base.givens[this.gnameset][this.gname] += 1;\n\t            } else {\n\t                increment_names = true;\n\t            }\n\t        }\n\t        if (\"number\" === typeof this.namesMax \n\t            && increment_names) {\n\t            if (this.state.opt[\"disambiguate-add-names\"]) {\n\t                increment_namesets = false;\n\t                if (this.gname < this.namesMax) {\n\t                    this.base.names[this.gnameset] += 1;\n\t                    this.gname += 1;\n\t                } else {\n\t                    increment_namesets = true;\n\t                }\n\t            } else {\n\t                increment_namesets = true;\n\t            }\n\t        }\n\t        if (\"number\" === typeof this.namesetsMax && increment_namesets) {\n\t            if (this.gnameset < this.namesetsMax) {\n\t                this.gnameset += 1;\n\t                this.base.names[this.gnameset] = 1;\n\t                this.gname = 0;\n\t            } else {\n\t                var increment_mode = true;\n\t            }\n\t        }\n\t        if ((\"number\" !== typeof this.namesetsMax || this.namesetsMax === -1 || this.gnameset === this.namesetsMax)\n\t            && (!this.state.opt[\"disambiguate-add-names\"] || \"number\" !== typeof this.namesMax || this.gname === this.namesMax)\n\t            && (\"number\" != typeof this.givensMax || \"undefined\" === typeof this.base.givens[this.gnameset] || \"undefined\" === typeof this.base.givens[this.gnameset][this.gname] || this.base.givens[this.gnameset][this.gname] === this.givensMax)) {\n\t            maxed = true;\n\t        }\n\t    } else if (\"disExtraText\" === this.modes[this.modeindex]) {\n\t        this.base.disambiguate += 1;\n\t        this.betterbase.disambiguate += 1;\n\t    }\n\t    return maxed;\n\t};\n\tCSL.Disambiguation.prototype.initVars = function (akey) {\n\t    var i, ilen, myIds, myItemBundles, myItems;\n\t    this.lists = [];\n\t    this.base = false;\n\t    this.betterbase = false;\n\t    this.akey = akey;\n\t    this.maxNamesByItemId = {};\n\t    myItemBundles = [];\n\t    myIds = this.ambigcites[akey];\n\t    if (!myIds || !myIds.length) {\n\t        return false;\n\t    }\n\t    var Item = false;\n\t    var myItem = this.state.retrieveItem(\"\" + myIds[0]);\n\t    this.getCiteData(myItem);\n\t    this.base = CSL.getAmbigConfig.call(this.state);\n\t    if (myIds && myIds.length > 1) {\n\t        myItemBundles.push([this.maxNamesByItemId[myItem.id], myItem]);\n\t        for (var i = 1, ilen = myIds.length; i < ilen; i += 1) {\n\t            myItem = this.state.retrieveItem(\"\" + myIds[i]);\n\t            this.getCiteData(myItem, this.base);\n\t            myItemBundles.push([this.maxNamesByItemId[myItem.id], myItem]);\n\t        }\n\t        myItemBundles.sort(\n\t            function (a, b) {\n\t                if (a[0] > b[0]) {\n\t                    return 1;\n\t                } else if (a[0] < b[0]) {\n\t                    return -1;\n\t                } else {\n\t                    if (a[1].id > b[1].id) {\n\t                        return 1;\n\t                    } else if (a[1].id < b[1].id) {\n\t                        return -1;\n\t                    } else {\n\t                        return 0;\n\t                    }\n\t                }\n\t            }\n\t        );\n\t        myItems = [];\n\t        for (var i = 0, ilen = myItemBundles.length; i < ilen; i += 1) {\n\t            myItems.push(myItemBundles[i][1]);\n\t        }\n\t        this.lists.push([this.base, myItems]);\n\t        this.Item = this.lists[0][1][0];\n\t    } else {\n\t        this.Item = this.state.retrieveItem(\"\" + myIds[0]);\n\t    }\n\t    this.modeindex = 0;\n\t    if (this.state.citation.opt[\"disambiguate-add-names\"] || true) {\n\t        this.namesMax = this.maxNamesByItemId[this.Item.id][0];\n\t    } else {\n\t        var namesMax = this.base.names[0];\n\t        for (var i=1,ilen=this.base.names.length;i<ilen;i+=1){\n\t            namesMax = Math.max(namesMax,this.base.names.names[i]);\n\t        }\n\t    }\n\t    this.padBase(this.base);\n\t    this.padBase(this.betterbase);\n\t    this.base.year_suffix = false;\n\t    this.base.disambiguate = false;\n\t    this.betterbase.year_suffix = false;\n\t    this.betterbase.disambiguate = false;\n\t    if (this.state.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\"\n\t       && this.state.opt[\"disambiguate-add-givenname\"]) {\n\t        this.givensMax = 2;\n\t    }\n\t    return true;\n\t};\n\tCSL.Disambiguation.prototype.padBase = function (base) {\n\t    for (var i = 0, ilen = base.names.length; i < ilen; i += 1) {\n\t        if (!base.givens[i]) {\n\t            base.givens[i] = [];\n\t        }\n\t        for (var j=0,jlen=base.names[i];j<jlen;j+=1) {\n\t            if (!base.givens[i][j]) {\n\t                base.givens[i][j] = 0;\n\t            }\n\t        }\n\t    }\n\t}\n\tCSL.Disambiguation.prototype.configModes = function () {\n\t    var dagopt, gdropt;\n\t    this.modes = [];\n\t    dagopt = this.state.opt[\"disambiguate-add-givenname\"];\n\t    gdropt = this.state.citation.opt[\"givenname-disambiguation-rule\"];\n\t    if (this.state.opt['disambiguate-add-names'] || (dagopt && gdropt === \"by-cite\")) {\n\t        this.modes.push(\"disNames\");\n\t    }\n\t    if (this.state.opt.has_disambiguate) {\n\t        this.modes.push(\"disExtraText\");\n\t    }\n\t    if (this.state.opt[\"disambiguate-add-year-suffix\"]) {\n\t        this.modes.push(\"disYears\");\n\t    }\n\t};\n\tCSL.Disambiguation.prototype.getCiteData = function(Item, base) {\n\t    if (!this.maxNamesByItemId[Item.id]) {\n\t        CSL.getAmbiguousCite.call(this.state, Item, base);\n\t        base = CSL.getAmbigConfig.call(this.state);\n\t        this.maxNamesByItemId[Item.id] = CSL.getMaxVals.call(this.state);\n\t        this.state.registry.registry[Item.id].disambig.givens = this.state.tmp.disambig_settings.givens.slice();\n\t        for (var i=0,ilen=this.state.registry.registry[Item.id].disambig.givens.length;i<ilen;i+=1) {\n\t            this.state.registry.registry[Item.id].disambig.givens[i] = this.state.tmp.disambig_settings.givens[i].slice();\n\t        }\n\t        this.namesetsMax = this.state.registry.registry[Item.id].disambig.names.length - 1;\n\t        if (!this.base) {\n\t            this.base = base;\n\t            this.betterbase = CSL.cloneAmbigConfig(base);\n\t        }\n\t        if (base.names.length < this.base.names.length) {\n\t            this.base = base;\n\t        }\n\t        var update = false;\n\t        for (var i = 0, ilen = base.names.length; i < ilen; i += 1) {\n\t            if (base.names[i] > this.base.names[i]) {\n\t                this.base.givens[i] = base.givens[i].slice();\n\t                this.base.names[i] = base.names[i];\n\t                this.betterbase.names = this.base.names.slice();\n\t                this.betterbase.givens = this.base.givens.slice();\n\t                this.padBase(this.base);\n\t                this.padBase(this.betterbase);\n\t            }\n\t        }\n\t        this.betterbase.givens = this.base.givens.slice();\n\t        for (var j = 0, jlen = this.base.givens.length; j < jlen; j += 1) {\n\t            this.betterbase.givens[j] = this.base.givens[j].slice();\n\t        }\n\t    }\n\t};\n\tCSL.Disambiguation.prototype.captureStepToBase = function() {\n\t    if (this.state.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\"\n\t        && this.base.givens && this.base.givens.length) {\n\t        if (\"undefined\" !== typeof this.base.givens[this.gnameset][this.gname]) {\n\t            this.betterbase.givens[this.gnameset][this.gname] = this.base.givens[this.gnameset][this.gname];\n\t        }\n\t    }\n\t    this.betterbase.names[this.gnameset] = this.base.names[this.gnameset];\n\t};\n\tCSL.Engine.prototype.getJurisdictionList = function (jurisdiction) {\n\t    var jurisdictionList = [];\n\t    var jurisdictionElems = jurisdiction.split(\":\");\n\t    for (var j=jurisdictionElems.length;j>0;j--) {\n\t        jurisdictionList.push(jurisdictionElems.slice(0,j).join(\":\"));\n\t    }\n\t    if (jurisdictionList.indexOf(\"us\") === -1) {\n\t        jurisdictionList.push(\"us\");\n\t    }\n\t    return jurisdictionList;\n\t}\n\tCSL.Engine.prototype.retrieveAllStyleModules = function (jurisdictionList) {\n\t    var ret = {};\n\t    var preferences = this.locale[this.opt.lang].opts[\"jurisdiction-preference\"];\n\t    preferences = preferences ? preferences : [];\n\t    preferences = [\"\"].concat(preferences);\n\t    for (var i=preferences.length-1;i>-1;i--) {\n\t        var preference = preferences[i];\n\t        for (var j=0,jlen=jurisdictionList.length;j<jlen;j++) {\n\t            var jurisdiction = jurisdictionList[j];\n\t            if (this.opt.jurisdictions_seen[jurisdiction]) continue;\n\t            var res = this.sys.retrieveStyleModule(jurisdiction, preference);\n\t            if ((!res && !preference) || res) {\n\t                this.opt.jurisdictions_seen[jurisdiction] = true;\n\t            }\n\t            if (!res) continue;\n\t            ret[jurisdiction] = res;\n\t        }\n\t    }\n\t    return ret;\n\t}\n\tCSL.ParticleList = function() {\n\t\tvar always_dropping_1 = [[[0,1], null]];\n\t\tvar always_dropping_2 = [[[0,2], null]];\n\t\tvar always_dropping_3 = [[[0,3], null]]\n\t\tvar always_non_dropping_1 = [[null, [0,1]]];\n\t\tvar always_non_dropping_2 = [[null, [0,2]]];\n\t\tvar always_non_dropping_3 = [[null, [0,3]]];\n\t\tvar either_1 = [[null, [0,1]],[[0,1],null]];\n\t\tvar either_2 = [[null, [0,2]],[[0,2],null]];\n\t\tvar either_1_dropping_best = [[[0,1],null],[null, [0,1]]];\n\t\tvar either_2_dropping_best = [[[0,2],null],[null, [0,2]]];\n\t\tvar either_3_dropping_best = [[[0,3],null],[null, [0,3]]];\n\t\tvar non_dropping_2_alt_dropping_1_non_dropping_1 = [[null, [0,2]], [[0,1], [1,2]]];\n\t\treturn  PARTICLES = [\n\t\t\t[\"'s\", always_non_dropping_1],\n\t\t\t[\"'s-\", always_non_dropping_1],\n\t\t\t[\"'t\", always_non_dropping_1],\n\t\t\t[\"a\", \talways_non_dropping_1],\n\t\t\t[\"aan 't\", always_non_dropping_2],\n\t\t\t[\"aan de\", always_non_dropping_2],\n\t\t\t[\"aan den\", always_non_dropping_2],\n\t\t\t[\"aan der\", always_non_dropping_2],\n\t\t\t[\"aan het\", always_non_dropping_2],\n\t\t\t[\"aan t\", always_non_dropping_2],\n\t\t\t[\"aan\", always_non_dropping_1],\n\t\t\t[\"ad-\", either_1],\n\t\t\t[\"adh-\", either_1],\n\t\t\t[\"af\", either_1],\n\t\t\t[\"al\", either_1],\n\t\t\t[\"al-\", either_1],\n\t\t\t[\"am de\", always_non_dropping_2],\n\t\t\t[\"am\", always_non_dropping_1],\n\t\t\t[\"an-\", either_1],\n\t\t\t[\"ar-\", either_1],\n\t\t\t[\"as-\", either_1],\n\t\t\t[\"ash-\", either_1],\n\t\t\t[\"at-\", either_1],\n\t\t\t[\"ath-\", either_1],\n\t\t\t[\"auf dem\", either_2_dropping_best],\n\t\t\t[\"auf den\", either_2_dropping_best],\n\t\t\t[\"auf der\", either_2_dropping_best],\n\t\t\t[\"auf ter\", always_non_dropping_2],\n\t\t\t[\"auf\", either_1_dropping_best],\n\t\t\t[\"aus 'm\", either_2_dropping_best],\n\t\t\t[\"aus dem\", either_2_dropping_best],\n\t\t\t[\"aus den\", either_2_dropping_best],\n\t\t\t[\"aus der\", either_2_dropping_best],\n\t\t\t[\"aus m\", either_2_dropping_best],\n\t\t\t[\"aus\", either_1_dropping_best],\n\t\t\t[\"aus'm\", either_2_dropping_best],\n\t\t\t[\"az-\", either_1],\n\t\t\t[\"aš-\", either_1],\n\t\t\t[\"aḍ-\", either_1],\n\t\t\t[\"aḏ-\", either_1],\n\t\t\t[\"aṣ-\", either_1],\n\t\t\t[\"aṭ-\", either_1],\n\t\t\t[\"aṯ-\", either_1],\n\t\t\t[\"aẓ-\", either_1],\n\t\t\t[\"ben\", always_non_dropping_1],\n\t\t\t[\"bij 't\", always_non_dropping_2],\n\t\t\t[\"bij de\", always_non_dropping_2],\n\t\t\t[\"bij den\", always_non_dropping_2],\n\t\t\t[\"bij het\", always_non_dropping_2],\n\t\t\t[\"bij t\", always_non_dropping_2],\n\t\t\t[\"bij\", always_non_dropping_1],\n\t\t\t[\"bin\", always_non_dropping_1],\n\t\t\t[\"boven d\", always_non_dropping_2],\n\t\t\t[\"boven d'\", always_non_dropping_2],\n\t\t\t[\"d\", always_non_dropping_1],\n\t\t\t[\"d'\", either_1],\n\t\t\t[\"da\", either_1],\n\t\t\t[\"dal\", always_non_dropping_1],\n\t\t\t[\"dal'\", always_non_dropping_1],\n\t\t\t[\"dall'\", always_non_dropping_1],\n\t\t\t[\"dalla\", always_non_dropping_1],\n\t\t\t[\"das\", either_1],\n\t\t\t[\"de die le\", always_non_dropping_3],\n\t\t\t[\"de die\", always_non_dropping_2],\n\t\t\t[\"de l\", always_non_dropping_2],\n\t\t\t[\"de l'\", always_non_dropping_2],\n\t\t\t[\"de la\", non_dropping_2_alt_dropping_1_non_dropping_1],\n\t\t\t[\"de las\", non_dropping_2_alt_dropping_1_non_dropping_1],\n\t\t\t[\"de le\", always_non_dropping_2],\n\t\t\t[\"de li\", either_2],\n\t\t\t[\"de van der\", always_non_dropping_3],\n\t\t\t[\"de\", either_1],\n\t\t\t[\"de'\", either_1],\n\t\t\t[\"deca\", always_non_dropping_1],\n\t\t\t[\"degli\", either_1],\n\t\t\t[\"dei\", either_1],\n\t\t\t[\"del\", either_1],\n\t\t\t[\"dela\", always_dropping_1],\n\t\t\t[\"dell'\", either_1],\n\t\t\t[\"della\", either_1],\n\t\t\t[\"delle\", either_1],\n\t\t\t[\"dello\", either_1],\n\t\t\t[\"den\", either_1],\n\t\t\t[\"der\", either_1],\n\t\t\t[\"des\", either_1],\n\t\t\t[\"di\", either_1],\n\t\t\t[\"die le\", always_non_dropping_2],\n\t\t\t[\"do\", always_non_dropping_1],\n\t\t\t[\"don\", always_non_dropping_1],\n\t\t\t[\"dos\", either_1],\n\t\t\t[\"du\", either_1],\n\t\t\t[\"ed-\", either_1],\n\t\t\t[\"edh-\", either_1],\n\t\t\t[\"el\", either_1],\n\t\t\t[\"el-\", either_1],\n\t\t\t[\"en-\", either_1],\n\t\t\t[\"er-\", either_1],\n\t\t\t[\"es-\", either_1],\n\t\t\t[\"esh-\", either_1],\n\t\t\t[\"et-\", either_1],\n\t\t\t[\"eth-\", either_1],\n\t\t\t[\"ez-\", either_1],\n\t\t\t[\"eš-\", either_1],\n\t\t\t[\"eḍ-\", either_1],\n\t\t\t[\"eḏ-\", either_1],\n\t\t\t[\"eṣ-\", either_1],\n\t\t\t[\"eṭ-\", either_1],\n\t\t\t[\"eṯ-\", either_1],\n\t\t\t[\"eẓ-\", either_1],\n\t\t\t[\"het\", always_non_dropping_1],\n\t\t\t[\"i\", always_non_dropping_1],\n\t\t\t[\"il\", always_dropping_1],\n\t\t\t[\"im\", always_non_dropping_1],\n\t\t\t[\"in 't\", always_non_dropping_2],\n\t\t\t[\"in de\", always_non_dropping_2],\n\t\t\t[\"in den\", always_non_dropping_2],\n\t\t\t[\"in der\", either_2],\n\t\t\t[\"in het\", always_non_dropping_2],\n\t\t\t[\"in t\", always_non_dropping_2],\n\t\t\t[\"in\", always_non_dropping_1],\n\t\t\t[\"l\", always_non_dropping_1],\n\t\t\t[\"l'\", always_non_dropping_1],\n\t\t\t[\"la\", always_non_dropping_1],\n\t\t\t[\"las\", always_non_dropping_1],\n\t\t\t[\"le\", always_non_dropping_1],\n\t\t\t[\"les\", either_1],\n\t\t\t[\"lo\", either_1],\n\t\t\t[\"los\", always_non_dropping_1],\n\t\t\t[\"lou\", always_non_dropping_1],\n\t\t\t[\"of\", always_non_dropping_1],\n\t\t\t[\"onder 't\", always_non_dropping_2],\n\t\t\t[\"onder de\", always_non_dropping_2],\n\t\t\t[\"onder den\", always_non_dropping_2],\n\t\t\t[\"onder het\", always_non_dropping_2],\n\t\t\t[\"onder t\", always_non_dropping_2],\n\t\t\t[\"onder\", always_non_dropping_1],\n\t\t\t[\"op 't\", always_non_dropping_2],\n\t\t\t[\"op de\", either_2],\n\t\t\t[\"op den\", always_non_dropping_2],\n\t\t\t[\"op der\", always_non_dropping_2],\n\t\t\t[\"op gen\", always_non_dropping_2],\n\t\t\t[\"op het\", always_non_dropping_2],\n\t\t\t[\"op t\", always_non_dropping_2],\n\t\t\t[\"op ten\", always_non_dropping_2],\n\t\t\t[\"op\", always_non_dropping_1],\n\t\t\t[\"over 't\", always_non_dropping_2],\n\t\t\t[\"over de\", always_non_dropping_2],\n\t\t\t[\"over den\", always_non_dropping_2],\n\t\t\t[\"over het\", always_non_dropping_2],\n\t\t\t[\"over t\", always_non_dropping_2],\n\t\t\t[\"over\", always_non_dropping_1],\n\t\t\t[\"s\", always_non_dropping_1],\n\t\t\t[\"s'\", always_non_dropping_1],\n\t\t\t[\"sen\", always_dropping_1],\n\t\t\t[\"t\", always_non_dropping_1],\n\t\t\t[\"te\", always_non_dropping_1],\n\t\t\t[\"ten\", always_non_dropping_1],\n\t\t\t[\"ter\", always_non_dropping_1],\n\t\t\t[\"tho\", always_non_dropping_1],\n\t\t\t[\"thoe\", always_non_dropping_1],\n\t\t\t[\"thor\", always_non_dropping_1],\n\t\t\t[\"to\", always_non_dropping_1],\n\t\t\t[\"toe\", always_non_dropping_1],\n\t\t\t[\"tot\", always_non_dropping_1],\n\t\t\t[\"uijt 't\", always_non_dropping_2],\n\t\t\t[\"uijt de\", always_non_dropping_2],\n\t\t\t[\"uijt den\", always_non_dropping_2],\n\t\t\t[\"uijt te de\", always_non_dropping_3],\n\t\t\t[\"uijt ten\", always_non_dropping_2],\n\t\t\t[\"uijt\", always_non_dropping_1],\n\t\t\t[\"uit 't\", always_non_dropping_2],\n\t\t\t[\"uit de\", always_non_dropping_2],\n\t\t\t[\"uit den\", always_non_dropping_2],\n\t\t\t[\"uit het\", always_non_dropping_2],\n\t\t\t[\"uit t\", always_non_dropping_2],\n\t\t\t[\"uit te de\", always_non_dropping_3],\n\t\t\t[\"uit ten\", always_non_dropping_2],\n\t\t\t[\"uit\", always_non_dropping_1],\n\t\t\t[\"unter\", always_non_dropping_1],\n\t\t\t[\"v\", always_non_dropping_1],\n\t\t\t[\"v.\", always_non_dropping_1],\n\t\t\t[\"v.d.\", always_non_dropping_1],\n\t\t\t[\"van 't\", always_non_dropping_2],\n\t\t\t[\"van de l\", always_non_dropping_3],\n\t\t\t[\"van de l'\", always_non_dropping_3],\n\t\t\t[\"van de\", always_non_dropping_2],\n\t\t\t[\"van de\", always_non_dropping_2],\n\t\t\t[\"van den\", always_non_dropping_2],\n\t\t\t[\"van der\", always_non_dropping_2],\n\t\t\t[\"van gen\", always_non_dropping_2],\n\t\t\t[\"van het\", always_non_dropping_2],\n\t\t\t[\"van la\", always_non_dropping_2],\n\t\t\t[\"van t\", always_non_dropping_2],\n\t\t\t[\"van ter\", always_non_dropping_2],\n\t\t\t[\"van van de\", always_non_dropping_3],\n\t\t\t[\"van\", either_1],\n\t\t\t[\"vander\", always_non_dropping_1],\n\t\t\t[\"vd\", always_non_dropping_1],\n\t\t\t[\"ver\", always_non_dropping_1],\n\t\t\t[\"vom und zum\", always_dropping_3],\n\t\t\t[\"vom\", either_1],\n\t\t\t[\"von 't\", always_non_dropping_2],\n\t\t\t[\"von dem\", either_2_dropping_best],\n\t\t\t[\"von den\", either_2_dropping_best],\n\t\t\t[\"von der\", either_2_dropping_best],\n\t\t\t[\"von t\", always_non_dropping_2],\n\t\t\t[\"von und zu\", either_3_dropping_best],\n\t\t\t[\"von zu\", either_2_dropping_best],\n\t\t\t[\"von\", either_1_dropping_best],\n\t\t\t[\"voor 't\", always_non_dropping_2],\n\t\t\t[\"voor de\", always_non_dropping_2],\n\t\t\t[\"voor den\", always_non_dropping_2],\n\t\t\t[\"voor in 't\", always_non_dropping_3],\n\t\t\t[\"voor in t\", always_non_dropping_3],\n\t\t\t[\"voor\", always_non_dropping_1],\n\t\t\t[\"vor der\", either_2_dropping_best],\n\t\t\t[\"vor\", either_1_dropping_best],\n\t\t\t[\"z\", always_dropping_1],\n\t\t\t[\"ze\", always_dropping_1],\n\t\t\t[\"zu\", either_1_dropping_best],\n\t\t\t[\"zum\", either_1],\n\t\t\t[\"zur\", either_1]\n\t\t];\n\t}();\n\tCSL.parseParticles = function(){\n\t    function splitParticles(nameValue, firstNameFlag, caseOverride) {\n\t\t\tvar origNameValue = nameValue;\n\t\t\tnameValue = caseOverride ? nameValue.toLowerCase() : nameValue;\n\t\t\tvar particleList = [];\n\t\t\tvar apostrophe;\n\t\t\tvar rex;\n\t\t\tif (firstNameFlag) {\n\t\t\t\tnameValue = nameValue.split(\"\").reverse().join(\"\");\n\t\t\t\trex = CSL.PARTICLE_GIVEN_REGEXP;\n\t\t\t} else {\n\t\t\t\trex = CSL.PARTICLE_FAMILY_REGEXP;\n\t\t\t}\n\t\t\tvar m = nameValue.match(rex);\n\t\t\twhile (m) {\n\t\t\t\tvar m1 = firstNameFlag ? m[1].split(\"\").reverse().join(\"\") : m[1];\n\t\t\t\tvar firstChar = m ? m1 : false;\n\t\t\t\tvar firstChar = firstChar ? m1.replace(/^[-\\'\\u02bb\\u2019\\s]*(.).*$/, \"$1\") : false;\n\t\t\t\tvar hasParticle = firstChar ? firstChar.toUpperCase() !== firstChar : false;\n\t\t\t\tif (!hasParticle) break;\n\t\t\t\tif (firstNameFlag) {\n\t\t\t\t\tparticleList.push(origNameValue.slice(m1.length * -1));\n\t\t\t\t\torigNameValue = origNameValue.slice(0,m1.length * -1);\n\t\t\t\t} else {\n\t\t\t\t\tparticleList.push(origNameValue.slice(0,m1.length));\n\t\t\t\t\torigNameValue = origNameValue.slice(m1.length);\n\t\t\t\t}\n\t\t\t\tnameValue = m[2];\n\t\t\t\tm = nameValue.match(rex);\n\t\t\t}\n\t\t\tif (firstNameFlag) {\n\t\t\t\tnameValue = nameValue.split(\"\").reverse().join(\"\");\n\t\t\t\tparticleList.reverse();\n\t\t\t\tfor (var i=1,ilen=particleList.length;i<ilen;i++) {\n\t\t\t\t\tif (particleList[i].slice(0, 1) == \" \") {\n\t\t\t\t\t\tparticleList[i-1] += \" \";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var i=0,ilen=particleList.length;i<ilen;i++) {\n\t\t\t\t\tif (particleList[i].slice(0, 1) == \" \") {\n\t\t\t\t\t\tparticleList[i] = particleList[i].slice(1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnameValue = origNameValue.slice(0, nameValue.length);\n\t\t\t} else {\n\t\t\t\tnameValue = origNameValue.slice(nameValue.length * -1);\n\t\t\t}\n\t\t\treturn [hasParticle, nameValue, particleList];\n\t\t}\n\t    function trimLast(str) {\n\t        var lastChar = str.slice(-1);\n\t        str = str.trim();\n\t        if (lastChar === \" \" && [\"\\'\", \"\\u2019\"].indexOf(str.slice(-1)) > -1) {\n\t            str += \" \";\n\t        }\n\t        return str;\n\t    }\n\t    function parseSuffix(nameObj) {\n\t        if (!nameObj.suffix && nameObj.given) {\n\t            m = nameObj.given.match(/(\\s*,!*\\s*)/);\n\t            if (m) {\n\t                idx = nameObj.given.indexOf(m[1]);\n\t                var possible_suffix = nameObj.given.slice(idx + m[1].length);\n\t                var possible_comma = nameObj.given.slice(idx, idx + m[1].length).replace(/\\s*/g, \"\");\n\t                if (possible_suffix.replace(/\\./g, \"\") === 'et al' && !nameObj[\"dropping-particle\"]) {\n\t                    nameObj[\"dropping-particle\"] = possible_suffix;\n\t                    nameObj[\"comma-dropping-particle\"] = \",\";\n\t                } else {\n\t                    if (possible_comma.length === 2) {\n\t                        nameObj[\"comma-suffix\"] = true;\n\t                    }\n\t                    nameObj.suffix = possible_suffix;\n\t                }\n\t                nameObj.given = nameObj.given.slice(0, idx);\n\t            }\n\t        }\n\t    }\n\t    return function(nameObj) {\n\t        var res = splitParticles(nameObj.family);\n\t        var hasLastParticle = res[0];\n\t        var lastNameValue = res[1];\n\t        var lastParticleList = res[2];\n\t        nameObj.family = lastNameValue;\n\t        var nonDroppingParticle = trimLast(lastParticleList.join(\"\"));\n\t        if (nonDroppingParticle) {\n\t            nameObj['non-dropping-particle'] = nonDroppingParticle;\n\t        }\n\t        parseSuffix(nameObj);\n\t        var res = splitParticles(nameObj.given, true);\n\t        var hasFirstParticle = res[0];\n\t        var firstNameValue = res[1];\n\t        var firstParticleList = res[2];\n\t        nameObj.given = firstNameValue;\n\t        var droppingParticle = firstParticleList.join(\"\").trim();\n\t        if (droppingParticle) {\n\t            nameObj['dropping-particle'] = droppingParticle;\n\t        }\n\t    }\n\t}();\n\t\n\tif (true) { module.exports = CSL }\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(105)(module)))\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t// This object will be used as the prototype for Nodes when creating a\n\t// DOM-Level-1-compliant structure.\n\tvar NodePrototype = module.exports = {\n\t\tget firstChild() {\n\t\t\tvar children = this.children;\n\t\t\treturn children && children[0] || null;\n\t\t},\n\t\tget lastChild() {\n\t\t\tvar children = this.children;\n\t\t\treturn children && children[children.length - 1] || null;\n\t\t},\n\t\tget nodeType() {\n\t\t\treturn nodeTypes[this.type] || nodeTypes.element;\n\t\t}\n\t};\n\t\n\tvar domLvl1 = {\n\t\ttagName: \"name\",\n\t\tchildNodes: \"children\",\n\t\tparentNode: \"parent\",\n\t\tpreviousSibling: \"prev\",\n\t\tnextSibling: \"next\",\n\t\tnodeValue: \"data\"\n\t};\n\t\n\tvar nodeTypes = {\n\t\telement: 1,\n\t\ttext: 3,\n\t\tcdata: 4,\n\t\tcomment: 8\n\t};\n\t\n\tObject.keys(domLvl1).forEach(function(key) {\n\t\tvar shorthand = domLvl1[key];\n\t\tObject.defineProperty(NodePrototype, key, {\n\t\t\tget: function() {\n\t\t\t\treturn this[shorthand] || null;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tthis[shorthand] = val;\n\t\t\t\treturn val;\n\t\t\t}\n\t\t});\n\t});\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar parser = __webpack_require__(50);\n\tvar processingInstructions = __webpack_require__(24);\n\tvar isValidNodeDefinitions = __webpack_require__(22);\n\tvar processNodeDefinitions = __webpack_require__(23);\n\t\n\tmodule.exports = {\n\t  Parser: parser,\n\t  ProcessingInstructions: processingInstructions,\n\t  IsValidNodeDefinitions: isValidNodeDefinitions,\n\t  ProcessNodeDefinitions: processNodeDefinitions,\n\t};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\tfunction alwaysValid() {\n\t  return true;\n\t}\n\t\n\tmodule.exports = {\n\t  alwaysValid: alwaysValid,\n\t};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar utils = __webpack_require__(25);\n\t\n\t// eslint-disable-next-line max-len\n\t// https://github.com/facebook/react/blob/15.0-stable/src/renderers/dom/shared/ReactDOMComponent.js#L457\n\tvar voidElementTags = [\n\t  'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param',\n\t  'source', 'track', 'wbr', 'menuitem', 'textarea',\n\t];\n\t\n\tfunction ProcessNodeDefinitions() {\n\t  function processDefaultNode(node, children, index) {\n\t    if (node.type === 'text') {\n\t      return node.data;\n\t    } else if (node.type === 'comment') {\n\t      // FIXME: The following doesn't work as the generated HTML results in\n\t      // \"&lt;!--  This is a comment  --&gt;\"\n\t      // return '<!-- ' + node.data + ' -->';\n\t      return false;\n\t    }\n\t\n\t    if (voidElementTags.indexOf(node.name) > -1) {\n\t      return utils.createElement(node, index);\n\t    } else {\n\t      return utils.createElement(node, index, node.data, children);\n\t    }\n\t  }\n\t\n\t  return {\n\t    processDefaultNode: processDefaultNode,\n\t  };\n\t}\n\t\n\tmodule.exports = ProcessNodeDefinitions;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ShouldProcessNodeDefinitions = __webpack_require__(51);\n\tvar ProcessNodeDefinitions = __webpack_require__(23);\n\t\n\tfunction ProcessingInstructions() {\n\t  var processNodeDefinitions = new ProcessNodeDefinitions();\n\t\n\t  return {\n\t    defaultProcessingInstructions: [{\n\t      shouldProcessNode: ShouldProcessNodeDefinitions.shouldProcessEveryNode,\n\t      processNode: processNodeDefinitions.processDefaultNode,\n\t    },],\n\t  };\n\t};\n\t\n\tmodule.exports = ProcessingInstructions;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar camelize = __webpack_require__(99);\n\tvar toPairs = __webpack_require__(86);\n\tvar reduce = __webpack_require__(84);\n\tvar React = __webpack_require__(15);\n\tvar camelCaseAttrMap = __webpack_require__(49);\n\t\n\tfunction createStyleJsonFromString(styleString) {\n\t  styleString = styleString || '';\n\t  var styles = styleString.split(/;(?!base64)/);\n\t  var singleStyle, key, value, jsonStyles = {};\n\t  for (var i = 0; i < styles.length; ++i) {\n\t    singleStyle = styles[i].split(':');\n\t    if (singleStyle.length > 2) {\n\t      singleStyle[1] = singleStyle.slice(1).join(':');\n\t    }\n\t    \n\t    key = camelize(singleStyle[0]);\n\t    value = singleStyle[1];\n\t    if (key.length > 0 && value.length > 0) {\n\t      jsonStyles[key] = value;\n\t    }\n\t  }\n\t  return jsonStyles;\n\t}\n\t\n\tfunction createElement(node, index, data, children) {\n\t  var elementProps = {\n\t    key: index,\n\t  };\n\t  if (node.attribs) {\n\t    elementProps = reduce(function(result, keyAndValue) {\n\t      var key = keyAndValue[0];\n\t      var value = keyAndValue[1];\n\t      key = camelCaseAttrMap[key.replace(/[-:]/, '')] || key;\n\t      if (key === 'style') {\n\t        value = createStyleJsonFromString(value);\n\t      } else if (key === 'class') {\n\t        key = 'className';\n\t      } else if (key === 'for') {\n\t        key = 'htmlFor';\n\t      }\n\t      if (typeof value === 'string') {\n\t        value = value;\n\t      }\n\t      result[key] = value || key;\n\t      return result;\n\t    }, elementProps, toPairs(node.attribs));\n\t  }\n\t\n\t  children = children || [];\n\t  var allChildren = data != null ? [data,].concat(children) : children;\n\t  return React.createElement.apply(\n\t    null, [node.name, elementProps,].concat(allChildren)\n\t  );\n\t}\n\t\n\tmodule.exports = {\n\t  createElement: createElement,\n\t};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(61)();\n\t}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(10);\n\tvar _curry1 = __webpack_require__(3);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _curryN = __webpack_require__(70);\n\t\n\t\n\t/**\n\t * Returns a curried equivalent of the provided function, with the specified\n\t * arity. The curried function has two unusual capabilities. First, its\n\t * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n\t * following are equivalent:\n\t *\n\t *   - `g(1)(2)(3)`\n\t *   - `g(1)(2, 3)`\n\t *   - `g(1, 2)(3)`\n\t *   - `g(1, 2, 3)`\n\t *\n\t * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n\t * \"gaps\", allowing partial application of any combination of arguments,\n\t * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n\t * the following are equivalent:\n\t *\n\t *   - `g(1, 2, 3)`\n\t *   - `g(_, 2, 3)(1)`\n\t *   - `g(_, _, 3)(1)(2)`\n\t *   - `g(_, _, 3)(1, 2)`\n\t *   - `g(_, 2)(1)(3)`\n\t *   - `g(_, 2)(1, 3)`\n\t *   - `g(_, 2)(_, 3)(1)`\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.5.0\n\t * @category Function\n\t * @sig Number -> (* -> a) -> (* -> a)\n\t * @param {Number} length The arity for the returned function.\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} A new, curried function.\n\t * @see R.curry\n\t * @example\n\t *\n\t *      var sumArgs = (...args) => R.sum(args);\n\t *\n\t *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n\t *      var f = curriedAddFourNumbers(1, 2);\n\t *      var g = f(3);\n\t *      g(4); //=> 10\n\t */\n\tmodule.exports = _curry2(function curryN(length, fn) {\n\t  if (length === 1) {\n\t    return _curry1(fn);\n\t  }\n\t  return _arity(length, _curryN(length, [], fn));\n\t});\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Tests whether or not an object is an array.\n\t *\n\t * @private\n\t * @param {*} val The object to test.\n\t * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n\t * @example\n\t *\n\t *      _isArray([]); //=> true\n\t *      _isArray(null); //=> false\n\t *      _isArray({}); //=> false\n\t */\n\tmodule.exports = Array.isArray || function _isArray(val) {\n\t  return (val != null &&\n\t          val.length >= 0 &&\n\t          Object.prototype.toString.call(val) === '[object Array]');\n\t};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(3);\n\tvar _has = __webpack_require__(12);\n\tvar _isArguments = __webpack_require__(72);\n\t\n\t\n\t/**\n\t * Returns a list containing the names of all the enumerable own properties of\n\t * the supplied object.\n\t * Note that the order of the output array is not guaranteed to be consistent\n\t * across different JS platforms.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig {k: v} -> [k]\n\t * @param {Object} obj The object to extract properties from\n\t * @return {Array} An array of the object's own properties.\n\t * @see R.keysIn, R.values\n\t * @example\n\t *\n\t *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n\t */\n\tmodule.exports = (function() {\n\t  // cover IE < 9 keys issues\n\t  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n\t  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n\t                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\t  // Safari bug\n\t  var hasArgsEnumBug = (function() {\n\t    'use strict';\n\t    return arguments.propertyIsEnumerable('length');\n\t  }());\n\t\n\t  var contains = function contains(list, item) {\n\t    var idx = 0;\n\t    while (idx < list.length) {\n\t      if (list[idx] === item) {\n\t        return true;\n\t      }\n\t      idx += 1;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n\t    _curry1(function keys(obj) {\n\t      return Object(obj) !== obj ? [] : Object.keys(obj);\n\t    }) :\n\t    _curry1(function keys(obj) {\n\t      if (Object(obj) !== obj) {\n\t        return [];\n\t      }\n\t      var prop, nIdx;\n\t      var ks = [];\n\t      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\t      for (prop in obj) {\n\t        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n\t          ks[ks.length] = prop;\n\t        }\n\t      }\n\t      if (hasEnumBug) {\n\t        nIdx = nonEnumerableProps.length - 1;\n\t        while (nIdx >= 0) {\n\t          prop = nonEnumerableProps[nIdx];\n\t          if (_has(prop, obj) && !contains(ks, prop)) {\n\t            ks[ks.length] = prop;\n\t          }\n\t          nIdx -= 1;\n\t        }\n\t      }\n\t      return ks;\n\t    });\n\t}());\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(9),\n\t    _assign = __webpack_require__(7);\n\t\n\tvar ReactNoopUpdateQueue = __webpack_require__(34);\n\t\n\tvar canDefineProperty = __webpack_require__(35);\n\tvar emptyObject = __webpack_require__(20);\n\tvar invariant = __webpack_require__(2);\n\tvar lowPriorityWarning = __webpack_require__(96);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactComponent(props, context, updater) {\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tReactComponent.prototype.isReactComponent = {};\n\t\n\t/**\n\t * Sets a subset of the state. Always use this to mutate\n\t * state. You should treat `this.state` as immutable.\n\t *\n\t * There is no guarantee that `this.state` will be immediately updated, so\n\t * accessing `this.state` after calling this method may return the old value.\n\t *\n\t * There is no guarantee that calls to `setState` will run synchronously,\n\t * as they may eventually be batched together.  You can provide an optional\n\t * callback that will be executed when the call to setState is actually\n\t * completed.\n\t *\n\t * When a function is provided to setState, it will be called at some point in\n\t * the future (not synchronously). It will be called with the up to date\n\t * component arguments (state, props, context). These values can be different\n\t * from this.* because your function may be called after receiveProps but before\n\t * shouldComponentUpdate, and this new state, props, and context will not yet be\n\t * assigned to this.\n\t *\n\t * @param {object|function} partialState Next partial state or function to\n\t *        produce next partial state to be merged with current state.\n\t * @param {?function} callback Called after state is updated.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.setState = function (partialState, callback) {\n\t  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n\t  this.updater.enqueueSetState(this, partialState);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'setState');\n\t  }\n\t};\n\t\n\t/**\n\t * Forces an update. This should only be invoked when it is known with\n\t * certainty that we are **not** in a DOM transaction.\n\t *\n\t * You may want to call this when you know that some deeper aspect of the\n\t * component's state has changed but `setState` was not called.\n\t *\n\t * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t * `componentWillUpdate` and `componentDidUpdate`.\n\t *\n\t * @param {?function} callback Called after update is complete.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.forceUpdate = function (callback) {\n\t  this.updater.enqueueForceUpdate(this);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n\t  }\n\t};\n\t\n\t/**\n\t * Deprecated APIs. These APIs used to exist on classic React classes but since\n\t * we would like to deprecate them, we're not going to move them over to this\n\t * modern base class. Instead, we define a getter that warns if it's accessed.\n\t */\n\tif (false) {\n\t  var deprecatedAPIs = {\n\t    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n\t    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n\t  };\n\t  var defineDeprecationWarning = function (methodName, info) {\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(ReactComponent.prototype, methodName, {\n\t        get: function () {\n\t          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\t          return undefined;\n\t        }\n\t      });\n\t    }\n\t  };\n\t  for (var fnName in deprecatedAPIs) {\n\t    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n\t      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactPureComponent(props, context, updater) {\n\t  // Duplicated from ReactComponent.\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tfunction ComponentDummy() {}\n\tComponentDummy.prototype = ReactComponent.prototype;\n\tReactPureComponent.prototype = new ComponentDummy();\n\tReactPureComponent.prototype.constructor = ReactPureComponent;\n\t// Avoid an extra prototype jump for these methods.\n\t_assign(ReactPureComponent.prototype, ReactComponent.prototype);\n\tReactPureComponent.prototype.isPureReactComponent = true;\n\t\n\tmodule.exports = {\n\t  Component: ReactComponent,\n\t  PureComponent: ReactPureComponent\n\t};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Keeps track of the current owner.\n\t *\n\t * The current owner is the component who should own any components that are\n\t * currently being constructed.\n\t */\n\tvar ReactCurrentOwner = {\n\t  /**\n\t   * @internal\n\t   * @type {ReactComponent}\n\t   */\n\t  current: null\n\t};\n\t\n\tmodule.exports = ReactCurrentOwner;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t// The Symbol used to tag the ReactElement type. If there is no native Symbol\n\t// nor polyfill, then a plain number is used for performance.\n\t\n\tvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\t\n\tmodule.exports = REACT_ELEMENT_TYPE;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar warning = __webpack_require__(6);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the abstract API for an update queue.\n\t */\n\tvar ReactNoopUpdateQueue = {\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback) {},\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    warnNoop(publicInstance, 'forceUpdate');\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    warnNoop(publicInstance, 'replaceState');\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    warnNoop(publicInstance, 'setState');\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNoopUpdateQueue;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar canDefineProperty = false;\n\tif (false) {\n\t  try {\n\t    // $FlowFixMe https://github.com/facebook/flow/issues/285\n\t    Object.defineProperty({}, 'x', { get: function () {} });\n\t    canDefineProperty = true;\n\t  } catch (x) {\n\t    // IE will fail on defineProperty\n\t  }\n\t}\n\t\n\tmodule.exports = canDefineProperty;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(15);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(26);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar CSL = __webpack_require__(18);\n\tvar HtmlToReactParser = __webpack_require__(21).Parser;\n\tvar htmlToReactParser = new HtmlToReactParser();\n\t\n\tvar Bibliography = function (_Component) {\n\t  _inherits(Bibliography, _Component);\n\t\n\t  function Bibliography(props) {\n\t    _classCallCheck(this, Bibliography);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Bibliography.__proto__ || Object.getPrototypeOf(Bibliography)).call(this, props));\n\t\n\t    _this.state = {\n\t      bibliography: '',\n\t      sys: {\n\t        retrieveLocale: function retrieveLocale() {\n\t          return _this.props.locale;\n\t        },\n\t        retrieveItem: function retrieveItem(id) {\n\t          return _this.props.items[id];\n\t        }\n\t      }\n\t    };\n\t\n\t    _this.makeReactBibliography = function (processor, items) {\n\t      processor.updateItems(Object.keys(items));\n\t      var bibResults = processor.makeBibliography();\n\t      var biblioStr = bibResults[1].join('\\n');\n\t      return htmlToReactParser.parse(biblioStr);\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Bibliography, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      if (this.props.locale && this.props.style) {\n\t        var processor = new CSL.Engine(this.state.sys, this.props.style);\n\t        this.setState({\n\t          processor: processor,\n\t          bibliography: this.props.items && this.makeReactBibliography(processor, this.props.items)\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      if (!this.state.processor && this.props.locale && this.props.style) {\n\t        var processor = new CSL.Engine(this.state.sys, nextProps.style);\n\t        this.setState({\n\t          processor: processor\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate(prevProps) {\n\t      var _this2 = this;\n\t\n\t      if (this.state.processor && this.props.items !== prevProps.items || !this.state.bibliography) {\n\t        this.setState({\n\t          bibliography: this.makeReactBibliography(this.state.processor, this.props.items) // htmlToReactParser.parse(biblioStr)\n\t        });\n\t      }\n\t      // handle locale change\n\t      if (this.props.locale !== prevProps.locale) {\n\t        var sys = {\n\t          retrieveLocale: function retrieveLocale() {\n\t            return _this2.props.locale;\n\t          },\n\t          retrieveItem: function retrieveItem(id) {\n\t            return _this2.props.items[id];\n\t          }\n\t        };\n\t        var processor = new CSL.Engine(sys, this.props.style);\n\t        this.setState({\n\t          processor: processor,\n\t          bibliography: this.makeReactBibliography(processor, this.props.items),\n\t          sys: sys\n\t        });\n\t      }\n\t      // handle style change\n\t      if (this.props.style !== prevProps.style) {\n\t        var _processor = new CSL.Engine(this.state.sys, this.props.style);\n\t        this.setState({\n\t          processor: _processor,\n\t          bibliography: this.makeReactBibliography(_processor, this.props.items)\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props$componentClass = this.props.componentClass,\n\t          componentClass = _props$componentClass === undefined ? 'Bibliography' : _props$componentClass;\n\t      var bibliography = this.state.bibliography;\n\t\n\t\n\t      if (bibliography) {\n\t        return _react2.default.createElement(\n\t          'section',\n\t          { className: componentClass },\n\t          bibliography\n\t        );\n\t      } else {\n\t        return _react2.default.createElement(\n\t          'section',\n\t          { className: componentClass + ' loading' },\n\t          this.props.loadingContent || 'loading'\n\t        );\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Bibliography;\n\t}(_react.Component);\n\t\n\tBibliography.propTypes = {\n\t  /**\n\t   * The class to use for identifying the component\n\t   */\n\t  componentClass: _propTypes2.default.string,\n\t  /**\n\t   * Serialized csl data to use for styling the bibliography\n\t   */\n\t  style: _propTypes2.default.string,\n\t  /**\n\t   * Serialized csl data to use for localizing the terms\n\t   */\n\t  locale: _propTypes2.default.string,\n\t  /**\n\t   * csl-json bibliographic items to represent - keys stand for items ids, values are js objects\n\t   */\n\t  items: _propTypes2.default.object\n\t};\n\t\n\texports.default = Bibliography;\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(15);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(26);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar CSL = __webpack_require__(18);\n\tvar HtmlToReactParser = __webpack_require__(21).Parser;\n\tvar htmlToReactParser = new HtmlToReactParser();\n\t\n\tvar ReferencesManager = function (_Component) {\n\t  _inherits(ReferencesManager, _Component);\n\t\n\t  function ReferencesManager(props) {\n\t    _classCallCheck(this, ReferencesManager);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ReferencesManager.__proto__ || Object.getPrototypeOf(ReferencesManager)).call(this, props));\n\t\n\t    _this.state = {\n\t      bibliography: undefined,\n\t      sys: {\n\t        retrieveLocale: function retrieveLocale() {\n\t          return _this.props.locale;\n\t        },\n\t        retrieveItem: function retrieveItem(id) {\n\t          return _this.props.items[id];\n\t        }\n\t      }\n\t    };\n\t\n\t    _this.makeReactBibliography = function (processor, items) {\n\t      processor.updateItems(Object.keys(items));\n\t      var bibResults = processor.makeBibliography();\n\t\n\t      var biblioStr = bibResults[1].join('\\n');\n\t      return htmlToReactParser.parse(biblioStr);\n\t    };\n\t\n\t    _this.makeReactCitations = function (processor, cits) {\n\t      return cits.reduce(function (inputCitations, citationData) {\n\t        var citations = _extends({}, inputCitations);\n\t        var citation = citationData[0];\n\t        var citationsPre = citationData[1];\n\t        var citationsPost = citationData[2];\n\t        var citationObjects = processor.processCitationCluster(citation, citationsPre, citationsPost);\n\t        citationObjects = citationObjects[1];\n\t        citationObjects.forEach(function (cit) {\n\t          var order = cit[0];\n\t          var html = cit[1];\n\t          var ThatComponent = htmlToReactParser.parse(cit[1]);\n\t          var citationId = cit[2];\n\t          citations[citationId] = {\n\t            order: order,\n\t            html: html,\n\t            Component: ThatComponent\n\t          };\n\t        });\n\t        return citations;\n\t      }, {});\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ReferencesManager, [{\n\t    key: 'getChildContext',\n\t    value: function getChildContext() {\n\t      return {\n\t        bibliography: this.state.bibliography,\n\t        citations: this.state.citations\n\t      };\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      if (this.props.locale && this.props.style) {\n\t        var processor = new CSL.Engine(this.state.sys, this.props.style);\n\t        this.setState({\n\t          processor: processor,\n\t          citations: this.props.citations && this.props.citations.length ? this.makeReactCitations(processor, this.props.citations) : undefined,\n\t          bibliography: this.props.items && this.props.items.length ? this.makeReactBibliography(processor, this.props.items) : undefined\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      if (!this.state.processor && this.props.locale && this.props.style) {\n\t        var processor = new CSL.Engine(this.state.sys, nextProps.style);\n\t        this.setState({\n\t          processor: processor\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate(prevProps) {\n\t      var _this2 = this;\n\t\n\t      if (!this.props.items || !Object.keys(this.props.items).length) {\n\t        return;\n\t      }\n\t      if (this.state.processor && this.props.items !== prevProps.items || this.props.citations !== prevProps.citations || !this.state.bibliography) {\n\t        this.setState({\n\t          citations: this.props.citations && this.makeReactCitations(this.state.processor, this.props.citations),\n\t          bibliography: this.makeReactBibliography(this.state.processor, this.props.items)\n\t        });\n\t      }\n\t      // handle locale change\n\t      if (this.props.locale !== prevProps.locale) {\n\t        var sys = {\n\t          retrieveLocale: function retrieveLocale() {\n\t            return _this2.props.locale;\n\t          },\n\t          retrieveItem: function retrieveItem(id) {\n\t            return _this2.props.items[id];\n\t          }\n\t        };\n\t        var processor = new CSL.Engine(sys, this.props.style);\n\t        this.setState({\n\t          processor: processor,\n\t          citations: this.props.citations && this.makeReactCitations(processor, this.props.citations),\n\t          bibliography: this.makeReactBibliography(processor, this.props.items),\n\t          sys: sys\n\t        });\n\t      }\n\t      // handle style change\n\t      if (this.props.style !== prevProps.style) {\n\t        var _processor = new CSL.Engine(this.state.sys, this.props.style);\n\t        this.setState({\n\t          processor: _processor,\n\t          citations: this.props.citations && this.makeReactCitations(_processor, this.props.citations),\n\t          bibliography: this.makeReactBibliography(_processor, this.props.items)\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          componentClass = _props.componentClass,\n\t          children = _props.children;\n\t\n\t\n\t      return _react2.default.createElement(\n\t        'section',\n\t        { className: componentClass },\n\t        children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ReferencesManager;\n\t}(_react.Component);\n\t\n\tReferencesManager.propTypes = {\n\t  /**\n\t   * The class to use for identifying the component\n\t   */\n\t  componentClass: _propTypes2.default.string,\n\t  /**\n\t   * Serialized csl data to use for styling the bibliography\n\t   */\n\t  style: _propTypes2.default.string,\n\t  /**\n\t   * Serialized csl data to use for localizing the terms\n\t   */\n\t  locale: _propTypes2.default.string,\n\t  /**\n\t   * csl-json bibliographic items to represent - keys stand for items ids, values are js objects\n\t   */\n\t  items: _propTypes2.default.object,\n\t  /**\n\t   * array of citation arrays to use for building citations data\n\t   * Each citation array represents the citation content and context as follows :\n\t   * citation[0] : object containing the citations (with properties citationID (string), citationItems (array), and properties (object))\n\t   * citation[1] : array of citations preceding the given citation ([0]: citationId, [1]: citation index)\n\t   * citation[2] : array of citations following the given citation ([0]: citationId, [1]: citation index)\n\t   */\n\t  citations: _propTypes2.default.array\n\t};\n\t\n\tReferencesManager.childContextTypes = {\n\t  bibliography: _propTypes2.default.array,\n\t  citations: _propTypes2.default.object\n\t};\n\t\n\texports.default = ReferencesManager;\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ReferencesManager = exports.Bibliography = undefined;\n\t\n\tvar _Bibliography = __webpack_require__(36);\n\t\n\tvar _Bibliography2 = _interopRequireDefault(_Bibliography);\n\t\n\tvar _ReferencesManager = __webpack_require__(37);\n\t\n\tvar _ReferencesManager2 = _interopRequireDefault(_ReferencesManager);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Bibliography = exports.Bibliography = _Bibliography2.default;\n\tvar ReferencesManager = exports.ReferencesManager = _ReferencesManager2.default;\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar merge = __webpack_require__(42),\n\t    countDefinedItems = __webpack_require__(40),\n\t    slice = Array.prototype.slice,\n\t    __;\n\t\n\t\n\tfunction curry(fn, length, curryArgs) {\n\t  return function() {\n\t    var args = slice.call(arguments),\n\t      concatArgs = curryArgs.concat(args),\n\t      mergedArgs = [];\n\t\n\t    if (length <= countDefinedItems(concatArgs)) {\n\t      mergedArgs = merge(args, curryArgs);\n\t      return fn.apply(null, mergedArgs);\n\t    } else {\n\t      if (length >= concatArgs.length) {\n\t        return curry(fn, length, concatArgs);\n\t      } else {\n\t        return curry(fn, length, merge(args, curryArgs));\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = function(fn) {\n\t  var args = slice.call(arguments, 1);\n\t\n\t  return curry(fn, fn.length, args);\n\t};\n\t\n\tmodule.exports.n = function(fn, length) {\n\t  var args = slice.call(arguments, 2);\n\t\n\t  return curry(fn, length, args);\n\t};\n\t\n\tmodule.exports.__ = __;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar forEach = __webpack_require__(17);\n\t\n\tmodule.exports = function(args) {\n\t  var count = 0;\n\t\n\t  forEach(args, function(key, item) {\n\t    if (typeof item !== 'undefined') {\n\t      count = count + 1;\n\t    }\n\t  });\n\t\n\t  return count;\n\t};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar forEach = __webpack_require__(17);\n\t\n\tmodule.exports = function map(arr, fn) {\n\t  var newArr = [];\n\t\n\t  forEach(arr, function(key, item) {\n\t    newArr.push(fn(key, item));\n\t  });\n\t\n\t  return newArr;\n\t};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar map = __webpack_require__(41);\n\t\n\tmodule.exports = function merge(args, curryArgs) {\n\t  var mergedArgs = [];\n\t\n\t  mergedArgs = map(curryArgs, function(key, item) {\n\t    if (typeof item === 'undefined') {\n\t      return args.shift();\n\t    } else {\n\t      return item;\n\t    }\n\t  });\n\t\n\t  return mergedArgs.concat(args);\n\t};\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(7);\n\t\n\tvar emptyObject = __webpack_require__(20);\n\tvar _invariant = __webpack_require__(2);\n\t\n\tif (false) {\n\t  var warning = require('fbjs/lib/warning');\n\t}\n\t\n\tvar MIXINS_KEY = 'mixins';\n\t\n\t// Helper function to allow the creation of anonymous functions which do not\n\t// have .name set to the name of the variable being assigned to.\n\tfunction identity(fn) {\n\t  return fn;\n\t}\n\t\n\tvar ReactPropTypeLocationNames;\n\tif (false) {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t} else {\n\t  ReactPropTypeLocationNames = {};\n\t}\n\t\n\tfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n\t  /**\n\t   * Policies that describe methods in `ReactClassInterface`.\n\t   */\n\t\n\t  var injectedMixins = [];\n\t\n\t  /**\n\t   * Composite components are higher-level components that compose other composite\n\t   * or host components.\n\t   *\n\t   * To create a new type of `ReactClass`, pass a specification of\n\t   * your new class to `React.createClass`. The only requirement of your class\n\t   * specification is that you implement a `render` method.\n\t   *\n\t   *   var MyComponent = React.createClass({\n\t   *     render: function() {\n\t   *       return <div>Hello World</div>;\n\t   *     }\n\t   *   });\n\t   *\n\t   * The class specification supports a specific protocol of methods that have\n\t   * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t   * more the comprehensive protocol. Any other properties and methods in the\n\t   * class specification will be available on the prototype.\n\t   *\n\t   * @interface ReactClassInterface\n\t   * @internal\n\t   */\n\t  var ReactClassInterface = {\n\t    /**\n\t     * An array of Mixin objects to include when defining your component.\n\t     *\n\t     * @type {array}\n\t     * @optional\n\t     */\n\t    mixins: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * An object containing properties and methods that should be defined on\n\t     * the component's constructor instead of its prototype (static methods).\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    statics: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of prop types for this component.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    propTypes: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of context types for this component.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    contextTypes: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Definition of context types this component sets for its children.\n\t     *\n\t     * @type {object}\n\t     * @optional\n\t     */\n\t    childContextTypes: 'DEFINE_MANY',\n\t\n\t    // ==== Definition methods ====\n\t\n\t    /**\n\t     * Invoked when the component is mounted. Values in the mapping will be set on\n\t     * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t     *\n\t     * This method is invoked before `getInitialState` and therefore cannot rely\n\t     * on `this.state` or use `this.setState`.\n\t     *\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getDefaultProps: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * Invoked once before the component is mounted. The return value will be used\n\t     * as the initial value of `this.state`.\n\t     *\n\t     *   getInitialState: function() {\n\t     *     return {\n\t     *       isOn: false,\n\t     *       fooBaz: new BazFoo()\n\t     *     }\n\t     *   }\n\t     *\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getInitialState: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * @return {object}\n\t     * @optional\n\t     */\n\t    getChildContext: 'DEFINE_MANY_MERGED',\n\t\n\t    /**\n\t     * Uses props from `this.props` and state from `this.state` to render the\n\t     * structure of the component.\n\t     *\n\t     * No guarantees are made about when or how often this method is invoked, so\n\t     * it must not have side effects.\n\t     *\n\t     *   render: function() {\n\t     *     var name = this.props.name;\n\t     *     return <div>Hello, {name}!</div>;\n\t     *   }\n\t     *\n\t     * @return {ReactComponent}\n\t     * @required\n\t     */\n\t    render: 'DEFINE_ONCE',\n\t\n\t    // ==== Delegate methods ====\n\t\n\t    /**\n\t     * Invoked when the component is initially created and about to be mounted.\n\t     * This may have side effects, but any external subscriptions or data created\n\t     * by this method must be cleaned up in `componentWillUnmount`.\n\t     *\n\t     * @optional\n\t     */\n\t    componentWillMount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component has been mounted and has a DOM representation.\n\t     * However, there is no guarantee that the DOM node is in the document.\n\t     *\n\t     * Use this as an opportunity to operate on the DOM when the component has\n\t     * been mounted (initialized and rendered) for the first time.\n\t     *\n\t     * @param {DOMElement} rootNode DOM element representing the component.\n\t     * @optional\n\t     */\n\t    componentDidMount: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked before the component receives new props.\n\t     *\n\t     * Use this as an opportunity to react to a prop transition by updating the\n\t     * state using `this.setState`. Current props are accessed via `this.props`.\n\t     *\n\t     *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t     *     this.setState({\n\t     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t     *     });\n\t     *   }\n\t     *\n\t     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t     * transition may cause a state change, but the opposite is not true. If you\n\t     * need it, you are probably looking for `componentWillUpdate`.\n\t     *\n\t     * @param {object} nextProps\n\t     * @optional\n\t     */\n\t    componentWillReceiveProps: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked while deciding if the component should be updated as a result of\n\t     * receiving new props, state and/or context.\n\t     *\n\t     * Use this as an opportunity to `return false` when you're certain that the\n\t     * transition to the new props/state/context will not require a component\n\t     * update.\n\t     *\n\t     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t     *     return !equal(nextProps, this.props) ||\n\t     *       !equal(nextState, this.state) ||\n\t     *       !equal(nextContext, this.context);\n\t     *   }\n\t     *\n\t     * @param {object} nextProps\n\t     * @param {?object} nextState\n\t     * @param {?object} nextContext\n\t     * @return {boolean} True if the component should update.\n\t     * @optional\n\t     */\n\t    shouldComponentUpdate: 'DEFINE_ONCE',\n\t\n\t    /**\n\t     * Invoked when the component is about to update due to a transition from\n\t     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t     * and `nextContext`.\n\t     *\n\t     * Use this as an opportunity to perform preparation before an update occurs.\n\t     *\n\t     * NOTE: You **cannot** use `this.setState()` in this method.\n\t     *\n\t     * @param {object} nextProps\n\t     * @param {?object} nextState\n\t     * @param {?object} nextContext\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @optional\n\t     */\n\t    componentWillUpdate: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component's DOM representation has been updated.\n\t     *\n\t     * Use this as an opportunity to operate on the DOM when the component has\n\t     * been updated.\n\t     *\n\t     * @param {object} prevProps\n\t     * @param {?object} prevState\n\t     * @param {?object} prevContext\n\t     * @param {DOMElement} rootNode DOM element representing the component.\n\t     * @optional\n\t     */\n\t    componentDidUpdate: 'DEFINE_MANY',\n\t\n\t    /**\n\t     * Invoked when the component is about to be removed from its parent and have\n\t     * its DOM representation destroyed.\n\t     *\n\t     * Use this as an opportunity to deallocate any external resources.\n\t     *\n\t     * NOTE: There is no `componentDidUnmount` since your component will have been\n\t     * destroyed by that point.\n\t     *\n\t     * @optional\n\t     */\n\t    componentWillUnmount: 'DEFINE_MANY',\n\t\n\t    // ==== Advanced methods ====\n\t\n\t    /**\n\t     * Updates the component's currently mounted DOM representation.\n\t     *\n\t     * By default, this implements React's rendering and reconciliation algorithm.\n\t     * Sophisticated clients may wish to override this.\n\t     *\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @internal\n\t     * @overridable\n\t     */\n\t    updateComponent: 'OVERRIDE_BASE'\n\t  };\n\t\n\t  /**\n\t   * Mapping from class specification keys to special processing functions.\n\t   *\n\t   * Although these are declared like instance properties in the specification\n\t   * when defining classes using `React.createClass`, they are actually static\n\t   * and are accessible on the constructor instead of the prototype. Despite\n\t   * being static, they must be defined outside of the \"statics\" key under\n\t   * which all other static methods are defined.\n\t   */\n\t  var RESERVED_SPEC_KEYS = {\n\t    displayName: function(Constructor, displayName) {\n\t      Constructor.displayName = displayName;\n\t    },\n\t    mixins: function(Constructor, mixins) {\n\t      if (mixins) {\n\t        for (var i = 0; i < mixins.length; i++) {\n\t          mixSpecIntoComponent(Constructor, mixins[i]);\n\t        }\n\t      }\n\t    },\n\t    childContextTypes: function(Constructor, childContextTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, childContextTypes, 'childContext');\n\t      }\n\t      Constructor.childContextTypes = _assign(\n\t        {},\n\t        Constructor.childContextTypes,\n\t        childContextTypes\n\t      );\n\t    },\n\t    contextTypes: function(Constructor, contextTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, contextTypes, 'context');\n\t      }\n\t      Constructor.contextTypes = _assign(\n\t        {},\n\t        Constructor.contextTypes,\n\t        contextTypes\n\t      );\n\t    },\n\t    /**\n\t     * Special case getDefaultProps which should move into statics but requires\n\t     * automatic merging.\n\t     */\n\t    getDefaultProps: function(Constructor, getDefaultProps) {\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps = createMergedResultFunction(\n\t          Constructor.getDefaultProps,\n\t          getDefaultProps\n\t        );\n\t      } else {\n\t        Constructor.getDefaultProps = getDefaultProps;\n\t      }\n\t    },\n\t    propTypes: function(Constructor, propTypes) {\n\t      if (false) {\n\t        validateTypeDef(Constructor, propTypes, 'prop');\n\t      }\n\t      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n\t    },\n\t    statics: function(Constructor, statics) {\n\t      mixStaticSpecIntoComponent(Constructor, statics);\n\t    },\n\t    autobind: function() {}\n\t  };\n\t\n\t  function validateTypeDef(Constructor, typeDef, location) {\n\t    for (var propName in typeDef) {\n\t      if (typeDef.hasOwnProperty(propName)) {\n\t        // use a warning instead of an _invariant so components\n\t        // don't show up in prod but only in __DEV__\n\t        if (false) {\n\t          warning(\n\t            typeof typeDef[propName] === 'function',\n\t            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n\t              'React.PropTypes.',\n\t            Constructor.displayName || 'ReactClass',\n\t            ReactPropTypeLocationNames[location],\n\t            propName\n\t          );\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function validateMethodOverride(isAlreadyDefined, name) {\n\t    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n\t      ? ReactClassInterface[name]\n\t      : null;\n\t\n\t    // Disallow overriding of base class methods unless explicitly allowed.\n\t    if (ReactClassMixin.hasOwnProperty(name)) {\n\t      _invariant(\n\t        specPolicy === 'OVERRIDE_BASE',\n\t        'ReactClassInterface: You are attempting to override ' +\n\t          '`%s` from your class specification. Ensure that your method names ' +\n\t          'do not overlap with React methods.',\n\t        name\n\t      );\n\t    }\n\t\n\t    // Disallow defining methods more than once unless explicitly allowed.\n\t    if (isAlreadyDefined) {\n\t      _invariant(\n\t        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n\t        'ReactClassInterface: You are attempting to define ' +\n\t          '`%s` on your component more than once. This conflict may be due ' +\n\t          'to a mixin.',\n\t        name\n\t      );\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Mixin helper which handles policy validation and reserved\n\t   * specification keys when building React classes.\n\t   */\n\t  function mixSpecIntoComponent(Constructor, spec) {\n\t    if (!spec) {\n\t      if (false) {\n\t        var typeofSpec = typeof spec;\n\t        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\t\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          warning(\n\t            isMixinValid,\n\t            \"%s: You're attempting to include a mixin that is either null \" +\n\t              'or not an object. Check the mixins included by the component, ' +\n\t              'as well as any mixins they include themselves. ' +\n\t              'Expected object but got %s.',\n\t            Constructor.displayName || 'ReactClass',\n\t            spec === null ? null : typeofSpec\n\t          );\n\t        }\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    _invariant(\n\t      typeof spec !== 'function',\n\t      \"ReactClass: You're attempting to \" +\n\t        'use a component class or function as a mixin. Instead, just use a ' +\n\t        'regular object.'\n\t    );\n\t    _invariant(\n\t      !isValidElement(spec),\n\t      \"ReactClass: You're attempting to \" +\n\t        'use a component as a mixin. Instead, just use a regular object.'\n\t    );\n\t\n\t    var proto = Constructor.prototype;\n\t    var autoBindPairs = proto.__reactAutoBindPairs;\n\t\n\t    // By handling mixins before any other properties, we ensure the same\n\t    // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t    // mixins are listed before or after these methods in the spec.\n\t    if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t    }\n\t\n\t    for (var name in spec) {\n\t      if (!spec.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t\n\t      if (name === MIXINS_KEY) {\n\t        // We have already handled mixins in a special case above.\n\t        continue;\n\t      }\n\t\n\t      var property = spec[name];\n\t      var isAlreadyDefined = proto.hasOwnProperty(name);\n\t      validateMethodOverride(isAlreadyDefined, name);\n\t\n\t      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t        RESERVED_SPEC_KEYS[name](Constructor, property);\n\t      } else {\n\t        // Setup methods on prototype:\n\t        // The following member methods should not be automatically bound:\n\t        // 1. Expected ReactClass methods (in the \"interface\").\n\t        // 2. Overridden methods (that were mixed in).\n\t        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t        var isFunction = typeof property === 'function';\n\t        var shouldAutoBind =\n\t          isFunction &&\n\t          !isReactClassMethod &&\n\t          !isAlreadyDefined &&\n\t          spec.autobind !== false;\n\t\n\t        if (shouldAutoBind) {\n\t          autoBindPairs.push(name, property);\n\t          proto[name] = property;\n\t        } else {\n\t          if (isAlreadyDefined) {\n\t            var specPolicy = ReactClassInterface[name];\n\t\n\t            // These cases should already be caught by validateMethodOverride.\n\t            _invariant(\n\t              isReactClassMethod &&\n\t                (specPolicy === 'DEFINE_MANY_MERGED' ||\n\t                  specPolicy === 'DEFINE_MANY'),\n\t              'ReactClass: Unexpected spec policy %s for key %s ' +\n\t                'when mixing in component specs.',\n\t              specPolicy,\n\t              name\n\t            );\n\t\n\t            // For methods which are defined more than once, call the existing\n\t            // methods before calling the new property, merging if appropriate.\n\t            if (specPolicy === 'DEFINE_MANY_MERGED') {\n\t              proto[name] = createMergedResultFunction(proto[name], property);\n\t            } else if (specPolicy === 'DEFINE_MANY') {\n\t              proto[name] = createChainedFunction(proto[name], property);\n\t            }\n\t          } else {\n\t            proto[name] = property;\n\t            if (false) {\n\t              // Add verbose displayName to the function, which helps when looking\n\t              // at profiling tools.\n\t              if (typeof property === 'function' && spec.displayName) {\n\t                proto[name].displayName = spec.displayName + '_' + name;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function mixStaticSpecIntoComponent(Constructor, statics) {\n\t    if (!statics) {\n\t      return;\n\t    }\n\t    for (var name in statics) {\n\t      var property = statics[name];\n\t      if (!statics.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t\n\t      var isReserved = name in RESERVED_SPEC_KEYS;\n\t      _invariant(\n\t        !isReserved,\n\t        'ReactClass: You are attempting to define a reserved ' +\n\t          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n\t          'as an instance property instead; it will still be accessible on the ' +\n\t          'constructor.',\n\t        name\n\t      );\n\t\n\t      var isInherited = name in Constructor;\n\t      _invariant(\n\t        !isInherited,\n\t        'ReactClass: You are attempting to define ' +\n\t          '`%s` on your component more than once. This conflict may be ' +\n\t          'due to a mixin.',\n\t        name\n\t      );\n\t      Constructor[name] = property;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Merge two objects, but throw if both contain the same key.\n\t   *\n\t   * @param {object} one The first object, which is mutated.\n\t   * @param {object} two The second object\n\t   * @return {object} one after it has been mutated to contain everything in two.\n\t   */\n\t  function mergeIntoWithNoDuplicateKeys(one, two) {\n\t    _invariant(\n\t      one && two && typeof one === 'object' && typeof two === 'object',\n\t      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n\t    );\n\t\n\t    for (var key in two) {\n\t      if (two.hasOwnProperty(key)) {\n\t        _invariant(\n\t          one[key] === undefined,\n\t          'mergeIntoWithNoDuplicateKeys(): ' +\n\t            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n\t            'may be due to a mixin; in particular, this may be caused by two ' +\n\t            'getInitialState() or getDefaultProps() methods returning objects ' +\n\t            'with clashing keys.',\n\t          key\n\t        );\n\t        one[key] = two[key];\n\t      }\n\t    }\n\t    return one;\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes two functions and merges their return values.\n\t   *\n\t   * @param {function} one Function to invoke first.\n\t   * @param {function} two Function to invoke second.\n\t   * @return {function} Function that invokes the two argument functions.\n\t   * @private\n\t   */\n\t  function createMergedResultFunction(one, two) {\n\t    return function mergedResult() {\n\t      var a = one.apply(this, arguments);\n\t      var b = two.apply(this, arguments);\n\t      if (a == null) {\n\t        return b;\n\t      } else if (b == null) {\n\t        return a;\n\t      }\n\t      var c = {};\n\t      mergeIntoWithNoDuplicateKeys(c, a);\n\t      mergeIntoWithNoDuplicateKeys(c, b);\n\t      return c;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes two functions and ignores their return vales.\n\t   *\n\t   * @param {function} one Function to invoke first.\n\t   * @param {function} two Function to invoke second.\n\t   * @return {function} Function that invokes the two argument functions.\n\t   * @private\n\t   */\n\t  function createChainedFunction(one, two) {\n\t    return function chainedFunction() {\n\t      one.apply(this, arguments);\n\t      two.apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Binds a method to the component.\n\t   *\n\t   * @param {object} component Component whose method is going to be bound.\n\t   * @param {function} method Method to be bound.\n\t   * @return {function} The bound method.\n\t   */\n\t  function bindAutoBindMethod(component, method) {\n\t    var boundMethod = method.bind(component);\n\t    if (false) {\n\t      boundMethod.__reactBoundContext = component;\n\t      boundMethod.__reactBoundMethod = method;\n\t      boundMethod.__reactBoundArguments = null;\n\t      var componentName = component.constructor.displayName;\n\t      var _bind = boundMethod.bind;\n\t      boundMethod.bind = function(newThis) {\n\t        for (\n\t          var _len = arguments.length,\n\t            args = Array(_len > 1 ? _len - 1 : 0),\n\t            _key = 1;\n\t          _key < _len;\n\t          _key++\n\t        ) {\n\t          args[_key - 1] = arguments[_key];\n\t        }\n\t\n\t        // User is trying to bind() an autobound method; we effectively will\n\t        // ignore the value of \"this\" that the user is trying to use, so\n\t        // let's warn.\n\t        if (newThis !== component && newThis !== null) {\n\t          if (process.env.NODE_ENV !== 'production') {\n\t            warning(\n\t              false,\n\t              'bind(): React component methods may only be bound to the ' +\n\t                'component instance. See %s',\n\t              componentName\n\t            );\n\t          }\n\t        } else if (!args.length) {\n\t          if (process.env.NODE_ENV !== 'production') {\n\t            warning(\n\t              false,\n\t              'bind(): You are binding a component method to the component. ' +\n\t                'React does this for you automatically in a high-performance ' +\n\t                'way, so you can safely remove this call. See %s',\n\t              componentName\n\t            );\n\t          }\n\t          return boundMethod;\n\t        }\n\t        var reboundMethod = _bind.apply(boundMethod, arguments);\n\t        reboundMethod.__reactBoundContext = component;\n\t        reboundMethod.__reactBoundMethod = method;\n\t        reboundMethod.__reactBoundArguments = args;\n\t        return reboundMethod;\n\t      };\n\t    }\n\t    return boundMethod;\n\t  }\n\t\n\t  /**\n\t   * Binds all auto-bound methods in a component.\n\t   *\n\t   * @param {object} component Component whose method is going to be bound.\n\t   */\n\t  function bindAutoBindMethods(component) {\n\t    var pairs = component.__reactAutoBindPairs;\n\t    for (var i = 0; i < pairs.length; i += 2) {\n\t      var autoBindKey = pairs[i];\n\t      var method = pairs[i + 1];\n\t      component[autoBindKey] = bindAutoBindMethod(component, method);\n\t    }\n\t  }\n\t\n\t  var IsMountedPreMixin = {\n\t    componentDidMount: function() {\n\t      this.__isMounted = true;\n\t    }\n\t  };\n\t\n\t  var IsMountedPostMixin = {\n\t    componentWillUnmount: function() {\n\t      this.__isMounted = false;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Add more to the ReactClass base class. These are all legacy features and\n\t   * therefore not already part of the modern ReactComponent.\n\t   */\n\t  var ReactClassMixin = {\n\t    /**\n\t     * TODO: This will be deprecated because state should always keep a consistent\n\t     * type signature and the only use case for this, is to avoid that.\n\t     */\n\t    replaceState: function(newState, callback) {\n\t      this.updater.enqueueReplaceState(this, newState, callback);\n\t    },\n\t\n\t    /**\n\t     * Checks whether or not this composite component is mounted.\n\t     * @return {boolean} True if mounted, false otherwise.\n\t     * @protected\n\t     * @final\n\t     */\n\t    isMounted: function() {\n\t      if (false) {\n\t        warning(\n\t          this.__didWarnIsMounted,\n\t          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n\t            'subscriptions and pending requests in componentWillUnmount to ' +\n\t            'prevent memory leaks.',\n\t          (this.constructor && this.constructor.displayName) ||\n\t            this.name ||\n\t            'Component'\n\t        );\n\t        this.__didWarnIsMounted = true;\n\t      }\n\t      return !!this.__isMounted;\n\t    }\n\t  };\n\t\n\t  var ReactClassComponent = function() {};\n\t  _assign(\n\t    ReactClassComponent.prototype,\n\t    ReactComponent.prototype,\n\t    ReactClassMixin\n\t  );\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  function createClass(spec) {\n\t    // To keep our warnings more understandable, we'll use a little hack here to\n\t    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n\t    // unnecessarily identify a class without displayName as 'Constructor'.\n\t    var Constructor = identity(function(props, context, updater) {\n\t      // This constructor gets overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (false) {\n\t        warning(\n\t          this instanceof Constructor,\n\t          'Something is calling a React component directly. Use a factory or ' +\n\t            'JSX instead. See: https://fb.me/react-legacyfactory'\n\t        );\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindPairs.length) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (false) {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (\n\t          initialState === undefined &&\n\t          this.getInitialState._isMockFunction\n\t        ) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      _invariant(\n\t        typeof initialState === 'object' && !Array.isArray(initialState),\n\t        '%s.getInitialState(): must return an object or null',\n\t        Constructor.displayName || 'ReactCompositeComponent'\n\t      );\n\t\n\t      this.state = initialState;\n\t    });\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t    Constructor.prototype.__reactAutoBindPairs = [];\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n\t    mixSpecIntoComponent(Constructor, spec);\n\t    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (false) {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    _invariant(\n\t      Constructor.prototype.render,\n\t      'createClass(...): Class specification must implement a `render` method.'\n\t    );\n\t\n\t    if (false) {\n\t      warning(\n\t        !Constructor.prototype.componentShouldUpdate,\n\t        '%s has a method called ' +\n\t          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n\t          'The name is phrased as a question because the function is ' +\n\t          'expected to return a value.',\n\t        spec.displayName || 'A component'\n\t      );\n\t      warning(\n\t        !Constructor.prototype.componentWillRecieveProps,\n\t        '%s has a method called ' +\n\t          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n\t        spec.displayName || 'A component'\n\t      );\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  }\n\t\n\t  return createClass;\n\t}\n\t\n\tmodule.exports = factory;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n\t//Types of elements found in the DOM\n\tmodule.exports = {\n\t\tText: \"text\", //Text\n\t\tDirective: \"directive\", //<? ... ?>\n\t\tComment: \"comment\", //<!-- ... -->\n\t\tScript: \"script\", //<script> tags\n\t\tStyle: \"style\", //<style> tags\n\t\tTag: \"tag\", //Any tag\n\t\tCDATA: \"cdata\", //<![CDATA[ ... ]]>\n\t\tDoctype: \"doctype\",\n\t\n\t\tisTag: function(elem){\n\t\t\treturn elem.type === \"tag\" || elem.type === \"script\" || elem.type === \"style\";\n\t\t}\n\t};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar ElementType = __webpack_require__(44);\n\t\n\tvar re_whitespace = /\\s+/g;\n\tvar NodePrototype = __webpack_require__(19);\n\tvar ElementPrototype = __webpack_require__(46);\n\t\n\tfunction DomHandler(callback, options, elementCB){\n\t\tif(typeof callback === \"object\"){\n\t\t\telementCB = options;\n\t\t\toptions = callback;\n\t\t\tcallback = null;\n\t\t} else if(typeof options === \"function\"){\n\t\t\telementCB = options;\n\t\t\toptions = defaultOpts;\n\t\t}\n\t\tthis._callback = callback;\n\t\tthis._options = options || defaultOpts;\n\t\tthis._elementCB = elementCB;\n\t\tthis.dom = [];\n\t\tthis._done = false;\n\t\tthis._tagStack = [];\n\t\tthis._parser = this._parser || null;\n\t}\n\t\n\t//default options\n\tvar defaultOpts = {\n\t\tnormalizeWhitespace: false, //Replace all whitespace with single spaces\n\t\twithStartIndices: false, //Add startIndex properties to nodes\n\t\twithEndIndices: false, //Add endIndex properties to nodes\n\t};\n\t\n\tDomHandler.prototype.onparserinit = function(parser){\n\t\tthis._parser = parser;\n\t};\n\t\n\t//Resets the handler back to starting state\n\tDomHandler.prototype.onreset = function(){\n\t\tDomHandler.call(this, this._callback, this._options, this._elementCB);\n\t};\n\t\n\t//Signals the handler that parsing is done\n\tDomHandler.prototype.onend = function(){\n\t\tif(this._done) return;\n\t\tthis._done = true;\n\t\tthis._parser = null;\n\t\tthis._handleCallback(null);\n\t};\n\t\n\tDomHandler.prototype._handleCallback =\n\tDomHandler.prototype.onerror = function(error){\n\t\tif(typeof this._callback === \"function\"){\n\t\t\tthis._callback(error, this.dom);\n\t\t} else {\n\t\t\tif(error) throw error;\n\t\t}\n\t};\n\t\n\tDomHandler.prototype.onclosetag = function(){\n\t\t//if(this._tagStack.pop().name !== name) this._handleCallback(Error(\"Tagname didn't match!\"));\n\t\t\n\t\tvar elem = this._tagStack.pop();\n\t\n\t\tif(this._options.withEndIndices){\n\t\t\telem.endIndex = this._parser.endIndex;\n\t\t}\n\t\n\t\tif(this._elementCB) this._elementCB(elem);\n\t};\n\t\n\tDomHandler.prototype._createDomElement = function(properties){\n\t\tif (!this._options.withDomLvl1) return properties;\n\t\n\t\tvar element;\n\t\tif (properties.type === \"tag\") {\n\t\t\telement = Object.create(ElementPrototype);\n\t\t} else {\n\t\t\telement = Object.create(NodePrototype);\n\t\t}\n\t\n\t\tfor (var key in properties) {\n\t\t\tif (properties.hasOwnProperty(key)) {\n\t\t\t\telement[key] = properties[key];\n\t\t\t}\n\t\t}\n\t\n\t\treturn element;\n\t};\n\t\n\tDomHandler.prototype._addDomElement = function(element){\n\t\tvar parent = this._tagStack[this._tagStack.length - 1];\n\t\tvar siblings = parent ? parent.children : this.dom;\n\t\tvar previousSibling = siblings[siblings.length - 1];\n\t\n\t\telement.next = null;\n\t\n\t\tif(this._options.withStartIndices){\n\t\t\telement.startIndex = this._parser.startIndex;\n\t\t}\n\t\tif(this._options.withEndIndices){\n\t\t\telement.endIndex = this._parser.endIndex;\n\t\t}\n\t\n\t\tif(previousSibling){\n\t\t\telement.prev = previousSibling;\n\t\t\tpreviousSibling.next = element;\n\t\t} else {\n\t\t\telement.prev = null;\n\t\t}\n\t\n\t\tsiblings.push(element);\n\t\telement.parent = parent || null;\n\t};\n\t\n\tDomHandler.prototype.onopentag = function(name, attribs){\n\t\tvar properties = {\n\t\t\ttype: name === \"script\" ? ElementType.Script : name === \"style\" ? ElementType.Style : ElementType.Tag,\n\t\t\tname: name,\n\t\t\tattribs: attribs,\n\t\t\tchildren: []\n\t\t};\n\t\n\t\tvar element = this._createDomElement(properties);\n\t\n\t\tthis._addDomElement(element);\n\t\n\t\tthis._tagStack.push(element);\n\t};\n\t\n\tDomHandler.prototype.ontext = function(data){\n\t\t//the ignoreWhitespace is officially dropped, but for now,\n\t\t//it's an alias for normalizeWhitespace\n\t\tvar normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;\n\t\n\t\tvar lastTag;\n\t\n\t\tif(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){\n\t\t\tif(normalize){\n\t\t\t\tlastTag.data = (lastTag.data + data).replace(re_whitespace, \" \");\n\t\t\t} else {\n\t\t\t\tlastTag.data += data;\n\t\t\t}\n\t\t} else {\n\t\t\tif(\n\t\t\t\tthis._tagStack.length &&\n\t\t\t\t(lastTag = this._tagStack[this._tagStack.length - 1]) &&\n\t\t\t\t(lastTag = lastTag.children[lastTag.children.length - 1]) &&\n\t\t\t\tlastTag.type === ElementType.Text\n\t\t\t){\n\t\t\t\tif(normalize){\n\t\t\t\t\tlastTag.data = (lastTag.data + data).replace(re_whitespace, \" \");\n\t\t\t\t} else {\n\t\t\t\t\tlastTag.data += data;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(normalize){\n\t\t\t\t\tdata = data.replace(re_whitespace, \" \");\n\t\t\t\t}\n\t\n\t\t\t\tvar element = this._createDomElement({\n\t\t\t\t\tdata: data,\n\t\t\t\t\ttype: ElementType.Text\n\t\t\t\t});\n\t\n\t\t\t\tthis._addDomElement(element);\n\t\t\t}\n\t\t}\n\t};\n\t\n\tDomHandler.prototype.oncomment = function(data){\n\t\tvar lastTag = this._tagStack[this._tagStack.length - 1];\n\t\n\t\tif(lastTag && lastTag.type === ElementType.Comment){\n\t\t\tlastTag.data += data;\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar properties = {\n\t\t\tdata: data,\n\t\t\ttype: ElementType.Comment\n\t\t};\n\t\n\t\tvar element = this._createDomElement(properties);\n\t\n\t\tthis._addDomElement(element);\n\t\tthis._tagStack.push(element);\n\t};\n\t\n\tDomHandler.prototype.oncdatastart = function(){\n\t\tvar properties = {\n\t\t\tchildren: [{\n\t\t\t\tdata: \"\",\n\t\t\t\ttype: ElementType.Text\n\t\t\t}],\n\t\t\ttype: ElementType.CDATA\n\t\t};\n\t\n\t\tvar element = this._createDomElement(properties);\n\t\n\t\tthis._addDomElement(element);\n\t\tthis._tagStack.push(element);\n\t};\n\t\n\tDomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){\n\t\tthis._tagStack.pop();\n\t};\n\t\n\tDomHandler.prototype.onprocessinginstruction = function(name, data){\n\t\tvar element = this._createDomElement({\n\t\t\tname: name,\n\t\t\tdata: data,\n\t\t\ttype: ElementType.Directive\n\t\t});\n\t\n\t\tthis._addDomElement(element);\n\t};\n\t\n\tmodule.exports = DomHandler;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// DOM-Level-1-compliant structure\n\tvar NodePrototype = __webpack_require__(19);\n\tvar ElementPrototype = module.exports = Object.create(NodePrototype);\n\t\n\tvar domLvl1 = {\n\t\ttagName: \"name\"\n\t};\n\t\n\tObject.keys(domLvl1).forEach(function(key) {\n\t\tvar shorthand = domLvl1[key];\n\t\tObject.defineProperty(ElementPrototype, key, {\n\t\t\tget: function() {\n\t\t\t\treturn this[shorthand] || null;\n\t\t\t},\n\t\t\tset: function(val) {\n\t\t\t\tthis[shorthand] = val;\n\t\t\t\treturn val;\n\t\t\t}\n\t\t});\n\t});\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar decodeMap = __webpack_require__(55);\n\t\n\tmodule.exports = decodeCodePoint;\n\t\n\t// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\n\tfunction decodeCodePoint(codePoint){\n\t\n\t\tif((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){\n\t\t\treturn \"\\uFFFD\";\n\t\t}\n\t\n\t\tif(codePoint in decodeMap){\n\t\t\tcodePoint = decodeMap[codePoint];\n\t\t}\n\t\n\t\tvar output = \"\";\n\t\n\t\tif(codePoint > 0xFFFF){\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\n\t\toutput += String.fromCharCode(codePoint);\n\t\treturn output;\n\t}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n\t// These are all sourced from https://facebook.github.io/react/docs/tags-and-attributes.html -\n\t// all attributes regardless of whether they have a different case to their HTML equivalents are\n\t// listed to reduce the chance of human error and make it easier to just copy-paste the new list if\n\t// it changes.\n\t'use strict';\n\tvar HTML_ATTRIBUTES = [\n\t  'accept', 'acceptCharset', 'accessKey', 'action', 'allowFullScreen', 'allowTransparency',\n\t  'alt', 'async', 'autoComplete', 'autoFocus', 'autoPlay', 'capture', 'cellPadding',\n\t  'cellSpacing', 'challenge', 'charSet', 'checked', 'cite', 'classID', 'className',\n\t  'colSpan', 'cols', 'content', 'contentEditable', 'contextMenu', 'controls', 'coords',\n\t  'crossOrigin', 'data', 'dateTime', 'default', 'defer', 'dir', 'disabled', 'download',\n\t  'draggable', 'encType', 'form', 'formAction', 'formEncType', 'formMethod', 'formNoValidate',\n\t  'formTarget', 'frameBorder', 'headers', 'height', 'hidden', 'high', 'href', 'hrefLang',\n\t  'htmlFor', 'httpEquiv', 'icon', 'id', 'inputMode', 'integrity', 'is', 'keyParams', 'keyType',\n\t  'kind', 'label', 'lang', 'list', 'loop', 'low', 'manifest', 'marginHeight', 'marginWidth',\n\t  'max', 'maxLength', 'media', 'mediaGroup', 'method', 'min', 'minLength', 'multiple', 'muted',\n\t  'name', 'noValidate', 'nonce', 'open', 'optimum', 'pattern', 'placeholder', 'poster',\n\t  'preload', 'profile', 'radioGroup', 'readOnly', 'rel', 'required', 'reversed', 'role',\n\t  'rowSpan', 'rows', 'sandbox', 'scope', 'scoped', 'scrolling', 'seamless', 'selected',\n\t  'shape', 'size', 'sizes', 'span', 'spellCheck', 'src', 'srcDoc', 'srcLang', 'srcSet', 'start',\n\t  'step', 'style', 'summary', 'tabIndex', 'target', 'title', 'type', 'useMap', 'value', 'width',\n\t  'wmode', 'wrap',\n\t];\n\t\n\tvar NON_STANDARD_ATTRIBUTES = [\n\t  'autoCapitalize', 'autoCorrect', 'color', 'itemProp', 'itemScope', 'itemType', 'itemRef',\n\t  'itemID', 'security', 'unselectable', 'results', 'autoSave',\n\t];\n\t\n\tvar SVG_ATTRIBUTES = [\n\t  'accentHeight', 'accumulate', 'additive', 'alignmentBaseline', 'allowReorder', 'alphabetic',\n\t  'amplitude', 'arabicForm', 'ascent', 'attributeName', 'attributeType', 'autoReverse', 'azimuth',\n\t  'baseFrequency', 'baseProfile', 'baselineShift', 'bbox', 'begin', 'bias', 'by', 'calcMode',\n\t  'capHeight', 'clip', 'clipPath', 'clipPathUnits', 'clipRule', 'colorInterpolation',\n\t  'colorInterpolationFilters', 'colorProfile', 'colorRendering', 'contentScriptType',\n\t  'contentStyleType', 'cursor', 'cx', 'cy', 'd', 'decelerate', 'descent', 'diffuseConstant',\n\t  'direction', 'display', 'divisor', 'dominantBaseline', 'dur', 'dx', 'dy', 'edgeMode',\n\t  'elevation', 'enableBackground', 'end', 'exponent', 'externalResourcesRequired', 'fill',\n\t  'fillOpacity', 'fillRule', 'filter', 'filterRes', 'filterUnits', 'floodColor', 'floodOpacity',\n\t  'focusable', 'fontFamily', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle',\n\t  'fontVariant', 'fontWeight', 'format', 'from', 'fx', 'fy', 'g1', 'g2', 'glyphName',\n\t  'glyphOrientationHorizontal', 'glyphOrientationVertical', 'glyphRef',\n\t  'gradientTransform', 'gradientUnits', 'hanging', 'horizAdvX', 'horizOriginX', 'ideographic',\n\t  'imageRendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kernelMatrix',\n\t  'kernelUnitLength', 'kerning', 'keyPoints', 'keySplines', 'keyTimes', 'lengthAdjust',\n\t  'letterSpacing', 'lightingColor', 'limitingConeAngle', 'local', 'markerEnd', 'markerHeight',\n\t  'markerMid', 'markerStart', 'markerUnits', 'markerWidth', 'mask', 'maskContentUnits',\n\t  'maskUnits', 'mathematical', 'mode', 'numOctaves', 'offset', 'opacity', 'operator', 'order',\n\t  'orient', 'orientation', 'origin', 'overflow', 'overlinePosition', 'overlineThickness',\n\t  'paintOrder', 'panose1', 'pathLength', 'patternContentUnits', 'patternTransform',\n\t  'patternUnits', 'pointerEvents', 'points', 'pointsAtX', 'pointsAtY', 'pointsAtZ',\n\t  'preserveAlpha', 'preserveAspectRatio', 'primitiveUnits', 'r', 'radius', 'refX', 'refY',\n\t  'renderingIntent', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures',\n\t  'restart', 'result', 'rotate', 'rx', 'ry', 'scale', 'seed', 'shapeRendering', 'slope',\n\t  'spacing', 'specularConstant', 'specularExponent', 'speed', 'spreadMethod', 'startOffset',\n\t  'stdDeviation', 'stemh', 'stemv', 'stitchTiles', 'stopColor', 'stopOpacity',\n\t  'strikethroughPosition', 'strikethroughThickness', 'string', 'stroke', 'strokeDasharray',\n\t  'strokeDashoffset', 'strokeLinecap', 'strokeLinejoin', 'strokeMiterlimit', 'strokeOpacity',\n\t  'strokeWidth', 'surfaceScale', 'systemLanguage', 'tableValues', 'targetX', 'targetY',\n\t  'textAnchor', 'textDecoration', 'textLength', 'textRendering', 'to', 'transform', 'u1',\n\t  'u2', 'underlinePosition', 'underlineThickness', 'unicode', 'unicodeBidi', 'unicodeRange',\n\t  'unitsPerEm', 'vAlphabetic', 'vHanging', 'vIdeographic', 'vMathematical', 'values',\n\t  'vectorEffect', 'version', 'vertAdvY', 'vertOriginX', 'vertOriginY', 'viewBox',\n\t  'viewTarget', 'visibility', 'widths', 'wordSpacing', 'writingMode', 'x', 'x1', 'x2',\n\t  'xChannelSelector', 'xHeight', 'xlinkActuate', 'xlinkArcrole', 'xlinkHref', 'xlinkRole',\n\t  'xlinkShow', 'xlinkTitle', 'xlinkType', 'xmlns', 'xmlnsXlink', 'xmlBase', 'xmlLang',\n\t  'xmlSpace', 'y', 'y1', 'y2', 'yChannelSelector', 'z', 'zoomAndPan',\n\t];\n\t\n\tvar camelCaseMap = HTML_ATTRIBUTES\n\t  .concat(NON_STANDARD_ATTRIBUTES)\n\t  .concat(SVG_ATTRIBUTES)\n\t  .reduce(function (soFar, attr) {\n\t    var lower = attr.toLowerCase();\n\t    if (lower !== attr) {\n\t      soFar[lower] = attr;\n\t    }\n\t    return soFar;\n\t  }, {});\n\t\n\tmodule.exports = camelCaseMap;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar find = __webpack_require__(66);\n\tvar reject = __webpack_require__(85);\n\tvar addIndex = __webpack_require__(63);\n\tvar map = __webpack_require__(83);\n\tvar HtmlParser = __webpack_require__(52);\n\tvar DomHandler = __webpack_require__(45);\n\tvar ProcessingInstructions = __webpack_require__(24);\n\tvar IsValidNodeDefinitions = __webpack_require__(22);\n\tvar utils = __webpack_require__(25);\n\t\n\tfunction Html2ReactParser(options) {\n\t  function parseHtmlToTree(html) {\n\t    options = options || {};\n\t    options.decodeEntities = true;\n\t    var handler = new DomHandler();\n\t    var parser = new HtmlParser(handler, options);\n\t    parser.parseComplete(html);\n\t    return handler.dom;\n\t  };\n\t\n\t  function traverseDom(node, isValidNode, processingInstructions, index) {\n\t    if (isValidNode(node)) {\n\t      var processingInstruction = find(function (processingInstruction) {\n\t        return processingInstruction.shouldProcessNode(node);\n\t      }, processingInstructions);\n\t      if (processingInstruction != null) {\n\t        var children = reject(function (x) {return x == null || x === false;},\n\t          addIndex(map)(function (child, i) {\n\t            return traverseDom(child, isValidNode, processingInstructions, i);\n\t          }, node.children || []));\n\t\n\t        if (processingInstruction.replaceChildren) {\n\t          return utils.createElement(node, index, node.data, [\n\t            processingInstruction.processNode(node, children, index),\n\t          ]);\n\t        }\n\t\n\t        return processingInstruction.processNode(node, children, index);\n\t      } else {\n\t        return false;\n\t      }\n\t    } else {\n\t      return false;\n\t    }\n\t  };\n\t\n\t  function parseWithInstructions(html, isValidNode, processingInstructions) {\n\t    var domTree = parseHtmlToTree(html);\n\t\n\t    var list = domTree.map(function (domTreeItem, index) {\n\t      return traverseDom(domTreeItem, isValidNode, processingInstructions, index);\n\t    });\n\t    return list.length <= 1 ? list[0] : list;\n\t  };\n\t\n\t  function parse(html) {\n\t    var processingInstructions = new ProcessingInstructions();\n\t    return parseWithInstructions(html,\n\t      IsValidNodeDefinitions.alwaysValid,\n\t      processingInstructions.defaultProcessingInstructions);\n\t  };\n\t\n\t  return {\n\t    parse: parse,\n\t    parseWithInstructions: parseWithInstructions,\n\t  };\n\t};\n\t\n\tmodule.exports = Html2ReactParser;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\tfunction shouldProcessEveryNode(node) {\n\t  return true;\n\t}\n\t\n\tmodule.exports = {\n\t  shouldProcessEveryNode: shouldProcessEveryNode,\n\t};\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Tokenizer = __webpack_require__(53);\n\t\n\t/*\n\t\tOptions:\n\t\n\t\txmlMode: Disables the special behavior for script/style tags (false by default)\n\t\tlowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)\n\t\tlowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)\n\t*/\n\t\n\t/*\n\t\tCallbacks:\n\t\n\t\toncdataend,\n\t\toncdatastart,\n\t\tonclosetag,\n\t\toncomment,\n\t\toncommentend,\n\t\tonerror,\n\t\tonopentag,\n\t\tonprocessinginstruction,\n\t\tonreset,\n\t\tontext\n\t*/\n\t\n\tvar formTags = {\n\t\tinput: true,\n\t\toption: true,\n\t\toptgroup: true,\n\t\tselect: true,\n\t\tbutton: true,\n\t\tdatalist: true,\n\t\ttextarea: true\n\t};\n\t\n\tvar openImpliesClose = {\n\t\ttr      : { tr:true, th:true, td:true },\n\t\tth      : { th:true },\n\t\ttd      : { thead:true, th:true, td:true },\n\t\tbody    : { head:true, link:true, script:true },\n\t\tli      : { li:true },\n\t\tp       : { p:true },\n\t\th1      : { p:true },\n\t\th2      : { p:true },\n\t\th3      : { p:true },\n\t\th4      : { p:true },\n\t\th5      : { p:true },\n\t\th6      : { p:true },\n\t\tselect  : formTags,\n\t\tinput   : formTags,\n\t\toutput  : formTags,\n\t\tbutton  : formTags,\n\t\tdatalist: formTags,\n\t\ttextarea: formTags,\n\t\toption  : { option:true },\n\t\toptgroup: { optgroup:true }\n\t};\n\t\n\tvar voidElements = {\n\t\t__proto__: null,\n\t\tarea: true,\n\t\tbase: true,\n\t\tbasefont: true,\n\t\tbr: true,\n\t\tcol: true,\n\t\tcommand: true,\n\t\tembed: true,\n\t\tframe: true,\n\t\thr: true,\n\t\timg: true,\n\t\tinput: true,\n\t\tisindex: true,\n\t\tkeygen: true,\n\t\tlink: true,\n\t\tmeta: true,\n\t\tparam: true,\n\t\tsource: true,\n\t\ttrack: true,\n\t\twbr: true,\n\t\n\t\t//common self closing svg elements\n\t\tpath: true,\n\t\tcircle: true,\n\t\tellipse: true,\n\t\tline: true,\n\t\trect: true,\n\t\tuse: true,\n\t\tstop: true,\n\t\tpolyline: true,\n\t\tpolygon: true\n\t};\n\t\n\tvar re_nameEnd = /\\s|\\//;\n\t\n\tfunction Parser(cbs, options){\n\t\tthis._options = options || {};\n\t\tthis._cbs = cbs || {};\n\t\n\t\tthis._tagname = \"\";\n\t\tthis._attribname = \"\";\n\t\tthis._attribvalue = \"\";\n\t\tthis._attribs = null;\n\t\tthis._stack = [];\n\t\n\t\tthis.startIndex = 0;\n\t\tthis.endIndex = null;\n\t\n\t\tthis._lowerCaseTagNames = \"lowerCaseTags\" in this._options ?\n\t\t\t\t\t\t\t\t\t\t!!this._options.lowerCaseTags :\n\t\t\t\t\t\t\t\t\t\t!this._options.xmlMode;\n\t\tthis._lowerCaseAttributeNames = \"lowerCaseAttributeNames\" in this._options ?\n\t\t\t\t\t\t\t\t\t\t!!this._options.lowerCaseAttributeNames :\n\t\t\t\t\t\t\t\t\t\t!this._options.xmlMode;\n\t\n\t\tif(this._options.Tokenizer) {\n\t\t\tTokenizer = this._options.Tokenizer;\n\t\t}\n\t\tthis._tokenizer = new Tokenizer(this._options, this);\n\t\n\t\tif(this._cbs.onparserinit) this._cbs.onparserinit(this);\n\t}\n\t\n\t__webpack_require__(54)(Parser, __webpack_require__(48).EventEmitter);\n\t\n\tParser.prototype._updatePosition = function(initialOffset){\n\t\tif(this.endIndex === null){\n\t\t\tif(this._tokenizer._sectionStart <= initialOffset){\n\t\t\t\tthis.startIndex = 0;\n\t\t\t} else {\n\t\t\t\tthis.startIndex = this._tokenizer._sectionStart - initialOffset;\n\t\t\t}\n\t\t}\n\t\telse this.startIndex = this.endIndex + 1;\n\t\tthis.endIndex = this._tokenizer.getAbsoluteIndex();\n\t};\n\t\n\t//Tokenizer event handlers\n\tParser.prototype.ontext = function(data){\n\t\tthis._updatePosition(1);\n\t\tthis.endIndex--;\n\t\n\t\tif(this._cbs.ontext) this._cbs.ontext(data);\n\t};\n\t\n\tParser.prototype.onopentagname = function(name){\n\t\tif(this._lowerCaseTagNames){\n\t\t\tname = name.toLowerCase();\n\t\t}\n\t\n\t\tthis._tagname = name;\n\t\n\t\tif(!this._options.xmlMode && name in openImpliesClose) {\n\t\t\tfor(\n\t\t\t\tvar el;\n\t\t\t\t(el = this._stack[this._stack.length - 1]) in openImpliesClose[name];\n\t\t\t\tthis.onclosetag(el)\n\t\t\t);\n\t\t}\n\t\n\t\tif(this._options.xmlMode || !(name in voidElements)){\n\t\t\tthis._stack.push(name);\n\t\t}\n\t\n\t\tif(this._cbs.onopentagname) this._cbs.onopentagname(name);\n\t\tif(this._cbs.onopentag) this._attribs = {};\n\t};\n\t\n\tParser.prototype.onopentagend = function(){\n\t\tthis._updatePosition(1);\n\t\n\t\tif(this._attribs){\n\t\t\tif(this._cbs.onopentag) this._cbs.onopentag(this._tagname, this._attribs);\n\t\t\tthis._attribs = null;\n\t\t}\n\t\n\t\tif(!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements){\n\t\t\tthis._cbs.onclosetag(this._tagname);\n\t\t}\n\t\n\t\tthis._tagname = \"\";\n\t};\n\t\n\tParser.prototype.onclosetag = function(name){\n\t\tthis._updatePosition(1);\n\t\n\t\tif(this._lowerCaseTagNames){\n\t\t\tname = name.toLowerCase();\n\t\t}\n\t\n\t\tif(this._stack.length && (!(name in voidElements) || this._options.xmlMode)){\n\t\t\tvar pos = this._stack.lastIndexOf(name);\n\t\t\tif(pos !== -1){\n\t\t\t\tif(this._cbs.onclosetag){\n\t\t\t\t\tpos = this._stack.length - pos;\n\t\t\t\t\twhile(pos--) this._cbs.onclosetag(this._stack.pop());\n\t\t\t\t}\n\t\t\t\telse this._stack.length = pos;\n\t\t\t} else if(name === \"p\" && !this._options.xmlMode){\n\t\t\t\tthis.onopentagname(name);\n\t\t\t\tthis._closeCurrentTag();\n\t\t\t}\n\t\t} else if(!this._options.xmlMode && (name === \"br\" || name === \"p\")){\n\t\t\tthis.onopentagname(name);\n\t\t\tthis._closeCurrentTag();\n\t\t}\n\t};\n\t\n\tParser.prototype.onselfclosingtag = function(){\n\t\tif(this._options.xmlMode || this._options.recognizeSelfClosing){\n\t\t\tthis._closeCurrentTag();\n\t\t} else {\n\t\t\tthis.onopentagend();\n\t\t}\n\t};\n\t\n\tParser.prototype._closeCurrentTag = function(){\n\t\tvar name = this._tagname;\n\t\n\t\tthis.onopentagend();\n\t\n\t\t//self-closing tags will be on the top of the stack\n\t\t//(cheaper check than in onclosetag)\n\t\tif(this._stack[this._stack.length - 1] === name){\n\t\t\tif(this._cbs.onclosetag){\n\t\t\t\tthis._cbs.onclosetag(name);\n\t\t\t}\n\t\t\tthis._stack.pop();\n\t\t}\n\t};\n\t\n\tParser.prototype.onattribname = function(name){\n\t\tif(this._lowerCaseAttributeNames){\n\t\t\tname = name.toLowerCase();\n\t\t}\n\t\tthis._attribname = name;\n\t};\n\t\n\tParser.prototype.onattribdata = function(value){\n\t\tthis._attribvalue += value;\n\t};\n\t\n\tParser.prototype.onattribend = function(){\n\t\tif(this._cbs.onattribute) this._cbs.onattribute(this._attribname, this._attribvalue);\n\t\tif(\n\t\t\tthis._attribs &&\n\t\t\t!Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)\n\t\t){\n\t\t\tthis._attribs[this._attribname] = this._attribvalue;\n\t\t}\n\t\tthis._attribname = \"\";\n\t\tthis._attribvalue = \"\";\n\t};\n\t\n\tParser.prototype._getInstructionName = function(value){\n\t\tvar idx = value.search(re_nameEnd),\n\t\t    name = idx < 0 ? value : value.substr(0, idx);\n\t\n\t\tif(this._lowerCaseTagNames){\n\t\t\tname = name.toLowerCase();\n\t\t}\n\t\n\t\treturn name;\n\t};\n\t\n\tParser.prototype.ondeclaration = function(value){\n\t\tif(this._cbs.onprocessinginstruction){\n\t\t\tvar name = this._getInstructionName(value);\n\t\t\tthis._cbs.onprocessinginstruction(\"!\" + name, \"!\" + value);\n\t\t}\n\t};\n\t\n\tParser.prototype.onprocessinginstruction = function(value){\n\t\tif(this._cbs.onprocessinginstruction){\n\t\t\tvar name = this._getInstructionName(value);\n\t\t\tthis._cbs.onprocessinginstruction(\"?\" + name, \"?\" + value);\n\t\t}\n\t};\n\t\n\tParser.prototype.oncomment = function(value){\n\t\tthis._updatePosition(4);\n\t\n\t\tif(this._cbs.oncomment) this._cbs.oncomment(value);\n\t\tif(this._cbs.oncommentend) this._cbs.oncommentend();\n\t};\n\t\n\tParser.prototype.oncdata = function(value){\n\t\tthis._updatePosition(1);\n\t\n\t\tif(this._options.xmlMode || this._options.recognizeCDATA){\n\t\t\tif(this._cbs.oncdatastart) this._cbs.oncdatastart();\n\t\t\tif(this._cbs.ontext) this._cbs.ontext(value);\n\t\t\tif(this._cbs.oncdataend) this._cbs.oncdataend();\n\t\t} else {\n\t\t\tthis.oncomment(\"[CDATA[\" + value + \"]]\");\n\t\t}\n\t};\n\t\n\tParser.prototype.onerror = function(err){\n\t\tif(this._cbs.onerror) this._cbs.onerror(err);\n\t};\n\t\n\tParser.prototype.onend = function(){\n\t\tif(this._cbs.onclosetag){\n\t\t\tfor(\n\t\t\t\tvar i = this._stack.length;\n\t\t\t\ti > 0;\n\t\t\t\tthis._cbs.onclosetag(this._stack[--i])\n\t\t\t);\n\t\t}\n\t\tif(this._cbs.onend) this._cbs.onend();\n\t};\n\t\n\t\n\t//Resets the parser to a blank state, ready to parse a new HTML document\n\tParser.prototype.reset = function(){\n\t\tif(this._cbs.onreset) this._cbs.onreset();\n\t\tthis._tokenizer.reset();\n\t\n\t\tthis._tagname = \"\";\n\t\tthis._attribname = \"\";\n\t\tthis._attribs = null;\n\t\tthis._stack = [];\n\t\n\t\tif(this._cbs.onparserinit) this._cbs.onparserinit(this);\n\t};\n\t\n\t//Parses a complete HTML document and pushes it to the handler\n\tParser.prototype.parseComplete = function(data){\n\t\tthis.reset();\n\t\tthis.end(data);\n\t};\n\t\n\tParser.prototype.write = function(chunk){\n\t\tthis._tokenizer.write(chunk);\n\t};\n\t\n\tParser.prototype.end = function(chunk){\n\t\tthis._tokenizer.end(chunk);\n\t};\n\t\n\tParser.prototype.pause = function(){\n\t\tthis._tokenizer.pause();\n\t};\n\t\n\tParser.prototype.resume = function(){\n\t\tthis._tokenizer.resume();\n\t};\n\t\n\t//alias for backwards compat\n\tParser.prototype.parseChunk = Parser.prototype.write;\n\tParser.prototype.done = Parser.prototype.end;\n\t\n\tmodule.exports = Parser;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = Tokenizer;\n\t\n\tvar decodeCodePoint = __webpack_require__(47),\n\t    entityMap = __webpack_require__(56),\n\t    legacyMap = __webpack_require__(57),\n\t    xmlMap    = __webpack_require__(58),\n\t\n\t    i = 0,\n\t\n\t    TEXT                      = i++,\n\t    BEFORE_TAG_NAME           = i++, //after <\n\t    IN_TAG_NAME               = i++,\n\t    IN_SELF_CLOSING_TAG       = i++,\n\t    BEFORE_CLOSING_TAG_NAME   = i++,\n\t    IN_CLOSING_TAG_NAME       = i++,\n\t    AFTER_CLOSING_TAG_NAME    = i++,\n\t\n\t    //attributes\n\t    BEFORE_ATTRIBUTE_NAME     = i++,\n\t    IN_ATTRIBUTE_NAME         = i++,\n\t    AFTER_ATTRIBUTE_NAME      = i++,\n\t    BEFORE_ATTRIBUTE_VALUE    = i++,\n\t    IN_ATTRIBUTE_VALUE_DQ     = i++, // \"\n\t    IN_ATTRIBUTE_VALUE_SQ     = i++, // '\n\t    IN_ATTRIBUTE_VALUE_NQ     = i++,\n\t\n\t    //declarations\n\t    BEFORE_DECLARATION        = i++, // !\n\t    IN_DECLARATION            = i++,\n\t\n\t    //processing instructions\n\t    IN_PROCESSING_INSTRUCTION = i++, // ?\n\t\n\t    //comments\n\t    BEFORE_COMMENT            = i++,\n\t    IN_COMMENT                = i++,\n\t    AFTER_COMMENT_1           = i++,\n\t    AFTER_COMMENT_2           = i++,\n\t\n\t    //cdata\n\t    BEFORE_CDATA_1            = i++, // [\n\t    BEFORE_CDATA_2            = i++, // C\n\t    BEFORE_CDATA_3            = i++, // D\n\t    BEFORE_CDATA_4            = i++, // A\n\t    BEFORE_CDATA_5            = i++, // T\n\t    BEFORE_CDATA_6            = i++, // A\n\t    IN_CDATA                  = i++, // [\n\t    AFTER_CDATA_1             = i++, // ]\n\t    AFTER_CDATA_2             = i++, // ]\n\t\n\t    //special tags\n\t    BEFORE_SPECIAL            = i++, //S\n\t    BEFORE_SPECIAL_END        = i++,   //S\n\t\n\t    BEFORE_SCRIPT_1           = i++, //C\n\t    BEFORE_SCRIPT_2           = i++, //R\n\t    BEFORE_SCRIPT_3           = i++, //I\n\t    BEFORE_SCRIPT_4           = i++, //P\n\t    BEFORE_SCRIPT_5           = i++, //T\n\t    AFTER_SCRIPT_1            = i++, //C\n\t    AFTER_SCRIPT_2            = i++, //R\n\t    AFTER_SCRIPT_3            = i++, //I\n\t    AFTER_SCRIPT_4            = i++, //P\n\t    AFTER_SCRIPT_5            = i++, //T\n\t\n\t    BEFORE_STYLE_1            = i++, //T\n\t    BEFORE_STYLE_2            = i++, //Y\n\t    BEFORE_STYLE_3            = i++, //L\n\t    BEFORE_STYLE_4            = i++, //E\n\t    AFTER_STYLE_1             = i++, //T\n\t    AFTER_STYLE_2             = i++, //Y\n\t    AFTER_STYLE_3             = i++, //L\n\t    AFTER_STYLE_4             = i++, //E\n\t\n\t    BEFORE_ENTITY             = i++, //&\n\t    BEFORE_NUMERIC_ENTITY     = i++, //#\n\t    IN_NAMED_ENTITY           = i++,\n\t    IN_NUMERIC_ENTITY         = i++,\n\t    IN_HEX_ENTITY             = i++, //X\n\t\n\t    j = 0,\n\t\n\t    SPECIAL_NONE              = j++,\n\t    SPECIAL_SCRIPT            = j++,\n\t    SPECIAL_STYLE             = j++;\n\t\n\tfunction whitespace(c){\n\t\treturn c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n\t}\n\t\n\tfunction characterState(char, SUCCESS){\n\t\treturn function(c){\n\t\t\tif(c === char) this._state = SUCCESS;\n\t\t};\n\t}\n\t\n\tfunction ifElseState(upper, SUCCESS, FAILURE){\n\t\tvar lower = upper.toLowerCase();\n\t\n\t\tif(upper === lower){\n\t\t\treturn function(c){\n\t\t\t\tif(c === lower){\n\t\t\t\t\tthis._state = SUCCESS;\n\t\t\t\t} else {\n\t\t\t\t\tthis._state = FAILURE;\n\t\t\t\t\tthis._index--;\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(c){\n\t\t\t\tif(c === lower || c === upper){\n\t\t\t\t\tthis._state = SUCCESS;\n\t\t\t\t} else {\n\t\t\t\t\tthis._state = FAILURE;\n\t\t\t\t\tthis._index--;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\t\n\tfunction consumeSpecialNameChar(upper, NEXT_STATE){\n\t\tvar lower = upper.toLowerCase();\n\t\n\t\treturn function(c){\n\t\t\tif(c === lower || c === upper){\n\t\t\t\tthis._state = NEXT_STATE;\n\t\t\t} else {\n\t\t\t\tthis._state = IN_TAG_NAME;\n\t\t\t\tthis._index--; //consume the token again\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction Tokenizer(options, cbs){\n\t\tthis._state = TEXT;\n\t\tthis._buffer = \"\";\n\t\tthis._sectionStart = 0;\n\t\tthis._index = 0;\n\t\tthis._bufferOffset = 0; //chars removed from _buffer\n\t\tthis._baseState = TEXT;\n\t\tthis._special = SPECIAL_NONE;\n\t\tthis._cbs = cbs;\n\t\tthis._running = true;\n\t\tthis._ended = false;\n\t\tthis._xmlMode = !!(options && options.xmlMode);\n\t\tthis._decodeEntities = !!(options && options.decodeEntities);\n\t}\n\t\n\tTokenizer.prototype._stateText = function(c){\n\t\tif(c === \"<\"){\n\t\t\tif(this._index > this._sectionStart){\n\t\t\t\tthis._cbs.ontext(this._getSection());\n\t\t\t}\n\t\t\tthis._state = BEFORE_TAG_NAME;\n\t\t\tthis._sectionStart = this._index;\n\t\t} else if(this._decodeEntities && this._special === SPECIAL_NONE && c === \"&\"){\n\t\t\tif(this._index > this._sectionStart){\n\t\t\t\tthis._cbs.ontext(this._getSection());\n\t\t\t}\n\t\t\tthis._baseState = TEXT;\n\t\t\tthis._state = BEFORE_ENTITY;\n\t\t\tthis._sectionStart = this._index;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateBeforeTagName = function(c){\n\t\tif(c === \"/\"){\n\t\t\tthis._state = BEFORE_CLOSING_TAG_NAME;\n\t\t} else if(c === \"<\"){\n\t\t\tthis._cbs.ontext(this._getSection());\n\t\t\tthis._sectionStart = this._index;\n\t\t} else if(c === \">\" || this._special !== SPECIAL_NONE || whitespace(c)) {\n\t\t\tthis._state = TEXT;\n\t\t} else if(c === \"!\"){\n\t\t\tthis._state = BEFORE_DECLARATION;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else if(c === \"?\"){\n\t\t\tthis._state = IN_PROCESSING_INSTRUCTION;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else {\n\t\t\tthis._state = (!this._xmlMode && (c === \"s\" || c === \"S\")) ?\n\t\t\t\t\t\t\tBEFORE_SPECIAL : IN_TAG_NAME;\n\t\t\tthis._sectionStart = this._index;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInTagName = function(c){\n\t\tif(c === \"/\" || c === \">\" || whitespace(c)){\n\t\t\tthis._emitToken(\"onopentagname\");\n\t\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\t\tthis._index--;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateBeforeCloseingTagName = function(c){\n\t\tif(whitespace(c));\n\t\telse if(c === \">\"){\n\t\t\tthis._state = TEXT;\n\t\t} else if(this._special !== SPECIAL_NONE){\n\t\t\tif(c === \"s\" || c === \"S\"){\n\t\t\t\tthis._state = BEFORE_SPECIAL_END;\n\t\t\t} else {\n\t\t\t\tthis._state = TEXT;\n\t\t\t\tthis._index--;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._state = IN_CLOSING_TAG_NAME;\n\t\t\tthis._sectionStart = this._index;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInCloseingTagName = function(c){\n\t\tif(c === \">\" || whitespace(c)){\n\t\t\tthis._emitToken(\"onclosetag\");\n\t\t\tthis._state = AFTER_CLOSING_TAG_NAME;\n\t\t\tthis._index--;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateAfterCloseingTagName = function(c){\n\t\t//skip everything until \">\"\n\t\tif(c === \">\"){\n\t\t\tthis._state = TEXT;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateBeforeAttributeName = function(c){\n\t\tif(c === \">\"){\n\t\t\tthis._cbs.onopentagend();\n\t\t\tthis._state = TEXT;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else if(c === \"/\"){\n\t\t\tthis._state = IN_SELF_CLOSING_TAG;\n\t\t} else if(!whitespace(c)){\n\t\t\tthis._state = IN_ATTRIBUTE_NAME;\n\t\t\tthis._sectionStart = this._index;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInSelfClosingTag = function(c){\n\t\tif(c === \">\"){\n\t\t\tthis._cbs.onselfclosingtag();\n\t\t\tthis._state = TEXT;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else if(!whitespace(c)){\n\t\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\t\tthis._index--;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInAttributeName = function(c){\n\t\tif(c === \"=\" || c === \"/\" || c === \">\" || whitespace(c)){\n\t\t\tthis._cbs.onattribname(this._getSection());\n\t\t\tthis._sectionStart = -1;\n\t\t\tthis._state = AFTER_ATTRIBUTE_NAME;\n\t\t\tthis._index--;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateAfterAttributeName = function(c){\n\t\tif(c === \"=\"){\n\t\t\tthis._state = BEFORE_ATTRIBUTE_VALUE;\n\t\t} else if(c === \"/\" || c === \">\"){\n\t\t\tthis._cbs.onattribend();\n\t\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\t\tthis._index--;\n\t\t} else if(!whitespace(c)){\n\t\t\tthis._cbs.onattribend();\n\t\t\tthis._state = IN_ATTRIBUTE_NAME;\n\t\t\tthis._sectionStart = this._index;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateBeforeAttributeValue = function(c){\n\t\tif(c === \"\\\"\"){\n\t\t\tthis._state = IN_ATTRIBUTE_VALUE_DQ;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else if(c === \"'\"){\n\t\t\tthis._state = IN_ATTRIBUTE_VALUE_SQ;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else if(!whitespace(c)){\n\t\t\tthis._state = IN_ATTRIBUTE_VALUE_NQ;\n\t\t\tthis._sectionStart = this._index;\n\t\t\tthis._index--; //reconsume token\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c){\n\t\tif(c === \"\\\"\"){\n\t\t\tthis._emitToken(\"onattribdata\");\n\t\t\tthis._cbs.onattribend();\n\t\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\t} else if(this._decodeEntities && c === \"&\"){\n\t\t\tthis._emitToken(\"onattribdata\");\n\t\t\tthis._baseState = this._state;\n\t\t\tthis._state = BEFORE_ENTITY;\n\t\t\tthis._sectionStart = this._index;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInAttributeValueSingleQuotes = function(c){\n\t\tif(c === \"'\"){\n\t\t\tthis._emitToken(\"onattribdata\");\n\t\t\tthis._cbs.onattribend();\n\t\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\t} else if(this._decodeEntities && c === \"&\"){\n\t\t\tthis._emitToken(\"onattribdata\");\n\t\t\tthis._baseState = this._state;\n\t\t\tthis._state = BEFORE_ENTITY;\n\t\t\tthis._sectionStart = this._index;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInAttributeValueNoQuotes = function(c){\n\t\tif(whitespace(c) || c === \">\"){\n\t\t\tthis._emitToken(\"onattribdata\");\n\t\t\tthis._cbs.onattribend();\n\t\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\t\tthis._index--;\n\t\t} else if(this._decodeEntities && c === \"&\"){\n\t\t\tthis._emitToken(\"onattribdata\");\n\t\t\tthis._baseState = this._state;\n\t\t\tthis._state = BEFORE_ENTITY;\n\t\t\tthis._sectionStart = this._index;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateBeforeDeclaration = function(c){\n\t\tthis._state = c === \"[\" ? BEFORE_CDATA_1 :\n\t\t\t\t\t\tc === \"-\" ? BEFORE_COMMENT :\n\t\t\t\t\t\t\tIN_DECLARATION;\n\t};\n\t\n\tTokenizer.prototype._stateInDeclaration = function(c){\n\t\tif(c === \">\"){\n\t\t\tthis._cbs.ondeclaration(this._getSection());\n\t\t\tthis._state = TEXT;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInProcessingInstruction = function(c){\n\t\tif(c === \">\"){\n\t\t\tthis._cbs.onprocessinginstruction(this._getSection());\n\t\t\tthis._state = TEXT;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateBeforeComment = function(c){\n\t\tif(c === \"-\"){\n\t\t\tthis._state = IN_COMMENT;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else {\n\t\t\tthis._state = IN_DECLARATION;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInComment = function(c){\n\t\tif(c === \"-\") this._state = AFTER_COMMENT_1;\n\t};\n\t\n\tTokenizer.prototype._stateAfterComment1 = function(c){\n\t\tif(c === \"-\"){\n\t\t\tthis._state = AFTER_COMMENT_2;\n\t\t} else {\n\t\t\tthis._state = IN_COMMENT;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateAfterComment2 = function(c){\n\t\tif(c === \">\"){\n\t\t\t//remove 2 trailing chars\n\t\t\tthis._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));\n\t\t\tthis._state = TEXT;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else if(c !== \"-\"){\n\t\t\tthis._state = IN_COMMENT;\n\t\t}\n\t\t// else: stay in AFTER_COMMENT_2 (`--->`)\n\t};\n\t\n\tTokenizer.prototype._stateBeforeCdata1 = ifElseState(\"C\", BEFORE_CDATA_2, IN_DECLARATION);\n\tTokenizer.prototype._stateBeforeCdata2 = ifElseState(\"D\", BEFORE_CDATA_3, IN_DECLARATION);\n\tTokenizer.prototype._stateBeforeCdata3 = ifElseState(\"A\", BEFORE_CDATA_4, IN_DECLARATION);\n\tTokenizer.prototype._stateBeforeCdata4 = ifElseState(\"T\", BEFORE_CDATA_5, IN_DECLARATION);\n\tTokenizer.prototype._stateBeforeCdata5 = ifElseState(\"A\", BEFORE_CDATA_6, IN_DECLARATION);\n\t\n\tTokenizer.prototype._stateBeforeCdata6 = function(c){\n\t\tif(c === \"[\"){\n\t\t\tthis._state = IN_CDATA;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else {\n\t\t\tthis._state = IN_DECLARATION;\n\t\t\tthis._index--;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInCdata = function(c){\n\t\tif(c === \"]\") this._state = AFTER_CDATA_1;\n\t};\n\t\n\tTokenizer.prototype._stateAfterCdata1 = characterState(\"]\", AFTER_CDATA_2);\n\t\n\tTokenizer.prototype._stateAfterCdata2 = function(c){\n\t\tif(c === \">\"){\n\t\t\t//remove 2 trailing chars\n\t\t\tthis._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));\n\t\t\tthis._state = TEXT;\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t} else if(c !== \"]\") {\n\t\t\tthis._state = IN_CDATA;\n\t\t}\n\t\t//else: stay in AFTER_CDATA_2 (`]]]>`)\n\t};\n\t\n\tTokenizer.prototype._stateBeforeSpecial = function(c){\n\t\tif(c === \"c\" || c === \"C\"){\n\t\t\tthis._state = BEFORE_SCRIPT_1;\n\t\t} else if(c === \"t\" || c === \"T\"){\n\t\t\tthis._state = BEFORE_STYLE_1;\n\t\t} else {\n\t\t\tthis._state = IN_TAG_NAME;\n\t\t\tthis._index--; //consume the token again\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateBeforeSpecialEnd = function(c){\n\t\tif(this._special === SPECIAL_SCRIPT && (c === \"c\" || c === \"C\")){\n\t\t\tthis._state = AFTER_SCRIPT_1;\n\t\t} else if(this._special === SPECIAL_STYLE && (c === \"t\" || c === \"T\")){\n\t\t\tthis._state = AFTER_STYLE_1;\n\t\t}\n\t\telse this._state = TEXT;\n\t};\n\t\n\tTokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar(\"R\", BEFORE_SCRIPT_2);\n\tTokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar(\"I\", BEFORE_SCRIPT_3);\n\tTokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar(\"P\", BEFORE_SCRIPT_4);\n\tTokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar(\"T\", BEFORE_SCRIPT_5);\n\t\n\tTokenizer.prototype._stateBeforeScript5 = function(c){\n\t\tif(c === \"/\" || c === \">\" || whitespace(c)){\n\t\t\tthis._special = SPECIAL_SCRIPT;\n\t\t}\n\t\tthis._state = IN_TAG_NAME;\n\t\tthis._index--; //consume the token again\n\t};\n\t\n\tTokenizer.prototype._stateAfterScript1 = ifElseState(\"R\", AFTER_SCRIPT_2, TEXT);\n\tTokenizer.prototype._stateAfterScript2 = ifElseState(\"I\", AFTER_SCRIPT_3, TEXT);\n\tTokenizer.prototype._stateAfterScript3 = ifElseState(\"P\", AFTER_SCRIPT_4, TEXT);\n\tTokenizer.prototype._stateAfterScript4 = ifElseState(\"T\", AFTER_SCRIPT_5, TEXT);\n\t\n\tTokenizer.prototype._stateAfterScript5 = function(c){\n\t\tif(c === \">\" || whitespace(c)){\n\t\t\tthis._special = SPECIAL_NONE;\n\t\t\tthis._state = IN_CLOSING_TAG_NAME;\n\t\t\tthis._sectionStart = this._index - 6;\n\t\t\tthis._index--; //reconsume the token\n\t\t}\n\t\telse this._state = TEXT;\n\t};\n\t\n\tTokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar(\"Y\", BEFORE_STYLE_2);\n\tTokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar(\"L\", BEFORE_STYLE_3);\n\tTokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar(\"E\", BEFORE_STYLE_4);\n\t\n\tTokenizer.prototype._stateBeforeStyle4 = function(c){\n\t\tif(c === \"/\" || c === \">\" || whitespace(c)){\n\t\t\tthis._special = SPECIAL_STYLE;\n\t\t}\n\t\tthis._state = IN_TAG_NAME;\n\t\tthis._index--; //consume the token again\n\t};\n\t\n\tTokenizer.prototype._stateAfterStyle1 = ifElseState(\"Y\", AFTER_STYLE_2, TEXT);\n\tTokenizer.prototype._stateAfterStyle2 = ifElseState(\"L\", AFTER_STYLE_3, TEXT);\n\tTokenizer.prototype._stateAfterStyle3 = ifElseState(\"E\", AFTER_STYLE_4, TEXT);\n\t\n\tTokenizer.prototype._stateAfterStyle4 = function(c){\n\t\tif(c === \">\" || whitespace(c)){\n\t\t\tthis._special = SPECIAL_NONE;\n\t\t\tthis._state = IN_CLOSING_TAG_NAME;\n\t\t\tthis._sectionStart = this._index - 5;\n\t\t\tthis._index--; //reconsume the token\n\t\t}\n\t\telse this._state = TEXT;\n\t};\n\t\n\tTokenizer.prototype._stateBeforeEntity = ifElseState(\"#\", BEFORE_NUMERIC_ENTITY, IN_NAMED_ENTITY);\n\tTokenizer.prototype._stateBeforeNumericEntity = ifElseState(\"X\", IN_HEX_ENTITY, IN_NUMERIC_ENTITY);\n\t\n\t//for entities terminated with a semicolon\n\tTokenizer.prototype._parseNamedEntityStrict = function(){\n\t\t//offset = 1\n\t\tif(this._sectionStart + 1 < this._index){\n\t\t\tvar entity = this._buffer.substring(this._sectionStart + 1, this._index),\n\t\t\t    map = this._xmlMode ? xmlMap : entityMap;\n\t\n\t\t\tif(map.hasOwnProperty(entity)){\n\t\t\t\tthis._emitPartial(map[entity]);\n\t\t\t\tthis._sectionStart = this._index + 1;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\t//parses legacy entities (without trailing semicolon)\n\tTokenizer.prototype._parseLegacyEntity = function(){\n\t\tvar start = this._sectionStart + 1,\n\t\t    limit = this._index - start;\n\t\n\t\tif(limit > 6) limit = 6; //the max length of legacy entities is 6\n\t\n\t\twhile(limit >= 2){ //the min length of legacy entities is 2\n\t\t\tvar entity = this._buffer.substr(start, limit);\n\t\n\t\t\tif(legacyMap.hasOwnProperty(entity)){\n\t\t\t\tthis._emitPartial(legacyMap[entity]);\n\t\t\t\tthis._sectionStart += limit + 1;\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tlimit--;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInNamedEntity = function(c){\n\t\tif(c === \";\"){\n\t\t\tthis._parseNamedEntityStrict();\n\t\t\tif(this._sectionStart + 1 < this._index && !this._xmlMode){\n\t\t\t\tthis._parseLegacyEntity();\n\t\t\t}\n\t\t\tthis._state = this._baseState;\n\t\t} else if((c < \"a\" || c > \"z\") && (c < \"A\" || c > \"Z\") && (c < \"0\" || c > \"9\")){\n\t\t\tif(this._xmlMode);\n\t\t\telse if(this._sectionStart + 1 === this._index);\n\t\t\telse if(this._baseState !== TEXT){\n\t\t\t\tif(c !== \"=\"){\n\t\t\t\t\tthis._parseNamedEntityStrict();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._parseLegacyEntity();\n\t\t\t}\n\t\n\t\t\tthis._state = this._baseState;\n\t\t\tthis._index--;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._decodeNumericEntity = function(offset, base){\n\t\tvar sectionStart = this._sectionStart + offset;\n\t\n\t\tif(sectionStart !== this._index){\n\t\t\t//parse entity\n\t\t\tvar entity = this._buffer.substring(sectionStart, this._index);\n\t\t\tvar parsed = parseInt(entity, base);\n\t\n\t\t\tthis._emitPartial(decodeCodePoint(parsed));\n\t\t\tthis._sectionStart = this._index;\n\t\t} else {\n\t\t\tthis._sectionStart--;\n\t\t}\n\t\n\t\tthis._state = this._baseState;\n\t};\n\t\n\tTokenizer.prototype._stateInNumericEntity = function(c){\n\t\tif(c === \";\"){\n\t\t\tthis._decodeNumericEntity(2, 10);\n\t\t\tthis._sectionStart++;\n\t\t} else if(c < \"0\" || c > \"9\"){\n\t\t\tif(!this._xmlMode){\n\t\t\t\tthis._decodeNumericEntity(2, 10);\n\t\t\t} else {\n\t\t\t\tthis._state = this._baseState;\n\t\t\t}\n\t\t\tthis._index--;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._stateInHexEntity = function(c){\n\t\tif(c === \";\"){\n\t\t\tthis._decodeNumericEntity(3, 16);\n\t\t\tthis._sectionStart++;\n\t\t} else if((c < \"a\" || c > \"f\") && (c < \"A\" || c > \"F\") && (c < \"0\" || c > \"9\")){\n\t\t\tif(!this._xmlMode){\n\t\t\t\tthis._decodeNumericEntity(3, 16);\n\t\t\t} else {\n\t\t\t\tthis._state = this._baseState;\n\t\t\t}\n\t\t\tthis._index--;\n\t\t}\n\t};\n\t\n\tTokenizer.prototype._cleanup = function (){\n\t\tif(this._sectionStart < 0){\n\t\t\tthis._buffer = \"\";\n\t\t\tthis._bufferOffset += this._index;\n\t\t\tthis._index = 0;\n\t\t} else if(this._running){\n\t\t\tif(this._state === TEXT){\n\t\t\t\tif(this._sectionStart !== this._index){\n\t\t\t\t\tthis._cbs.ontext(this._buffer.substr(this._sectionStart));\n\t\t\t\t}\n\t\t\t\tthis._buffer = \"\";\n\t\t\t\tthis._bufferOffset += this._index;\n\t\t\t\tthis._index = 0;\n\t\t\t} else if(this._sectionStart === this._index){\n\t\t\t\t//the section just started\n\t\t\t\tthis._buffer = \"\";\n\t\t\t\tthis._bufferOffset += this._index;\n\t\t\t\tthis._index = 0;\n\t\t\t} else {\n\t\t\t\t//remove everything unnecessary\n\t\t\t\tthis._buffer = this._buffer.substr(this._sectionStart);\n\t\t\t\tthis._index -= this._sectionStart;\n\t\t\t\tthis._bufferOffset += this._sectionStart;\n\t\t\t}\n\t\n\t\t\tthis._sectionStart = 0;\n\t\t}\n\t};\n\t\n\t//TODO make events conditional\n\tTokenizer.prototype.write = function(chunk){\n\t\tif(this._ended) this._cbs.onerror(Error(\".write() after done!\"));\n\t\n\t\tthis._buffer += chunk;\n\t\tthis._parse();\n\t};\n\t\n\tTokenizer.prototype._parse = function(){\n\t\twhile(this._index < this._buffer.length && this._running){\n\t\t\tvar c = this._buffer.charAt(this._index);\n\t\t\tif(this._state === TEXT) {\n\t\t\t\tthis._stateText(c);\n\t\t\t} else if(this._state === BEFORE_TAG_NAME){\n\t\t\t\tthis._stateBeforeTagName(c);\n\t\t\t} else if(this._state === IN_TAG_NAME) {\n\t\t\t\tthis._stateInTagName(c);\n\t\t\t} else if(this._state === BEFORE_CLOSING_TAG_NAME){\n\t\t\t\tthis._stateBeforeCloseingTagName(c);\n\t\t\t} else if(this._state === IN_CLOSING_TAG_NAME){\n\t\t\t\tthis._stateInCloseingTagName(c);\n\t\t\t} else if(this._state === AFTER_CLOSING_TAG_NAME){\n\t\t\t\tthis._stateAfterCloseingTagName(c);\n\t\t\t} else if(this._state === IN_SELF_CLOSING_TAG){\n\t\t\t\tthis._stateInSelfClosingTag(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t*\tattributes\n\t\t\t*/\n\t\t\telse if(this._state === BEFORE_ATTRIBUTE_NAME){\n\t\t\t\tthis._stateBeforeAttributeName(c);\n\t\t\t} else if(this._state === IN_ATTRIBUTE_NAME){\n\t\t\t\tthis._stateInAttributeName(c);\n\t\t\t} else if(this._state === AFTER_ATTRIBUTE_NAME){\n\t\t\t\tthis._stateAfterAttributeName(c);\n\t\t\t} else if(this._state === BEFORE_ATTRIBUTE_VALUE){\n\t\t\t\tthis._stateBeforeAttributeValue(c);\n\t\t\t} else if(this._state === IN_ATTRIBUTE_VALUE_DQ){\n\t\t\t\tthis._stateInAttributeValueDoubleQuotes(c);\n\t\t\t} else if(this._state === IN_ATTRIBUTE_VALUE_SQ){\n\t\t\t\tthis._stateInAttributeValueSingleQuotes(c);\n\t\t\t} else if(this._state === IN_ATTRIBUTE_VALUE_NQ){\n\t\t\t\tthis._stateInAttributeValueNoQuotes(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t*\tdeclarations\n\t\t\t*/\n\t\t\telse if(this._state === BEFORE_DECLARATION){\n\t\t\t\tthis._stateBeforeDeclaration(c);\n\t\t\t} else if(this._state === IN_DECLARATION){\n\t\t\t\tthis._stateInDeclaration(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t*\tprocessing instructions\n\t\t\t*/\n\t\t\telse if(this._state === IN_PROCESSING_INSTRUCTION){\n\t\t\t\tthis._stateInProcessingInstruction(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t*\tcomments\n\t\t\t*/\n\t\t\telse if(this._state === BEFORE_COMMENT){\n\t\t\t\tthis._stateBeforeComment(c);\n\t\t\t} else if(this._state === IN_COMMENT){\n\t\t\t\tthis._stateInComment(c);\n\t\t\t} else if(this._state === AFTER_COMMENT_1){\n\t\t\t\tthis._stateAfterComment1(c);\n\t\t\t} else if(this._state === AFTER_COMMENT_2){\n\t\t\t\tthis._stateAfterComment2(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t*\tcdata\n\t\t\t*/\n\t\t\telse if(this._state === BEFORE_CDATA_1){\n\t\t\t\tthis._stateBeforeCdata1(c);\n\t\t\t} else if(this._state === BEFORE_CDATA_2){\n\t\t\t\tthis._stateBeforeCdata2(c);\n\t\t\t} else if(this._state === BEFORE_CDATA_3){\n\t\t\t\tthis._stateBeforeCdata3(c);\n\t\t\t} else if(this._state === BEFORE_CDATA_4){\n\t\t\t\tthis._stateBeforeCdata4(c);\n\t\t\t} else if(this._state === BEFORE_CDATA_5){\n\t\t\t\tthis._stateBeforeCdata5(c);\n\t\t\t} else if(this._state === BEFORE_CDATA_6){\n\t\t\t\tthis._stateBeforeCdata6(c);\n\t\t\t} else if(this._state === IN_CDATA){\n\t\t\t\tthis._stateInCdata(c);\n\t\t\t} else if(this._state === AFTER_CDATA_1){\n\t\t\t\tthis._stateAfterCdata1(c);\n\t\t\t} else if(this._state === AFTER_CDATA_2){\n\t\t\t\tthis._stateAfterCdata2(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t* special tags\n\t\t\t*/\n\t\t\telse if(this._state === BEFORE_SPECIAL){\n\t\t\t\tthis._stateBeforeSpecial(c);\n\t\t\t} else if(this._state === BEFORE_SPECIAL_END){\n\t\t\t\tthis._stateBeforeSpecialEnd(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t* script\n\t\t\t*/\n\t\t\telse if(this._state === BEFORE_SCRIPT_1){\n\t\t\t\tthis._stateBeforeScript1(c);\n\t\t\t} else if(this._state === BEFORE_SCRIPT_2){\n\t\t\t\tthis._stateBeforeScript2(c);\n\t\t\t} else if(this._state === BEFORE_SCRIPT_3){\n\t\t\t\tthis._stateBeforeScript3(c);\n\t\t\t} else if(this._state === BEFORE_SCRIPT_4){\n\t\t\t\tthis._stateBeforeScript4(c);\n\t\t\t} else if(this._state === BEFORE_SCRIPT_5){\n\t\t\t\tthis._stateBeforeScript5(c);\n\t\t\t}\n\t\n\t\t\telse if(this._state === AFTER_SCRIPT_1){\n\t\t\t\tthis._stateAfterScript1(c);\n\t\t\t} else if(this._state === AFTER_SCRIPT_2){\n\t\t\t\tthis._stateAfterScript2(c);\n\t\t\t} else if(this._state === AFTER_SCRIPT_3){\n\t\t\t\tthis._stateAfterScript3(c);\n\t\t\t} else if(this._state === AFTER_SCRIPT_4){\n\t\t\t\tthis._stateAfterScript4(c);\n\t\t\t} else if(this._state === AFTER_SCRIPT_5){\n\t\t\t\tthis._stateAfterScript5(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t* style\n\t\t\t*/\n\t\t\telse if(this._state === BEFORE_STYLE_1){\n\t\t\t\tthis._stateBeforeStyle1(c);\n\t\t\t} else if(this._state === BEFORE_STYLE_2){\n\t\t\t\tthis._stateBeforeStyle2(c);\n\t\t\t} else if(this._state === BEFORE_STYLE_3){\n\t\t\t\tthis._stateBeforeStyle3(c);\n\t\t\t} else if(this._state === BEFORE_STYLE_4){\n\t\t\t\tthis._stateBeforeStyle4(c);\n\t\t\t}\n\t\n\t\t\telse if(this._state === AFTER_STYLE_1){\n\t\t\t\tthis._stateAfterStyle1(c);\n\t\t\t} else if(this._state === AFTER_STYLE_2){\n\t\t\t\tthis._stateAfterStyle2(c);\n\t\t\t} else if(this._state === AFTER_STYLE_3){\n\t\t\t\tthis._stateAfterStyle3(c);\n\t\t\t} else if(this._state === AFTER_STYLE_4){\n\t\t\t\tthis._stateAfterStyle4(c);\n\t\t\t}\n\t\n\t\t\t/*\n\t\t\t* entities\n\t\t\t*/\n\t\t\telse if(this._state === BEFORE_ENTITY){\n\t\t\t\tthis._stateBeforeEntity(c);\n\t\t\t} else if(this._state === BEFORE_NUMERIC_ENTITY){\n\t\t\t\tthis._stateBeforeNumericEntity(c);\n\t\t\t} else if(this._state === IN_NAMED_ENTITY){\n\t\t\t\tthis._stateInNamedEntity(c);\n\t\t\t} else if(this._state === IN_NUMERIC_ENTITY){\n\t\t\t\tthis._stateInNumericEntity(c);\n\t\t\t} else if(this._state === IN_HEX_ENTITY){\n\t\t\t\tthis._stateInHexEntity(c);\n\t\t\t}\n\t\n\t\t\telse {\n\t\t\t\tthis._cbs.onerror(Error(\"unknown _state\"), this._state);\n\t\t\t}\n\t\n\t\t\tthis._index++;\n\t\t}\n\t\n\t\tthis._cleanup();\n\t};\n\t\n\tTokenizer.prototype.pause = function(){\n\t\tthis._running = false;\n\t};\n\tTokenizer.prototype.resume = function(){\n\t\tthis._running = true;\n\t\n\t\tif(this._index < this._buffer.length){\n\t\t\tthis._parse();\n\t\t}\n\t\tif(this._ended){\n\t\t\tthis._finish();\n\t\t}\n\t};\n\t\n\tTokenizer.prototype.end = function(chunk){\n\t\tif(this._ended) this._cbs.onerror(Error(\".end() after done!\"));\n\t\tif(chunk) this.write(chunk);\n\t\n\t\tthis._ended = true;\n\t\n\t\tif(this._running) this._finish();\n\t};\n\t\n\tTokenizer.prototype._finish = function(){\n\t\t//if there is remaining data, emit it in a reasonable way\n\t\tif(this._sectionStart < this._index){\n\t\t\tthis._handleTrailingData();\n\t\t}\n\t\n\t\tthis._cbs.onend();\n\t};\n\t\n\tTokenizer.prototype._handleTrailingData = function(){\n\t\tvar data = this._buffer.substr(this._sectionStart);\n\t\n\t\tif(this._state === IN_CDATA || this._state === AFTER_CDATA_1 || this._state === AFTER_CDATA_2){\n\t\t\tthis._cbs.oncdata(data);\n\t\t} else if(this._state === IN_COMMENT || this._state === AFTER_COMMENT_1 || this._state === AFTER_COMMENT_2){\n\t\t\tthis._cbs.oncomment(data);\n\t\t} else if(this._state === IN_NAMED_ENTITY && !this._xmlMode){\n\t\t\tthis._parseLegacyEntity();\n\t\t\tif(this._sectionStart < this._index){\n\t\t\t\tthis._state = this._baseState;\n\t\t\t\tthis._handleTrailingData();\n\t\t\t}\n\t\t} else if(this._state === IN_NUMERIC_ENTITY && !this._xmlMode){\n\t\t\tthis._decodeNumericEntity(2, 10);\n\t\t\tif(this._sectionStart < this._index){\n\t\t\t\tthis._state = this._baseState;\n\t\t\t\tthis._handleTrailingData();\n\t\t\t}\n\t\t} else if(this._state === IN_HEX_ENTITY && !this._xmlMode){\n\t\t\tthis._decodeNumericEntity(3, 16);\n\t\t\tif(this._sectionStart < this._index){\n\t\t\t\tthis._state = this._baseState;\n\t\t\t\tthis._handleTrailingData();\n\t\t\t}\n\t\t} else if(\n\t\t\tthis._state !== IN_TAG_NAME &&\n\t\t\tthis._state !== BEFORE_ATTRIBUTE_NAME &&\n\t\t\tthis._state !== BEFORE_ATTRIBUTE_VALUE &&\n\t\t\tthis._state !== AFTER_ATTRIBUTE_NAME &&\n\t\t\tthis._state !== IN_ATTRIBUTE_NAME &&\n\t\t\tthis._state !== IN_ATTRIBUTE_VALUE_SQ &&\n\t\t\tthis._state !== IN_ATTRIBUTE_VALUE_DQ &&\n\t\t\tthis._state !== IN_ATTRIBUTE_VALUE_NQ &&\n\t\t\tthis._state !== IN_CLOSING_TAG_NAME\n\t\t){\n\t\t\tthis._cbs.ontext(data);\n\t\t}\n\t\t//else, ignore remaining data\n\t\t//TODO add a way to remove current tag\n\t};\n\t\n\tTokenizer.prototype.reset = function(){\n\t\tTokenizer.call(this, {xmlMode: this._xmlMode, decodeEntities: this._decodeEntities}, this._cbs);\n\t};\n\t\n\tTokenizer.prototype.getAbsoluteIndex = function(){\n\t\treturn this._bufferOffset + this._index;\n\t};\n\t\n\tTokenizer.prototype._getSection = function(){\n\t\treturn this._buffer.substring(this._sectionStart, this._index);\n\t};\n\t\n\tTokenizer.prototype._emitToken = function(name){\n\t\tthis._cbs[name](this._getSection());\n\t\tthis._sectionStart = -1;\n\t};\n\t\n\tTokenizer.prototype._emitPartial = function(value){\n\t\tif(this._baseState !== TEXT){\n\t\t\tthis._cbs.onattribdata(value); //TODO implement the new event\n\t\t} else {\n\t\t\tthis._cbs.ontext(value);\n\t\t}\n\t};\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"0\": 65533,\n\t\t\"128\": 8364,\n\t\t\"130\": 8218,\n\t\t\"131\": 402,\n\t\t\"132\": 8222,\n\t\t\"133\": 8230,\n\t\t\"134\": 8224,\n\t\t\"135\": 8225,\n\t\t\"136\": 710,\n\t\t\"137\": 8240,\n\t\t\"138\": 352,\n\t\t\"139\": 8249,\n\t\t\"140\": 338,\n\t\t\"142\": 381,\n\t\t\"145\": 8216,\n\t\t\"146\": 8217,\n\t\t\"147\": 8220,\n\t\t\"148\": 8221,\n\t\t\"149\": 8226,\n\t\t\"150\": 8211,\n\t\t\"151\": 8212,\n\t\t\"152\": 732,\n\t\t\"153\": 8482,\n\t\t\"154\": 353,\n\t\t\"155\": 8250,\n\t\t\"156\": 339,\n\t\t\"158\": 382,\n\t\t\"159\": 376\n\t};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"Aacute\": \"Á\",\n\t\t\"aacute\": \"á\",\n\t\t\"Abreve\": \"Ă\",\n\t\t\"abreve\": \"ă\",\n\t\t\"ac\": \"∾\",\n\t\t\"acd\": \"∿\",\n\t\t\"acE\": \"∾̳\",\n\t\t\"Acirc\": \"Â\",\n\t\t\"acirc\": \"â\",\n\t\t\"acute\": \"´\",\n\t\t\"Acy\": \"А\",\n\t\t\"acy\": \"а\",\n\t\t\"AElig\": \"Æ\",\n\t\t\"aelig\": \"æ\",\n\t\t\"af\": \"⁡\",\n\t\t\"Afr\": \"𝔄\",\n\t\t\"afr\": \"𝔞\",\n\t\t\"Agrave\": \"À\",\n\t\t\"agrave\": \"à\",\n\t\t\"alefsym\": \"ℵ\",\n\t\t\"aleph\": \"ℵ\",\n\t\t\"Alpha\": \"Α\",\n\t\t\"alpha\": \"α\",\n\t\t\"Amacr\": \"Ā\",\n\t\t\"amacr\": \"ā\",\n\t\t\"amalg\": \"⨿\",\n\t\t\"amp\": \"&\",\n\t\t\"AMP\": \"&\",\n\t\t\"andand\": \"⩕\",\n\t\t\"And\": \"⩓\",\n\t\t\"and\": \"∧\",\n\t\t\"andd\": \"⩜\",\n\t\t\"andslope\": \"⩘\",\n\t\t\"andv\": \"⩚\",\n\t\t\"ang\": \"∠\",\n\t\t\"ange\": \"⦤\",\n\t\t\"angle\": \"∠\",\n\t\t\"angmsdaa\": \"⦨\",\n\t\t\"angmsdab\": \"⦩\",\n\t\t\"angmsdac\": \"⦪\",\n\t\t\"angmsdad\": \"⦫\",\n\t\t\"angmsdae\": \"⦬\",\n\t\t\"angmsdaf\": \"⦭\",\n\t\t\"angmsdag\": \"⦮\",\n\t\t\"angmsdah\": \"⦯\",\n\t\t\"angmsd\": \"∡\",\n\t\t\"angrt\": \"∟\",\n\t\t\"angrtvb\": \"⊾\",\n\t\t\"angrtvbd\": \"⦝\",\n\t\t\"angsph\": \"∢\",\n\t\t\"angst\": \"Å\",\n\t\t\"angzarr\": \"⍼\",\n\t\t\"Aogon\": \"Ą\",\n\t\t\"aogon\": \"ą\",\n\t\t\"Aopf\": \"𝔸\",\n\t\t\"aopf\": \"𝕒\",\n\t\t\"apacir\": \"⩯\",\n\t\t\"ap\": \"≈\",\n\t\t\"apE\": \"⩰\",\n\t\t\"ape\": \"≊\",\n\t\t\"apid\": \"≋\",\n\t\t\"apos\": \"'\",\n\t\t\"ApplyFunction\": \"⁡\",\n\t\t\"approx\": \"≈\",\n\t\t\"approxeq\": \"≊\",\n\t\t\"Aring\": \"Å\",\n\t\t\"aring\": \"å\",\n\t\t\"Ascr\": \"𝒜\",\n\t\t\"ascr\": \"𝒶\",\n\t\t\"Assign\": \"≔\",\n\t\t\"ast\": \"*\",\n\t\t\"asymp\": \"≈\",\n\t\t\"asympeq\": \"≍\",\n\t\t\"Atilde\": \"Ã\",\n\t\t\"atilde\": \"ã\",\n\t\t\"Auml\": \"Ä\",\n\t\t\"auml\": \"ä\",\n\t\t\"awconint\": \"∳\",\n\t\t\"awint\": \"⨑\",\n\t\t\"backcong\": \"≌\",\n\t\t\"backepsilon\": \"϶\",\n\t\t\"backprime\": \"‵\",\n\t\t\"backsim\": \"∽\",\n\t\t\"backsimeq\": \"⋍\",\n\t\t\"Backslash\": \"∖\",\n\t\t\"Barv\": \"⫧\",\n\t\t\"barvee\": \"⊽\",\n\t\t\"barwed\": \"⌅\",\n\t\t\"Barwed\": \"⌆\",\n\t\t\"barwedge\": \"⌅\",\n\t\t\"bbrk\": \"⎵\",\n\t\t\"bbrktbrk\": \"⎶\",\n\t\t\"bcong\": \"≌\",\n\t\t\"Bcy\": \"Б\",\n\t\t\"bcy\": \"б\",\n\t\t\"bdquo\": \"„\",\n\t\t\"becaus\": \"∵\",\n\t\t\"because\": \"∵\",\n\t\t\"Because\": \"∵\",\n\t\t\"bemptyv\": \"⦰\",\n\t\t\"bepsi\": \"϶\",\n\t\t\"bernou\": \"ℬ\",\n\t\t\"Bernoullis\": \"ℬ\",\n\t\t\"Beta\": \"Β\",\n\t\t\"beta\": \"β\",\n\t\t\"beth\": \"ℶ\",\n\t\t\"between\": \"≬\",\n\t\t\"Bfr\": \"𝔅\",\n\t\t\"bfr\": \"𝔟\",\n\t\t\"bigcap\": \"⋂\",\n\t\t\"bigcirc\": \"◯\",\n\t\t\"bigcup\": \"⋃\",\n\t\t\"bigodot\": \"⨀\",\n\t\t\"bigoplus\": \"⨁\",\n\t\t\"bigotimes\": \"⨂\",\n\t\t\"bigsqcup\": \"⨆\",\n\t\t\"bigstar\": \"★\",\n\t\t\"bigtriangledown\": \"▽\",\n\t\t\"bigtriangleup\": \"△\",\n\t\t\"biguplus\": \"⨄\",\n\t\t\"bigvee\": \"⋁\",\n\t\t\"bigwedge\": \"⋀\",\n\t\t\"bkarow\": \"⤍\",\n\t\t\"blacklozenge\": \"⧫\",\n\t\t\"blacksquare\": \"▪\",\n\t\t\"blacktriangle\": \"▴\",\n\t\t\"blacktriangledown\": \"▾\",\n\t\t\"blacktriangleleft\": \"◂\",\n\t\t\"blacktriangleright\": \"▸\",\n\t\t\"blank\": \"␣\",\n\t\t\"blk12\": \"▒\",\n\t\t\"blk14\": \"░\",\n\t\t\"blk34\": \"▓\",\n\t\t\"block\": \"█\",\n\t\t\"bne\": \"=⃥\",\n\t\t\"bnequiv\": \"≡⃥\",\n\t\t\"bNot\": \"⫭\",\n\t\t\"bnot\": \"⌐\",\n\t\t\"Bopf\": \"𝔹\",\n\t\t\"bopf\": \"𝕓\",\n\t\t\"bot\": \"⊥\",\n\t\t\"bottom\": \"⊥\",\n\t\t\"bowtie\": \"⋈\",\n\t\t\"boxbox\": \"⧉\",\n\t\t\"boxdl\": \"┐\",\n\t\t\"boxdL\": \"╕\",\n\t\t\"boxDl\": \"╖\",\n\t\t\"boxDL\": \"╗\",\n\t\t\"boxdr\": \"┌\",\n\t\t\"boxdR\": \"╒\",\n\t\t\"boxDr\": \"╓\",\n\t\t\"boxDR\": \"╔\",\n\t\t\"boxh\": \"─\",\n\t\t\"boxH\": \"═\",\n\t\t\"boxhd\": \"┬\",\n\t\t\"boxHd\": \"╤\",\n\t\t\"boxhD\": \"╥\",\n\t\t\"boxHD\": \"╦\",\n\t\t\"boxhu\": \"┴\",\n\t\t\"boxHu\": \"╧\",\n\t\t\"boxhU\": \"╨\",\n\t\t\"boxHU\": \"╩\",\n\t\t\"boxminus\": \"⊟\",\n\t\t\"boxplus\": \"⊞\",\n\t\t\"boxtimes\": \"⊠\",\n\t\t\"boxul\": \"┘\",\n\t\t\"boxuL\": \"╛\",\n\t\t\"boxUl\": \"╜\",\n\t\t\"boxUL\": \"╝\",\n\t\t\"boxur\": \"└\",\n\t\t\"boxuR\": \"╘\",\n\t\t\"boxUr\": \"╙\",\n\t\t\"boxUR\": \"╚\",\n\t\t\"boxv\": \"│\",\n\t\t\"boxV\": \"║\",\n\t\t\"boxvh\": \"┼\",\n\t\t\"boxvH\": \"╪\",\n\t\t\"boxVh\": \"╫\",\n\t\t\"boxVH\": \"╬\",\n\t\t\"boxvl\": \"┤\",\n\t\t\"boxvL\": \"╡\",\n\t\t\"boxVl\": \"╢\",\n\t\t\"boxVL\": \"╣\",\n\t\t\"boxvr\": \"├\",\n\t\t\"boxvR\": \"╞\",\n\t\t\"boxVr\": \"╟\",\n\t\t\"boxVR\": \"╠\",\n\t\t\"bprime\": \"‵\",\n\t\t\"breve\": \"˘\",\n\t\t\"Breve\": \"˘\",\n\t\t\"brvbar\": \"¦\",\n\t\t\"bscr\": \"𝒷\",\n\t\t\"Bscr\": \"ℬ\",\n\t\t\"bsemi\": \"⁏\",\n\t\t\"bsim\": \"∽\",\n\t\t\"bsime\": \"⋍\",\n\t\t\"bsolb\": \"⧅\",\n\t\t\"bsol\": \"\\\\\",\n\t\t\"bsolhsub\": \"⟈\",\n\t\t\"bull\": \"•\",\n\t\t\"bullet\": \"•\",\n\t\t\"bump\": \"≎\",\n\t\t\"bumpE\": \"⪮\",\n\t\t\"bumpe\": \"≏\",\n\t\t\"Bumpeq\": \"≎\",\n\t\t\"bumpeq\": \"≏\",\n\t\t\"Cacute\": \"Ć\",\n\t\t\"cacute\": \"ć\",\n\t\t\"capand\": \"⩄\",\n\t\t\"capbrcup\": \"⩉\",\n\t\t\"capcap\": \"⩋\",\n\t\t\"cap\": \"∩\",\n\t\t\"Cap\": \"⋒\",\n\t\t\"capcup\": \"⩇\",\n\t\t\"capdot\": \"⩀\",\n\t\t\"CapitalDifferentialD\": \"ⅅ\",\n\t\t\"caps\": \"∩︀\",\n\t\t\"caret\": \"⁁\",\n\t\t\"caron\": \"ˇ\",\n\t\t\"Cayleys\": \"ℭ\",\n\t\t\"ccaps\": \"⩍\",\n\t\t\"Ccaron\": \"Č\",\n\t\t\"ccaron\": \"č\",\n\t\t\"Ccedil\": \"Ç\",\n\t\t\"ccedil\": \"ç\",\n\t\t\"Ccirc\": \"Ĉ\",\n\t\t\"ccirc\": \"ĉ\",\n\t\t\"Cconint\": \"∰\",\n\t\t\"ccups\": \"⩌\",\n\t\t\"ccupssm\": \"⩐\",\n\t\t\"Cdot\": \"Ċ\",\n\t\t\"cdot\": \"ċ\",\n\t\t\"cedil\": \"¸\",\n\t\t\"Cedilla\": \"¸\",\n\t\t\"cemptyv\": \"⦲\",\n\t\t\"cent\": \"¢\",\n\t\t\"centerdot\": \"·\",\n\t\t\"CenterDot\": \"·\",\n\t\t\"cfr\": \"𝔠\",\n\t\t\"Cfr\": \"ℭ\",\n\t\t\"CHcy\": \"Ч\",\n\t\t\"chcy\": \"ч\",\n\t\t\"check\": \"✓\",\n\t\t\"checkmark\": \"✓\",\n\t\t\"Chi\": \"Χ\",\n\t\t\"chi\": \"χ\",\n\t\t\"circ\": \"ˆ\",\n\t\t\"circeq\": \"≗\",\n\t\t\"circlearrowleft\": \"↺\",\n\t\t\"circlearrowright\": \"↻\",\n\t\t\"circledast\": \"⊛\",\n\t\t\"circledcirc\": \"⊚\",\n\t\t\"circleddash\": \"⊝\",\n\t\t\"CircleDot\": \"⊙\",\n\t\t\"circledR\": \"®\",\n\t\t\"circledS\": \"Ⓢ\",\n\t\t\"CircleMinus\": \"⊖\",\n\t\t\"CirclePlus\": \"⊕\",\n\t\t\"CircleTimes\": \"⊗\",\n\t\t\"cir\": \"○\",\n\t\t\"cirE\": \"⧃\",\n\t\t\"cire\": \"≗\",\n\t\t\"cirfnint\": \"⨐\",\n\t\t\"cirmid\": \"⫯\",\n\t\t\"cirscir\": \"⧂\",\n\t\t\"ClockwiseContourIntegral\": \"∲\",\n\t\t\"CloseCurlyDoubleQuote\": \"”\",\n\t\t\"CloseCurlyQuote\": \"’\",\n\t\t\"clubs\": \"♣\",\n\t\t\"clubsuit\": \"♣\",\n\t\t\"colon\": \":\",\n\t\t\"Colon\": \"∷\",\n\t\t\"Colone\": \"⩴\",\n\t\t\"colone\": \"≔\",\n\t\t\"coloneq\": \"≔\",\n\t\t\"comma\": \",\",\n\t\t\"commat\": \"@\",\n\t\t\"comp\": \"∁\",\n\t\t\"compfn\": \"∘\",\n\t\t\"complement\": \"∁\",\n\t\t\"complexes\": \"ℂ\",\n\t\t\"cong\": \"≅\",\n\t\t\"congdot\": \"⩭\",\n\t\t\"Congruent\": \"≡\",\n\t\t\"conint\": \"∮\",\n\t\t\"Conint\": \"∯\",\n\t\t\"ContourIntegral\": \"∮\",\n\t\t\"copf\": \"𝕔\",\n\t\t\"Copf\": \"ℂ\",\n\t\t\"coprod\": \"∐\",\n\t\t\"Coproduct\": \"∐\",\n\t\t\"copy\": \"©\",\n\t\t\"COPY\": \"©\",\n\t\t\"copysr\": \"℗\",\n\t\t\"CounterClockwiseContourIntegral\": \"∳\",\n\t\t\"crarr\": \"↵\",\n\t\t\"cross\": \"✗\",\n\t\t\"Cross\": \"⨯\",\n\t\t\"Cscr\": \"𝒞\",\n\t\t\"cscr\": \"𝒸\",\n\t\t\"csub\": \"⫏\",\n\t\t\"csube\": \"⫑\",\n\t\t\"csup\": \"⫐\",\n\t\t\"csupe\": \"⫒\",\n\t\t\"ctdot\": \"⋯\",\n\t\t\"cudarrl\": \"⤸\",\n\t\t\"cudarrr\": \"⤵\",\n\t\t\"cuepr\": \"⋞\",\n\t\t\"cuesc\": \"⋟\",\n\t\t\"cularr\": \"↶\",\n\t\t\"cularrp\": \"⤽\",\n\t\t\"cupbrcap\": \"⩈\",\n\t\t\"cupcap\": \"⩆\",\n\t\t\"CupCap\": \"≍\",\n\t\t\"cup\": \"∪\",\n\t\t\"Cup\": \"⋓\",\n\t\t\"cupcup\": \"⩊\",\n\t\t\"cupdot\": \"⊍\",\n\t\t\"cupor\": \"⩅\",\n\t\t\"cups\": \"∪︀\",\n\t\t\"curarr\": \"↷\",\n\t\t\"curarrm\": \"⤼\",\n\t\t\"curlyeqprec\": \"⋞\",\n\t\t\"curlyeqsucc\": \"⋟\",\n\t\t\"curlyvee\": \"⋎\",\n\t\t\"curlywedge\": \"⋏\",\n\t\t\"curren\": \"¤\",\n\t\t\"curvearrowleft\": \"↶\",\n\t\t\"curvearrowright\": \"↷\",\n\t\t\"cuvee\": \"⋎\",\n\t\t\"cuwed\": \"⋏\",\n\t\t\"cwconint\": \"∲\",\n\t\t\"cwint\": \"∱\",\n\t\t\"cylcty\": \"⌭\",\n\t\t\"dagger\": \"†\",\n\t\t\"Dagger\": \"‡\",\n\t\t\"daleth\": \"ℸ\",\n\t\t\"darr\": \"↓\",\n\t\t\"Darr\": \"↡\",\n\t\t\"dArr\": \"⇓\",\n\t\t\"dash\": \"‐\",\n\t\t\"Dashv\": \"⫤\",\n\t\t\"dashv\": \"⊣\",\n\t\t\"dbkarow\": \"⤏\",\n\t\t\"dblac\": \"˝\",\n\t\t\"Dcaron\": \"Ď\",\n\t\t\"dcaron\": \"ď\",\n\t\t\"Dcy\": \"Д\",\n\t\t\"dcy\": \"д\",\n\t\t\"ddagger\": \"‡\",\n\t\t\"ddarr\": \"⇊\",\n\t\t\"DD\": \"ⅅ\",\n\t\t\"dd\": \"ⅆ\",\n\t\t\"DDotrahd\": \"⤑\",\n\t\t\"ddotseq\": \"⩷\",\n\t\t\"deg\": \"°\",\n\t\t\"Del\": \"∇\",\n\t\t\"Delta\": \"Δ\",\n\t\t\"delta\": \"δ\",\n\t\t\"demptyv\": \"⦱\",\n\t\t\"dfisht\": \"⥿\",\n\t\t\"Dfr\": \"𝔇\",\n\t\t\"dfr\": \"𝔡\",\n\t\t\"dHar\": \"⥥\",\n\t\t\"dharl\": \"⇃\",\n\t\t\"dharr\": \"⇂\",\n\t\t\"DiacriticalAcute\": \"´\",\n\t\t\"DiacriticalDot\": \"˙\",\n\t\t\"DiacriticalDoubleAcute\": \"˝\",\n\t\t\"DiacriticalGrave\": \"`\",\n\t\t\"DiacriticalTilde\": \"˜\",\n\t\t\"diam\": \"⋄\",\n\t\t\"diamond\": \"⋄\",\n\t\t\"Diamond\": \"⋄\",\n\t\t\"diamondsuit\": \"♦\",\n\t\t\"diams\": \"♦\",\n\t\t\"die\": \"¨\",\n\t\t\"DifferentialD\": \"ⅆ\",\n\t\t\"digamma\": \"ϝ\",\n\t\t\"disin\": \"⋲\",\n\t\t\"div\": \"÷\",\n\t\t\"divide\": \"÷\",\n\t\t\"divideontimes\": \"⋇\",\n\t\t\"divonx\": \"⋇\",\n\t\t\"DJcy\": \"Ђ\",\n\t\t\"djcy\": \"ђ\",\n\t\t\"dlcorn\": \"⌞\",\n\t\t\"dlcrop\": \"⌍\",\n\t\t\"dollar\": \"$\",\n\t\t\"Dopf\": \"𝔻\",\n\t\t\"dopf\": \"𝕕\",\n\t\t\"Dot\": \"¨\",\n\t\t\"dot\": \"˙\",\n\t\t\"DotDot\": \"⃜\",\n\t\t\"doteq\": \"≐\",\n\t\t\"doteqdot\": \"≑\",\n\t\t\"DotEqual\": \"≐\",\n\t\t\"dotminus\": \"∸\",\n\t\t\"dotplus\": \"∔\",\n\t\t\"dotsquare\": \"⊡\",\n\t\t\"doublebarwedge\": \"⌆\",\n\t\t\"DoubleContourIntegral\": \"∯\",\n\t\t\"DoubleDot\": \"¨\",\n\t\t\"DoubleDownArrow\": \"⇓\",\n\t\t\"DoubleLeftArrow\": \"⇐\",\n\t\t\"DoubleLeftRightArrow\": \"⇔\",\n\t\t\"DoubleLeftTee\": \"⫤\",\n\t\t\"DoubleLongLeftArrow\": \"⟸\",\n\t\t\"DoubleLongLeftRightArrow\": \"⟺\",\n\t\t\"DoubleLongRightArrow\": \"⟹\",\n\t\t\"DoubleRightArrow\": \"⇒\",\n\t\t\"DoubleRightTee\": \"⊨\",\n\t\t\"DoubleUpArrow\": \"⇑\",\n\t\t\"DoubleUpDownArrow\": \"⇕\",\n\t\t\"DoubleVerticalBar\": \"∥\",\n\t\t\"DownArrowBar\": \"⤓\",\n\t\t\"downarrow\": \"↓\",\n\t\t\"DownArrow\": \"↓\",\n\t\t\"Downarrow\": \"⇓\",\n\t\t\"DownArrowUpArrow\": \"⇵\",\n\t\t\"DownBreve\": \"̑\",\n\t\t\"downdownarrows\": \"⇊\",\n\t\t\"downharpoonleft\": \"⇃\",\n\t\t\"downharpoonright\": \"⇂\",\n\t\t\"DownLeftRightVector\": \"⥐\",\n\t\t\"DownLeftTeeVector\": \"⥞\",\n\t\t\"DownLeftVectorBar\": \"⥖\",\n\t\t\"DownLeftVector\": \"↽\",\n\t\t\"DownRightTeeVector\": \"⥟\",\n\t\t\"DownRightVectorBar\": \"⥗\",\n\t\t\"DownRightVector\": \"⇁\",\n\t\t\"DownTeeArrow\": \"↧\",\n\t\t\"DownTee\": \"⊤\",\n\t\t\"drbkarow\": \"⤐\",\n\t\t\"drcorn\": \"⌟\",\n\t\t\"drcrop\": \"⌌\",\n\t\t\"Dscr\": \"𝒟\",\n\t\t\"dscr\": \"𝒹\",\n\t\t\"DScy\": \"Ѕ\",\n\t\t\"dscy\": \"ѕ\",\n\t\t\"dsol\": \"⧶\",\n\t\t\"Dstrok\": \"Đ\",\n\t\t\"dstrok\": \"đ\",\n\t\t\"dtdot\": \"⋱\",\n\t\t\"dtri\": \"▿\",\n\t\t\"dtrif\": \"▾\",\n\t\t\"duarr\": \"⇵\",\n\t\t\"duhar\": \"⥯\",\n\t\t\"dwangle\": \"⦦\",\n\t\t\"DZcy\": \"Џ\",\n\t\t\"dzcy\": \"џ\",\n\t\t\"dzigrarr\": \"⟿\",\n\t\t\"Eacute\": \"É\",\n\t\t\"eacute\": \"é\",\n\t\t\"easter\": \"⩮\",\n\t\t\"Ecaron\": \"Ě\",\n\t\t\"ecaron\": \"ě\",\n\t\t\"Ecirc\": \"Ê\",\n\t\t\"ecirc\": \"ê\",\n\t\t\"ecir\": \"≖\",\n\t\t\"ecolon\": \"≕\",\n\t\t\"Ecy\": \"Э\",\n\t\t\"ecy\": \"э\",\n\t\t\"eDDot\": \"⩷\",\n\t\t\"Edot\": \"Ė\",\n\t\t\"edot\": \"ė\",\n\t\t\"eDot\": \"≑\",\n\t\t\"ee\": \"ⅇ\",\n\t\t\"efDot\": \"≒\",\n\t\t\"Efr\": \"𝔈\",\n\t\t\"efr\": \"𝔢\",\n\t\t\"eg\": \"⪚\",\n\t\t\"Egrave\": \"È\",\n\t\t\"egrave\": \"è\",\n\t\t\"egs\": \"⪖\",\n\t\t\"egsdot\": \"⪘\",\n\t\t\"el\": \"⪙\",\n\t\t\"Element\": \"∈\",\n\t\t\"elinters\": \"⏧\",\n\t\t\"ell\": \"ℓ\",\n\t\t\"els\": \"⪕\",\n\t\t\"elsdot\": \"⪗\",\n\t\t\"Emacr\": \"Ē\",\n\t\t\"emacr\": \"ē\",\n\t\t\"empty\": \"∅\",\n\t\t\"emptyset\": \"∅\",\n\t\t\"EmptySmallSquare\": \"◻\",\n\t\t\"emptyv\": \"∅\",\n\t\t\"EmptyVerySmallSquare\": \"▫\",\n\t\t\"emsp13\": \" \",\n\t\t\"emsp14\": \" \",\n\t\t\"emsp\": \" \",\n\t\t\"ENG\": \"Ŋ\",\n\t\t\"eng\": \"ŋ\",\n\t\t\"ensp\": \" \",\n\t\t\"Eogon\": \"Ę\",\n\t\t\"eogon\": \"ę\",\n\t\t\"Eopf\": \"𝔼\",\n\t\t\"eopf\": \"𝕖\",\n\t\t\"epar\": \"⋕\",\n\t\t\"eparsl\": \"⧣\",\n\t\t\"eplus\": \"⩱\",\n\t\t\"epsi\": \"ε\",\n\t\t\"Epsilon\": \"Ε\",\n\t\t\"epsilon\": \"ε\",\n\t\t\"epsiv\": \"ϵ\",\n\t\t\"eqcirc\": \"≖\",\n\t\t\"eqcolon\": \"≕\",\n\t\t\"eqsim\": \"≂\",\n\t\t\"eqslantgtr\": \"⪖\",\n\t\t\"eqslantless\": \"⪕\",\n\t\t\"Equal\": \"⩵\",\n\t\t\"equals\": \"=\",\n\t\t\"EqualTilde\": \"≂\",\n\t\t\"equest\": \"≟\",\n\t\t\"Equilibrium\": \"⇌\",\n\t\t\"equiv\": \"≡\",\n\t\t\"equivDD\": \"⩸\",\n\t\t\"eqvparsl\": \"⧥\",\n\t\t\"erarr\": \"⥱\",\n\t\t\"erDot\": \"≓\",\n\t\t\"escr\": \"ℯ\",\n\t\t\"Escr\": \"ℰ\",\n\t\t\"esdot\": \"≐\",\n\t\t\"Esim\": \"⩳\",\n\t\t\"esim\": \"≂\",\n\t\t\"Eta\": \"Η\",\n\t\t\"eta\": \"η\",\n\t\t\"ETH\": \"Ð\",\n\t\t\"eth\": \"ð\",\n\t\t\"Euml\": \"Ë\",\n\t\t\"euml\": \"ë\",\n\t\t\"euro\": \"€\",\n\t\t\"excl\": \"!\",\n\t\t\"exist\": \"∃\",\n\t\t\"Exists\": \"∃\",\n\t\t\"expectation\": \"ℰ\",\n\t\t\"exponentiale\": \"ⅇ\",\n\t\t\"ExponentialE\": \"ⅇ\",\n\t\t\"fallingdotseq\": \"≒\",\n\t\t\"Fcy\": \"Ф\",\n\t\t\"fcy\": \"ф\",\n\t\t\"female\": \"♀\",\n\t\t\"ffilig\": \"ﬃ\",\n\t\t\"fflig\": \"ﬀ\",\n\t\t\"ffllig\": \"ﬄ\",\n\t\t\"Ffr\": \"𝔉\",\n\t\t\"ffr\": \"𝔣\",\n\t\t\"filig\": \"ﬁ\",\n\t\t\"FilledSmallSquare\": \"◼\",\n\t\t\"FilledVerySmallSquare\": \"▪\",\n\t\t\"fjlig\": \"fj\",\n\t\t\"flat\": \"♭\",\n\t\t\"fllig\": \"ﬂ\",\n\t\t\"fltns\": \"▱\",\n\t\t\"fnof\": \"ƒ\",\n\t\t\"Fopf\": \"𝔽\",\n\t\t\"fopf\": \"𝕗\",\n\t\t\"forall\": \"∀\",\n\t\t\"ForAll\": \"∀\",\n\t\t\"fork\": \"⋔\",\n\t\t\"forkv\": \"⫙\",\n\t\t\"Fouriertrf\": \"ℱ\",\n\t\t\"fpartint\": \"⨍\",\n\t\t\"frac12\": \"½\",\n\t\t\"frac13\": \"⅓\",\n\t\t\"frac14\": \"¼\",\n\t\t\"frac15\": \"⅕\",\n\t\t\"frac16\": \"⅙\",\n\t\t\"frac18\": \"⅛\",\n\t\t\"frac23\": \"⅔\",\n\t\t\"frac25\": \"⅖\",\n\t\t\"frac34\": \"¾\",\n\t\t\"frac35\": \"⅗\",\n\t\t\"frac38\": \"⅜\",\n\t\t\"frac45\": \"⅘\",\n\t\t\"frac56\": \"⅚\",\n\t\t\"frac58\": \"⅝\",\n\t\t\"frac78\": \"⅞\",\n\t\t\"frasl\": \"⁄\",\n\t\t\"frown\": \"⌢\",\n\t\t\"fscr\": \"𝒻\",\n\t\t\"Fscr\": \"ℱ\",\n\t\t\"gacute\": \"ǵ\",\n\t\t\"Gamma\": \"Γ\",\n\t\t\"gamma\": \"γ\",\n\t\t\"Gammad\": \"Ϝ\",\n\t\t\"gammad\": \"ϝ\",\n\t\t\"gap\": \"⪆\",\n\t\t\"Gbreve\": \"Ğ\",\n\t\t\"gbreve\": \"ğ\",\n\t\t\"Gcedil\": \"Ģ\",\n\t\t\"Gcirc\": \"Ĝ\",\n\t\t\"gcirc\": \"ĝ\",\n\t\t\"Gcy\": \"Г\",\n\t\t\"gcy\": \"г\",\n\t\t\"Gdot\": \"Ġ\",\n\t\t\"gdot\": \"ġ\",\n\t\t\"ge\": \"≥\",\n\t\t\"gE\": \"≧\",\n\t\t\"gEl\": \"⪌\",\n\t\t\"gel\": \"⋛\",\n\t\t\"geq\": \"≥\",\n\t\t\"geqq\": \"≧\",\n\t\t\"geqslant\": \"⩾\",\n\t\t\"gescc\": \"⪩\",\n\t\t\"ges\": \"⩾\",\n\t\t\"gesdot\": \"⪀\",\n\t\t\"gesdoto\": \"⪂\",\n\t\t\"gesdotol\": \"⪄\",\n\t\t\"gesl\": \"⋛︀\",\n\t\t\"gesles\": \"⪔\",\n\t\t\"Gfr\": \"𝔊\",\n\t\t\"gfr\": \"𝔤\",\n\t\t\"gg\": \"≫\",\n\t\t\"Gg\": \"⋙\",\n\t\t\"ggg\": \"⋙\",\n\t\t\"gimel\": \"ℷ\",\n\t\t\"GJcy\": \"Ѓ\",\n\t\t\"gjcy\": \"ѓ\",\n\t\t\"gla\": \"⪥\",\n\t\t\"gl\": \"≷\",\n\t\t\"glE\": \"⪒\",\n\t\t\"glj\": \"⪤\",\n\t\t\"gnap\": \"⪊\",\n\t\t\"gnapprox\": \"⪊\",\n\t\t\"gne\": \"⪈\",\n\t\t\"gnE\": \"≩\",\n\t\t\"gneq\": \"⪈\",\n\t\t\"gneqq\": \"≩\",\n\t\t\"gnsim\": \"⋧\",\n\t\t\"Gopf\": \"𝔾\",\n\t\t\"gopf\": \"𝕘\",\n\t\t\"grave\": \"`\",\n\t\t\"GreaterEqual\": \"≥\",\n\t\t\"GreaterEqualLess\": \"⋛\",\n\t\t\"GreaterFullEqual\": \"≧\",\n\t\t\"GreaterGreater\": \"⪢\",\n\t\t\"GreaterLess\": \"≷\",\n\t\t\"GreaterSlantEqual\": \"⩾\",\n\t\t\"GreaterTilde\": \"≳\",\n\t\t\"Gscr\": \"𝒢\",\n\t\t\"gscr\": \"ℊ\",\n\t\t\"gsim\": \"≳\",\n\t\t\"gsime\": \"⪎\",\n\t\t\"gsiml\": \"⪐\",\n\t\t\"gtcc\": \"⪧\",\n\t\t\"gtcir\": \"⩺\",\n\t\t\"gt\": \">\",\n\t\t\"GT\": \">\",\n\t\t\"Gt\": \"≫\",\n\t\t\"gtdot\": \"⋗\",\n\t\t\"gtlPar\": \"⦕\",\n\t\t\"gtquest\": \"⩼\",\n\t\t\"gtrapprox\": \"⪆\",\n\t\t\"gtrarr\": \"⥸\",\n\t\t\"gtrdot\": \"⋗\",\n\t\t\"gtreqless\": \"⋛\",\n\t\t\"gtreqqless\": \"⪌\",\n\t\t\"gtrless\": \"≷\",\n\t\t\"gtrsim\": \"≳\",\n\t\t\"gvertneqq\": \"≩︀\",\n\t\t\"gvnE\": \"≩︀\",\n\t\t\"Hacek\": \"ˇ\",\n\t\t\"hairsp\": \" \",\n\t\t\"half\": \"½\",\n\t\t\"hamilt\": \"ℋ\",\n\t\t\"HARDcy\": \"Ъ\",\n\t\t\"hardcy\": \"ъ\",\n\t\t\"harrcir\": \"⥈\",\n\t\t\"harr\": \"↔\",\n\t\t\"hArr\": \"⇔\",\n\t\t\"harrw\": \"↭\",\n\t\t\"Hat\": \"^\",\n\t\t\"hbar\": \"ℏ\",\n\t\t\"Hcirc\": \"Ĥ\",\n\t\t\"hcirc\": \"ĥ\",\n\t\t\"hearts\": \"♥\",\n\t\t\"heartsuit\": \"♥\",\n\t\t\"hellip\": \"…\",\n\t\t\"hercon\": \"⊹\",\n\t\t\"hfr\": \"𝔥\",\n\t\t\"Hfr\": \"ℌ\",\n\t\t\"HilbertSpace\": \"ℋ\",\n\t\t\"hksearow\": \"⤥\",\n\t\t\"hkswarow\": \"⤦\",\n\t\t\"hoarr\": \"⇿\",\n\t\t\"homtht\": \"∻\",\n\t\t\"hookleftarrow\": \"↩\",\n\t\t\"hookrightarrow\": \"↪\",\n\t\t\"hopf\": \"𝕙\",\n\t\t\"Hopf\": \"ℍ\",\n\t\t\"horbar\": \"―\",\n\t\t\"HorizontalLine\": \"─\",\n\t\t\"hscr\": \"𝒽\",\n\t\t\"Hscr\": \"ℋ\",\n\t\t\"hslash\": \"ℏ\",\n\t\t\"Hstrok\": \"Ħ\",\n\t\t\"hstrok\": \"ħ\",\n\t\t\"HumpDownHump\": \"≎\",\n\t\t\"HumpEqual\": \"≏\",\n\t\t\"hybull\": \"⁃\",\n\t\t\"hyphen\": \"‐\",\n\t\t\"Iacute\": \"Í\",\n\t\t\"iacute\": \"í\",\n\t\t\"ic\": \"⁣\",\n\t\t\"Icirc\": \"Î\",\n\t\t\"icirc\": \"î\",\n\t\t\"Icy\": \"И\",\n\t\t\"icy\": \"и\",\n\t\t\"Idot\": \"İ\",\n\t\t\"IEcy\": \"Е\",\n\t\t\"iecy\": \"е\",\n\t\t\"iexcl\": \"¡\",\n\t\t\"iff\": \"⇔\",\n\t\t\"ifr\": \"𝔦\",\n\t\t\"Ifr\": \"ℑ\",\n\t\t\"Igrave\": \"Ì\",\n\t\t\"igrave\": \"ì\",\n\t\t\"ii\": \"ⅈ\",\n\t\t\"iiiint\": \"⨌\",\n\t\t\"iiint\": \"∭\",\n\t\t\"iinfin\": \"⧜\",\n\t\t\"iiota\": \"℩\",\n\t\t\"IJlig\": \"Ĳ\",\n\t\t\"ijlig\": \"ĳ\",\n\t\t\"Imacr\": \"Ī\",\n\t\t\"imacr\": \"ī\",\n\t\t\"image\": \"ℑ\",\n\t\t\"ImaginaryI\": \"ⅈ\",\n\t\t\"imagline\": \"ℐ\",\n\t\t\"imagpart\": \"ℑ\",\n\t\t\"imath\": \"ı\",\n\t\t\"Im\": \"ℑ\",\n\t\t\"imof\": \"⊷\",\n\t\t\"imped\": \"Ƶ\",\n\t\t\"Implies\": \"⇒\",\n\t\t\"incare\": \"℅\",\n\t\t\"in\": \"∈\",\n\t\t\"infin\": \"∞\",\n\t\t\"infintie\": \"⧝\",\n\t\t\"inodot\": \"ı\",\n\t\t\"intcal\": \"⊺\",\n\t\t\"int\": \"∫\",\n\t\t\"Int\": \"∬\",\n\t\t\"integers\": \"ℤ\",\n\t\t\"Integral\": \"∫\",\n\t\t\"intercal\": \"⊺\",\n\t\t\"Intersection\": \"⋂\",\n\t\t\"intlarhk\": \"⨗\",\n\t\t\"intprod\": \"⨼\",\n\t\t\"InvisibleComma\": \"⁣\",\n\t\t\"InvisibleTimes\": \"⁢\",\n\t\t\"IOcy\": \"Ё\",\n\t\t\"iocy\": \"ё\",\n\t\t\"Iogon\": \"Į\",\n\t\t\"iogon\": \"į\",\n\t\t\"Iopf\": \"𝕀\",\n\t\t\"iopf\": \"𝕚\",\n\t\t\"Iota\": \"Ι\",\n\t\t\"iota\": \"ι\",\n\t\t\"iprod\": \"⨼\",\n\t\t\"iquest\": \"¿\",\n\t\t\"iscr\": \"𝒾\",\n\t\t\"Iscr\": \"ℐ\",\n\t\t\"isin\": \"∈\",\n\t\t\"isindot\": \"⋵\",\n\t\t\"isinE\": \"⋹\",\n\t\t\"isins\": \"⋴\",\n\t\t\"isinsv\": \"⋳\",\n\t\t\"isinv\": \"∈\",\n\t\t\"it\": \"⁢\",\n\t\t\"Itilde\": \"Ĩ\",\n\t\t\"itilde\": \"ĩ\",\n\t\t\"Iukcy\": \"І\",\n\t\t\"iukcy\": \"і\",\n\t\t\"Iuml\": \"Ï\",\n\t\t\"iuml\": \"ï\",\n\t\t\"Jcirc\": \"Ĵ\",\n\t\t\"jcirc\": \"ĵ\",\n\t\t\"Jcy\": \"Й\",\n\t\t\"jcy\": \"й\",\n\t\t\"Jfr\": \"𝔍\",\n\t\t\"jfr\": \"𝔧\",\n\t\t\"jmath\": \"ȷ\",\n\t\t\"Jopf\": \"𝕁\",\n\t\t\"jopf\": \"𝕛\",\n\t\t\"Jscr\": \"𝒥\",\n\t\t\"jscr\": \"𝒿\",\n\t\t\"Jsercy\": \"Ј\",\n\t\t\"jsercy\": \"ј\",\n\t\t\"Jukcy\": \"Є\",\n\t\t\"jukcy\": \"є\",\n\t\t\"Kappa\": \"Κ\",\n\t\t\"kappa\": \"κ\",\n\t\t\"kappav\": \"ϰ\",\n\t\t\"Kcedil\": \"Ķ\",\n\t\t\"kcedil\": \"ķ\",\n\t\t\"Kcy\": \"К\",\n\t\t\"kcy\": \"к\",\n\t\t\"Kfr\": \"𝔎\",\n\t\t\"kfr\": \"𝔨\",\n\t\t\"kgreen\": \"ĸ\",\n\t\t\"KHcy\": \"Х\",\n\t\t\"khcy\": \"х\",\n\t\t\"KJcy\": \"Ќ\",\n\t\t\"kjcy\": \"ќ\",\n\t\t\"Kopf\": \"𝕂\",\n\t\t\"kopf\": \"𝕜\",\n\t\t\"Kscr\": \"𝒦\",\n\t\t\"kscr\": \"𝓀\",\n\t\t\"lAarr\": \"⇚\",\n\t\t\"Lacute\": \"Ĺ\",\n\t\t\"lacute\": \"ĺ\",\n\t\t\"laemptyv\": \"⦴\",\n\t\t\"lagran\": \"ℒ\",\n\t\t\"Lambda\": \"Λ\",\n\t\t\"lambda\": \"λ\",\n\t\t\"lang\": \"⟨\",\n\t\t\"Lang\": \"⟪\",\n\t\t\"langd\": \"⦑\",\n\t\t\"langle\": \"⟨\",\n\t\t\"lap\": \"⪅\",\n\t\t\"Laplacetrf\": \"ℒ\",\n\t\t\"laquo\": \"«\",\n\t\t\"larrb\": \"⇤\",\n\t\t\"larrbfs\": \"⤟\",\n\t\t\"larr\": \"←\",\n\t\t\"Larr\": \"↞\",\n\t\t\"lArr\": \"⇐\",\n\t\t\"larrfs\": \"⤝\",\n\t\t\"larrhk\": \"↩\",\n\t\t\"larrlp\": \"↫\",\n\t\t\"larrpl\": \"⤹\",\n\t\t\"larrsim\": \"⥳\",\n\t\t\"larrtl\": \"↢\",\n\t\t\"latail\": \"⤙\",\n\t\t\"lAtail\": \"⤛\",\n\t\t\"lat\": \"⪫\",\n\t\t\"late\": \"⪭\",\n\t\t\"lates\": \"⪭︀\",\n\t\t\"lbarr\": \"⤌\",\n\t\t\"lBarr\": \"⤎\",\n\t\t\"lbbrk\": \"❲\",\n\t\t\"lbrace\": \"{\",\n\t\t\"lbrack\": \"[\",\n\t\t\"lbrke\": \"⦋\",\n\t\t\"lbrksld\": \"⦏\",\n\t\t\"lbrkslu\": \"⦍\",\n\t\t\"Lcaron\": \"Ľ\",\n\t\t\"lcaron\": \"ľ\",\n\t\t\"Lcedil\": \"Ļ\",\n\t\t\"lcedil\": \"ļ\",\n\t\t\"lceil\": \"⌈\",\n\t\t\"lcub\": \"{\",\n\t\t\"Lcy\": \"Л\",\n\t\t\"lcy\": \"л\",\n\t\t\"ldca\": \"⤶\",\n\t\t\"ldquo\": \"“\",\n\t\t\"ldquor\": \"„\",\n\t\t\"ldrdhar\": \"⥧\",\n\t\t\"ldrushar\": \"⥋\",\n\t\t\"ldsh\": \"↲\",\n\t\t\"le\": \"≤\",\n\t\t\"lE\": \"≦\",\n\t\t\"LeftAngleBracket\": \"⟨\",\n\t\t\"LeftArrowBar\": \"⇤\",\n\t\t\"leftarrow\": \"←\",\n\t\t\"LeftArrow\": \"←\",\n\t\t\"Leftarrow\": \"⇐\",\n\t\t\"LeftArrowRightArrow\": \"⇆\",\n\t\t\"leftarrowtail\": \"↢\",\n\t\t\"LeftCeiling\": \"⌈\",\n\t\t\"LeftDoubleBracket\": \"⟦\",\n\t\t\"LeftDownTeeVector\": \"⥡\",\n\t\t\"LeftDownVectorBar\": \"⥙\",\n\t\t\"LeftDownVector\": \"⇃\",\n\t\t\"LeftFloor\": \"⌊\",\n\t\t\"leftharpoondown\": \"↽\",\n\t\t\"leftharpoonup\": \"↼\",\n\t\t\"leftleftarrows\": \"⇇\",\n\t\t\"leftrightarrow\": \"↔\",\n\t\t\"LeftRightArrow\": \"↔\",\n\t\t\"Leftrightarrow\": \"⇔\",\n\t\t\"leftrightarrows\": \"⇆\",\n\t\t\"leftrightharpoons\": \"⇋\",\n\t\t\"leftrightsquigarrow\": \"↭\",\n\t\t\"LeftRightVector\": \"⥎\",\n\t\t\"LeftTeeArrow\": \"↤\",\n\t\t\"LeftTee\": \"⊣\",\n\t\t\"LeftTeeVector\": \"⥚\",\n\t\t\"leftthreetimes\": \"⋋\",\n\t\t\"LeftTriangleBar\": \"⧏\",\n\t\t\"LeftTriangle\": \"⊲\",\n\t\t\"LeftTriangleEqual\": \"⊴\",\n\t\t\"LeftUpDownVector\": \"⥑\",\n\t\t\"LeftUpTeeVector\": \"⥠\",\n\t\t\"LeftUpVectorBar\": \"⥘\",\n\t\t\"LeftUpVector\": \"↿\",\n\t\t\"LeftVectorBar\": \"⥒\",\n\t\t\"LeftVector\": \"↼\",\n\t\t\"lEg\": \"⪋\",\n\t\t\"leg\": \"⋚\",\n\t\t\"leq\": \"≤\",\n\t\t\"leqq\": \"≦\",\n\t\t\"leqslant\": \"⩽\",\n\t\t\"lescc\": \"⪨\",\n\t\t\"les\": \"⩽\",\n\t\t\"lesdot\": \"⩿\",\n\t\t\"lesdoto\": \"⪁\",\n\t\t\"lesdotor\": \"⪃\",\n\t\t\"lesg\": \"⋚︀\",\n\t\t\"lesges\": \"⪓\",\n\t\t\"lessapprox\": \"⪅\",\n\t\t\"lessdot\": \"⋖\",\n\t\t\"lesseqgtr\": \"⋚\",\n\t\t\"lesseqqgtr\": \"⪋\",\n\t\t\"LessEqualGreater\": \"⋚\",\n\t\t\"LessFullEqual\": \"≦\",\n\t\t\"LessGreater\": \"≶\",\n\t\t\"lessgtr\": \"≶\",\n\t\t\"LessLess\": \"⪡\",\n\t\t\"lesssim\": \"≲\",\n\t\t\"LessSlantEqual\": \"⩽\",\n\t\t\"LessTilde\": \"≲\",\n\t\t\"lfisht\": \"⥼\",\n\t\t\"lfloor\": \"⌊\",\n\t\t\"Lfr\": \"𝔏\",\n\t\t\"lfr\": \"𝔩\",\n\t\t\"lg\": \"≶\",\n\t\t\"lgE\": \"⪑\",\n\t\t\"lHar\": \"⥢\",\n\t\t\"lhard\": \"↽\",\n\t\t\"lharu\": \"↼\",\n\t\t\"lharul\": \"⥪\",\n\t\t\"lhblk\": \"▄\",\n\t\t\"LJcy\": \"Љ\",\n\t\t\"ljcy\": \"љ\",\n\t\t\"llarr\": \"⇇\",\n\t\t\"ll\": \"≪\",\n\t\t\"Ll\": \"⋘\",\n\t\t\"llcorner\": \"⌞\",\n\t\t\"Lleftarrow\": \"⇚\",\n\t\t\"llhard\": \"⥫\",\n\t\t\"lltri\": \"◺\",\n\t\t\"Lmidot\": \"Ŀ\",\n\t\t\"lmidot\": \"ŀ\",\n\t\t\"lmoustache\": \"⎰\",\n\t\t\"lmoust\": \"⎰\",\n\t\t\"lnap\": \"⪉\",\n\t\t\"lnapprox\": \"⪉\",\n\t\t\"lne\": \"⪇\",\n\t\t\"lnE\": \"≨\",\n\t\t\"lneq\": \"⪇\",\n\t\t\"lneqq\": \"≨\",\n\t\t\"lnsim\": \"⋦\",\n\t\t\"loang\": \"⟬\",\n\t\t\"loarr\": \"⇽\",\n\t\t\"lobrk\": \"⟦\",\n\t\t\"longleftarrow\": \"⟵\",\n\t\t\"LongLeftArrow\": \"⟵\",\n\t\t\"Longleftarrow\": \"⟸\",\n\t\t\"longleftrightarrow\": \"⟷\",\n\t\t\"LongLeftRightArrow\": \"⟷\",\n\t\t\"Longleftrightarrow\": \"⟺\",\n\t\t\"longmapsto\": \"⟼\",\n\t\t\"longrightarrow\": \"⟶\",\n\t\t\"LongRightArrow\": \"⟶\",\n\t\t\"Longrightarrow\": \"⟹\",\n\t\t\"looparrowleft\": \"↫\",\n\t\t\"looparrowright\": \"↬\",\n\t\t\"lopar\": \"⦅\",\n\t\t\"Lopf\": \"𝕃\",\n\t\t\"lopf\": \"𝕝\",\n\t\t\"loplus\": \"⨭\",\n\t\t\"lotimes\": \"⨴\",\n\t\t\"lowast\": \"∗\",\n\t\t\"lowbar\": \"_\",\n\t\t\"LowerLeftArrow\": \"↙\",\n\t\t\"LowerRightArrow\": \"↘\",\n\t\t\"loz\": \"◊\",\n\t\t\"lozenge\": \"◊\",\n\t\t\"lozf\": \"⧫\",\n\t\t\"lpar\": \"(\",\n\t\t\"lparlt\": \"⦓\",\n\t\t\"lrarr\": \"⇆\",\n\t\t\"lrcorner\": \"⌟\",\n\t\t\"lrhar\": \"⇋\",\n\t\t\"lrhard\": \"⥭\",\n\t\t\"lrm\": \"‎\",\n\t\t\"lrtri\": \"⊿\",\n\t\t\"lsaquo\": \"‹\",\n\t\t\"lscr\": \"𝓁\",\n\t\t\"Lscr\": \"ℒ\",\n\t\t\"lsh\": \"↰\",\n\t\t\"Lsh\": \"↰\",\n\t\t\"lsim\": \"≲\",\n\t\t\"lsime\": \"⪍\",\n\t\t\"lsimg\": \"⪏\",\n\t\t\"lsqb\": \"[\",\n\t\t\"lsquo\": \"‘\",\n\t\t\"lsquor\": \"‚\",\n\t\t\"Lstrok\": \"Ł\",\n\t\t\"lstrok\": \"ł\",\n\t\t\"ltcc\": \"⪦\",\n\t\t\"ltcir\": \"⩹\",\n\t\t\"lt\": \"<\",\n\t\t\"LT\": \"<\",\n\t\t\"Lt\": \"≪\",\n\t\t\"ltdot\": \"⋖\",\n\t\t\"lthree\": \"⋋\",\n\t\t\"ltimes\": \"⋉\",\n\t\t\"ltlarr\": \"⥶\",\n\t\t\"ltquest\": \"⩻\",\n\t\t\"ltri\": \"◃\",\n\t\t\"ltrie\": \"⊴\",\n\t\t\"ltrif\": \"◂\",\n\t\t\"ltrPar\": \"⦖\",\n\t\t\"lurdshar\": \"⥊\",\n\t\t\"luruhar\": \"⥦\",\n\t\t\"lvertneqq\": \"≨︀\",\n\t\t\"lvnE\": \"≨︀\",\n\t\t\"macr\": \"¯\",\n\t\t\"male\": \"♂\",\n\t\t\"malt\": \"✠\",\n\t\t\"maltese\": \"✠\",\n\t\t\"Map\": \"⤅\",\n\t\t\"map\": \"↦\",\n\t\t\"mapsto\": \"↦\",\n\t\t\"mapstodown\": \"↧\",\n\t\t\"mapstoleft\": \"↤\",\n\t\t\"mapstoup\": \"↥\",\n\t\t\"marker\": \"▮\",\n\t\t\"mcomma\": \"⨩\",\n\t\t\"Mcy\": \"М\",\n\t\t\"mcy\": \"м\",\n\t\t\"mdash\": \"—\",\n\t\t\"mDDot\": \"∺\",\n\t\t\"measuredangle\": \"∡\",\n\t\t\"MediumSpace\": \" \",\n\t\t\"Mellintrf\": \"ℳ\",\n\t\t\"Mfr\": \"𝔐\",\n\t\t\"mfr\": \"𝔪\",\n\t\t\"mho\": \"℧\",\n\t\t\"micro\": \"µ\",\n\t\t\"midast\": \"*\",\n\t\t\"midcir\": \"⫰\",\n\t\t\"mid\": \"∣\",\n\t\t\"middot\": \"·\",\n\t\t\"minusb\": \"⊟\",\n\t\t\"minus\": \"−\",\n\t\t\"minusd\": \"∸\",\n\t\t\"minusdu\": \"⨪\",\n\t\t\"MinusPlus\": \"∓\",\n\t\t\"mlcp\": \"⫛\",\n\t\t\"mldr\": \"…\",\n\t\t\"mnplus\": \"∓\",\n\t\t\"models\": \"⊧\",\n\t\t\"Mopf\": \"𝕄\",\n\t\t\"mopf\": \"𝕞\",\n\t\t\"mp\": \"∓\",\n\t\t\"mscr\": \"𝓂\",\n\t\t\"Mscr\": \"ℳ\",\n\t\t\"mstpos\": \"∾\",\n\t\t\"Mu\": \"Μ\",\n\t\t\"mu\": \"μ\",\n\t\t\"multimap\": \"⊸\",\n\t\t\"mumap\": \"⊸\",\n\t\t\"nabla\": \"∇\",\n\t\t\"Nacute\": \"Ń\",\n\t\t\"nacute\": \"ń\",\n\t\t\"nang\": \"∠⃒\",\n\t\t\"nap\": \"≉\",\n\t\t\"napE\": \"⩰̸\",\n\t\t\"napid\": \"≋̸\",\n\t\t\"napos\": \"ŉ\",\n\t\t\"napprox\": \"≉\",\n\t\t\"natural\": \"♮\",\n\t\t\"naturals\": \"ℕ\",\n\t\t\"natur\": \"♮\",\n\t\t\"nbsp\": \" \",\n\t\t\"nbump\": \"≎̸\",\n\t\t\"nbumpe\": \"≏̸\",\n\t\t\"ncap\": \"⩃\",\n\t\t\"Ncaron\": \"Ň\",\n\t\t\"ncaron\": \"ň\",\n\t\t\"Ncedil\": \"Ņ\",\n\t\t\"ncedil\": \"ņ\",\n\t\t\"ncong\": \"≇\",\n\t\t\"ncongdot\": \"⩭̸\",\n\t\t\"ncup\": \"⩂\",\n\t\t\"Ncy\": \"Н\",\n\t\t\"ncy\": \"н\",\n\t\t\"ndash\": \"–\",\n\t\t\"nearhk\": \"⤤\",\n\t\t\"nearr\": \"↗\",\n\t\t\"neArr\": \"⇗\",\n\t\t\"nearrow\": \"↗\",\n\t\t\"ne\": \"≠\",\n\t\t\"nedot\": \"≐̸\",\n\t\t\"NegativeMediumSpace\": \"​\",\n\t\t\"NegativeThickSpace\": \"​\",\n\t\t\"NegativeThinSpace\": \"​\",\n\t\t\"NegativeVeryThinSpace\": \"​\",\n\t\t\"nequiv\": \"≢\",\n\t\t\"nesear\": \"⤨\",\n\t\t\"nesim\": \"≂̸\",\n\t\t\"NestedGreaterGreater\": \"≫\",\n\t\t\"NestedLessLess\": \"≪\",\n\t\t\"NewLine\": \"\\n\",\n\t\t\"nexist\": \"∄\",\n\t\t\"nexists\": \"∄\",\n\t\t\"Nfr\": \"𝔑\",\n\t\t\"nfr\": \"𝔫\",\n\t\t\"ngE\": \"≧̸\",\n\t\t\"nge\": \"≱\",\n\t\t\"ngeq\": \"≱\",\n\t\t\"ngeqq\": \"≧̸\",\n\t\t\"ngeqslant\": \"⩾̸\",\n\t\t\"nges\": \"⩾̸\",\n\t\t\"nGg\": \"⋙̸\",\n\t\t\"ngsim\": \"≵\",\n\t\t\"nGt\": \"≫⃒\",\n\t\t\"ngt\": \"≯\",\n\t\t\"ngtr\": \"≯\",\n\t\t\"nGtv\": \"≫̸\",\n\t\t\"nharr\": \"↮\",\n\t\t\"nhArr\": \"⇎\",\n\t\t\"nhpar\": \"⫲\",\n\t\t\"ni\": \"∋\",\n\t\t\"nis\": \"⋼\",\n\t\t\"nisd\": \"⋺\",\n\t\t\"niv\": \"∋\",\n\t\t\"NJcy\": \"Њ\",\n\t\t\"njcy\": \"њ\",\n\t\t\"nlarr\": \"↚\",\n\t\t\"nlArr\": \"⇍\",\n\t\t\"nldr\": \"‥\",\n\t\t\"nlE\": \"≦̸\",\n\t\t\"nle\": \"≰\",\n\t\t\"nleftarrow\": \"↚\",\n\t\t\"nLeftarrow\": \"⇍\",\n\t\t\"nleftrightarrow\": \"↮\",\n\t\t\"nLeftrightarrow\": \"⇎\",\n\t\t\"nleq\": \"≰\",\n\t\t\"nleqq\": \"≦̸\",\n\t\t\"nleqslant\": \"⩽̸\",\n\t\t\"nles\": \"⩽̸\",\n\t\t\"nless\": \"≮\",\n\t\t\"nLl\": \"⋘̸\",\n\t\t\"nlsim\": \"≴\",\n\t\t\"nLt\": \"≪⃒\",\n\t\t\"nlt\": \"≮\",\n\t\t\"nltri\": \"⋪\",\n\t\t\"nltrie\": \"⋬\",\n\t\t\"nLtv\": \"≪̸\",\n\t\t\"nmid\": \"∤\",\n\t\t\"NoBreak\": \"⁠\",\n\t\t\"NonBreakingSpace\": \" \",\n\t\t\"nopf\": \"𝕟\",\n\t\t\"Nopf\": \"ℕ\",\n\t\t\"Not\": \"⫬\",\n\t\t\"not\": \"¬\",\n\t\t\"NotCongruent\": \"≢\",\n\t\t\"NotCupCap\": \"≭\",\n\t\t\"NotDoubleVerticalBar\": \"∦\",\n\t\t\"NotElement\": \"∉\",\n\t\t\"NotEqual\": \"≠\",\n\t\t\"NotEqualTilde\": \"≂̸\",\n\t\t\"NotExists\": \"∄\",\n\t\t\"NotGreater\": \"≯\",\n\t\t\"NotGreaterEqual\": \"≱\",\n\t\t\"NotGreaterFullEqual\": \"≧̸\",\n\t\t\"NotGreaterGreater\": \"≫̸\",\n\t\t\"NotGreaterLess\": \"≹\",\n\t\t\"NotGreaterSlantEqual\": \"⩾̸\",\n\t\t\"NotGreaterTilde\": \"≵\",\n\t\t\"NotHumpDownHump\": \"≎̸\",\n\t\t\"NotHumpEqual\": \"≏̸\",\n\t\t\"notin\": \"∉\",\n\t\t\"notindot\": \"⋵̸\",\n\t\t\"notinE\": \"⋹̸\",\n\t\t\"notinva\": \"∉\",\n\t\t\"notinvb\": \"⋷\",\n\t\t\"notinvc\": \"⋶\",\n\t\t\"NotLeftTriangleBar\": \"⧏̸\",\n\t\t\"NotLeftTriangle\": \"⋪\",\n\t\t\"NotLeftTriangleEqual\": \"⋬\",\n\t\t\"NotLess\": \"≮\",\n\t\t\"NotLessEqual\": \"≰\",\n\t\t\"NotLessGreater\": \"≸\",\n\t\t\"NotLessLess\": \"≪̸\",\n\t\t\"NotLessSlantEqual\": \"⩽̸\",\n\t\t\"NotLessTilde\": \"≴\",\n\t\t\"NotNestedGreaterGreater\": \"⪢̸\",\n\t\t\"NotNestedLessLess\": \"⪡̸\",\n\t\t\"notni\": \"∌\",\n\t\t\"notniva\": \"∌\",\n\t\t\"notnivb\": \"⋾\",\n\t\t\"notnivc\": \"⋽\",\n\t\t\"NotPrecedes\": \"⊀\",\n\t\t\"NotPrecedesEqual\": \"⪯̸\",\n\t\t\"NotPrecedesSlantEqual\": \"⋠\",\n\t\t\"NotReverseElement\": \"∌\",\n\t\t\"NotRightTriangleBar\": \"⧐̸\",\n\t\t\"NotRightTriangle\": \"⋫\",\n\t\t\"NotRightTriangleEqual\": \"⋭\",\n\t\t\"NotSquareSubset\": \"⊏̸\",\n\t\t\"NotSquareSubsetEqual\": \"⋢\",\n\t\t\"NotSquareSuperset\": \"⊐̸\",\n\t\t\"NotSquareSupersetEqual\": \"⋣\",\n\t\t\"NotSubset\": \"⊂⃒\",\n\t\t\"NotSubsetEqual\": \"⊈\",\n\t\t\"NotSucceeds\": \"⊁\",\n\t\t\"NotSucceedsEqual\": \"⪰̸\",\n\t\t\"NotSucceedsSlantEqual\": \"⋡\",\n\t\t\"NotSucceedsTilde\": \"≿̸\",\n\t\t\"NotSuperset\": \"⊃⃒\",\n\t\t\"NotSupersetEqual\": \"⊉\",\n\t\t\"NotTilde\": \"≁\",\n\t\t\"NotTildeEqual\": \"≄\",\n\t\t\"NotTildeFullEqual\": \"≇\",\n\t\t\"NotTildeTilde\": \"≉\",\n\t\t\"NotVerticalBar\": \"∤\",\n\t\t\"nparallel\": \"∦\",\n\t\t\"npar\": \"∦\",\n\t\t\"nparsl\": \"⫽⃥\",\n\t\t\"npart\": \"∂̸\",\n\t\t\"npolint\": \"⨔\",\n\t\t\"npr\": \"⊀\",\n\t\t\"nprcue\": \"⋠\",\n\t\t\"nprec\": \"⊀\",\n\t\t\"npreceq\": \"⪯̸\",\n\t\t\"npre\": \"⪯̸\",\n\t\t\"nrarrc\": \"⤳̸\",\n\t\t\"nrarr\": \"↛\",\n\t\t\"nrArr\": \"⇏\",\n\t\t\"nrarrw\": \"↝̸\",\n\t\t\"nrightarrow\": \"↛\",\n\t\t\"nRightarrow\": \"⇏\",\n\t\t\"nrtri\": \"⋫\",\n\t\t\"nrtrie\": \"⋭\",\n\t\t\"nsc\": \"⊁\",\n\t\t\"nsccue\": \"⋡\",\n\t\t\"nsce\": \"⪰̸\",\n\t\t\"Nscr\": \"𝒩\",\n\t\t\"nscr\": \"𝓃\",\n\t\t\"nshortmid\": \"∤\",\n\t\t\"nshortparallel\": \"∦\",\n\t\t\"nsim\": \"≁\",\n\t\t\"nsime\": \"≄\",\n\t\t\"nsimeq\": \"≄\",\n\t\t\"nsmid\": \"∤\",\n\t\t\"nspar\": \"∦\",\n\t\t\"nsqsube\": \"⋢\",\n\t\t\"nsqsupe\": \"⋣\",\n\t\t\"nsub\": \"⊄\",\n\t\t\"nsubE\": \"⫅̸\",\n\t\t\"nsube\": \"⊈\",\n\t\t\"nsubset\": \"⊂⃒\",\n\t\t\"nsubseteq\": \"⊈\",\n\t\t\"nsubseteqq\": \"⫅̸\",\n\t\t\"nsucc\": \"⊁\",\n\t\t\"nsucceq\": \"⪰̸\",\n\t\t\"nsup\": \"⊅\",\n\t\t\"nsupE\": \"⫆̸\",\n\t\t\"nsupe\": \"⊉\",\n\t\t\"nsupset\": \"⊃⃒\",\n\t\t\"nsupseteq\": \"⊉\",\n\t\t\"nsupseteqq\": \"⫆̸\",\n\t\t\"ntgl\": \"≹\",\n\t\t\"Ntilde\": \"Ñ\",\n\t\t\"ntilde\": \"ñ\",\n\t\t\"ntlg\": \"≸\",\n\t\t\"ntriangleleft\": \"⋪\",\n\t\t\"ntrianglelefteq\": \"⋬\",\n\t\t\"ntriangleright\": \"⋫\",\n\t\t\"ntrianglerighteq\": \"⋭\",\n\t\t\"Nu\": \"Ν\",\n\t\t\"nu\": \"ν\",\n\t\t\"num\": \"#\",\n\t\t\"numero\": \"№\",\n\t\t\"numsp\": \" \",\n\t\t\"nvap\": \"≍⃒\",\n\t\t\"nvdash\": \"⊬\",\n\t\t\"nvDash\": \"⊭\",\n\t\t\"nVdash\": \"⊮\",\n\t\t\"nVDash\": \"⊯\",\n\t\t\"nvge\": \"≥⃒\",\n\t\t\"nvgt\": \">⃒\",\n\t\t\"nvHarr\": \"⤄\",\n\t\t\"nvinfin\": \"⧞\",\n\t\t\"nvlArr\": \"⤂\",\n\t\t\"nvle\": \"≤⃒\",\n\t\t\"nvlt\": \"<⃒\",\n\t\t\"nvltrie\": \"⊴⃒\",\n\t\t\"nvrArr\": \"⤃\",\n\t\t\"nvrtrie\": \"⊵⃒\",\n\t\t\"nvsim\": \"∼⃒\",\n\t\t\"nwarhk\": \"⤣\",\n\t\t\"nwarr\": \"↖\",\n\t\t\"nwArr\": \"⇖\",\n\t\t\"nwarrow\": \"↖\",\n\t\t\"nwnear\": \"⤧\",\n\t\t\"Oacute\": \"Ó\",\n\t\t\"oacute\": \"ó\",\n\t\t\"oast\": \"⊛\",\n\t\t\"Ocirc\": \"Ô\",\n\t\t\"ocirc\": \"ô\",\n\t\t\"ocir\": \"⊚\",\n\t\t\"Ocy\": \"О\",\n\t\t\"ocy\": \"о\",\n\t\t\"odash\": \"⊝\",\n\t\t\"Odblac\": \"Ő\",\n\t\t\"odblac\": \"ő\",\n\t\t\"odiv\": \"⨸\",\n\t\t\"odot\": \"⊙\",\n\t\t\"odsold\": \"⦼\",\n\t\t\"OElig\": \"Œ\",\n\t\t\"oelig\": \"œ\",\n\t\t\"ofcir\": \"⦿\",\n\t\t\"Ofr\": \"𝔒\",\n\t\t\"ofr\": \"𝔬\",\n\t\t\"ogon\": \"˛\",\n\t\t\"Ograve\": \"Ò\",\n\t\t\"ograve\": \"ò\",\n\t\t\"ogt\": \"⧁\",\n\t\t\"ohbar\": \"⦵\",\n\t\t\"ohm\": \"Ω\",\n\t\t\"oint\": \"∮\",\n\t\t\"olarr\": \"↺\",\n\t\t\"olcir\": \"⦾\",\n\t\t\"olcross\": \"⦻\",\n\t\t\"oline\": \"‾\",\n\t\t\"olt\": \"⧀\",\n\t\t\"Omacr\": \"Ō\",\n\t\t\"omacr\": \"ō\",\n\t\t\"Omega\": \"Ω\",\n\t\t\"omega\": \"ω\",\n\t\t\"Omicron\": \"Ο\",\n\t\t\"omicron\": \"ο\",\n\t\t\"omid\": \"⦶\",\n\t\t\"ominus\": \"⊖\",\n\t\t\"Oopf\": \"𝕆\",\n\t\t\"oopf\": \"𝕠\",\n\t\t\"opar\": \"⦷\",\n\t\t\"OpenCurlyDoubleQuote\": \"“\",\n\t\t\"OpenCurlyQuote\": \"‘\",\n\t\t\"operp\": \"⦹\",\n\t\t\"oplus\": \"⊕\",\n\t\t\"orarr\": \"↻\",\n\t\t\"Or\": \"⩔\",\n\t\t\"or\": \"∨\",\n\t\t\"ord\": \"⩝\",\n\t\t\"order\": \"ℴ\",\n\t\t\"orderof\": \"ℴ\",\n\t\t\"ordf\": \"ª\",\n\t\t\"ordm\": \"º\",\n\t\t\"origof\": \"⊶\",\n\t\t\"oror\": \"⩖\",\n\t\t\"orslope\": \"⩗\",\n\t\t\"orv\": \"⩛\",\n\t\t\"oS\": \"Ⓢ\",\n\t\t\"Oscr\": \"𝒪\",\n\t\t\"oscr\": \"ℴ\",\n\t\t\"Oslash\": \"Ø\",\n\t\t\"oslash\": \"ø\",\n\t\t\"osol\": \"⊘\",\n\t\t\"Otilde\": \"Õ\",\n\t\t\"otilde\": \"õ\",\n\t\t\"otimesas\": \"⨶\",\n\t\t\"Otimes\": \"⨷\",\n\t\t\"otimes\": \"⊗\",\n\t\t\"Ouml\": \"Ö\",\n\t\t\"ouml\": \"ö\",\n\t\t\"ovbar\": \"⌽\",\n\t\t\"OverBar\": \"‾\",\n\t\t\"OverBrace\": \"⏞\",\n\t\t\"OverBracket\": \"⎴\",\n\t\t\"OverParenthesis\": \"⏜\",\n\t\t\"para\": \"¶\",\n\t\t\"parallel\": \"∥\",\n\t\t\"par\": \"∥\",\n\t\t\"parsim\": \"⫳\",\n\t\t\"parsl\": \"⫽\",\n\t\t\"part\": \"∂\",\n\t\t\"PartialD\": \"∂\",\n\t\t\"Pcy\": \"П\",\n\t\t\"pcy\": \"п\",\n\t\t\"percnt\": \"%\",\n\t\t\"period\": \".\",\n\t\t\"permil\": \"‰\",\n\t\t\"perp\": \"⊥\",\n\t\t\"pertenk\": \"‱\",\n\t\t\"Pfr\": \"𝔓\",\n\t\t\"pfr\": \"𝔭\",\n\t\t\"Phi\": \"Φ\",\n\t\t\"phi\": \"φ\",\n\t\t\"phiv\": \"ϕ\",\n\t\t\"phmmat\": \"ℳ\",\n\t\t\"phone\": \"☎\",\n\t\t\"Pi\": \"Π\",\n\t\t\"pi\": \"π\",\n\t\t\"pitchfork\": \"⋔\",\n\t\t\"piv\": \"ϖ\",\n\t\t\"planck\": \"ℏ\",\n\t\t\"planckh\": \"ℎ\",\n\t\t\"plankv\": \"ℏ\",\n\t\t\"plusacir\": \"⨣\",\n\t\t\"plusb\": \"⊞\",\n\t\t\"pluscir\": \"⨢\",\n\t\t\"plus\": \"+\",\n\t\t\"plusdo\": \"∔\",\n\t\t\"plusdu\": \"⨥\",\n\t\t\"pluse\": \"⩲\",\n\t\t\"PlusMinus\": \"±\",\n\t\t\"plusmn\": \"±\",\n\t\t\"plussim\": \"⨦\",\n\t\t\"plustwo\": \"⨧\",\n\t\t\"pm\": \"±\",\n\t\t\"Poincareplane\": \"ℌ\",\n\t\t\"pointint\": \"⨕\",\n\t\t\"popf\": \"𝕡\",\n\t\t\"Popf\": \"ℙ\",\n\t\t\"pound\": \"£\",\n\t\t\"prap\": \"⪷\",\n\t\t\"Pr\": \"⪻\",\n\t\t\"pr\": \"≺\",\n\t\t\"prcue\": \"≼\",\n\t\t\"precapprox\": \"⪷\",\n\t\t\"prec\": \"≺\",\n\t\t\"preccurlyeq\": \"≼\",\n\t\t\"Precedes\": \"≺\",\n\t\t\"PrecedesEqual\": \"⪯\",\n\t\t\"PrecedesSlantEqual\": \"≼\",\n\t\t\"PrecedesTilde\": \"≾\",\n\t\t\"preceq\": \"⪯\",\n\t\t\"precnapprox\": \"⪹\",\n\t\t\"precneqq\": \"⪵\",\n\t\t\"precnsim\": \"⋨\",\n\t\t\"pre\": \"⪯\",\n\t\t\"prE\": \"⪳\",\n\t\t\"precsim\": \"≾\",\n\t\t\"prime\": \"′\",\n\t\t\"Prime\": \"″\",\n\t\t\"primes\": \"ℙ\",\n\t\t\"prnap\": \"⪹\",\n\t\t\"prnE\": \"⪵\",\n\t\t\"prnsim\": \"⋨\",\n\t\t\"prod\": \"∏\",\n\t\t\"Product\": \"∏\",\n\t\t\"profalar\": \"⌮\",\n\t\t\"profline\": \"⌒\",\n\t\t\"profsurf\": \"⌓\",\n\t\t\"prop\": \"∝\",\n\t\t\"Proportional\": \"∝\",\n\t\t\"Proportion\": \"∷\",\n\t\t\"propto\": \"∝\",\n\t\t\"prsim\": \"≾\",\n\t\t\"prurel\": \"⊰\",\n\t\t\"Pscr\": \"𝒫\",\n\t\t\"pscr\": \"𝓅\",\n\t\t\"Psi\": \"Ψ\",\n\t\t\"psi\": \"ψ\",\n\t\t\"puncsp\": \" \",\n\t\t\"Qfr\": \"𝔔\",\n\t\t\"qfr\": \"𝔮\",\n\t\t\"qint\": \"⨌\",\n\t\t\"qopf\": \"𝕢\",\n\t\t\"Qopf\": \"ℚ\",\n\t\t\"qprime\": \"⁗\",\n\t\t\"Qscr\": \"𝒬\",\n\t\t\"qscr\": \"𝓆\",\n\t\t\"quaternions\": \"ℍ\",\n\t\t\"quatint\": \"⨖\",\n\t\t\"quest\": \"?\",\n\t\t\"questeq\": \"≟\",\n\t\t\"quot\": \"\\\"\",\n\t\t\"QUOT\": \"\\\"\",\n\t\t\"rAarr\": \"⇛\",\n\t\t\"race\": \"∽̱\",\n\t\t\"Racute\": \"Ŕ\",\n\t\t\"racute\": \"ŕ\",\n\t\t\"radic\": \"√\",\n\t\t\"raemptyv\": \"⦳\",\n\t\t\"rang\": \"⟩\",\n\t\t\"Rang\": \"⟫\",\n\t\t\"rangd\": \"⦒\",\n\t\t\"range\": \"⦥\",\n\t\t\"rangle\": \"⟩\",\n\t\t\"raquo\": \"»\",\n\t\t\"rarrap\": \"⥵\",\n\t\t\"rarrb\": \"⇥\",\n\t\t\"rarrbfs\": \"⤠\",\n\t\t\"rarrc\": \"⤳\",\n\t\t\"rarr\": \"→\",\n\t\t\"Rarr\": \"↠\",\n\t\t\"rArr\": \"⇒\",\n\t\t\"rarrfs\": \"⤞\",\n\t\t\"rarrhk\": \"↪\",\n\t\t\"rarrlp\": \"↬\",\n\t\t\"rarrpl\": \"⥅\",\n\t\t\"rarrsim\": \"⥴\",\n\t\t\"Rarrtl\": \"⤖\",\n\t\t\"rarrtl\": \"↣\",\n\t\t\"rarrw\": \"↝\",\n\t\t\"ratail\": \"⤚\",\n\t\t\"rAtail\": \"⤜\",\n\t\t\"ratio\": \"∶\",\n\t\t\"rationals\": \"ℚ\",\n\t\t\"rbarr\": \"⤍\",\n\t\t\"rBarr\": \"⤏\",\n\t\t\"RBarr\": \"⤐\",\n\t\t\"rbbrk\": \"❳\",\n\t\t\"rbrace\": \"}\",\n\t\t\"rbrack\": \"]\",\n\t\t\"rbrke\": \"⦌\",\n\t\t\"rbrksld\": \"⦎\",\n\t\t\"rbrkslu\": \"⦐\",\n\t\t\"Rcaron\": \"Ř\",\n\t\t\"rcaron\": \"ř\",\n\t\t\"Rcedil\": \"Ŗ\",\n\t\t\"rcedil\": \"ŗ\",\n\t\t\"rceil\": \"⌉\",\n\t\t\"rcub\": \"}\",\n\t\t\"Rcy\": \"Р\",\n\t\t\"rcy\": \"р\",\n\t\t\"rdca\": \"⤷\",\n\t\t\"rdldhar\": \"⥩\",\n\t\t\"rdquo\": \"”\",\n\t\t\"rdquor\": \"”\",\n\t\t\"rdsh\": \"↳\",\n\t\t\"real\": \"ℜ\",\n\t\t\"realine\": \"ℛ\",\n\t\t\"realpart\": \"ℜ\",\n\t\t\"reals\": \"ℝ\",\n\t\t\"Re\": \"ℜ\",\n\t\t\"rect\": \"▭\",\n\t\t\"reg\": \"®\",\n\t\t\"REG\": \"®\",\n\t\t\"ReverseElement\": \"∋\",\n\t\t\"ReverseEquilibrium\": \"⇋\",\n\t\t\"ReverseUpEquilibrium\": \"⥯\",\n\t\t\"rfisht\": \"⥽\",\n\t\t\"rfloor\": \"⌋\",\n\t\t\"rfr\": \"𝔯\",\n\t\t\"Rfr\": \"ℜ\",\n\t\t\"rHar\": \"⥤\",\n\t\t\"rhard\": \"⇁\",\n\t\t\"rharu\": \"⇀\",\n\t\t\"rharul\": \"⥬\",\n\t\t\"Rho\": \"Ρ\",\n\t\t\"rho\": \"ρ\",\n\t\t\"rhov\": \"ϱ\",\n\t\t\"RightAngleBracket\": \"⟩\",\n\t\t\"RightArrowBar\": \"⇥\",\n\t\t\"rightarrow\": \"→\",\n\t\t\"RightArrow\": \"→\",\n\t\t\"Rightarrow\": \"⇒\",\n\t\t\"RightArrowLeftArrow\": \"⇄\",\n\t\t\"rightarrowtail\": \"↣\",\n\t\t\"RightCeiling\": \"⌉\",\n\t\t\"RightDoubleBracket\": \"⟧\",\n\t\t\"RightDownTeeVector\": \"⥝\",\n\t\t\"RightDownVectorBar\": \"⥕\",\n\t\t\"RightDownVector\": \"⇂\",\n\t\t\"RightFloor\": \"⌋\",\n\t\t\"rightharpoondown\": \"⇁\",\n\t\t\"rightharpoonup\": \"⇀\",\n\t\t\"rightleftarrows\": \"⇄\",\n\t\t\"rightleftharpoons\": \"⇌\",\n\t\t\"rightrightarrows\": \"⇉\",\n\t\t\"rightsquigarrow\": \"↝\",\n\t\t\"RightTeeArrow\": \"↦\",\n\t\t\"RightTee\": \"⊢\",\n\t\t\"RightTeeVector\": \"⥛\",\n\t\t\"rightthreetimes\": \"⋌\",\n\t\t\"RightTriangleBar\": \"⧐\",\n\t\t\"RightTriangle\": \"⊳\",\n\t\t\"RightTriangleEqual\": \"⊵\",\n\t\t\"RightUpDownVector\": \"⥏\",\n\t\t\"RightUpTeeVector\": \"⥜\",\n\t\t\"RightUpVectorBar\": \"⥔\",\n\t\t\"RightUpVector\": \"↾\",\n\t\t\"RightVectorBar\": \"⥓\",\n\t\t\"RightVector\": \"⇀\",\n\t\t\"ring\": \"˚\",\n\t\t\"risingdotseq\": \"≓\",\n\t\t\"rlarr\": \"⇄\",\n\t\t\"rlhar\": \"⇌\",\n\t\t\"rlm\": \"‏\",\n\t\t\"rmoustache\": \"⎱\",\n\t\t\"rmoust\": \"⎱\",\n\t\t\"rnmid\": \"⫮\",\n\t\t\"roang\": \"⟭\",\n\t\t\"roarr\": \"⇾\",\n\t\t\"robrk\": \"⟧\",\n\t\t\"ropar\": \"⦆\",\n\t\t\"ropf\": \"𝕣\",\n\t\t\"Ropf\": \"ℝ\",\n\t\t\"roplus\": \"⨮\",\n\t\t\"rotimes\": \"⨵\",\n\t\t\"RoundImplies\": \"⥰\",\n\t\t\"rpar\": \")\",\n\t\t\"rpargt\": \"⦔\",\n\t\t\"rppolint\": \"⨒\",\n\t\t\"rrarr\": \"⇉\",\n\t\t\"Rrightarrow\": \"⇛\",\n\t\t\"rsaquo\": \"›\",\n\t\t\"rscr\": \"𝓇\",\n\t\t\"Rscr\": \"ℛ\",\n\t\t\"rsh\": \"↱\",\n\t\t\"Rsh\": \"↱\",\n\t\t\"rsqb\": \"]\",\n\t\t\"rsquo\": \"’\",\n\t\t\"rsquor\": \"’\",\n\t\t\"rthree\": \"⋌\",\n\t\t\"rtimes\": \"⋊\",\n\t\t\"rtri\": \"▹\",\n\t\t\"rtrie\": \"⊵\",\n\t\t\"rtrif\": \"▸\",\n\t\t\"rtriltri\": \"⧎\",\n\t\t\"RuleDelayed\": \"⧴\",\n\t\t\"ruluhar\": \"⥨\",\n\t\t\"rx\": \"℞\",\n\t\t\"Sacute\": \"Ś\",\n\t\t\"sacute\": \"ś\",\n\t\t\"sbquo\": \"‚\",\n\t\t\"scap\": \"⪸\",\n\t\t\"Scaron\": \"Š\",\n\t\t\"scaron\": \"š\",\n\t\t\"Sc\": \"⪼\",\n\t\t\"sc\": \"≻\",\n\t\t\"sccue\": \"≽\",\n\t\t\"sce\": \"⪰\",\n\t\t\"scE\": \"⪴\",\n\t\t\"Scedil\": \"Ş\",\n\t\t\"scedil\": \"ş\",\n\t\t\"Scirc\": \"Ŝ\",\n\t\t\"scirc\": \"ŝ\",\n\t\t\"scnap\": \"⪺\",\n\t\t\"scnE\": \"⪶\",\n\t\t\"scnsim\": \"⋩\",\n\t\t\"scpolint\": \"⨓\",\n\t\t\"scsim\": \"≿\",\n\t\t\"Scy\": \"С\",\n\t\t\"scy\": \"с\",\n\t\t\"sdotb\": \"⊡\",\n\t\t\"sdot\": \"⋅\",\n\t\t\"sdote\": \"⩦\",\n\t\t\"searhk\": \"⤥\",\n\t\t\"searr\": \"↘\",\n\t\t\"seArr\": \"⇘\",\n\t\t\"searrow\": \"↘\",\n\t\t\"sect\": \"§\",\n\t\t\"semi\": \";\",\n\t\t\"seswar\": \"⤩\",\n\t\t\"setminus\": \"∖\",\n\t\t\"setmn\": \"∖\",\n\t\t\"sext\": \"✶\",\n\t\t\"Sfr\": \"𝔖\",\n\t\t\"sfr\": \"𝔰\",\n\t\t\"sfrown\": \"⌢\",\n\t\t\"sharp\": \"♯\",\n\t\t\"SHCHcy\": \"Щ\",\n\t\t\"shchcy\": \"щ\",\n\t\t\"SHcy\": \"Ш\",\n\t\t\"shcy\": \"ш\",\n\t\t\"ShortDownArrow\": \"↓\",\n\t\t\"ShortLeftArrow\": \"←\",\n\t\t\"shortmid\": \"∣\",\n\t\t\"shortparallel\": \"∥\",\n\t\t\"ShortRightArrow\": \"→\",\n\t\t\"ShortUpArrow\": \"↑\",\n\t\t\"shy\": \"­\",\n\t\t\"Sigma\": \"Σ\",\n\t\t\"sigma\": \"σ\",\n\t\t\"sigmaf\": \"ς\",\n\t\t\"sigmav\": \"ς\",\n\t\t\"sim\": \"∼\",\n\t\t\"simdot\": \"⩪\",\n\t\t\"sime\": \"≃\",\n\t\t\"simeq\": \"≃\",\n\t\t\"simg\": \"⪞\",\n\t\t\"simgE\": \"⪠\",\n\t\t\"siml\": \"⪝\",\n\t\t\"simlE\": \"⪟\",\n\t\t\"simne\": \"≆\",\n\t\t\"simplus\": \"⨤\",\n\t\t\"simrarr\": \"⥲\",\n\t\t\"slarr\": \"←\",\n\t\t\"SmallCircle\": \"∘\",\n\t\t\"smallsetminus\": \"∖\",\n\t\t\"smashp\": \"⨳\",\n\t\t\"smeparsl\": \"⧤\",\n\t\t\"smid\": \"∣\",\n\t\t\"smile\": \"⌣\",\n\t\t\"smt\": \"⪪\",\n\t\t\"smte\": \"⪬\",\n\t\t\"smtes\": \"⪬︀\",\n\t\t\"SOFTcy\": \"Ь\",\n\t\t\"softcy\": \"ь\",\n\t\t\"solbar\": \"⌿\",\n\t\t\"solb\": \"⧄\",\n\t\t\"sol\": \"/\",\n\t\t\"Sopf\": \"𝕊\",\n\t\t\"sopf\": \"𝕤\",\n\t\t\"spades\": \"♠\",\n\t\t\"spadesuit\": \"♠\",\n\t\t\"spar\": \"∥\",\n\t\t\"sqcap\": \"⊓\",\n\t\t\"sqcaps\": \"⊓︀\",\n\t\t\"sqcup\": \"⊔\",\n\t\t\"sqcups\": \"⊔︀\",\n\t\t\"Sqrt\": \"√\",\n\t\t\"sqsub\": \"⊏\",\n\t\t\"sqsube\": \"⊑\",\n\t\t\"sqsubset\": \"⊏\",\n\t\t\"sqsubseteq\": \"⊑\",\n\t\t\"sqsup\": \"⊐\",\n\t\t\"sqsupe\": \"⊒\",\n\t\t\"sqsupset\": \"⊐\",\n\t\t\"sqsupseteq\": \"⊒\",\n\t\t\"square\": \"□\",\n\t\t\"Square\": \"□\",\n\t\t\"SquareIntersection\": \"⊓\",\n\t\t\"SquareSubset\": \"⊏\",\n\t\t\"SquareSubsetEqual\": \"⊑\",\n\t\t\"SquareSuperset\": \"⊐\",\n\t\t\"SquareSupersetEqual\": \"⊒\",\n\t\t\"SquareUnion\": \"⊔\",\n\t\t\"squarf\": \"▪\",\n\t\t\"squ\": \"□\",\n\t\t\"squf\": \"▪\",\n\t\t\"srarr\": \"→\",\n\t\t\"Sscr\": \"𝒮\",\n\t\t\"sscr\": \"𝓈\",\n\t\t\"ssetmn\": \"∖\",\n\t\t\"ssmile\": \"⌣\",\n\t\t\"sstarf\": \"⋆\",\n\t\t\"Star\": \"⋆\",\n\t\t\"star\": \"☆\",\n\t\t\"starf\": \"★\",\n\t\t\"straightepsilon\": \"ϵ\",\n\t\t\"straightphi\": \"ϕ\",\n\t\t\"strns\": \"¯\",\n\t\t\"sub\": \"⊂\",\n\t\t\"Sub\": \"⋐\",\n\t\t\"subdot\": \"⪽\",\n\t\t\"subE\": \"⫅\",\n\t\t\"sube\": \"⊆\",\n\t\t\"subedot\": \"⫃\",\n\t\t\"submult\": \"⫁\",\n\t\t\"subnE\": \"⫋\",\n\t\t\"subne\": \"⊊\",\n\t\t\"subplus\": \"⪿\",\n\t\t\"subrarr\": \"⥹\",\n\t\t\"subset\": \"⊂\",\n\t\t\"Subset\": \"⋐\",\n\t\t\"subseteq\": \"⊆\",\n\t\t\"subseteqq\": \"⫅\",\n\t\t\"SubsetEqual\": \"⊆\",\n\t\t\"subsetneq\": \"⊊\",\n\t\t\"subsetneqq\": \"⫋\",\n\t\t\"subsim\": \"⫇\",\n\t\t\"subsub\": \"⫕\",\n\t\t\"subsup\": \"⫓\",\n\t\t\"succapprox\": \"⪸\",\n\t\t\"succ\": \"≻\",\n\t\t\"succcurlyeq\": \"≽\",\n\t\t\"Succeeds\": \"≻\",\n\t\t\"SucceedsEqual\": \"⪰\",\n\t\t\"SucceedsSlantEqual\": \"≽\",\n\t\t\"SucceedsTilde\": \"≿\",\n\t\t\"succeq\": \"⪰\",\n\t\t\"succnapprox\": \"⪺\",\n\t\t\"succneqq\": \"⪶\",\n\t\t\"succnsim\": \"⋩\",\n\t\t\"succsim\": \"≿\",\n\t\t\"SuchThat\": \"∋\",\n\t\t\"sum\": \"∑\",\n\t\t\"Sum\": \"∑\",\n\t\t\"sung\": \"♪\",\n\t\t\"sup1\": \"¹\",\n\t\t\"sup2\": \"²\",\n\t\t\"sup3\": \"³\",\n\t\t\"sup\": \"⊃\",\n\t\t\"Sup\": \"⋑\",\n\t\t\"supdot\": \"⪾\",\n\t\t\"supdsub\": \"⫘\",\n\t\t\"supE\": \"⫆\",\n\t\t\"supe\": \"⊇\",\n\t\t\"supedot\": \"⫄\",\n\t\t\"Superset\": \"⊃\",\n\t\t\"SupersetEqual\": \"⊇\",\n\t\t\"suphsol\": \"⟉\",\n\t\t\"suphsub\": \"⫗\",\n\t\t\"suplarr\": \"⥻\",\n\t\t\"supmult\": \"⫂\",\n\t\t\"supnE\": \"⫌\",\n\t\t\"supne\": \"⊋\",\n\t\t\"supplus\": \"⫀\",\n\t\t\"supset\": \"⊃\",\n\t\t\"Supset\": \"⋑\",\n\t\t\"supseteq\": \"⊇\",\n\t\t\"supseteqq\": \"⫆\",\n\t\t\"supsetneq\": \"⊋\",\n\t\t\"supsetneqq\": \"⫌\",\n\t\t\"supsim\": \"⫈\",\n\t\t\"supsub\": \"⫔\",\n\t\t\"supsup\": \"⫖\",\n\t\t\"swarhk\": \"⤦\",\n\t\t\"swarr\": \"↙\",\n\t\t\"swArr\": \"⇙\",\n\t\t\"swarrow\": \"↙\",\n\t\t\"swnwar\": \"⤪\",\n\t\t\"szlig\": \"ß\",\n\t\t\"Tab\": \"\\t\",\n\t\t\"target\": \"⌖\",\n\t\t\"Tau\": \"Τ\",\n\t\t\"tau\": \"τ\",\n\t\t\"tbrk\": \"⎴\",\n\t\t\"Tcaron\": \"Ť\",\n\t\t\"tcaron\": \"ť\",\n\t\t\"Tcedil\": \"Ţ\",\n\t\t\"tcedil\": \"ţ\",\n\t\t\"Tcy\": \"Т\",\n\t\t\"tcy\": \"т\",\n\t\t\"tdot\": \"⃛\",\n\t\t\"telrec\": \"⌕\",\n\t\t\"Tfr\": \"𝔗\",\n\t\t\"tfr\": \"𝔱\",\n\t\t\"there4\": \"∴\",\n\t\t\"therefore\": \"∴\",\n\t\t\"Therefore\": \"∴\",\n\t\t\"Theta\": \"Θ\",\n\t\t\"theta\": \"θ\",\n\t\t\"thetasym\": \"ϑ\",\n\t\t\"thetav\": \"ϑ\",\n\t\t\"thickapprox\": \"≈\",\n\t\t\"thicksim\": \"∼\",\n\t\t\"ThickSpace\": \"  \",\n\t\t\"ThinSpace\": \" \",\n\t\t\"thinsp\": \" \",\n\t\t\"thkap\": \"≈\",\n\t\t\"thksim\": \"∼\",\n\t\t\"THORN\": \"Þ\",\n\t\t\"thorn\": \"þ\",\n\t\t\"tilde\": \"˜\",\n\t\t\"Tilde\": \"∼\",\n\t\t\"TildeEqual\": \"≃\",\n\t\t\"TildeFullEqual\": \"≅\",\n\t\t\"TildeTilde\": \"≈\",\n\t\t\"timesbar\": \"⨱\",\n\t\t\"timesb\": \"⊠\",\n\t\t\"times\": \"×\",\n\t\t\"timesd\": \"⨰\",\n\t\t\"tint\": \"∭\",\n\t\t\"toea\": \"⤨\",\n\t\t\"topbot\": \"⌶\",\n\t\t\"topcir\": \"⫱\",\n\t\t\"top\": \"⊤\",\n\t\t\"Topf\": \"𝕋\",\n\t\t\"topf\": \"𝕥\",\n\t\t\"topfork\": \"⫚\",\n\t\t\"tosa\": \"⤩\",\n\t\t\"tprime\": \"‴\",\n\t\t\"trade\": \"™\",\n\t\t\"TRADE\": \"™\",\n\t\t\"triangle\": \"▵\",\n\t\t\"triangledown\": \"▿\",\n\t\t\"triangleleft\": \"◃\",\n\t\t\"trianglelefteq\": \"⊴\",\n\t\t\"triangleq\": \"≜\",\n\t\t\"triangleright\": \"▹\",\n\t\t\"trianglerighteq\": \"⊵\",\n\t\t\"tridot\": \"◬\",\n\t\t\"trie\": \"≜\",\n\t\t\"triminus\": \"⨺\",\n\t\t\"TripleDot\": \"⃛\",\n\t\t\"triplus\": \"⨹\",\n\t\t\"trisb\": \"⧍\",\n\t\t\"tritime\": \"⨻\",\n\t\t\"trpezium\": \"⏢\",\n\t\t\"Tscr\": \"𝒯\",\n\t\t\"tscr\": \"𝓉\",\n\t\t\"TScy\": \"Ц\",\n\t\t\"tscy\": \"ц\",\n\t\t\"TSHcy\": \"Ћ\",\n\t\t\"tshcy\": \"ћ\",\n\t\t\"Tstrok\": \"Ŧ\",\n\t\t\"tstrok\": \"ŧ\",\n\t\t\"twixt\": \"≬\",\n\t\t\"twoheadleftarrow\": \"↞\",\n\t\t\"twoheadrightarrow\": \"↠\",\n\t\t\"Uacute\": \"Ú\",\n\t\t\"uacute\": \"ú\",\n\t\t\"uarr\": \"↑\",\n\t\t\"Uarr\": \"↟\",\n\t\t\"uArr\": \"⇑\",\n\t\t\"Uarrocir\": \"⥉\",\n\t\t\"Ubrcy\": \"Ў\",\n\t\t\"ubrcy\": \"ў\",\n\t\t\"Ubreve\": \"Ŭ\",\n\t\t\"ubreve\": \"ŭ\",\n\t\t\"Ucirc\": \"Û\",\n\t\t\"ucirc\": \"û\",\n\t\t\"Ucy\": \"У\",\n\t\t\"ucy\": \"у\",\n\t\t\"udarr\": \"⇅\",\n\t\t\"Udblac\": \"Ű\",\n\t\t\"udblac\": \"ű\",\n\t\t\"udhar\": \"⥮\",\n\t\t\"ufisht\": \"⥾\",\n\t\t\"Ufr\": \"𝔘\",\n\t\t\"ufr\": \"𝔲\",\n\t\t\"Ugrave\": \"Ù\",\n\t\t\"ugrave\": \"ù\",\n\t\t\"uHar\": \"⥣\",\n\t\t\"uharl\": \"↿\",\n\t\t\"uharr\": \"↾\",\n\t\t\"uhblk\": \"▀\",\n\t\t\"ulcorn\": \"⌜\",\n\t\t\"ulcorner\": \"⌜\",\n\t\t\"ulcrop\": \"⌏\",\n\t\t\"ultri\": \"◸\",\n\t\t\"Umacr\": \"Ū\",\n\t\t\"umacr\": \"ū\",\n\t\t\"uml\": \"¨\",\n\t\t\"UnderBar\": \"_\",\n\t\t\"UnderBrace\": \"⏟\",\n\t\t\"UnderBracket\": \"⎵\",\n\t\t\"UnderParenthesis\": \"⏝\",\n\t\t\"Union\": \"⋃\",\n\t\t\"UnionPlus\": \"⊎\",\n\t\t\"Uogon\": \"Ų\",\n\t\t\"uogon\": \"ų\",\n\t\t\"Uopf\": \"𝕌\",\n\t\t\"uopf\": \"𝕦\",\n\t\t\"UpArrowBar\": \"⤒\",\n\t\t\"uparrow\": \"↑\",\n\t\t\"UpArrow\": \"↑\",\n\t\t\"Uparrow\": \"⇑\",\n\t\t\"UpArrowDownArrow\": \"⇅\",\n\t\t\"updownarrow\": \"↕\",\n\t\t\"UpDownArrow\": \"↕\",\n\t\t\"Updownarrow\": \"⇕\",\n\t\t\"UpEquilibrium\": \"⥮\",\n\t\t\"upharpoonleft\": \"↿\",\n\t\t\"upharpoonright\": \"↾\",\n\t\t\"uplus\": \"⊎\",\n\t\t\"UpperLeftArrow\": \"↖\",\n\t\t\"UpperRightArrow\": \"↗\",\n\t\t\"upsi\": \"υ\",\n\t\t\"Upsi\": \"ϒ\",\n\t\t\"upsih\": \"ϒ\",\n\t\t\"Upsilon\": \"Υ\",\n\t\t\"upsilon\": \"υ\",\n\t\t\"UpTeeArrow\": \"↥\",\n\t\t\"UpTee\": \"⊥\",\n\t\t\"upuparrows\": \"⇈\",\n\t\t\"urcorn\": \"⌝\",\n\t\t\"urcorner\": \"⌝\",\n\t\t\"urcrop\": \"⌎\",\n\t\t\"Uring\": \"Ů\",\n\t\t\"uring\": \"ů\",\n\t\t\"urtri\": \"◹\",\n\t\t\"Uscr\": \"𝒰\",\n\t\t\"uscr\": \"𝓊\",\n\t\t\"utdot\": \"⋰\",\n\t\t\"Utilde\": \"Ũ\",\n\t\t\"utilde\": \"ũ\",\n\t\t\"utri\": \"▵\",\n\t\t\"utrif\": \"▴\",\n\t\t\"uuarr\": \"⇈\",\n\t\t\"Uuml\": \"Ü\",\n\t\t\"uuml\": \"ü\",\n\t\t\"uwangle\": \"⦧\",\n\t\t\"vangrt\": \"⦜\",\n\t\t\"varepsilon\": \"ϵ\",\n\t\t\"varkappa\": \"ϰ\",\n\t\t\"varnothing\": \"∅\",\n\t\t\"varphi\": \"ϕ\",\n\t\t\"varpi\": \"ϖ\",\n\t\t\"varpropto\": \"∝\",\n\t\t\"varr\": \"↕\",\n\t\t\"vArr\": \"⇕\",\n\t\t\"varrho\": \"ϱ\",\n\t\t\"varsigma\": \"ς\",\n\t\t\"varsubsetneq\": \"⊊︀\",\n\t\t\"varsubsetneqq\": \"⫋︀\",\n\t\t\"varsupsetneq\": \"⊋︀\",\n\t\t\"varsupsetneqq\": \"⫌︀\",\n\t\t\"vartheta\": \"ϑ\",\n\t\t\"vartriangleleft\": \"⊲\",\n\t\t\"vartriangleright\": \"⊳\",\n\t\t\"vBar\": \"⫨\",\n\t\t\"Vbar\": \"⫫\",\n\t\t\"vBarv\": \"⫩\",\n\t\t\"Vcy\": \"В\",\n\t\t\"vcy\": \"в\",\n\t\t\"vdash\": \"⊢\",\n\t\t\"vDash\": \"⊨\",\n\t\t\"Vdash\": \"⊩\",\n\t\t\"VDash\": \"⊫\",\n\t\t\"Vdashl\": \"⫦\",\n\t\t\"veebar\": \"⊻\",\n\t\t\"vee\": \"∨\",\n\t\t\"Vee\": \"⋁\",\n\t\t\"veeeq\": \"≚\",\n\t\t\"vellip\": \"⋮\",\n\t\t\"verbar\": \"|\",\n\t\t\"Verbar\": \"‖\",\n\t\t\"vert\": \"|\",\n\t\t\"Vert\": \"‖\",\n\t\t\"VerticalBar\": \"∣\",\n\t\t\"VerticalLine\": \"|\",\n\t\t\"VerticalSeparator\": \"❘\",\n\t\t\"VerticalTilde\": \"≀\",\n\t\t\"VeryThinSpace\": \" \",\n\t\t\"Vfr\": \"𝔙\",\n\t\t\"vfr\": \"𝔳\",\n\t\t\"vltri\": \"⊲\",\n\t\t\"vnsub\": \"⊂⃒\",\n\t\t\"vnsup\": \"⊃⃒\",\n\t\t\"Vopf\": \"𝕍\",\n\t\t\"vopf\": \"𝕧\",\n\t\t\"vprop\": \"∝\",\n\t\t\"vrtri\": \"⊳\",\n\t\t\"Vscr\": \"𝒱\",\n\t\t\"vscr\": \"𝓋\",\n\t\t\"vsubnE\": \"⫋︀\",\n\t\t\"vsubne\": \"⊊︀\",\n\t\t\"vsupnE\": \"⫌︀\",\n\t\t\"vsupne\": \"⊋︀\",\n\t\t\"Vvdash\": \"⊪\",\n\t\t\"vzigzag\": \"⦚\",\n\t\t\"Wcirc\": \"Ŵ\",\n\t\t\"wcirc\": \"ŵ\",\n\t\t\"wedbar\": \"⩟\",\n\t\t\"wedge\": \"∧\",\n\t\t\"Wedge\": \"⋀\",\n\t\t\"wedgeq\": \"≙\",\n\t\t\"weierp\": \"℘\",\n\t\t\"Wfr\": \"𝔚\",\n\t\t\"wfr\": \"𝔴\",\n\t\t\"Wopf\": \"𝕎\",\n\t\t\"wopf\": \"𝕨\",\n\t\t\"wp\": \"℘\",\n\t\t\"wr\": \"≀\",\n\t\t\"wreath\": \"≀\",\n\t\t\"Wscr\": \"𝒲\",\n\t\t\"wscr\": \"𝓌\",\n\t\t\"xcap\": \"⋂\",\n\t\t\"xcirc\": \"◯\",\n\t\t\"xcup\": \"⋃\",\n\t\t\"xdtri\": \"▽\",\n\t\t\"Xfr\": \"𝔛\",\n\t\t\"xfr\": \"𝔵\",\n\t\t\"xharr\": \"⟷\",\n\t\t\"xhArr\": \"⟺\",\n\t\t\"Xi\": \"Ξ\",\n\t\t\"xi\": \"ξ\",\n\t\t\"xlarr\": \"⟵\",\n\t\t\"xlArr\": \"⟸\",\n\t\t\"xmap\": \"⟼\",\n\t\t\"xnis\": \"⋻\",\n\t\t\"xodot\": \"⨀\",\n\t\t\"Xopf\": \"𝕏\",\n\t\t\"xopf\": \"𝕩\",\n\t\t\"xoplus\": \"⨁\",\n\t\t\"xotime\": \"⨂\",\n\t\t\"xrarr\": \"⟶\",\n\t\t\"xrArr\": \"⟹\",\n\t\t\"Xscr\": \"𝒳\",\n\t\t\"xscr\": \"𝓍\",\n\t\t\"xsqcup\": \"⨆\",\n\t\t\"xuplus\": \"⨄\",\n\t\t\"xutri\": \"△\",\n\t\t\"xvee\": \"⋁\",\n\t\t\"xwedge\": \"⋀\",\n\t\t\"Yacute\": \"Ý\",\n\t\t\"yacute\": \"ý\",\n\t\t\"YAcy\": \"Я\",\n\t\t\"yacy\": \"я\",\n\t\t\"Ycirc\": \"Ŷ\",\n\t\t\"ycirc\": \"ŷ\",\n\t\t\"Ycy\": \"Ы\",\n\t\t\"ycy\": \"ы\",\n\t\t\"yen\": \"¥\",\n\t\t\"Yfr\": \"𝔜\",\n\t\t\"yfr\": \"𝔶\",\n\t\t\"YIcy\": \"Ї\",\n\t\t\"yicy\": \"ї\",\n\t\t\"Yopf\": \"𝕐\",\n\t\t\"yopf\": \"𝕪\",\n\t\t\"Yscr\": \"𝒴\",\n\t\t\"yscr\": \"𝓎\",\n\t\t\"YUcy\": \"Ю\",\n\t\t\"yucy\": \"ю\",\n\t\t\"yuml\": \"ÿ\",\n\t\t\"Yuml\": \"Ÿ\",\n\t\t\"Zacute\": \"Ź\",\n\t\t\"zacute\": \"ź\",\n\t\t\"Zcaron\": \"Ž\",\n\t\t\"zcaron\": \"ž\",\n\t\t\"Zcy\": \"З\",\n\t\t\"zcy\": \"з\",\n\t\t\"Zdot\": \"Ż\",\n\t\t\"zdot\": \"ż\",\n\t\t\"zeetrf\": \"ℨ\",\n\t\t\"ZeroWidthSpace\": \"​\",\n\t\t\"Zeta\": \"Ζ\",\n\t\t\"zeta\": \"ζ\",\n\t\t\"zfr\": \"𝔷\",\n\t\t\"Zfr\": \"ℨ\",\n\t\t\"ZHcy\": \"Ж\",\n\t\t\"zhcy\": \"ж\",\n\t\t\"zigrarr\": \"⇝\",\n\t\t\"zopf\": \"𝕫\",\n\t\t\"Zopf\": \"ℤ\",\n\t\t\"Zscr\": \"𝒵\",\n\t\t\"zscr\": \"𝓏\",\n\t\t\"zwj\": \"‍\",\n\t\t\"zwnj\": \"‌\"\n\t};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"Aacute\": \"Á\",\n\t\t\"aacute\": \"á\",\n\t\t\"Acirc\": \"Â\",\n\t\t\"acirc\": \"â\",\n\t\t\"acute\": \"´\",\n\t\t\"AElig\": \"Æ\",\n\t\t\"aelig\": \"æ\",\n\t\t\"Agrave\": \"À\",\n\t\t\"agrave\": \"à\",\n\t\t\"amp\": \"&\",\n\t\t\"AMP\": \"&\",\n\t\t\"Aring\": \"Å\",\n\t\t\"aring\": \"å\",\n\t\t\"Atilde\": \"Ã\",\n\t\t\"atilde\": \"ã\",\n\t\t\"Auml\": \"Ä\",\n\t\t\"auml\": \"ä\",\n\t\t\"brvbar\": \"¦\",\n\t\t\"Ccedil\": \"Ç\",\n\t\t\"ccedil\": \"ç\",\n\t\t\"cedil\": \"¸\",\n\t\t\"cent\": \"¢\",\n\t\t\"copy\": \"©\",\n\t\t\"COPY\": \"©\",\n\t\t\"curren\": \"¤\",\n\t\t\"deg\": \"°\",\n\t\t\"divide\": \"÷\",\n\t\t\"Eacute\": \"É\",\n\t\t\"eacute\": \"é\",\n\t\t\"Ecirc\": \"Ê\",\n\t\t\"ecirc\": \"ê\",\n\t\t\"Egrave\": \"È\",\n\t\t\"egrave\": \"è\",\n\t\t\"ETH\": \"Ð\",\n\t\t\"eth\": \"ð\",\n\t\t\"Euml\": \"Ë\",\n\t\t\"euml\": \"ë\",\n\t\t\"frac12\": \"½\",\n\t\t\"frac14\": \"¼\",\n\t\t\"frac34\": \"¾\",\n\t\t\"gt\": \">\",\n\t\t\"GT\": \">\",\n\t\t\"Iacute\": \"Í\",\n\t\t\"iacute\": \"í\",\n\t\t\"Icirc\": \"Î\",\n\t\t\"icirc\": \"î\",\n\t\t\"iexcl\": \"¡\",\n\t\t\"Igrave\": \"Ì\",\n\t\t\"igrave\": \"ì\",\n\t\t\"iquest\": \"¿\",\n\t\t\"Iuml\": \"Ï\",\n\t\t\"iuml\": \"ï\",\n\t\t\"laquo\": \"«\",\n\t\t\"lt\": \"<\",\n\t\t\"LT\": \"<\",\n\t\t\"macr\": \"¯\",\n\t\t\"micro\": \"µ\",\n\t\t\"middot\": \"·\",\n\t\t\"nbsp\": \" \",\n\t\t\"not\": \"¬\",\n\t\t\"Ntilde\": \"Ñ\",\n\t\t\"ntilde\": \"ñ\",\n\t\t\"Oacute\": \"Ó\",\n\t\t\"oacute\": \"ó\",\n\t\t\"Ocirc\": \"Ô\",\n\t\t\"ocirc\": \"ô\",\n\t\t\"Ograve\": \"Ò\",\n\t\t\"ograve\": \"ò\",\n\t\t\"ordf\": \"ª\",\n\t\t\"ordm\": \"º\",\n\t\t\"Oslash\": \"Ø\",\n\t\t\"oslash\": \"ø\",\n\t\t\"Otilde\": \"Õ\",\n\t\t\"otilde\": \"õ\",\n\t\t\"Ouml\": \"Ö\",\n\t\t\"ouml\": \"ö\",\n\t\t\"para\": \"¶\",\n\t\t\"plusmn\": \"±\",\n\t\t\"pound\": \"£\",\n\t\t\"quot\": \"\\\"\",\n\t\t\"QUOT\": \"\\\"\",\n\t\t\"raquo\": \"»\",\n\t\t\"reg\": \"®\",\n\t\t\"REG\": \"®\",\n\t\t\"sect\": \"§\",\n\t\t\"shy\": \"­\",\n\t\t\"sup1\": \"¹\",\n\t\t\"sup2\": \"²\",\n\t\t\"sup3\": \"³\",\n\t\t\"szlig\": \"ß\",\n\t\t\"THORN\": \"Þ\",\n\t\t\"thorn\": \"þ\",\n\t\t\"times\": \"×\",\n\t\t\"Uacute\": \"Ú\",\n\t\t\"uacute\": \"ú\",\n\t\t\"Ucirc\": \"Û\",\n\t\t\"ucirc\": \"û\",\n\t\t\"Ugrave\": \"Ù\",\n\t\t\"ugrave\": \"ù\",\n\t\t\"uml\": \"¨\",\n\t\t\"Uuml\": \"Ü\",\n\t\t\"uuml\": \"ü\",\n\t\t\"Yacute\": \"Ý\",\n\t\t\"yacute\": \"ý\",\n\t\t\"yen\": \"¥\",\n\t\t\"yuml\": \"ÿ\"\n\t};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"amp\": \"&\",\n\t\t\"apos\": \"'\",\n\t\t\"gt\": \">\",\n\t\t\"lt\": \"<\",\n\t\t\"quot\": \"\\\"\"\n\t};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tif (false) {\n\t  var invariant = require('fbjs/lib/invariant');\n\t  var warning = require('fbjs/lib/warning');\n\t  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\t  var loggedTypeFailures = {};\n\t}\n\t\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?Function} getStack Returns the component stack.\n\t * @private\n\t */\n\tfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n\t  if (false) {\n\t    for (var typeSpecName in typeSpecs) {\n\t      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t        var error;\n\t        // Prop type validation may throw. In case they do, we don't want to\n\t        // fail the render phase where it didn't fail before. So we log it.\n\t        // After these have been cleaned up, we'll let them throw.\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n\t          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\t        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t          // Only monitor this failure once because there tends to be a lot of the\n\t          // same error.\n\t          loggedTypeFailures[error.message] = true;\n\t\n\t          var stack = getStack ? getStack() : '';\n\t\n\t          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = checkPropTypes;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\t// React 15.5 references this module, and assumes PropTypes are still callable in production.\n\t// Therefore we re-export development-only version with all the PropTypes checks here.\n\t// However if one is migrating to the `prop-types` npm library, they will go through the\n\t// `index.js` entry point, and it will branch depending on the environment.\n\tvar factory = __webpack_require__(62);\n\tmodule.exports = function(isValidElement) {\n\t  // It is still allowed in 15.5.\n\t  var throwOnDirectAccess = false;\n\t  return factory(isValidElement, throwOnDirectAccess);\n\t};\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(5);\n\tvar invariant = __webpack_require__(2);\n\tvar ReactPropTypesSecret = __webpack_require__(27);\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    invariant(\n\t      false,\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(5);\n\tvar invariant = __webpack_require__(2);\n\tvar warning = __webpack_require__(6);\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(27);\n\tvar checkPropTypes = __webpack_require__(59);\n\t\n\tmodule.exports = function(isValidElement, throwOnDirectAccess) {\n\t  /* global Symbol */\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t  /**\n\t   * Returns the iterator method function contained on the iterable object.\n\t   *\n\t   * Be sure to invoke the function with the iterable as context:\n\t   *\n\t   *     var iteratorFn = getIteratorFn(myIterable);\n\t   *     if (iteratorFn) {\n\t   *       var iterator = iteratorFn.call(myIterable);\n\t   *       ...\n\t   *     }\n\t   *\n\t   * @param {?object} maybeIterable\n\t   * @return {?function}\n\t   */\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Collection of methods that allow declaration and validation of props that are\n\t   * supplied to React components. Example usage:\n\t   *\n\t   *   var Props = require('ReactPropTypes');\n\t   *   var MyArticle = React.createClass({\n\t   *     propTypes: {\n\t   *       // An optional string prop named \"description\".\n\t   *       description: Props.string,\n\t   *\n\t   *       // A required enum prop named \"category\".\n\t   *       category: Props.oneOf(['News','Photos']).isRequired,\n\t   *\n\t   *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t   *       dialog: Props.instanceOf(Dialog).isRequired\n\t   *     },\n\t   *     render: function() { ... }\n\t   *   });\n\t   *\n\t   * A more formal specification of how these methods are used:\n\t   *\n\t   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t   *   decl := ReactPropTypes.{type}(.isRequired)?\n\t   *\n\t   * Each and every declaration produces a function with the same signature. This\n\t   * allows the creation of custom validation functions. For example:\n\t   *\n\t   *  var MyLink = React.createClass({\n\t   *    propTypes: {\n\t   *      // An optional string or URI prop named \"href\".\n\t   *      href: function(props, propName, componentName) {\n\t   *        var propValue = props[propName];\n\t   *        if (propValue != null && typeof propValue !== 'string' &&\n\t   *            !(propValue instanceof URI)) {\n\t   *          return new Error(\n\t   *            'Expected a string or an URI for ' + propName + ' in ' +\n\t   *            componentName\n\t   *          );\n\t   *        }\n\t   *      }\n\t   *    },\n\t   *    render: function() {...}\n\t   *  });\n\t   *\n\t   * @internal\n\t   */\n\t\n\t  var ANONYMOUS = '<<anonymous>>';\n\t\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t    symbol: createPrimitiveTypeChecker('symbol'),\n\t\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker\n\t  };\n\t\n\t  /**\n\t   * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t   */\n\t  /*eslint-disable no-self-compare*/\n\t  function is(x, y) {\n\t    // SameValue algorithm\n\t    if (x === y) {\n\t      // Steps 1-5, 7-10\n\t      // Steps 6.b-6.e: +0 != -0\n\t      return x !== 0 || 1 / x === 1 / y;\n\t    } else {\n\t      // Step 6.a: NaN == NaN\n\t      return x !== x && y !== y;\n\t    }\n\t  }\n\t  /*eslint-enable no-self-compare*/\n\t\n\t  /**\n\t   * We use an Error-like object for backward compatibility as people may call\n\t   * PropTypes directly and inspect their output. However, we don't use real\n\t   * Errors anymore. We don't inspect their stack anyway, and creating them\n\t   * is prohibitively expensive if they are created too often, such as what\n\t   * happens in oneOfType() for any type before the one that matched.\n\t   */\n\t  function PropTypeError(message) {\n\t    this.message = message;\n\t    this.stack = '';\n\t  }\n\t  // Make `instanceof Error` still work for returned errors.\n\t  PropTypeError.prototype = Error.prototype;\n\t\n\t  function createChainableTypeChecker(validate) {\n\t    if (false) {\n\t      var manualPropTypeCallCache = {};\n\t      var manualPropTypeWarningCount = 0;\n\t    }\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\t\n\t      if (secret !== ReactPropTypesSecret) {\n\t        if (throwOnDirectAccess) {\n\t          // New behavior only for users of `prop-types` package\n\t          invariant(\n\t            false,\n\t            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t            'Use `PropTypes.checkPropTypes()` to call them. ' +\n\t            'Read more at http://fb.me/use-check-prop-types'\n\t          );\n\t        } else if (false) {\n\t          // Old behavior for people using React.PropTypes\n\t          var cacheKey = componentName + ':' + propName;\n\t          if (\n\t            !manualPropTypeCallCache[cacheKey] &&\n\t            // Avoid spamming the console because they are often not actionable except for lib authors\n\t            manualPropTypeWarningCount < 3\n\t          ) {\n\t            warning(\n\t              false,\n\t              'You are manually calling a React.PropTypes validation ' +\n\t              'function for the `%s` prop on `%s`. This is deprecated ' +\n\t              'and will throw in the standalone `prop-types` package. ' +\n\t              'You may be seeing this warning due to a third-party PropTypes ' +\n\t              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n\t              propFullName,\n\t              componentName\n\t            );\n\t            manualPropTypeCallCache[cacheKey] = true;\n\t            manualPropTypeWarningCount++;\n\t          }\n\t        }\n\t      }\n\t      if (props[propName] == null) {\n\t        if (isRequired) {\n\t          if (props[propName] === null) {\n\t            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t          }\n\t          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\t\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t    return chainedCheckType;\n\t  }\n\t\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName, secret) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t        // check, but we can offer a more precise error message here rather than\n\t        // 'of type `object`'.\n\t        var preciseType = getPreciseType(propValue);\n\t\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n\t  }\n\t\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!isValidElement(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t       false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n\t      return emptyFunction.thatReturnsNull;\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (is(propValue, expectedValues[i])) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t       false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n\t      return emptyFunction.thatReturnsNull;\n\t    }\n\t\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (typeof checker !== 'function') {\n\t        warning(\n\t          false,\n\t          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +\n\t          'received %s at index %s.',\n\t          getPostfixForTypeWarning(checker),\n\t          i\n\t        );\n\t        return emptyFunction.thatReturnsNull;\n\t      }\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || isValidElement(propValue)) {\n\t          return true;\n\t        }\n\t\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            // Iterator will provide entry [k,v] tuples rather than values.\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\t\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\t\n\t  function isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === 'symbol') {\n\t      return true;\n\t    }\n\t\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue['@@toStringTag'] === 'Symbol') {\n\t      return true;\n\t    }\n\t\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  // Equivalent of `typeof` but with special handling for array and regexp.\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      // Old webkits (at least until Android 4.0) return 'function' rather than\n\t      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t      // passes PropTypes.object.\n\t      return 'object';\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t      return 'symbol';\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  // This handles more types than `getPropType`. Only used for error messages.\n\t  // See `createPrimitiveTypeChecker`.\n\t  function getPreciseType(propValue) {\n\t    if (typeof propValue === 'undefined' || propValue === null) {\n\t      return '' + propValue;\n\t    }\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  // Returns a string that is postfixed to a warning about an invalid type.\n\t  // For example, \"undefined\" or \"of type array\"\n\t  function getPostfixForTypeWarning(value) {\n\t    var type = getPreciseType(value);\n\t    switch (type) {\n\t      case 'array':\n\t      case 'object':\n\t        return 'an ' + type;\n\t      case 'boolean':\n\t      case 'date':\n\t      case 'regexp':\n\t        return 'a ' + type;\n\t      default:\n\t        return type;\n\t    }\n\t  }\n\t\n\t  // Returns class name of the object, if any.\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\t\n\t  ReactPropTypes.checkPropTypes = checkPropTypes;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(68);\n\tvar _curry1 = __webpack_require__(3);\n\tvar curryN = __webpack_require__(28);\n\t\n\t\n\t/**\n\t * Creates a new list iteration function from an existing one by adding two new\n\t * parameters to its callback function: the current index, and the entire list.\n\t *\n\t * This would turn, for instance, [`R.map`](#map) function into one that\n\t * more closely resembles `Array.prototype.map`. Note that this will only work\n\t * for functions in which the iteration callback function is the first\n\t * parameter, and where the list is the last parameter. (This latter might be\n\t * unimportant if the list parameter is not used.)\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.15.0\n\t * @category Function\n\t * @category List\n\t * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n\t * @param {Function} fn A list iteration function that does not pass index or list to its callback\n\t * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n\t * @example\n\t *\n\t *      var mapIndexed = R.addIndex(R.map);\n\t *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n\t *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n\t */\n\tmodule.exports = _curry1(function addIndex(fn) {\n\t  return curryN(fn.length, function() {\n\t    var idx = 0;\n\t    var origFn = arguments[0];\n\t    var list = arguments[arguments.length - 1];\n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t    args[0] = function() {\n\t      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n\t      idx += 1;\n\t      return result;\n\t    };\n\t    return fn.apply(this, args);\n\t  });\n\t});\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(10);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Creates a function that is bound to a context.\n\t * Note: `R.bind` does not provide the additional argument-binding capabilities of\n\t * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.6.0\n\t * @category Function\n\t * @category Object\n\t * @sig (* -> *) -> {*} -> (* -> *)\n\t * @param {Function} fn The function to bind to context\n\t * @param {Object} thisObj The context to bind `fn` to\n\t * @return {Function} A function that will execute in the context of `thisObj`.\n\t * @see R.partial\n\t * @example\n\t *\n\t *      var log = R.bind(console.log, console);\n\t *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n\t *      // logs {a: 2}\n\t * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n\t */\n\tmodule.exports = _curry2(function bind(fn, thisObj) {\n\t  return _arity(fn.length, function() {\n\t    return fn.apply(thisObj, arguments);\n\t  });\n\t});\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(11);\n\tvar _filter = __webpack_require__(71);\n\tvar _isObject = __webpack_require__(74);\n\tvar _reduce = __webpack_require__(13);\n\tvar _xfilter = __webpack_require__(79);\n\tvar keys = __webpack_require__(30);\n\t\n\t\n\t/**\n\t * Takes a predicate and a `Filterable`, and returns a new filterable of the\n\t * same type containing the members of the given filterable which satisfy the\n\t * given predicate. Filterable objects include plain objects or any object\n\t * that has a filter method such as `Array`.\n\t *\n\t * Dispatches to the `filter` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Filterable f => (a -> Boolean) -> f a -> f a\n\t * @param {Function} pred\n\t * @param {Array} filterable\n\t * @return {Array} Filterable\n\t * @see R.reject, R.transduce, R.addIndex\n\t * @example\n\t *\n\t *      var isEven = n => n % 2 === 0;\n\t *\n\t *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n\t *\n\t *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n\t */\n\tmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n\t  return (\n\t    _isObject(filterable) ?\n\t      _reduce(function(acc, key) {\n\t        if (pred(filterable[key])) {\n\t          acc[key] = filterable[key];\n\t        }\n\t        return acc;\n\t      }, {}, keys(filterable)) :\n\t    // else\n\t      _filter(pred, filterable)\n\t  );\n\t}));\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(11);\n\tvar _xfind = __webpack_require__(80);\n\t\n\t\n\t/**\n\t * Returns the first element of the list which matches the predicate, or\n\t * `undefined` if no element matches.\n\t *\n\t * Dispatches to the `find` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> a | undefined\n\t * @param {Function} fn The predicate function used to determine if the element is the\n\t *        desired one.\n\t * @param {Array} list The array to consider.\n\t * @return {Object} The element found, or `undefined`.\n\t * @see R.transduce\n\t * @example\n\t *\n\t *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n\t *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n\t *      R.find(R.propEq('a', 4))(xs); //=> undefined\n\t */\n\tmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  while (idx < len) {\n\t    if (fn(list[idx])) {\n\t      return list[idx];\n\t    }\n\t    idx += 1;\n\t  }\n\t}));\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _complement(f) {\n\t  return function() {\n\t    return !f.apply(this, arguments);\n\t  };\n\t};\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Private `concat` function to merge two array-like objects.\n\t *\n\t * @private\n\t * @param {Array|Arguments} [set1=[]] An array-like object.\n\t * @param {Array|Arguments} [set2=[]] An array-like object.\n\t * @return {Array} A new, merged array.\n\t * @example\n\t *\n\t *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n\t */\n\tmodule.exports = function _concat(set1, set2) {\n\t  set1 = set1 || [];\n\t  set2 = set2 || [];\n\t  var idx;\n\t  var len1 = set1.length;\n\t  var len2 = set2.length;\n\t  var result = [];\n\t\n\t  idx = 0;\n\t  while (idx < len1) {\n\t    result[result.length] = set1[idx];\n\t    idx += 1;\n\t  }\n\t  idx = 0;\n\t  while (idx < len2) {\n\t    result[result.length] = set2[idx];\n\t    idx += 1;\n\t  }\n\t  return result;\n\t};\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(3);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isPlaceholder = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * Optimized internal three-arity curry function.\n\t *\n\t * @private\n\t * @category Function\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} The curried function.\n\t */\n\tmodule.exports = function _curry3(fn) {\n\t  return function f3(a, b, c) {\n\t    switch (arguments.length) {\n\t      case 0:\n\t        return f3;\n\t      case 1:\n\t        return _isPlaceholder(a) ? f3\n\t             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n\t      case 2:\n\t        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n\t             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n\t             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n\t             : _curry1(function(_c) { return fn(a, b, _c); });\n\t      default:\n\t        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n\t             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n\t             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n\t             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n\t             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n\t             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n\t             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n\t             : fn(a, b, c);\n\t    }\n\t  };\n\t};\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(10);\n\tvar _isPlaceholder = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * Internal curryN function.\n\t *\n\t * @private\n\t * @category Function\n\t * @param {Number} length The arity of the curried function.\n\t * @param {Array} received An array of arguments received thus far.\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} The curried function.\n\t */\n\tmodule.exports = function _curryN(length, received, fn) {\n\t  return function() {\n\t    var combined = [];\n\t    var argsIdx = 0;\n\t    var left = length;\n\t    var combinedIdx = 0;\n\t    while (combinedIdx < received.length || argsIdx < arguments.length) {\n\t      var result;\n\t      if (combinedIdx < received.length &&\n\t          (!_isPlaceholder(received[combinedIdx]) ||\n\t           argsIdx >= arguments.length)) {\n\t        result = received[combinedIdx];\n\t      } else {\n\t        result = arguments[argsIdx];\n\t        argsIdx += 1;\n\t      }\n\t      combined[combinedIdx] = result;\n\t      if (!_isPlaceholder(result)) {\n\t        left -= 1;\n\t      }\n\t      combinedIdx += 1;\n\t    }\n\t    return left <= 0 ? fn.apply(this, combined)\n\t                     : _arity(left, _curryN(length, combined, fn));\n\t  };\n\t};\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _filter(fn, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  var result = [];\n\t\n\t  while (idx < len) {\n\t    if (fn(list[idx])) {\n\t      result[result.length] = list[idx];\n\t    }\n\t    idx += 1;\n\t  }\n\t  return result;\n\t};\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _has = __webpack_require__(12);\n\t\n\t\n\tmodule.exports = (function() {\n\t  var toString = Object.prototype.toString;\n\t  return toString.call(arguments) === '[object Arguments]' ?\n\t    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n\t    function _isArguments(x) { return _has('callee', x); };\n\t}());\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(3);\n\tvar _isArray = __webpack_require__(29);\n\tvar _isString = __webpack_require__(75);\n\t\n\t\n\t/**\n\t * Tests whether or not an object is similar to an array.\n\t *\n\t * @private\n\t * @category Type\n\t * @category List\n\t * @sig * -> Boolean\n\t * @param {*} x The object to test.\n\t * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n\t * @example\n\t *\n\t *      _isArrayLike([]); //=> true\n\t *      _isArrayLike(true); //=> false\n\t *      _isArrayLike({}); //=> false\n\t *      _isArrayLike({length: 10}); //=> false\n\t *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n\t */\n\tmodule.exports = _curry1(function isArrayLike(x) {\n\t  if (_isArray(x)) { return true; }\n\t  if (!x) { return false; }\n\t  if (typeof x !== 'object') { return false; }\n\t  if (_isString(x)) { return false; }\n\t  if (x.nodeType === 1) { return !!x.length; }\n\t  if (x.length === 0) { return true; }\n\t  if (x.length > 0) {\n\t    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n\t  }\n\t  return false;\n\t});\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isObject(x) {\n\t  return Object.prototype.toString.call(x) === '[object Object]';\n\t};\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isString(x) {\n\t  return Object.prototype.toString.call(x) === '[object String]';\n\t};\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isTransformer(obj) {\n\t  return typeof obj['@@transducer/step'] === 'function';\n\t};\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _map(fn, functor) {\n\t  var idx = 0;\n\t  var len = functor.length;\n\t  var result = Array(len);\n\t  while (idx < len) {\n\t    result[idx] = fn(functor[idx]);\n\t    idx += 1;\n\t  }\n\t  return result;\n\t};\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _reduced(x) {\n\t  return x && x['@@transducer/reduced'] ? x :\n\t    {\n\t      '@@transducer/value': x,\n\t      '@@transducer/reduced': true\n\t    };\n\t};\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(14);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XFilter(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t  }\n\t  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n\t  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\t  XFilter.prototype['@@transducer/step'] = function(result, input) {\n\t    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n\t  };\n\t\n\t  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduced = __webpack_require__(78);\n\tvar _xfBase = __webpack_require__(14);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XFind(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t    this.found = false;\n\t  }\n\t  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\t  XFind.prototype['@@transducer/result'] = function(result) {\n\t    if (!this.found) {\n\t      result = this.xf['@@transducer/step'](result, void 0);\n\t    }\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XFind.prototype['@@transducer/step'] = function(result, input) {\n\t    if (this.f(input)) {\n\t      this.found = true;\n\t      result = _reduced(this.xf['@@transducer/step'](result, input));\n\t    }\n\t    return result;\n\t  };\n\t\n\t  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(14);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XMap(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t  }\n\t  XMap.prototype['@@transducer/init'] = _xfBase.init;\n\t  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\t  XMap.prototype['@@transducer/step'] = function(result, input) {\n\t    return this.xf['@@transducer/step'](result, this.f(input));\n\t  };\n\t\n\t  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = (function() {\n\t  function XWrap(fn) {\n\t    this.f = fn;\n\t  }\n\t  XWrap.prototype['@@transducer/init'] = function() {\n\t    throw new Error('init not implemented on XWrap');\n\t  };\n\t  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n\t  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n\t    return this.f(acc, x);\n\t  };\n\t\n\t  return function _xwrap(fn) { return new XWrap(fn); };\n\t}());\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(11);\n\tvar _map = __webpack_require__(77);\n\tvar _reduce = __webpack_require__(13);\n\tvar _xmap = __webpack_require__(81);\n\tvar curryN = __webpack_require__(28);\n\tvar keys = __webpack_require__(30);\n\t\n\t\n\t/**\n\t * Takes a function and\n\t * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n\t * applies the function to each of the functor's values, and returns\n\t * a functor of the same shape.\n\t *\n\t * Ramda provides suitable `map` implementations for `Array` and `Object`,\n\t * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n\t *\n\t * Dispatches to the `map` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * Also treats functions as functors and will compose them together.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Functor f => (a -> b) -> f a -> f b\n\t * @param {Function} fn The function to be called on every element of the input `list`.\n\t * @param {Array} list The list to be iterated over.\n\t * @return {Array} The new list.\n\t * @see R.transduce, R.addIndex\n\t * @example\n\t *\n\t *      var double = x => x * 2;\n\t *\n\t *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n\t *\n\t *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n\t * @symb R.map(f, [a, b]) = [f(a), f(b)]\n\t * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n\t * @symb R.map(f, functor_o) = functor_o.map(f)\n\t */\n\tmodule.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n\t  switch (Object.prototype.toString.call(functor)) {\n\t    case '[object Function]':\n\t      return curryN(functor.length, function() {\n\t        return fn.call(this, functor.apply(this, arguments));\n\t      });\n\t    case '[object Object]':\n\t      return _reduce(function(acc, key) {\n\t        acc[key] = fn(functor[key]);\n\t        return acc;\n\t      }, {}, keys(functor));\n\t    default:\n\t      return _map(fn, functor);\n\t  }\n\t}));\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(69);\n\tvar _reduce = __webpack_require__(13);\n\t\n\t\n\t/**\n\t * Returns a single item by iterating through the list, successively calling\n\t * the iterator function and passing it an accumulator value and the current\n\t * value from the array, and then passing the result to the next call.\n\t *\n\t * The iterator function receives two values: *(acc, value)*. It may use\n\t * [`R.reduced`](#reduced) to shortcut the iteration.\n\t *\n\t * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n\t * is *(value, acc)*.\n\t *\n\t * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n\t * arrays), unlike the native `Array.prototype.reduce` method. For more details\n\t * on this behavior, see:\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n\t *\n\t * Dispatches to the `reduce` method of the third argument, if present. When\n\t * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n\t * shortcuting, as this is not implemented by `reduce`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig ((a, b) -> a) -> a -> [b] -> a\n\t * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t *        current element from the array.\n\t * @param {*} acc The accumulator value.\n\t * @param {Array} list The list to iterate over.\n\t * @return {*} The final, accumulated value.\n\t * @see R.reduced, R.addIndex, R.reduceRight\n\t * @example\n\t *\n\t *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n\t *                -               -10\n\t *               / \\              / \\\n\t *              -   4           -6   4\n\t *             / \\              / \\\n\t *            -   3   ==>     -3   3\n\t *           / \\              / \\\n\t *          -   2           -1   2\n\t *         / \\              / \\\n\t *        0   1            0   1\n\t *\n\t * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n\t */\n\tmodule.exports = _curry3(_reduce);\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _complement = __webpack_require__(67);\n\tvar _curry2 = __webpack_require__(1);\n\tvar filter = __webpack_require__(65);\n\t\n\t\n\t/**\n\t * The complement of [`filter`](#filter).\n\t *\n\t * Acts as a transducer if a transformer is given in list position. Filterable\n\t * objects include plain objects or any object that has a filter method such\n\t * as `Array`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Filterable f => (a -> Boolean) -> f a -> f a\n\t * @param {Function} pred\n\t * @param {Array} filterable\n\t * @return {Array}\n\t * @see R.filter, R.transduce, R.addIndex\n\t * @example\n\t *\n\t *      var isOdd = (n) => n % 2 === 1;\n\t *\n\t *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n\t *\n\t *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n\t */\n\tmodule.exports = _curry2(function reject(pred, filterable) {\n\t  return filter(_complement(pred), filterable);\n\t});\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(3);\n\tvar _has = __webpack_require__(12);\n\t\n\t\n\t/**\n\t * Converts an object into an array of key, value arrays. Only the object's\n\t * own properties are used.\n\t * Note that the order of the output array is not guaranteed to be consistent\n\t * across different JS platforms.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.4.0\n\t * @category Object\n\t * @sig {String: *} -> [[String,*]]\n\t * @param {Object} obj The object to extract from\n\t * @return {Array} An array of key, value arrays from the object's own properties.\n\t * @see R.fromPairs\n\t * @example\n\t *\n\t *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n\t */\n\tmodule.exports = _curry1(function toPairs(obj) {\n\t  var pairs = [];\n\t  for (var prop in obj) {\n\t    if (_has(prop, obj)) {\n\t      pairs[pairs.length] = [prop, obj[prop]];\n\t    }\n\t  }\n\t  return pairs;\n\t});\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Escape and wrap key so it is safe to use as a reactid\n\t *\n\t * @param {string} key to be escaped.\n\t * @return {string} the escaped key.\n\t */\n\t\n\tfunction escape(key) {\n\t  var escapeRegex = /[=:]/g;\n\t  var escaperLookup = {\n\t    '=': '=0',\n\t    ':': '=2'\n\t  };\n\t  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n\t    return escaperLookup[match];\n\t  });\n\t\n\t  return '$' + escapedString;\n\t}\n\t\n\t/**\n\t * Unescape and unwrap key for human-readable display\n\t *\n\t * @param {string} key to unescape.\n\t * @return {string} the unescaped key.\n\t */\n\tfunction unescape(key) {\n\t  var unescapeRegex = /(=0|=2)/g;\n\t  var unescaperLookup = {\n\t    '=0': '=',\n\t    '=2': ':'\n\t  };\n\t  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\t\n\t  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n\t    return unescaperLookup[match];\n\t  });\n\t}\n\t\n\tvar KeyEscapeUtils = {\n\t  escape: escape,\n\t  unescape: unescape\n\t};\n\t\n\tmodule.exports = KeyEscapeUtils;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(9);\n\t\n\tvar invariant = __webpack_require__(2);\n\t\n\t/**\n\t * Static poolers. Several custom versions for each potential number of\n\t * arguments. A completely generic pooler is easy to implement, but would\n\t * require accessing the `arguments` object. In each of these, `this` refers to\n\t * the Class itself, not an instance. If any others are needed, simply add them\n\t * here, or in their own files.\n\t */\n\tvar oneArgumentPooler = function (copyFieldsFrom) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, copyFieldsFrom);\n\t    return instance;\n\t  } else {\n\t    return new Klass(copyFieldsFrom);\n\t  }\n\t};\n\t\n\tvar twoArgumentPooler = function (a1, a2) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2);\n\t  }\n\t};\n\t\n\tvar threeArgumentPooler = function (a1, a2, a3) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3);\n\t  }\n\t};\n\t\n\tvar fourArgumentPooler = function (a1, a2, a3, a4) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4);\n\t  }\n\t};\n\t\n\tvar standardReleaser = function (instance) {\n\t  var Klass = this;\n\t  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n\t  instance.destructor();\n\t  if (Klass.instancePool.length < Klass.poolSize) {\n\t    Klass.instancePool.push(instance);\n\t  }\n\t};\n\t\n\tvar DEFAULT_POOL_SIZE = 10;\n\tvar DEFAULT_POOLER = oneArgumentPooler;\n\t\n\t/**\n\t * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n\t * itself (statically) not adding any prototypical fields. Any CopyConstructor\n\t * you give this may have a `poolSize` property, and will look for a\n\t * prototypical `destructor` on instances.\n\t *\n\t * @param {Function} CopyConstructor Constructor that can be used to reset.\n\t * @param {Function} pooler Customizable pooler.\n\t */\n\tvar addPoolingTo = function (CopyConstructor, pooler) {\n\t  // Casting as any so that flow ignores the actual implementation and trusts\n\t  // it to match the type we declared\n\t  var NewKlass = CopyConstructor;\n\t  NewKlass.instancePool = [];\n\t  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\t  if (!NewKlass.poolSize) {\n\t    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n\t  }\n\t  NewKlass.release = standardReleaser;\n\t  return NewKlass;\n\t};\n\t\n\tvar PooledClass = {\n\t  addPoolingTo: addPoolingTo,\n\t  oneArgumentPooler: oneArgumentPooler,\n\t  twoArgumentPooler: twoArgumentPooler,\n\t  threeArgumentPooler: threeArgumentPooler,\n\t  fourArgumentPooler: fourArgumentPooler\n\t};\n\t\n\tmodule.exports = PooledClass;\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(7);\n\t\n\tvar ReactBaseClasses = __webpack_require__(31);\n\tvar ReactChildren = __webpack_require__(90);\n\tvar ReactDOMFactories = __webpack_require__(91);\n\tvar ReactElement = __webpack_require__(4);\n\tvar ReactPropTypes = __webpack_require__(92);\n\tvar ReactVersion = __webpack_require__(93);\n\t\n\tvar createReactClass = __webpack_require__(94);\n\tvar onlyChild = __webpack_require__(97);\n\t\n\tvar createElement = ReactElement.createElement;\n\tvar createFactory = ReactElement.createFactory;\n\tvar cloneElement = ReactElement.cloneElement;\n\t\n\tif (false) {\n\t  var lowPriorityWarning = require('./lowPriorityWarning');\n\t  var canDefineProperty = require('./canDefineProperty');\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  var didWarnPropTypesDeprecated = false;\n\t  createElement = ReactElementValidator.createElement;\n\t  createFactory = ReactElementValidator.createFactory;\n\t  cloneElement = ReactElementValidator.cloneElement;\n\t}\n\t\n\tvar __spread = _assign;\n\tvar createMixin = function (mixin) {\n\t  return mixin;\n\t};\n\t\n\tif (false) {\n\t  var warnedForSpread = false;\n\t  var warnedForCreateMixin = false;\n\t  __spread = function () {\n\t    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');\n\t    warnedForSpread = true;\n\t    return _assign.apply(null, arguments);\n\t  };\n\t\n\t  createMixin = function (mixin) {\n\t    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');\n\t    warnedForCreateMixin = true;\n\t    return mixin;\n\t  };\n\t}\n\t\n\tvar React = {\n\t  // Modern\n\t\n\t  Children: {\n\t    map: ReactChildren.map,\n\t    forEach: ReactChildren.forEach,\n\t    count: ReactChildren.count,\n\t    toArray: ReactChildren.toArray,\n\t    only: onlyChild\n\t  },\n\t\n\t  Component: ReactBaseClasses.Component,\n\t  PureComponent: ReactBaseClasses.PureComponent,\n\t\n\t  createElement: createElement,\n\t  cloneElement: cloneElement,\n\t  isValidElement: ReactElement.isValidElement,\n\t\n\t  // Classic\n\t\n\t  PropTypes: ReactPropTypes,\n\t  createClass: createReactClass,\n\t  createFactory: createFactory,\n\t  createMixin: createMixin,\n\t\n\t  // This looks DOM specific but these are actually isomorphic helpers\n\t  // since they are just generating DOM strings.\n\t  DOM: ReactDOMFactories,\n\t\n\t  version: ReactVersion,\n\t\n\t  // Deprecated hook for JSX spread, don't use this for anything.\n\t  __spread: __spread\n\t};\n\t\n\tif (false) {\n\t  var warnedForCreateClass = false;\n\t  if (canDefineProperty) {\n\t    Object.defineProperty(React, 'PropTypes', {\n\t      get: function () {\n\t        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');\n\t        didWarnPropTypesDeprecated = true;\n\t        return ReactPropTypes;\n\t      }\n\t    });\n\t\n\t    Object.defineProperty(React, 'createClass', {\n\t      get: function () {\n\t        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + \" Use a plain JavaScript class instead. If you're not yet \" + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');\n\t        warnedForCreateClass = true;\n\t        return createReactClass;\n\t      }\n\t    });\n\t  }\n\t\n\t  // React.DOM factories are deprecated. Wrap these methods so that\n\t  // invocations of the React.DOM namespace and alert users to switch\n\t  // to the `react-dom-factories` package.\n\t  React.DOM = {};\n\t  var warnedForFactories = false;\n\t  Object.keys(ReactDOMFactories).forEach(function (factory) {\n\t    React.DOM[factory] = function () {\n\t      if (!warnedForFactories) {\n\t        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);\n\t        warnedForFactories = true;\n\t      }\n\t      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);\n\t    };\n\t  });\n\t}\n\t\n\tmodule.exports = React;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(88);\n\tvar ReactElement = __webpack_require__(4);\n\t\n\tvar emptyFunction = __webpack_require__(5);\n\tvar traverseAllChildren = __webpack_require__(98);\n\t\n\tvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n\tvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\t\n\tvar userProvidedKeyEscapeRegex = /\\/+/g;\n\tfunction escapeUserProvidedKey(text) {\n\t  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * traversal. Allows avoiding binding callbacks.\n\t *\n\t * @constructor ForEachBookKeeping\n\t * @param {!function} forEachFunction Function to perform traversal with.\n\t * @param {?*} forEachContext Context to perform context with.\n\t */\n\tfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n\t  this.func = forEachFunction;\n\t  this.context = forEachContext;\n\t  this.count = 0;\n\t}\n\tForEachBookKeeping.prototype.destructor = function () {\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\t\n\tfunction forEachSingleChild(bookKeeping, child, name) {\n\t  var func = bookKeeping.func,\n\t      context = bookKeeping.context;\n\t\n\t  func.call(context, child, bookKeeping.count++);\n\t}\n\t\n\t/**\n\t * Iterates through children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} forEachFunc\n\t * @param {*} forEachContext Context for forEachContext.\n\t */\n\tfunction forEachChildren(children, forEachFunc, forEachContext) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n\t  traverseAllChildren(children, forEachSingleChild, traverseContext);\n\t  ForEachBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * mapping. Allows avoiding binding callbacks.\n\t *\n\t * @constructor MapBookKeeping\n\t * @param {!*} mapResult Object containing the ordered map of results.\n\t * @param {!function} mapFunction Function to perform mapping with.\n\t * @param {?*} mapContext Context to perform mapping with.\n\t */\n\tfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n\t  this.result = mapResult;\n\t  this.keyPrefix = keyPrefix;\n\t  this.func = mapFunction;\n\t  this.context = mapContext;\n\t  this.count = 0;\n\t}\n\tMapBookKeeping.prototype.destructor = function () {\n\t  this.result = null;\n\t  this.keyPrefix = null;\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\t\n\tfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n\t  var result = bookKeeping.result,\n\t      keyPrefix = bookKeeping.keyPrefix,\n\t      func = bookKeeping.func,\n\t      context = bookKeeping.context;\n\t\n\t\n\t  var mappedChild = func.call(context, child, bookKeeping.count++);\n\t  if (Array.isArray(mappedChild)) {\n\t    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n\t  } else if (mappedChild != null) {\n\t    if (ReactElement.isValidElement(mappedChild)) {\n\t      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n\t      // Keep both the (mapped) and old keys if they differ, just as\n\t      // traverseAllChildren used to do for objects as children\n\t      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n\t    }\n\t    result.push(mappedChild);\n\t  }\n\t}\n\t\n\tfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n\t  var escapedPrefix = '';\n\t  if (prefix != null) {\n\t    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n\t  }\n\t  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n\t  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n\t  MapBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * Maps children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n\t *\n\t * The provided mapFunction(child, key, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func The map function.\n\t * @param {*} context Context for mapFunction.\n\t * @return {object} Object containing the ordered map of results.\n\t */\n\tfunction mapChildren(children, func, context) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n\t  return result;\n\t}\n\t\n\tfunction forEachSingleChildDummy(traverseContext, child, name) {\n\t  return null;\n\t}\n\t\n\t/**\n\t * Count the number of children that are typically specified as\n\t * `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n\t *\n\t * @param {?*} children Children tree container.\n\t * @return {number} The number of children.\n\t */\n\tfunction countChildren(children, context) {\n\t  return traverseAllChildren(children, forEachSingleChildDummy, null);\n\t}\n\t\n\t/**\n\t * Flatten a children object (typically specified as `props.children`) and\n\t * return an array with appropriately re-keyed children.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n\t */\n\tfunction toArray(children) {\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n\t  return result;\n\t}\n\t\n\tvar ReactChildren = {\n\t  forEach: forEachChildren,\n\t  map: mapChildren,\n\t  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n\t  count: countChildren,\n\t  toArray: toArray\n\t};\n\t\n\tmodule.exports = ReactChildren;\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(4);\n\t\n\t/**\n\t * Create a factory that creates HTML tag elements.\n\t *\n\t * @private\n\t */\n\tvar createDOMFactory = ReactElement.createFactory;\n\tif (false) {\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  createDOMFactory = ReactElementValidator.createFactory;\n\t}\n\t\n\t/**\n\t * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n\t *\n\t * @public\n\t */\n\tvar ReactDOMFactories = {\n\t  a: createDOMFactory('a'),\n\t  abbr: createDOMFactory('abbr'),\n\t  address: createDOMFactory('address'),\n\t  area: createDOMFactory('area'),\n\t  article: createDOMFactory('article'),\n\t  aside: createDOMFactory('aside'),\n\t  audio: createDOMFactory('audio'),\n\t  b: createDOMFactory('b'),\n\t  base: createDOMFactory('base'),\n\t  bdi: createDOMFactory('bdi'),\n\t  bdo: createDOMFactory('bdo'),\n\t  big: createDOMFactory('big'),\n\t  blockquote: createDOMFactory('blockquote'),\n\t  body: createDOMFactory('body'),\n\t  br: createDOMFactory('br'),\n\t  button: createDOMFactory('button'),\n\t  canvas: createDOMFactory('canvas'),\n\t  caption: createDOMFactory('caption'),\n\t  cite: createDOMFactory('cite'),\n\t  code: createDOMFactory('code'),\n\t  col: createDOMFactory('col'),\n\t  colgroup: createDOMFactory('colgroup'),\n\t  data: createDOMFactory('data'),\n\t  datalist: createDOMFactory('datalist'),\n\t  dd: createDOMFactory('dd'),\n\t  del: createDOMFactory('del'),\n\t  details: createDOMFactory('details'),\n\t  dfn: createDOMFactory('dfn'),\n\t  dialog: createDOMFactory('dialog'),\n\t  div: createDOMFactory('div'),\n\t  dl: createDOMFactory('dl'),\n\t  dt: createDOMFactory('dt'),\n\t  em: createDOMFactory('em'),\n\t  embed: createDOMFactory('embed'),\n\t  fieldset: createDOMFactory('fieldset'),\n\t  figcaption: createDOMFactory('figcaption'),\n\t  figure: createDOMFactory('figure'),\n\t  footer: createDOMFactory('footer'),\n\t  form: createDOMFactory('form'),\n\t  h1: createDOMFactory('h1'),\n\t  h2: createDOMFactory('h2'),\n\t  h3: createDOMFactory('h3'),\n\t  h4: createDOMFactory('h4'),\n\t  h5: createDOMFactory('h5'),\n\t  h6: createDOMFactory('h6'),\n\t  head: createDOMFactory('head'),\n\t  header: createDOMFactory('header'),\n\t  hgroup: createDOMFactory('hgroup'),\n\t  hr: createDOMFactory('hr'),\n\t  html: createDOMFactory('html'),\n\t  i: createDOMFactory('i'),\n\t  iframe: createDOMFactory('iframe'),\n\t  img: createDOMFactory('img'),\n\t  input: createDOMFactory('input'),\n\t  ins: createDOMFactory('ins'),\n\t  kbd: createDOMFactory('kbd'),\n\t  keygen: createDOMFactory('keygen'),\n\t  label: createDOMFactory('label'),\n\t  legend: createDOMFactory('legend'),\n\t  li: createDOMFactory('li'),\n\t  link: createDOMFactory('link'),\n\t  main: createDOMFactory('main'),\n\t  map: createDOMFactory('map'),\n\t  mark: createDOMFactory('mark'),\n\t  menu: createDOMFactory('menu'),\n\t  menuitem: createDOMFactory('menuitem'),\n\t  meta: createDOMFactory('meta'),\n\t  meter: createDOMFactory('meter'),\n\t  nav: createDOMFactory('nav'),\n\t  noscript: createDOMFactory('noscript'),\n\t  object: createDOMFactory('object'),\n\t  ol: createDOMFactory('ol'),\n\t  optgroup: createDOMFactory('optgroup'),\n\t  option: createDOMFactory('option'),\n\t  output: createDOMFactory('output'),\n\t  p: createDOMFactory('p'),\n\t  param: createDOMFactory('param'),\n\t  picture: createDOMFactory('picture'),\n\t  pre: createDOMFactory('pre'),\n\t  progress: createDOMFactory('progress'),\n\t  q: createDOMFactory('q'),\n\t  rp: createDOMFactory('rp'),\n\t  rt: createDOMFactory('rt'),\n\t  ruby: createDOMFactory('ruby'),\n\t  s: createDOMFactory('s'),\n\t  samp: createDOMFactory('samp'),\n\t  script: createDOMFactory('script'),\n\t  section: createDOMFactory('section'),\n\t  select: createDOMFactory('select'),\n\t  small: createDOMFactory('small'),\n\t  source: createDOMFactory('source'),\n\t  span: createDOMFactory('span'),\n\t  strong: createDOMFactory('strong'),\n\t  style: createDOMFactory('style'),\n\t  sub: createDOMFactory('sub'),\n\t  summary: createDOMFactory('summary'),\n\t  sup: createDOMFactory('sup'),\n\t  table: createDOMFactory('table'),\n\t  tbody: createDOMFactory('tbody'),\n\t  td: createDOMFactory('td'),\n\t  textarea: createDOMFactory('textarea'),\n\t  tfoot: createDOMFactory('tfoot'),\n\t  th: createDOMFactory('th'),\n\t  thead: createDOMFactory('thead'),\n\t  time: createDOMFactory('time'),\n\t  title: createDOMFactory('title'),\n\t  tr: createDOMFactory('tr'),\n\t  track: createDOMFactory('track'),\n\t  u: createDOMFactory('u'),\n\t  ul: createDOMFactory('ul'),\n\t  'var': createDOMFactory('var'),\n\t  video: createDOMFactory('video'),\n\t  wbr: createDOMFactory('wbr'),\n\t\n\t  // SVG\n\t  circle: createDOMFactory('circle'),\n\t  clipPath: createDOMFactory('clipPath'),\n\t  defs: createDOMFactory('defs'),\n\t  ellipse: createDOMFactory('ellipse'),\n\t  g: createDOMFactory('g'),\n\t  image: createDOMFactory('image'),\n\t  line: createDOMFactory('line'),\n\t  linearGradient: createDOMFactory('linearGradient'),\n\t  mask: createDOMFactory('mask'),\n\t  path: createDOMFactory('path'),\n\t  pattern: createDOMFactory('pattern'),\n\t  polygon: createDOMFactory('polygon'),\n\t  polyline: createDOMFactory('polyline'),\n\t  radialGradient: createDOMFactory('radialGradient'),\n\t  rect: createDOMFactory('rect'),\n\t  stop: createDOMFactory('stop'),\n\t  svg: createDOMFactory('svg'),\n\t  text: createDOMFactory('text'),\n\t  tspan: createDOMFactory('tspan')\n\t};\n\t\n\tmodule.exports = ReactDOMFactories;\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(4),\n\t    isValidElement = _require.isValidElement;\n\t\n\tvar factory = __webpack_require__(60);\n\t\n\tmodule.exports = factory(isValidElement);\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = '15.6.1';\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(31),\n\t    Component = _require.Component;\n\t\n\tvar _require2 = __webpack_require__(4),\n\t    isValidElement = _require2.isValidElement;\n\t\n\tvar ReactNoopUpdateQueue = __webpack_require__(34);\n\tvar factory = __webpack_require__(43);\n\t\n\tmodule.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/* global Symbol */\n\t\n\tvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\tvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t/**\n\t * Returns the iterator method function contained on the iterable object.\n\t *\n\t * Be sure to invoke the function with the iterable as context:\n\t *\n\t *     var iteratorFn = getIteratorFn(myIterable);\n\t *     if (iteratorFn) {\n\t *       var iterator = iteratorFn.call(myIterable);\n\t *       ...\n\t *     }\n\t *\n\t * @param {?object} maybeIterable\n\t * @return {?function}\n\t */\n\tfunction getIteratorFn(maybeIterable) {\n\t  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t  if (typeof iteratorFn === 'function') {\n\t    return iteratorFn;\n\t  }\n\t}\n\t\n\tmodule.exports = getIteratorFn;\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Forked from fbjs/warning:\n\t * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n\t *\n\t * Only change is we use console.warn instead of console.error,\n\t * and do nothing when 'console' is not supported.\n\t * This really simplifies the code.\n\t * ---\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar lowPriorityWarning = function () {};\n\t\n\tif (false) {\n\t  var printWarning = function (format) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    var argIndex = 0;\n\t    var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t      return args[argIndex++];\n\t    });\n\t    if (typeof console !== 'undefined') {\n\t      console.warn(message);\n\t    }\n\t    try {\n\t      // --- Welcome to debugging React ---\n\t      // This error was thrown as a convenience so that you can use this stack\n\t      // to find the callsite that caused this warning to fire.\n\t      throw new Error(message);\n\t    } catch (x) {}\n\t  };\n\t\n\t  lowPriorityWarning = function (condition, format) {\n\t    if (format === undefined) {\n\t      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t    }\n\t    if (!condition) {\n\t      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t        args[_key2 - 2] = arguments[_key2];\n\t      }\n\t\n\t      printWarning.apply(undefined, [format].concat(args));\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = lowPriorityWarning;\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(9);\n\t\n\tvar ReactElement = __webpack_require__(4);\n\t\n\tvar invariant = __webpack_require__(2);\n\t\n\t/**\n\t * Returns the first child in a collection of children and verifies that there\n\t * is only one child in the collection.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n\t *\n\t * The current implementation of this function assumes that a single child gets\n\t * passed without a wrapper, but the purpose of this helper function is to\n\t * abstract away the particular structure of children.\n\t *\n\t * @param {?object} children Child collection structure.\n\t * @return {ReactElement} The first and only `ReactElement` contained in the\n\t * structure.\n\t */\n\tfunction onlyChild(children) {\n\t  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n\t  return children;\n\t}\n\t\n\tmodule.exports = onlyChild;\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(9);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(32);\n\tvar REACT_ELEMENT_TYPE = __webpack_require__(33);\n\t\n\tvar getIteratorFn = __webpack_require__(95);\n\tvar invariant = __webpack_require__(2);\n\tvar KeyEscapeUtils = __webpack_require__(87);\n\tvar warning = __webpack_require__(6);\n\t\n\tvar SEPARATOR = '.';\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * This is inlined from ReactElement since this file is shared between\n\t * isomorphic and renderers. We could extract this to a\n\t *\n\t */\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  // Do some typechecking here since we call this blindly. We want to ensure\n\t  // that we don't block potential future ES APIs.\n\t  if (component && typeof component === 'object' && component.key != null) {\n\t    // Explicit key\n\t    return KeyEscapeUtils.escape(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' ||\n\t  // The following is inlined from ReactElement. This means we can optimize\n\t  // some checks. React Fiber also inlines this logic for similar purposes.\n\t  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (false) {\n\t          var mapsAsChildrenAddendum = '';\n\t          if (ReactCurrentOwner.current) {\n\t            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n\t            if (mapsAsChildrenOwnerName) {\n\t              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n\t            }\n\t          }\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (false) {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = \" It looks like you're using an element created by a different \" + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _camelize = __webpack_require__(100);\n\tvar _curry = __webpack_require__(39);\n\t\n\tmodule.exports = _curry(function camelize(str) {\n\t  return _camelize(str, true);\n\t});\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar trim = __webpack_require__(104);\n\tvar decap = __webpack_require__(101);\n\t\n\tmodule.exports = function camelize(str, decapitalize) {\n\t  str = trim(str).replace(/[-_\\s]+(.)?/g, function(match, c) {\n\t    return c ? c.toUpperCase() : \"\";\n\t  });\n\t\n\t  if (decapitalize === true) {\n\t    return decap(str);\n\t  } else {\n\t    return str;\n\t  }\n\t};\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar makeString = __webpack_require__(16);\n\t\n\tmodule.exports = function decapitalize(str) {\n\t  str = makeString(str);\n\t  return str.charAt(0).toLowerCase() + str.slice(1);\n\t};\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar escapeRegExp = __webpack_require__(103);\n\t\n\tmodule.exports = function defaultToWhiteSpace(characters) {\n\t  if (characters == null)\n\t    return '\\\\s';\n\t  else if (characters.source)\n\t    return characters.source;\n\t  else\n\t    return '[' + escapeRegExp(characters) + ']';\n\t};\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar makeString = __webpack_require__(16);\n\t\n\tmodule.exports = function escapeRegExp(str) {\n\t  return makeString(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n\t};\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar makeString = __webpack_require__(16);\n\tvar defaultToWhiteSpace = __webpack_require__(102);\n\tvar nativeTrim = String.prototype.trim;\n\t\n\tmodule.exports = function trim(str, characters) {\n\t  str = makeString(str);\n\t  if (!characters && nativeTrim) return nativeTrim.call(str);\n\t  characters = defaultToWhiteSpace(characters);\n\t  return str.replace(new RegExp('^' + characters + '+|' + characters + '+$', 'g'), '');\n\t};\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 99196f879a01d07d8de5","var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_curry2.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/invariant.js\n// module id = 2\n// module chunks = 0","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_curry1.js\n// module id = 3\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar warning = require('fbjs/lib/warning');\nvar canDefineProperty = require('./canDefineProperty');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElement.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/warning.js\n// module id = 6\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 7\n// module chunks = 0","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isPlaceholder.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/reactProdInvariant.js\n// module id = 9\n// module chunks = 0","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_arity.js\n// module id = 10\n// module chunks = 0","var _isArray = require('./_isArray');\nvar _isTransformer = require('./_isTransformer');\n\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function() {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_dispatchable.js\n// module id = 11\n// module chunks = 0","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_has.js\n// module id = 12\n// module chunks = 0","var _isArrayLike = require('./_isArrayLike');\nvar _xwrap = require('./_xwrap');\nvar bind = require('../bind');\n\n\nmodule.exports = (function() {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj, methodName) {\n    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n    if (_isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n    }\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_reduce.js\n// module id = 13\n// module chunks = 0","module.exports = {\n  init: function() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function(result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfBase.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/React');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/react.js\n// module id = 15\n// module chunks = 0","/**\n * Ensure some object is a coerced to a string\n **/\nmodule.exports = function makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/underscore.string/helper/makeString.js\n// module id = 16\n// module chunks = 0","module.exports = function forEach(arr, fn) {\n  for (var i = 0; i < arr.length; i++) {\n    fn(i, arr[i]);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chickencurry/lib/forEach.js\n// module id = 17\n// module chunks = 0","/*\n * Copyright (c) 2009-2016 Frank Bennett\n * \n * \tThis program is free software: you can redistribute it and/or\n * \tmodify it under EITHER\n * \n *       * the terms of the Common Public Attribution License (CPAL) as\n * \t    published by the Open Source Initiative, either version 1 of\n * \t    the CPAL, or (at your option) any later version; OR\n * \n *       * the terms of the GNU Affero General Public License (AGPL)\n *         as published by the Free Software Foundation, either version\n *         3 of the AGPL, or (at your option) any later version.\n * \n * \tThis program is distributed in the hope that it will be useful,\n * \tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n * \tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * \tAffero General Public License for more details.\n * \n * \tYou should have received copies of the Common Public Attribution\n *     License and of the GNU Affero General Public License along with\n *     this program.  If not, see <https://opensource.org/licenses/> or\n *     <http://www.gnu.org/licenses/> respectively.\n */\nvar CSL = {\n    PROCESSOR_VERSION: \"1.1.169\",\n    CONDITION_LEVEL_TOP: 1,\n    CONDITION_LEVEL_BOTTOM: 2,\n    PLAIN_HYPHEN_REGEX: /(?:[^\\\\]-|\\u2013)/,\n    LOCATOR_LABELS_REGEXP: new RegExp(\"^((art|ch|subch|col|fig|l|n|no|op|p|pp|para|subpara|pt|r|sec|subsec|sv|sch|tit|vrs|vol)\\\\.)\\\\s+(.*)\"),\n    STATUTE_SUBDIV_GROUPED_REGEX: /((?:^| )(?:art|bk|ch|subch|col|fig|fol|l|n|no|op|p|pp|para|subpara|pt|r|sec|subsec|sv|sch|tit|vrs|vol)\\. *)/g,\n    STATUTE_SUBDIV_PLAIN_REGEX: /(?:(?:^| )(?:art|bk|ch|subch|col|fig|fol|l|n|no|op|p|pp|para|subpara|pt|r|sec|subsec|sv|sch|tit|vrs|vol)\\. *)/,\n    STATUTE_SUBDIV_STRINGS: {\n        \"art.\": \"article\",\n        \"bk.\": \"book\",\n        \"ch.\": \"chapter\",\n        \"subch.\": \"subchapter\",\n        \"p.\": \"page\",\n        \"pp.\": \"page\",\n        \"para.\": \"paragraph\",\n        \"subpara.\": \"subparagraph\",\n        \"pt.\": \"part\",\n        \"r.\": \"rule\",\n        \"sec.\": \"section\",\n        \"subsec.\": \"subsection\",\n        \"sch.\": \"schedule\",\n        \"tit.\": \"title\",\n        \"col.\": \"column\",\n        \"fig.\": \"figure\",\n        \"fol.\": \"folio\",\n        \"l.\": \"line\",\n        \"n.\": \"note\",\n        \"no.\": \"issue\",\n        \"op.\": \"opus\",\n        \"sv.\": \"sub-verbo\",\n        \"vrs.\": \"verse\",\n        \"vol.\": \"volume\"\n    },\n    STATUTE_SUBDIV_STRINGS_REVERSE: {\n        \"article\": \"art.\",\n        \"book\": \"bk.\",\n        \"chapter\": \"ch.\",\n        \"subchapter\": \"subch.\",\n        \"page\": \"p.\",\n        \"paragraph\": \"para.\",\n        \"subparagraph\": \"subpara.\",\n        \"part\": \"pt.\",\n        \"rule\": \"r.\",\n        \"section\": \"sec.\",\n        \"subsection\": \"subsec.\",\n        \"schedule\": \"sch.\",\n        \"title\": \"tit.\",\n        \"column\": \"col.\",\n        \"figure\": \"fig.\",\n        \"folio\": \"fol.\",\n        \"line\": \"l.\",\n        \"note\": \"n.\",\n        \"issue\": \"no.\",\n        \"opus\": \"op.\",\n        \"sub-verbo\": \"sv.\",\n        \"sub verbo\": \"sv.\",\n        \"verse\": \"vrs.\",\n        \"volume\": \"vol.\"\n    },\n    LOCATOR_LABELS_MAP: {\n        \"art\": \"article\",\n        \"bk\": \"book\",\n        \"ch\": \"chapter\",\n        \"subch\": \"subchapter\",\n        \"col\": \"column\",\n        \"fig\": \"figure\",\n        \"fol\": \"folio\",\n        \"l\": \"line\",\n        \"n\": \"note\",\n        \"no\": \"issue\",\n        \"op\": \"opus\",\n        \"p\": \"page\",\n        \"pp\": \"page\",\n        \"para\": \"paragraph\",\n        \"subpara\": \"subparagraph\",\n        \"pt\": \"part\",\n        \"r\": \"rule\",\n\t\t\"sec\": \"section\",\n\t\t\"subsec\": \"subsection\",\n\t\t\"sv\": \"sub-verbo\",\n        \"sch\": \"schedule\",\n        \"tit\": \"title\",\n        \"vrs\": \"verse\",\n        \"vol\": \"volume\"\n    },\n    MODULE_MACROS: {\n        \"juris-pretitle\": true,\n        \"juris-title\": true,\n        \"juris-pretitle-short\": true,\n        \"juris-title-short\": true,\n        \"juris-main\": true,\n        \"juris-main-short\": true,\n        \"juris-tail\": true,\n        \"juris-tail-short\": true,\n        \"juris-locator\": true\n    },\n    MODULE_TYPES: {\n        \"legal_case\": true,\n        \"legislation\": true,\n        \"bill\": true,\n        \"hearing\": true,\n        \"gazette\": true,\n        \"report\": true,\n        \"regulation\": true,\n        \"standard\": true\n    },\n    NestedBraces: [\n        [\"(\", \"[\"],\n        [\")\", \"]\"]\n    ],\n    checkNestedBrace: function(state) {\n        if (state.opt.xclass === \"note\") {\n            this.depth = 0;\n            this.update = function(str) {\n                var str = str ? str : '';\n                var lst = str.split(/([\\(\\)])/);\n                for (var i=1,ilen=lst.length;i<ilen;i += 2) {\n                    if (lst[i] === '(') {\n                        if (1 === (this.depth % 2)) {\n                            lst[i] = '['\n                        }\n                        this.depth += 1;\n                    } else if (lst[i] === ')') {\n                        if (0 === (this.depth % 2)) {\n                            lst[i] = ']'\n                        }\n                        this.depth -= 1;\n                    }\n                }\n                var ret = lst.join(\"\");\n                return ret;\n            }\n        } else {\n            this.update = function(str) {\n                return str;\n            }\n        };\n    },\n    MULTI_FIELDS: [\"event\", \"publisher\", \"publisher-place\", \"event-place\", \"title\", \"container-title\", \"collection-title\", \"authority\",\"genre\",\"title-short\",\"medium\",\"jurisdiction\",\"archive\",\"archive-place\"],\n    LangPrefsMap: {\n        \"title\":\"titles\",\n        \"title-short\":\"titles\",\n        \"event\":\"titles\",\n        \"genre\":\"titles\",\n        \"medium\":\"titles\",\n        \"container-title\":\"journals\",\n        \"collection-title\":\"journals\",\n        \"archive\":\"journals\",\n        \"publisher\":\"publishers\",\n        \"authority\":\"publishers\",\n        \"publisher-place\": \"places\",\n        \"event-place\": \"places\",\n        \"archive-place\": \"places\",\n        \"jurisdiction\": \"places\",\n        \"number\": \"number\",\n        \"edition\":\"number\",\n        \"issue\":\"number\",\n        \"volume\":\"number\"\n    },\n    AbbreviationSegments: function () {\n        this[\"container-title\"] = {};\n        this[\"collection-title\"] = {};\n        this[\"institution-entire\"] = {};\n        this[\"institution-part\"] = {};\n        this.nickname = {};\n        this.number = {};\n        this.title = {};\n        this.place = {};\n        this.hereinafter = {};\n        this.classic = {};\n        this[\"container-phrase\"] = {};\n        this[\"title-phrase\"] = {};\n    },\n    FIELD_CATEGORY_REMAP: {\n        \"title\": \"title\",\n        \"container-title\": \"container-title\",\n        \"collection-title\": \"collection-title\",\n        \"number\": \"number\",\n        \"place\": \"place\",\n        \"archive\": \"collection-title\",\n        \"title-short\": \"title\",\n        \"genre\": \"title\",\n        \"event\": \"title\",\n        \"medium\": \"title\",\n\t\t\"archive-place\": \"place\",\n\t\t\"publisher-place\": \"place\",\n\t\t\"event-place\": \"place\",\n\t\t\"jurisdiction\": \"place\",\n\t\t\"language-name\": \"place\",\n\t\t\"language-name-original\": \"place\",\n        \"call-number\": \"number\",\n        \"chapter-number\": \"number\",\n        \"collection-number\": \"number\",\n        \"edition\": \"number\",\n        \"page\": \"number\",\n        \"issue\": \"number\",\n        \"locator\": \"number\",\n        \"number-of-pages\": \"number\",\n        \"number-of-volumes\": \"number\",\n        \"volume\": \"number\",\n        \"citation-number\": \"number\",\n        \"publisher\": \"institution-part\"\n    },\n    parseLocator: function(item) {\n        if (this.opt.development_extensions.locator_date_and_revision) {\n            if (item.locator) {\n                item.locator = \"\" + item.locator;\n                var idx = item.locator.indexOf(\"|\");\n                if (idx > -1) {\n                    var raw_locator = item.locator;\n                    item.locator = raw_locator.slice(0, idx);\n                    raw_locator = raw_locator.slice(idx + 1);\n                    m = raw_locator.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}).*/);\n                    if (m) {\n                        item[\"locator-date\"] = this.fun.dateparser.parseDateToObject(m[1]);\n                        raw_locator = raw_locator.slice(m[1].length);\n                    }\n                    item[\"locator-extra\"] = raw_locator.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n                }\n            }\n        }\n        if (item.locator) {\n            item.locator = (\"\" + item.locator).replace(/\\s+$/, '');\n        }\n        return item;\n    },\n    normalizeLocaleStr: function(str) {\n        if (!str) return;\n        var lst = str.split('-');\n        lst[0] = lst[0].toLowerCase();\n        if (lst[1]) {\n            lst[1] = lst[1].toUpperCase();\n        }\n        return lst.join(\"-\");\n    },\n    parseNoteFieldHacks: function(Item, validFieldsForType, allowDateOverride) {\n        if (\"string\" !== typeof Item.note) return;\n        var elems = [];\n        var lines = Item.note.split('\\n');\n        var lastline = \"\";\n        for (var i=0, ilen=lines.length; i<ilen; i++) {\n            var line = lines[i];\n            var elems = [];\n            var m = line.match(CSL.NOTE_FIELDS_REGEXP);\n            if (m) {\n                var splt = line.split(CSL.NOTE_FIELDS_REGEXP);\n                for (var j=0,jlen=(splt.length-1);j<jlen;j++) {\n                    elems.push(splt[j]);\n                    elems.push(m[j]);\n                }\n                elems.push(splt[splt.length-1])\n                for (var j=1,jlen=elems.length;j<jlen;j += 2) {\n                    if (elems[j-1].trim() && (i>0 || j>1) && !elems[j-1].match(CSL.NOTE_FIELD_REGEXP)) {\n                        break\n                    } else {\n                        elems[j] = '\\n' + elems[j].slice(2,-1).trim() + '\\n';\n                    }\n                }\n                lines[i] = elems.join('');\n            }\n        }\n        lines = lines.join('\\n').split('\\n');\n        var offset = 0;\n        var names = {};\n        for (var i=0,ilen=lines.length;i<ilen;i++) {\n            var line = lines[i];\n            var mm = line.match(CSL.NOTE_FIELD_REGEXP);\n            if (!line.trim()) {\n                continue;\n            } else if (!mm) {\n                if (i === 0) {\n                    continue;\n                } else {\n                    offset = i;\n                    break;\n                }\n            }\n            var key = mm[1];\n            var val = mm[2].replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n            if (key === \"type\") {\n                Item.type = val;\n                lines[i] = \"\";\n            } else if (CSL.DATE_VARIABLES.indexOf(key) > -1) {\n                if (allowDateOverride) {\n                    Item[key] = {raw: val};\n                    if (!validFieldsForType || (validFieldsForType[key] && val.match(/^[0-9]{4}(?:-[0-9]{1,2}(?:-[0-9]{1,2})*)*$/))) {\n                        lines[i] = \"\";\n                    }\n                }\n            } else if (!Item[key]) {\n                if (CSL.NAME_VARIABLES.indexOf(key) > -1) {\n                    if (!names[key]) {\n                        names[key] = [];\n                    }\n                    var lst = val.split(/\\s*\\|\\|\\s*/);\n                    if (lst.length === 1) {\n                        names[key].push({literal:lst[0]});\n                    } else if (lst.length === 2) {\n                        var name = {family:lst[0],given:lst[1]};\n                        CSL.parseParticles(name);\n                        names[key].push(name);\n                    }\n                } else {\n                    Item[key] = val;\n                }\n                if (!validFieldsForType || validFieldsForType[key]) {\n                    lines[i] = \"\";\n                }\n            }\n        }\n        for (var key in names) {\n            Item[key] = names[key];\n        }\n        if (validFieldsForType) {\n            if (lines[offset].trim()) {\n                lines[offset] = '\\n' + lines[offset]\n            }\n            for (var i=offset-1;i>-1;i--) {\n                if (!lines[i].trim()) {\n                    lines = lines.slice(0, i).concat(lines.slice(i + 1));\n                }\n            }\n        }\n        Item.note = lines.join(\"\\n\").trim();\n    },\n    GENDERS: [\"masculine\", \"feminine\"],\n    ERROR_NO_RENDERED_FORM: 1,\n    PREVIEW: \"Just for laughs.\",\n    ASSUME_ALL_ITEMS_REGISTERED: 2,\n    START: 0,\n    END: 1,\n    SINGLETON: 2,\n    SEEN: 6,\n    SUCCESSOR: 3,\n    SUCCESSOR_OF_SUCCESSOR: 4,\n    SUPPRESS: 5,\n    SINGULAR: 0,\n    PLURAL: 1,\n    LITERAL: true,\n    BEFORE: 1,\n    AFTER: 2,\n    DESCENDING: 1,\n    ASCENDING: 2,\n    ONLY_FIRST: 1,\n    ALWAYS: 2,\n    ONLY_LAST: 3,\n    FINISH: 1,\n    POSITION_FIRST: 0,\n    POSITION_SUBSEQUENT: 1,\n    POSITION_IBID: 2,\n    POSITION_IBID_WITH_LOCATOR: 3,\n    MARK_TRAILING_NAMES: true,\n    POSITION_TEST_VARS: [\"position\", \"first-reference-note-number\", \"near-note\"],\n    AREAS: [\"citation\", \"citation_sort\", \"bibliography\", \"bibliography_sort\"],\n    CITE_FIELDS: [\"first-reference-note-number\", \"locator\", \"locator-extra\"],\n    MINIMAL_NAME_FIELDS: [\"literal\", \"family\"],\n    SWAPPING_PUNCTUATION: [\".\", \"!\", \"?\", \":\", \",\"],\n    TERMINAL_PUNCTUATION: [\":\", \".\", \";\", \"!\", \"?\", \" \"],\n    NONE: 0,\n    NUMERIC: 1,\n    POSITION: 2,\n    COLLAPSE_VALUES: [\"citation-number\", \"year\", \"year-suffix\"],\n    DATE_PARTS: [\"year\", \"month\", \"day\"],\n    DATE_PARTS_ALL: [\"year\", \"month\", \"day\", \"season\"],\n    DATE_PARTS_INTERNAL: [\"year\", \"month\", \"day\", \"year_end\", \"month_end\", \"day_end\"],\n    NAME_PARTS: [\"non-dropping-particle\", \"family\", \"given\", \"dropping-particle\", \"suffix\", \"literal\"],\n    DECORABLE_NAME_PARTS: [\"given\", \"family\", \"suffix\"],\n    DISAMBIGUATE_OPTIONS: [\n        \"disambiguate-add-names\",\n        \"disambiguate-add-givenname\",\n        \"disambiguate-add-year-suffix\"\n    ],\n    GIVENNAME_DISAMBIGUATION_RULES: [\n        \"all-names\",\n        \"all-names-with-initials\",\n        \"primary-name\",\n        \"primary-name-with-initials\",\n        \"by-cite\"\n    ],\n    NAME_ATTRIBUTES: [\n        \"and\",\n        \"delimiter-precedes-last\",\n        \"delimiter-precedes-et-al\",\n        \"initialize-with\",\n        \"initialize\",\n        \"name-as-sort-order\",\n        \"sort-separator\",\n        \"et-al-min\",\n        \"et-al-use-first\",\n        \"et-al-subsequent-min\",\n        \"et-al-subsequent-use-first\",\n        \"form\",\n        \"prefix\",\n        \"suffix\",\n        \"delimiter\"\n    ],\n    PARALLEL_MATCH_VARS: [\"container-title\"],\n    PARALLEL_TYPES: [\"bill\",\"gazette\",\"regulation\",\"legislation\",\"legal_case\",\"treaty\",\"article-magazine\",\"article-journal\"],\n    PARALLEL_COLLAPSING_MID_VARSET: [\"volume\", \"issue\", \"container-title\", \"section\", \"collection-number\"],\n    LOOSE: 0,\n    STRICT: 1,\n    TOLERANT: 2,\n    PREFIX_PUNCTUATION: /[.;:]\\s*$/,\n    SUFFIX_PUNCTUATION: /^\\s*[.;:,\\(\\)]/,\n    NUMBER_REGEXP: /(?:^\\d+|\\d+$)/,\n    NAME_INITIAL_REGEXP: /^([A-Z\\u0590-\\u05ff\\u00c0-\\u017f\\u0400-\\u042f\\u0600-\\u06ff\\u0370\\u0372\\u0376\\u0386\\u0388-\\u03ab\\u03e2\\u03e4\\u03e6\\u03e8\\u03ea\\u03ec\\u03ee\\u03f4\\u03f7\\u03fd-\\u03ff])([a-zA-Z\\u00c0-\\u017f\\u0400-\\u052f\\u0600-\\u06ff\\u0370-\\u03ff\\u1f00-\\u1fff]*|)/,\n    ROMANESQUE_REGEXP: /[-0-9a-zA-Z\\u0590-\\u05d4\\u05d6-\\u05ff\\u0080-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]/,\n    ROMANESQUE_NOT_REGEXP: /[^a-zA-Z\\u0590-\\u05ff\\u00c0-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]/g,\n    STARTSWITH_ROMANESQUE_REGEXP: /^[&a-zA-Z\\u0590-\\u05d4\\u05d6-\\u05ff\\u00c0-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]/,\n    ENDSWITH_ROMANESQUE_REGEXP: /[.;:&a-zA-Z\\u0590-\\u05d4\\u05d6-\\u05ff\\u00c0-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]$/,\n    ALL_ROMANESQUE_REGEXP: /^[a-zA-Z\\u0590-\\u05ff\\u00c0-\\u017f\\u0400-\\u052f\\u0370-\\u03ff\\u1f00-\\u1fff\\u0600-\\u06ff\\u200c\\u200d\\u200e\\u0218\\u0219\\u021a\\u021b\\u202a-\\u202e]+$/,\n    VIETNAMESE_SPECIALS: /[\\u00c0-\\u00c3\\u00c8-\\u00ca\\u00cc\\u00cd\\u00d2-\\u00d5\\u00d9\\u00da\\u00dd\\u00e0-\\u00e3\\u00e8-\\u00ea\\u00ec\\u00ed\\u00f2-\\u00f5\\u00f9\\u00fa\\u00fd\\u0101\\u0103\\u0110\\u0111\\u0128\\u0129\\u0168\\u0169\\u01a0\\u01a1\\u01af\\u01b0\\u1ea0-\\u1ef9]/,\n    VIETNAMESE_NAMES: /^(?:(?:[.AaBbCcDdEeGgHhIiKkLlMmNnOoPpQqRrSsTtUuVvXxYy \\u00c0-\\u00c3\\u00c8-\\u00ca\\u00cc\\u00cd\\u00d2-\\u00d5\\u00d9\\u00da\\u00dd\\u00e0-\\u00e3\\u00e8-\\u00ea\\u00ec\\u00ed\\u00f2-\\u00f5\\u00f9\\u00fa\\u00fd\\u0101\\u0103\\u0110\\u0111\\u0128\\u0129\\u0168\\u0169\\u01a0\\u01a1\\u01af\\u01b0\\u1ea0-\\u1ef9]{2,6})(\\s+|$))+$/,\n    NOTE_FIELDS_REGEXP: /\\{:(?:[\\-_a-z]+|[A-Z]+):[^\\}]+\\}/g,\n    NOTE_FIELD_REGEXP: /^([\\-_a-z]+|[A-Z]+):\\s*([^\\}]+)$/,\n\tPARTICLE_GIVEN_REGEXP: /^([^ ]+(?:\\u02bb |\\u2019 | |\\' ) *)(.+)$/,\n\tPARTICLE_FAMILY_REGEXP: /^([^ ]+(?:\\-|\\u02bb|\\u2019| |\\') *)(.+)$/,\n    DISPLAY_CLASSES: [\"block\", \"left-margin\", \"right-inline\", \"indent\"],\n    NAME_VARIABLES: [\n        \"author\",\n        \"editor\",\n        \"translator\",\n        \"contributor\",\n        \"collection-editor\",\n        \"composer\",\n        \"container-author\",\n        \"director\",\n        \"editorial-director\",\n        \"interviewer\",\n        \"original-author\",\n        \"recipient\"\n    ],\n    NUMERIC_VARIABLES: [\n        \"call-number\",\n        \"chapter-number\",\n        \"collection-number\",\n        \"edition\",\n        \"page\",\n        \"issue\",\n        \"locator\",\n        \"number\",\n        \"number-of-pages\",\n        \"number-of-volumes\",\n        \"volume\",\n        \"citation-number\"\n    ],\n    DATE_VARIABLES: [\n        \"locator-date\", \n        \"issued\", \n        \"event-date\", \n        \"accessed\", \n        \"container\", \n        \"original-date\",\n        \"publication-date\",\n        \"original-date\",\n        \"available-date\",\n        \"submitted\"\n    ],\n    TITLE_FIELD_SPLITS: function(seg) {\n        var keys = [\"title\", \"short\", \"main\", \"sub\"];\n        var ret = {};\n        for (var i=0,ilen=keys.length;i<ilen;i++) {\n            ret[keys[i]] = seg + \"title\" + (keys[i] === \"title\" ? \"\" : \"-\" + keys[i]);\n        }\n        return ret;\n    },\n    TAG_USEALL: function (str) {\n        var ret, open, close, end;\n        ret = [\"\"];\n        open = str.indexOf(\"<\");\n        close = str.indexOf(\">\");\n        while (open > -1 && close > -1) {\n            if (open > close) {\n                end = open + 1;\n            } else {\n                end = close + 1;\n            }\n            if (open < close && str.slice(open + 1, close).indexOf(\"<\") === -1) {\n                ret[ret.length - 1] += str.slice(0, open);\n                ret.push(str.slice(open, close + 1));\n                ret.push(\"\");\n                str = str.slice(end);\n            } else {\n                ret[ret.length - 1] += str.slice(0, close + 1);\n                str = str.slice(end);\n            }\n            open = str.indexOf(\"<\");\n            close = str.indexOf(\">\");\n        }\n        ret[ret.length - 1] += str;\n        return ret;\n    },\n    demoteNoiseWords: function (state, fld, drop_or_demote) {\n        var SKIP_WORDS = state.locale[state.opt.lang].opts[\"leading-noise-words\"];\n        if (fld && drop_or_demote) {\n            fld = fld.split(/\\s+/);\n            fld.reverse();\n            var toEnd = [];\n            for (var j  = fld.length - 1; j > -1; j += -1) {\n                if (SKIP_WORDS.indexOf(fld[j].toLowerCase()) > -1) {\n                    toEnd.push(fld.pop());\n                } else {\n                    break;\n                }\n            }\n            fld.reverse();\n            var start = fld.join(\" \");\n            var end = toEnd.join(\" \");\n            if (\"drop\" === drop_or_demote || !end) {\n                fld = start;\n            } else if (\"demote\" === drop_or_demote) {\n                fld = [start, end].join(\", \");\n            }\n        }\n        return fld;\n    },\n    extractTitleAndSubtitle: function (Item) {\n        var segments = [\"\", \"container-\"];\n        for (var i=0,ilen=segments.length;i<ilen;i++) {\n            var seg = segments[i];\n            var title = CSL.TITLE_FIELD_SPLITS(seg);\n            var langs = [false];\n            if (Item.multi) {\n                for (var lang in Item.multi._keys[title.short]) {\n                    langs.push(lang);\n                }\n            }\n            for (var j=0,jlen=langs.length;j<ilen;j++) {\n                var lang = langs[j];\n                var vals = {};\n                if (lang) {\n                    if (Item.multi._keys[title.title]) {\n                        vals[title.title] = Item.multi._keys[title.title][lang];\n                    }\n                    if (Item.multi._keys[title[\"short\"]]) {\n                        vals[title[\"short\"]] = Item.multi._keys[title[\"short\"]][lang];\n                    }\n                } else {\n                    vals[title.title] = Item[title.title];\n                    vals[title[\"short\"]] = Item[title[\"short\"]];\n                }\n                vals[title.main] = vals[title.title];\n                vals[title.sub] = false;\n                if (vals[title.title] && vals[title[\"short\"]]) {\n                    var shortTitle = vals[title[\"short\"]];\n                    offset = shortTitle.length;\n                    if (vals[title.title].slice(0,offset) === shortTitle && vals[title.title].slice(offset).match(/^\\s*:/)) {\n                        vals[title.main] = vals[title.title].slice(0,offset).replace(/\\s+$/,\"\");\n                        vals[title.sub] = vals[title.title].slice(offset).replace(/^\\s*:\\s*/,\"\");\n                    }\n                }\n                if (lang) {\n                    for (var key in vals) {\n                        if (!Item.multi._keys[key]) {\n                            Item.multi._keys[key] = {};\n                        }\n                        Item.multi._keys[key][lang] = vals[key];\n                    }\n                } else {\n                    for (var key in vals) {\n                        Item[key] = vals[key];\n                    }\n                }\n            }\n        }\n    },\n    titlecaseSentenceOrNormal: function(state, Item, seg, lang, sentenceCase) {\n        var title = CSL.TITLE_FIELD_SPLITS(seg);\n        var vals = {};\n        if (lang && Item.multi) {\n            if (Item.multi._keys[title.title]) {\n                vals[title.title] = Item.multi._keys[title.title][lang];\n            }\n            if (Item.multi._keys[title.main]) {\n                vals[title.main] = Item.multi._keys[title.main][lang];\n            }\n            if (Item.multi._keys[title.sub]) {\n                vals[title.sub] = Item.multi._keys[title.sub][lang];\n            }\n        } else {\n            vals[title.title] = Item[title.title];\n            vals[title.main] = Item[title.main];\n            vals[title.sub] = Item[title.sub];\n        }\n        if (vals[title.main] && vals[title.sub]) {\n            var mainTitle = vals[title.main];\n            var subTitle = vals[title.sub];\n            if (sentenceCase) {\n                mainTitle = CSL.Output.Formatters.sentence(state, mainTitle);\n                subTitle = CSL.Output.Formatters.sentence(state, subTitle);\n            } else {\n                subTitle = CSL.Output.Formatters[\"capitalize-first\"](state, subTitle);\n            }\n            return [mainTitle, subTitle].join(vals[title.title].slice(mainTitle.length, -1 * subTitle.length));\n        } else {\n            if (sentenceCase) {\n                return CSL.Output.Formatters.sentence(state, vals[title.title]);\n            } else {\n                return vals[title.title];\n            }\n        }\n    },\n    getSafeEscape: function(state) {\n        if ([\"bibliography\", \"citation\"].indexOf(state.tmp.area) > -1) {\n            var callbacks = [];\n            if (state.opt.development_extensions.thin_non_breaking_space_html_hack && state.opt.mode === \"html\") {\n                callbacks.push(function (txt) {\n                    return txt.replace(/\\u202f/g, '<span style=\"white-space:nowrap\">&thinsp;</span>');\n                });\n            }\n            if (callbacks.length) {\n                return function (txt) {\n                    for (var i = 0, ilen = callbacks.length; i < ilen; i += 1) {\n                        txt = callbacks[i](txt);\n                    }\n                    return CSL.Output.Formats[state.opt.mode].text_escape(txt);\n                }\n            } else {\n                return CSL.Output.Formats[state.opt.mode].text_escape;\n            }\n        } else {\n            return function (txt) { return txt; };\n        }\n    },\n    SKIP_WORDS: [\"about\",\"above\",\"across\",\"afore\",\"after\",\"against\",\"along\",\"alongside\",\"amid\",\"amidst\",\"among\",\"amongst\",\"anenst\",\"apropos\",\"apud\",\"around\",\"as\",\"aside\",\"astride\",\"at\",\"athwart\",\"atop\",\"barring\",\"before\",\"behind\",\"below\",\"beneath\",\"beside\",\"besides\",\"between\",\"beyond\",\"but\",\"by\",\"circa\",\"despite\",\"down\",\"during\",\"except\",\"for\",\"forenenst\",\"from\",\"given\",\"in\",\"inside\",\"into\",\"lest\",\"like\",\"modulo\",\"near\",\"next\",\"notwithstanding\",\"of\",\"off\",\"on\",\"onto\",\"out\",\"over\",\"per\",\"plus\",\"pro\",\"qua\",\"sans\",\"since\",\"than\",\"through\",\" thru\",\"throughout\",\"thruout\",\"till\",\"to\",\"toward\",\"towards\",\"under\",\"underneath\",\"until\",\"unto\",\"up\",\"upon\",\"versus\",\"vs.\",\"v.\",\"vs\",\"v\",\"via\",\"vis-à-vis\",\"with\",\"within\",\"without\",\"according to\",\"ahead of\",\"apart from\",\"as for\",\"as of\",\"as per\",\"as regards\",\"aside from\",\"back to\",\"because of\",\"close to\",\"due to\",\"except for\",\"far from\",\"inside of\",\"instead of\",\"near to\",\"next to\",\"on to\",\"out from\",\"out of\",\"outside of\",\"prior to\",\"pursuant to\",\"rather than\",\"regardless of\",\"such as\",\"that of\",\"up to\",\"where as\",\"or\", \"yet\", \"so\", \"for\", \"and\", \"nor\", \"a\", \"an\", \"the\", \"de\", \"d'\", \"von\", \"van\", \"c\", \"et\", \"ca\"],\n    FORMAT_KEY_SEQUENCE: [\n        \"@strip-periods\",\n        \"@font-style\",\n        \"@font-variant\",\n        \"@font-weight\",\n        \"@text-decoration\",\n        \"@vertical-align\",\n        \"@quotes\"\n    ],\n    INSTITUTION_KEYS: [\n        \"font-style\",\n        \"font-variant\",\n        \"font-weight\",\n        \"text-decoration\",\n        \"text-case\"\n    ],\n    SUFFIX_CHARS: \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\",\n    ROMAN_NUMERALS: [\n        [ \"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\" ],\n        [ \"\", \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\" ],\n        [ \"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\" ],\n        [ \"\", \"m\", \"mm\", \"mmm\", \"mmmm\", \"mmmmm\"]\n    ],\n    CREATORS: [\n        \"author\",\n        \"editor\",\n        \"contributor\",\n        \"translator\",\n        \"recipient\",\n        \"interviewer\",\n        \"composer\",\n        \"original-author\",\n        \"container-author\",\n        \"collection-editor\"\n    ],\n    LANGS: {\n        \"af-ZA\":\"Afrikaans\",\n        \"ar\":\"Arabic\",\n        \"bg-BG\":\"Bulgarian\",\n        \"ca-AD\":\"Catalan\",\n        \"cs-CZ\":\"Czech\",\n        \"da-DK\":\"Danish\",\n        \"de-AT\":\"Austrian\",\n        \"de-CH\":\"German (CH)\",\n        \"de-DE\":\"German (DE)\",\n        \"el-GR\":\"Greek\",\n        \"en-GB\":\"English (GB)\",\n        \"en-US\":\"English (US)\",\n        \"es-ES\":\"Spanish\",\n        \"et-EE\":\"Estonian\",\n        \"eu\":\"European\",\n        \"fa-IR\":\"Persian\",\n        \"fi-FI\":\"Finnish\",\n        \"fr-CA\":\"French (CA)\",\n        \"fr-FR\":\"French (FR)\",\n        \"he-IL\":\"Hebrew\",\n        \"hr-HR\":\"Croatian\",\n        \"hu-HU\":\"Hungarian\",\n        \"is-IS\":\"Icelandic\",\n        \"it-IT\":\"Italian\",\n        \"ja-JP\":\"Japanese\",\n        \"km-KH\":\"Khmer\",\n        \"ko-KR\":\"Korean\",\n        \"lt-LT\":\"Lithuanian\",\n        \"lv-LV\":\"Latvian\",\n        \"mn-MN\":\"Mongolian\",\n        \"nb-NO\":\"Norwegian (Bokmål)\",\n        \"nl-NL\":\"Dutch\",\n        \"nn-NO\":\"Norwegian (Nynorsk)\",\n        \"pl-PL\":\"Polish\",\n        \"pt-BR\":\"Portuguese (BR)\",\n        \"pt-PT\":\"Portuguese (PT)\",\n        \"ro-RO\":\"Romanian\",\n        \"ru-RU\":\"Russian\",\n        \"sk-SK\":\"Slovak\",\n        \"sl-SI\":\"Slovenian\",\n        \"sr-RS\":\"Serbian\",\n        \"sv-SE\":\"Swedish\",\n        \"th-TH\":\"Thai\",\n        \"tr-TR\":\"Turkish\",\n        \"uk-UA\":\"Ukranian\",\n        \"vi-VN\":\"Vietnamese\",\n        \"zh-CN\":\"Chinese (CN)\",\n        \"zh-TW\":\"Chinese (TW)\"\n    },\n    LANG_BASES: {\n        af: \"af_ZA\",\n        ar: \"ar\",\n        bg: \"bg_BG\",\n        ca: \"ca_AD\",\n        cs: \"cs_CZ\",\n        da: \"da_DK\",\n        de: \"de_DE\",\n        el: \"el_GR\",\n        en: \"en_US\",\n        es: \"es_ES\",\n        et: \"et_EE\",\n        eu: \"eu\",\n        fa: \"fa_IR\",\n        fi: \"fi_FI\",\n        fr: \"fr_FR\",\n        he: \"he_IL\",\n        hr: \"hr-HR\",\n        hu: \"hu_HU\",\n        is: \"is_IS\",\n        it: \"it_IT\",\n        ja: \"ja_JP\",\n        km: \"km_KH\",\n        ko: \"ko_KR\",\n        lt: \"lt_LT\",\n        lv: \"lv-LV\",\n        mn: \"mn_MN\",\n        nb: \"nb_NO\",\n        nl: \"nl_NL\",\n        nn: \"nn-NO\",\n        pl: \"pl_PL\",\n        pt: \"pt_PT\",\n        ro: \"ro_RO\",\n        ru: \"ru_RU\",\n        sk: \"sk_SK\",\n        sl: \"sl_SI\",\n        sr: \"sr_RS\",\n        sv: \"sv_SE\",\n        th: \"th_TH\",\n        tr: \"tr_TR\",\n        uk: \"uk_UA\",\n        vi: \"vi_VN\",\n        zh: \"zh_CN\"\n    },\n    SUPERSCRIPTS: {\n        \"\\u00AA\": \"\\u0061\",\n        \"\\u00B2\": \"\\u0032\",\n        \"\\u00B3\": \"\\u0033\",\n        \"\\u00B9\": \"\\u0031\",\n        \"\\u00BA\": \"\\u006F\",\n        \"\\u02B0\": \"\\u0068\",\n        \"\\u02B1\": \"\\u0266\",\n        \"\\u02B2\": \"\\u006A\",\n        \"\\u02B3\": \"\\u0072\",\n        \"\\u02B4\": \"\\u0279\",\n        \"\\u02B5\": \"\\u027B\",\n        \"\\u02B6\": \"\\u0281\",\n        \"\\u02B7\": \"\\u0077\",\n        \"\\u02B8\": \"\\u0079\",\n        \"\\u02E0\": \"\\u0263\",\n        \"\\u02E1\": \"\\u006C\",\n        \"\\u02E2\": \"\\u0073\",\n        \"\\u02E3\": \"\\u0078\",\n        \"\\u02E4\": \"\\u0295\",\n        \"\\u1D2C\": \"\\u0041\",\n        \"\\u1D2D\": \"\\u00C6\",\n        \"\\u1D2E\": \"\\u0042\",\n        \"\\u1D30\": \"\\u0044\",\n        \"\\u1D31\": \"\\u0045\",\n        \"\\u1D32\": \"\\u018E\",\n        \"\\u1D33\": \"\\u0047\",\n        \"\\u1D34\": \"\\u0048\",\n        \"\\u1D35\": \"\\u0049\",\n        \"\\u1D36\": \"\\u004A\",\n        \"\\u1D37\": \"\\u004B\",\n        \"\\u1D38\": \"\\u004C\",\n        \"\\u1D39\": \"\\u004D\",\n        \"\\u1D3A\": \"\\u004E\",\n        \"\\u1D3C\": \"\\u004F\",\n        \"\\u1D3D\": \"\\u0222\",\n        \"\\u1D3E\": \"\\u0050\",\n        \"\\u1D3F\": \"\\u0052\",\n        \"\\u1D40\": \"\\u0054\",\n        \"\\u1D41\": \"\\u0055\",\n        \"\\u1D42\": \"\\u0057\",\n        \"\\u1D43\": \"\\u0061\",\n        \"\\u1D44\": \"\\u0250\",\n        \"\\u1D45\": \"\\u0251\",\n        \"\\u1D46\": \"\\u1D02\",\n        \"\\u1D47\": \"\\u0062\",\n        \"\\u1D48\": \"\\u0064\",\n        \"\\u1D49\": \"\\u0065\",\n        \"\\u1D4A\": \"\\u0259\",\n        \"\\u1D4B\": \"\\u025B\",\n        \"\\u1D4C\": \"\\u025C\",\n        \"\\u1D4D\": \"\\u0067\",\n        \"\\u1D4F\": \"\\u006B\",\n        \"\\u1D50\": \"\\u006D\",\n        \"\\u1D51\": \"\\u014B\",\n        \"\\u1D52\": \"\\u006F\",\n        \"\\u1D53\": \"\\u0254\",\n        \"\\u1D54\": \"\\u1D16\",\n        \"\\u1D55\": \"\\u1D17\",\n        \"\\u1D56\": \"\\u0070\",\n        \"\\u1D57\": \"\\u0074\",\n        \"\\u1D58\": \"\\u0075\",\n        \"\\u1D59\": \"\\u1D1D\",\n        \"\\u1D5A\": \"\\u026F\",\n        \"\\u1D5B\": \"\\u0076\",\n        \"\\u1D5C\": \"\\u1D25\",\n        \"\\u1D5D\": \"\\u03B2\",\n        \"\\u1D5E\": \"\\u03B3\",\n        \"\\u1D5F\": \"\\u03B4\",\n        \"\\u1D60\": \"\\u03C6\",\n        \"\\u1D61\": \"\\u03C7\",\n        \"\\u2070\": \"\\u0030\",\n        \"\\u2071\": \"\\u0069\",\n        \"\\u2074\": \"\\u0034\",\n        \"\\u2075\": \"\\u0035\",\n        \"\\u2076\": \"\\u0036\",\n        \"\\u2077\": \"\\u0037\",\n        \"\\u2078\": \"\\u0038\",\n        \"\\u2079\": \"\\u0039\",\n        \"\\u207A\": \"\\u002B\",\n        \"\\u207B\": \"\\u2212\",\n        \"\\u207C\": \"\\u003D\",\n        \"\\u207D\": \"\\u0028\",\n        \"\\u207E\": \"\\u0029\",\n        \"\\u207F\": \"\\u006E\",\n        \"\\u2120\": \"\\u0053\\u004D\",\n        \"\\u2122\": \"\\u0054\\u004D\",\n        \"\\u3192\": \"\\u4E00\",\n        \"\\u3193\": \"\\u4E8C\",\n        \"\\u3194\": \"\\u4E09\",\n        \"\\u3195\": \"\\u56DB\",\n        \"\\u3196\": \"\\u4E0A\",\n        \"\\u3197\": \"\\u4E2D\",\n        \"\\u3198\": \"\\u4E0B\",\n        \"\\u3199\": \"\\u7532\",\n        \"\\u319A\": \"\\u4E59\",\n        \"\\u319B\": \"\\u4E19\",\n        \"\\u319C\": \"\\u4E01\",\n        \"\\u319D\": \"\\u5929\",\n        \"\\u319E\": \"\\u5730\",\n        \"\\u319F\": \"\\u4EBA\",\n        \"\\u02C0\": \"\\u0294\",\n        \"\\u02C1\": \"\\u0295\",\n        \"\\u06E5\": \"\\u0648\",\n        \"\\u06E6\": \"\\u064A\"\n    },\n    SUPERSCRIPTS_REGEXP: new RegExp(\"[\\u00AA\\u00B2\\u00B3\\u00B9\\u00BA\\u02B0\\u02B1\\u02B2\\u02B3\\u02B4\\u02B5\\u02B6\\u02B7\\u02B8\\u02E0\\u02E1\\u02E2\\u02E3\\u02E4\\u1D2C\\u1D2D\\u1D2E\\u1D30\\u1D31\\u1D32\\u1D33\\u1D34\\u1D35\\u1D36\\u1D37\\u1D38\\u1D39\\u1D3A\\u1D3C\\u1D3D\\u1D3E\\u1D3F\\u1D40\\u1D41\\u1D42\\u1D43\\u1D44\\u1D45\\u1D46\\u1D47\\u1D48\\u1D49\\u1D4A\\u1D4B\\u1D4C\\u1D4D\\u1D4F\\u1D50\\u1D51\\u1D52\\u1D53\\u1D54\\u1D55\\u1D56\\u1D57\\u1D58\\u1D59\\u1D5A\\u1D5B\\u1D5C\\u1D5D\\u1D5E\\u1D5F\\u1D60\\u1D61\\u2070\\u2071\\u2074\\u2075\\u2076\\u2077\\u2078\\u2079\\u207A\\u207B\\u207C\\u207D\\u207E\\u207F\\u2120\\u2122\\u3192\\u3193\\u3194\\u3195\\u3196\\u3197\\u3198\\u3199\\u319A\\u319B\\u319C\\u319D\\u319E\\u319F\\u02C0\\u02C1\\u06E5\\u06E6]\", \"g\"),\n    UPDATE_GROUP_CONTEXT_CONDITION: function (state, termtxt, valueTerm) {\n        if (state.tmp.group_context.tip.condition) {\n            if (state.tmp.group_context.tip.condition.test) {\n                var testres;\n                if (state.tmp.group_context.tip.condition.test === \"empty-label\") {\n                    testres = !termtxt;\n                } else if (state.tmp.group_context.tip.condition.test === \"comma-safe\") {\n                    var empty = !termtxt;\n                    var alpha = termtxt.slice(0,1).match(CSL.ALL_ROMANESQUE_REGEXP);\n                    var num = state.tmp.just_did_number;\n                    if (empty) {\n                        testres = true;\n                    } else if (num) {\n                        if (alpha && !valueTerm) {\n                            testres = true;\n                        } else {\n                            testres = false;\n                        }\n                    } else {\n                        if (alpha && !valueTerm) {\n                            testres = true;\n                        } else {\n                            testres = false;\n                        }\n                    }\n                }\n                if (testres) {\n                    state.tmp.group_context.tip.force_suppress = false;\n                } else {\n                    state.tmp.group_context.tip.force_suppress = true;\n                }\n                if (state.tmp.group_context.tip.condition.not) {\n                    state.tmp.group_context.tip.force_suppress = !state.tmp.group_context.tip.force_suppress;\n                }\n            }\n        } else {\n            if (termtxt.slice(-1).match(/[0-9]/)) {\n                state.tmp.just_did_number = true;\n            } else {\n                state.tmp.just_did_number = false;\n            }\n        }\n    },\n    locale: {},\n    locale_opts: {},\n    locale_dates: {}\n};\nif (typeof require !== \"undefined\" && typeof module !== 'undefined' && \"exports\" in module) {\n    var CSL_IS_NODEJS = true;\n    exports.CSL = CSL;\n}\nCSL.TERMINAL_PUNCTUATION_REGEXP = new RegExp(\"^([\" + CSL.TERMINAL_PUNCTUATION.slice(0, -1).join(\"\") + \"])(.*)\");\nCSL.CLOSURES = new RegExp(\".*[\\\\]\\\\)]\");\nif (\"undefined\" === typeof console) {\n    CSL.debug = function (str) {\n        dump(\"CSL: \" + str + \"\\n\");\n    };\n    CSL.error = function (str) {\n        dump(\"CSL error: \" + str + \"\\n\");\n    };\n} else {\n    CSL.debug = function (str) {\n        console.log(\"CSL: \" + str);\n    };\n    CSL.error = function (str) {\n        console.log(\"CSL error: \" + str);\n    };\n}\nCSL.XmlJSON = function (dataObj) {\n    this.dataObj = dataObj;\n    this.institution = {\n        name:\"institution\",\n        attrs:{\n            \"institution-parts\":\"long\",\n            \"delimiter\":\", \",\n            \"substitute-use-first\":\"1\",\n            \"use-last\":\"1\"\n        },\n        children:[\n            {\n                name:\"institution-part\",\n                attrs:{\n                    name:\"long\"\n                },\n                children:[]\n            }\n        ]\n    };\n};\nCSL.XmlJSON.prototype.clean = function (json) {\n    return json;\n};\nCSL.XmlJSON.prototype.getStyleId = function (myjson, styleName) {\n    var tagName = 'id';\n    if (styleName) {\n        tagName = 'title';\n    }\n    var ret = \"\";\n    var children = myjson.children;\n    for (var i=0,ilen=children.length;i<ilen;i++) {\n        if (children[i].name === 'info') {\n            var grandkids = children[i].children;\n            for (var j=0,jlen=grandkids.length;j<jlen;j++) {\n                if (grandkids[j].name === tagName) {\n                    ret = grandkids[j].children[0];\n                }\n            }\n        }\n    }\n    return ret;\n};\nCSL.XmlJSON.prototype.children = function (myjson) {\n    if (myjson && myjson.children.length) {\n        return myjson.children.slice();\n    } else {\n        return false;\n    }\n};\nCSL.XmlJSON.prototype.nodename = function (myjson) {\n    return myjson.name;\n};\nCSL.XmlJSON.prototype.attributes = function (myjson) {\n    var ret = {};\n    for (var attrname in myjson.attrs) {\n        ret[\"@\"+attrname] = myjson.attrs[attrname];\n    }\n    return ret;\n};\nCSL.XmlJSON.prototype.content = function (myjson) {\n    var ret = \"\";\n    if (!myjson || !myjson.children) {\n        return ret;\n    }\n    for (var i=0, ilen=myjson.children.length; i < ilen; i += 1) {\n        if (\"string\" === typeof myjson.children[i]) {\n            ret += myjson.children[i];\n        }\n    }\n    return ret;\n};\nCSL.XmlJSON.prototype.namespace = {}\nCSL.XmlJSON.prototype.numberofnodes = function (myjson) {\n    if (myjson && \"number\" == typeof myjson.length) {\n        return myjson.length;\n    } else {\n        return 0;\n    }\n};\nCSL.XmlJSON.prototype.getAttributeValue = function (myjson,name,namespace) {\n    var ret = \"\";\n    if (namespace) {\n        name = namespace+\":\"+name;\n    }\n    if (myjson) {\n        if (myjson.attrs) {\n            if (myjson.attrs[name]) {\n                ret = myjson.attrs[name];\n            } else {\n                ret = \"\";\n            }\n        }\n    }\n    return ret;\n}\nCSL.XmlJSON.prototype.getNodeValue = function (myjson,name) {\n    var ret = \"\";\n    if (name){\n        for (var i=0, ilen=myjson.children.length; i < ilen; i += 1) {\n            if (myjson.children[i].name === name) {\n                if (myjson.children[i].children.length) {\n                    ret = myjson.children[i];\n                } else {\n                    ret = \"\";\n                }\n            }\n        }\n    } else if (myjson) {\n        ret = myjson;\n    }\n    if (ret && ret.children && ret.children.length == 1 && \"string\" === typeof ret.children[0]) {\n        ret = ret.children[0];\n    }\n    return ret;\n}\nCSL.XmlJSON.prototype.setAttributeOnNodeIdentifiedByNameAttribute = function (myjson,nodename,partname,attrname,val) {\n    var pos, len, xml, nodes, node;\n    if (attrname.slice(0,1) === '@'){\n        attrname = attrname.slice(1);\n    }\n    for (var i=0,ilen=myjson.children.length; i<ilen; i += 1) {\n        if (myjson.children[i].name === nodename && myjson.children[i].attrs.name === partname) {\n            myjson.children[i].attrs[attrname] = val;\n        }\n    }\n}\nCSL.XmlJSON.prototype.deleteNodeByNameAttribute = function (myjson,val) {\n    var i, ilen;\n    for (i = 0, ilen = myjson.children.length; i < ilen; i += 1) {\n        if (!myjson.children[i] || \"string\" === typeof myjson.children[i]) {\n            continue;\n        }\n        if (myjson.children[i].attrs.name == val) {\n            myjson.children = myjson.children.slice(0,i).concat(myjson.children.slice(i+1));\n        }\n    }\n}\nCSL.XmlJSON.prototype.deleteAttribute = function (myjson,attrname) {\n    var i, ilen;\n    if (\"undefined\" !== typeof myjson.attrs[attrname]) {\n        myjson.attrs.pop(attrname);\n    }\n}\nCSL.XmlJSON.prototype.setAttribute = function (myjson,attr,val) {\n    myjson.attrs[attr] = val;\n    return false;\n}\nCSL.XmlJSON.prototype.nodeCopy = function (myjson,clone) {\n    if (!clone) {\n        var clone = {};\n    }\n    if (\"object\" === typeof clone && \"undefined\" === typeof clone.length) {\n        for (var key in myjson) {\n            if (\"string\" === typeof myjson[key]) {\n                clone[key] = myjson[key];\n            } else if (\"object\" === typeof myjson[key]) {\n                if (\"undefined\" === typeof myjson[key].length) {\n                    clone[key] = this.nodeCopy(myjson[key],{});\n                } else {\n                    clone[key] = this.nodeCopy(myjson[key],[]);\n                }\n            }\n        }\n    } else {\n        for (var i=0,ilen=myjson.length;i<ilen; i += 1) {\n            if (\"string\" === typeof myjson[i]) {\n                clone[i] = myjson[i];\n            } else {\n                clone[i] = this.nodeCopy(myjson[i],{});\n            }\n        }\n    }\n    return clone;\n}\nCSL.XmlJSON.prototype.getNodesByName = function (myjson,name,nameattrval,ret) {\n    var nodes, node, pos, len;\n    if (!ret) {\n        var ret = [];\n    }\n    if (!myjson || !myjson.children) {\n        return ret;\n    }\n    if (name === myjson.name) {\n        if (nameattrval) {\n            if (nameattrval === myjson.attrs.name) {\n                ret.push(myjson);\n            }\n        } else {\n            ret.push(myjson);\n        }\n    }\n    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1){\n        if (\"object\" !== typeof myjson.children[i]) {\n            continue;\n        }\n        this.getNodesByName(myjson.children[i],name,nameattrval,ret);\n    }\n    return ret;\n}\nCSL.XmlJSON.prototype.nodeNameIs = function (myjson,name) {\n    if (typeof myjson === \"undefined\") {\n        return false;\n    }\n    if (name == myjson.name) {\n        return true;\n    }\n    return false;\n}\nCSL.XmlJSON.prototype.makeXml = function (myjson) {\n    if (\"string\" === typeof myjson) {\n        if (myjson.slice(0, 1) === \"<\") {\n            myjson = this.jsonStringWalker.walkToObject(myjson);\n        } else {\n            myjson = JSON.parse(myjson);\n        }\n    }\n    return myjson;\n};\nCSL.XmlJSON.prototype.insertChildNodeAfter = function (parent,node,pos,datejson) {\n    for (var i=0,ilen=parent.children.length;i<ilen;i+=1) {\n        if (node === parent.children[i]) {\n            parent.children = parent.children.slice(0,i).concat([datejson]).concat(parent.children.slice(i+1));\n            break;\n        }\n    }\n    return parent;\n};\nCSL.XmlJSON.prototype.insertPublisherAndPlace = function(myjson) {\n    if (myjson.name === \"group\") {\n        var useme = true;\n        var mustHaves = [\"publisher\",\"publisher-place\"];\n        for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n            var haveVarname = mustHaves.indexOf(myjson.children[i].attrs.variable);\n            var isText = myjson.children[i].name === \"text\";\n            if (isText && haveVarname > -1 && !myjson.children[i].attrs.prefix && !myjson.children[i].attrs.suffix) {\n                mustHaves = mustHaves.slice(0,haveVarname).concat(mustHaves.slice(haveVarname+1));\n            } else {\n                useme = false;\n                break;\n            }\n        }\n        if (useme && !mustHaves.length) {\n            myjson.attrs[\"has-publisher-and-publisher-place\"] = true;\n       }\n    }\n    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n        if (\"object\" === typeof myjson.children[i]) {\n            this.insertPublisherAndPlace(myjson.children[i]);\n        }\n    }    \n}\nCSL.XmlJSON.prototype.isChildOfSubstitute = function(parents) {\n    if (parents.length > 0) {\n        var myparents = parents.slice();\n        var parent = myparents.pop();\n        if (parent === \"substitute\") {\n            return true;\n        } else {\n            return this.isChildOfSubstitute(myparents);\n        }\n    }\n    return false;\n};\nCSL.XmlJSON.prototype.addMissingNameNodes = function(myjson,parents) {\n    if (!parents) {\n        parents = [];\n    }\n    if (myjson.name === \"names\") {\n        if (!this.isChildOfSubstitute(parents)) {\n            var addName = true;\n            for (var i=0,ilen=myjson.children.length;i<ilen;i++) {\n                if (myjson.children[i].name === \"name\") {\n                    addName = false;\n                    break;\n                }\n            }\n            if (addName) {\n                myjson.children = [{name:\"name\",attrs:{},children:[]}].concat(myjson.children);\n            }\n        }\n    }\n    parents.push(myjson.name);\n    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n        if (\"object\" === typeof myjson.children[i]) {\n            this.addMissingNameNodes(myjson.children[i],parents);\n        }\n    }\n    parents.pop();\n}\nCSL.XmlJSON.prototype.addInstitutionNodes = function(myjson) {\n    var names, thenames, institution, theinstitution, name, thename, xml, pos, len;\n    if (myjson.name === \"names\") {\n        var attributes = {};\n        var insertPos = -1;\n        for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n            if (myjson.children[i].name == \"name\") {\n                for (var key in myjson.children[i].attrs) {\n                    attributes[key] = myjson.children[i].attrs[key];\n                }\n                attributes.delimiter = myjson.children[i].attrs.delimiter;\n                attributes.and = myjson.children[i].attrs.and;\n                insertPos = i;\n                for (var k=0,klen=myjson.children[i].children.length;k<klen;k+=1) {\n                    if (myjson.children[i].children[k].attrs.name !== 'family') {\n                        continue;\n                    }\n                    for (var key in myjson.children[i].children[k].attrs) {\n                        attributes[key] = myjson.children[i].children[k].attrs[key];\n                    }\n                }\n            }\n            if (myjson.children[i].name == \"institution\") {\n                insertPos = -1;\n                break;\n            }\n        }\n        if (insertPos > -1) {\n            var institution = this.nodeCopy(this.institution);\n            for (var i=0,ilen = CSL.INSTITUTION_KEYS.length;i<ilen;i+=1) {\n                var attrname = CSL.INSTITUTION_KEYS[i];\n                if (\"undefined\" !== typeof attributes[attrname]) {\n                    institution.children[0].attrs[attrname] = attributes[attrname];\n                }\n                if (attributes.delimiter) {\n                    institution.attrs.delimiter = attributes.delimiter;\n                }\n                if (attributes.and) {\n                    institution.attrs.and = \"text\";\n                }\n            }\n            myjson.children = myjson.children.slice(0,insertPos+1).concat([institution]).concat(myjson.children.slice(insertPos+1));\n        }\n    }\n    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n        if (\"string\" === typeof myjson.children[i]) {\n            continue;\n        }\n        this.addInstitutionNodes(myjson.children[i]);\n    }\n}\nCSL.XmlJSON.prototype.flagDateMacros = function(myjson) {\n    for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n        if (myjson.children[i].name === \"macro\") {\n            if (this.inspectDateMacros(myjson.children[i])) {\n                myjson.children[i].attrs[\"macro-has-date\"] = \"true\";\n            }\n        }\n    }\n}\nCSL.XmlJSON.prototype.inspectDateMacros = function(myjson) {\n    if (!myjson || !myjson.children) {\n        return false;\n    }\n    if (myjson.name === \"date\") {\n        return true;\n    } else {\n        for (var i=0,ilen=myjson.children.length;i<ilen;i+=1) {\n            if (this.inspectDateMacros(myjson.children[i])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nCSL.stripXmlProcessingInstruction = function (xml) {\n    if (!xml) {\n        return xml;\n    }\n    xml = xml.replace(/^<\\?[^?]+\\?>/, \"\");\n    xml = xml.replace(/<!--[^>]+-->/g, \"\");\n    xml = xml.replace(/^\\s+/g, \"\");\n    xml = xml.replace(/\\s+$/g, \"\");\n    return xml;\n};\nCSL.parseXml = function(str) {\n    var _pos = 0;\n    var _obj = {children:[]};\n    var _stack = [_obj.children];\n    function _listifyString(str) {\n        str = str.split(/(?:\\r\\n|\\n|\\r)/).join(\" \").replace(/>[\t ]+</g, \"><\").replace(/<\\!--.*?-->/g, \"\");\n        var lst = str.split(\"><\");\n        var stylePos = null;\n        for (var i=0,ilen=lst.length;i<ilen;i++) {\n            if (i > 0) {\n                lst[i] = \"<\" + lst[i];\n            }\n            if (i < (lst.length-1)) {\n                lst[i] = lst[i] + \">\";\n            }\n            if (\"number\" != typeof stylePos) {\n                if (lst[i].slice(0, 7) === \"<style \" || lst[i].slice(0, 8) == \"<locale \") {\n                    stylePos = i;\n                }\n            }\n        }\n        lst = lst.slice(stylePos);\n        for (var i=lst.length-2;i>-1;i--) {\n            if (lst[i].slice(1).indexOf(\"<\") === -1) {\n                var stub = lst[i].slice(0, 5);\n                if (stub === \"<term\") {\n                    if (lst[i+1].slice(0, 6) === \"</term\") {\n                        lst[i] = lst[i] + lst[i+1];\n                        lst = lst.slice(0, i+1).concat(lst.slice(i+2));\n                    }\n                } else if ([\"<sing\", \"<mult\"].indexOf(stub) > -1) {\n                    if (lst[i].slice(-2) !== \"/>\" && lst[i+1].slice(0, 1) === \"<\") {\n                        lst[i] = lst[i] + lst[i+1];\n                        lst = lst.slice(0, i+1).concat(lst.slice(i+2));\n                    }\n                }\n            }\n        }\n        return lst;\n    }\n    function _decodeHtmlEntities(str) {\n        return str\n            .split(\"&amp;\").join(\"&\")\n            .split(\"&quot;\").join(\"\\\"\")\n            .split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\")\n            .replace(/&#([0-9]{1,6});/gi, function(match, numStr) {\n                var num = parseInt(numStr, 10); // read num as normal number\n                return String.fromCharCode(num);\n            })\n            .replace(/&#x([a-f0-9]{1,6});/gi, function(match, numStr){\n                var num = parseInt(numStr, 16); // read num as hex\n                return String.fromCharCode(num);\n            });\n    }\n    function _getAttributes(elem) {\n        var m = elem.match(/([^\\'\\\"=\t ]+)=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\')/g);\n        if (m) {\n            for (var i=0,ilen=m.length;i<ilen;i++) {\n                m[i] = m[i].replace(/=.*/, \"\");\n            }\n        }\n        return m;\n    }\n    function _getAttribute(elem, attr) {\n        var rex = RegExp('^.*[\t ]+' + attr + '=(\\\"(?:[^\\\"]*)\\\"|\\'(?:[^\\']*)\\').*$');\n        var m = elem.match(rex);\n        return m ? m[1].slice(1, -1) : null;\n    }\n    function _getTagName(elem) {\n        var rex = RegExp(\"^<([^\t />]+)\");\n        var m = elem.match(rex);\n        return m ? m[1] : null;\n    }\n    function _castObjectFromOpeningTag(elem) {\n        var obj = {};\n        obj.name = _getTagName(elem);\n        obj.attrs = {};\n        var attributes = _getAttributes(elem);\n        if (attributes) {\n            for (var i=0,ilen=attributes.length;i<ilen;i++) {\n                var attr = {\n                    name: attributes[i],\n                    value: _getAttribute(elem, attributes[i])\n                }\n                obj.attrs[attr.name] = _decodeHtmlEntities(attr.value);\n            }\n        }\n        obj.children = [];\n        return obj;\n    }\n    function _extractTextFromCompositeElement(elem) {\n        var m = elem.match(/^.*>([^<]*)<.*$/);\n        return _decodeHtmlEntities(m[1]);\n    }\n    function _appendToChildren(obj) {\n        _stack.slice(-1)[0].push(obj);\n    }\n    function _extendStackWithNewChildren(obj) {\n        _stack.push(obj.children);\n    }\n    function processElement(elem) {\n        var obj;\n        if (elem.slice(1).indexOf('<') > -1) {\n            var tag = elem.slice(0, elem.indexOf('>')+1);\n            obj = _castObjectFromOpeningTag(tag);\n            obj.children = [_extractTextFromCompositeElement(elem)];\n            _appendToChildren(obj);\n        } else if (elem.slice(-2) === '/>') {\n            obj = _castObjectFromOpeningTag(elem);\n            if (_getTagName(elem) === 'term') {\n                obj.children.push('');\n            }\n            _appendToChildren(obj);\n        } else if (elem.slice(0, 2) === '</') {\n            _stack.pop();\n        } else {\n            obj = _castObjectFromOpeningTag(elem);\n            _appendToChildren(obj)\n            _extendStackWithNewChildren(obj);\n        }\n    }\n    var lst = _listifyString(str);\n    for (var i=0,ilen=lst.length;i<ilen;i++) {\n        var elem = lst[i];\n        processElement(elem);\n    }\n    return _obj.children[0];\n}\nCSL.XmlDOM = function (dataObj) {\n    this.dataObj = dataObj;\n    if (\"undefined\" == typeof DOMParser) {\n        DOMParser = function() {};\n        DOMParser.prototype.parseFromString = function(str, contentType) {\n            if (\"undefined\" != typeof ActiveXObject) {\n                var xmldata = new ActiveXObject('MSXML.DomDocument');\n                xmldata.async = false;\n                xmldata.loadXML(str);\n                return xmldata;\n            } else if (\"undefined\" != typeof XMLHttpRequest) {\n                var xmldata = new XMLHttpRequest;\n                if (!contentType) {\n                    contentType = 'text/xml';\n                }\n                xmldata.open('GET', 'data:' + contentType + ';charset=utf-8,' + encodeURIComponent(str), false);\n                if(xmldata.overrideMimeType) {\n                    xmldata.overrideMimeType(contentType);\n                }\n                xmldata.send(null);\n                return xmldata.responseXML;\n            } else if (\"undefined\" != typeof marknote) {\n                var parser = new marknote.Parser();\n                return parser.parse(str);\n            }\n        };\n        this.hasAttributes = function (node) {\n            var ret;\n            if (node.attributes && node.attributes.length) {\n                ret = true;\n            } else {\n                ret = false;\n            }\n            return ret;\n        };\n    } else {\n        this.hasAttributes = function (node) {\n            var ret;\n            if (node.attributes && node.attributes.length) {\n                ret = true;\n            } else {\n                ret = false;\n            }\n            return ret;\n        };\n    }\n    this.importNode = function (doc, srcElement) {\n        if (\"undefined\" == typeof doc.importNode) {\n            var ret = this._importNode(doc, srcElement, true);\n        } else {\n            var ret = doc.importNode(srcElement, true);\n        }\n        return ret;\n    };\n    this._importNode = function(doc, node, allChildren) {\n        switch (node.nodeType) {\n            case 1:\n                var newNode = doc.createElement(node.nodeName);\n                if (node.attributes && node.attributes.length > 0)\n                    for (var i = 0, il = node.attributes.length; i < il;)\n                        newNode.setAttribute(node.attributes[i].nodeName, node.getAttribute(node.attributes[i++].nodeName));\n                    if (allChildren && node.childNodes && node.childNodes.length > 0)\n                        for (var i = 0, il = node.childNodes.length; i < il;)\n                            newNode.appendChild(this._importNode(doc, node.childNodes[i++], allChildren));\n                return newNode;\n                break;\n            case 3:\n            case 4:\n            case 8:\n        }\n    };\n    this.parser = new DOMParser();\n    var str = \"<docco><institution institution-parts=\\\"long\\\" delimiter=\\\", \\\" substitute-use-first=\\\"1\\\" use-last=\\\"1\\\"><institution-part name=\\\"long\\\"/></institution></docco>\";\n    var inst_doc = this.parser.parseFromString(str, \"text/xml\");\n    var inst_node = inst_doc.getElementsByTagName(\"institution\");\n    this.institution = inst_node.item(0);\n    var inst_part_node = inst_doc.getElementsByTagName(\"institution-part\");\n    this.institutionpart = inst_part_node.item(0);\n    this.ns = \"http://purl.org/net/xbiblio/csl\";\n};\nCSL.XmlDOM.prototype.clean = function (xml) {\n    xml = xml.replace(/<\\?[^?]+\\?>/g, \"\");\n    xml = xml.replace(/<![^>]+>/g, \"\");\n    xml = xml.replace(/^\\s+/, \"\");\n    xml = xml.replace(/\\s+$/, \"\");\n    xml = xml.replace(/^\\n*/, \"\");\n    return xml;\n};\nCSL.XmlDOM.prototype.getStyleId = function (myxml, styleName) {\n    var text = \"\";\n    var tagName = \"id\";\n    if (styleName) {\n        tagName = \"title\";\n    }\n    var node = myxml.getElementsByTagName(tagName);\n    if (node && node.length) {\n        node = node.item(0);\n    }\n    if (node) {\n        text = node.textContent;\n    }\n    if (!text) {\n        text = node.innerText;\n    }\n    if (!text) {\n        text = node.innerHTML;\n    }\n    return text;\n};\nCSL.XmlDOM.prototype.children = function (myxml) {\n    var children, pos, len, ret;\n    if (myxml) {\n        ret = [];\n        children = myxml.childNodes;\n        for (pos = 0, len = children.length; pos < len; pos += 1) {\n            if (children[pos].nodeName != \"#text\") {\n                ret.push(children[pos]);\n            }\n        }\n        return ret;\n    } else {\n        return [];\n    }\n};\nCSL.XmlDOM.prototype.nodename = function (myxml) {\n    var ret = myxml.nodeName;\n    return ret;\n};\nCSL.XmlDOM.prototype.attributes = function (myxml) {\n    var ret, attrs, attr, key, xml, pos, len;\n    ret = new Object();\n    if (myxml && this.hasAttributes(myxml)) {\n        attrs = myxml.attributes;\n        for (pos = 0, len=attrs.length; pos < len; pos += 1) {\n            attr = attrs[pos];\n            ret[\"@\" + attr.name] = attr.value;\n        }\n    }\n    return ret;\n};\nCSL.XmlDOM.prototype.content = function (myxml) {\n    var ret;\n    if (\"undefined\" != typeof myxml.textContent) {\n        ret = myxml.textContent;\n    } else if (\"undefined\" != typeof myxml.innerText) {\n        ret = myxml.innerText;\n    } else {\n        ret = myxml.txt;\n    }\n    return ret;\n};\nCSL.XmlDOM.prototype.namespace = {\n    \"xml\":\"http://www.w3.org/XML/1998/namespace\"\n}\nCSL.XmlDOM.prototype.numberofnodes = function (myxml) {\n    if (myxml) {\n        return myxml.length;\n    } else {\n        return 0;\n    }\n};\nCSL.XmlDOM.prototype.getAttributeName = function (attr) {\n    var ret = attr.name;\n    return ret;\n}\nCSL.XmlDOM.prototype.getAttributeValue = function (myxml,name,namespace) {\n    var ret = \"\";\n    if (namespace) {\n        name = namespace+\":\"+name;\n    }\n    if (myxml && this.hasAttributes(myxml) && myxml.getAttribute(name)) {\n        ret = myxml.getAttribute(name);\n    }\n    return ret;\n}\nCSL.XmlDOM.prototype.getNodeValue = function (myxml,name) {\n    var ret = null;\n    if (name){\n        var vals = myxml.getElementsByTagName(name);\n        if (vals.length > 0) {\n            if (\"undefined\" != typeof vals[0].textContent) {\n                ret = vals[0].textContent;\n            } else if (\"undefined\" != typeof vals[0].innerText) {\n                ret = vals[0].innerText;\n            } else {\n                ret = vals[0].text;\n            }\n        }\n    }\n    if (ret === null && myxml && myxml.childNodes && (myxml.childNodes.length == 0 || (myxml.childNodes.length == 1 && myxml.firstChild.nodeName == \"#text\"))) {\n        if (\"undefined\" != typeof myxml.textContent) {\n            ret = myxml.textContent;\n        } else if (\"undefined\" != typeof myxml.innerText) {\n            ret = myxml.innerText;\n        } else {\n            ret = myxml.text;\n        }\n    }\n    if (ret === null) {\n        ret = myxml;\n    }\n    return ret;\n}\nCSL.XmlDOM.prototype.setAttributeOnNodeIdentifiedByNameAttribute = function (myxml,nodename,partname,attrname,val) {\n    var pos, len, xml, nodes, node;\n    if (attrname.slice(0,1) === '@'){\n        attrname = attrname.slice(1);\n    }\n    nodes = myxml.getElementsByTagName(nodename);\n    for (pos = 0, len = nodes.length; pos < len; pos += 1) {\n        node = nodes[pos];\n        if (node.getAttribute(\"name\") != partname) {\n            continue;\n        }\n        node.setAttribute(attrname, val);\n    }\n}\nCSL.XmlDOM.prototype.deleteNodeByNameAttribute = function (myxml,val) {\n    var pos, len, node, nodes;\n    nodes = myxml.childNodes;\n    for (pos = 0, len = nodes.length; pos < len; pos += 1) {\n        node = nodes[pos];\n        if (!node || node.nodeType == node.TEXT_NODE) {\n            continue;\n        }\n        if (this.hasAttributes(node) && node.getAttribute(\"name\") == val) {\n            myxml.removeChild(nodes[pos]);\n        }\n    }\n}\nCSL.XmlDOM.prototype.deleteAttribute = function (myxml,attr) {\n    myxml.removeAttribute(attr);\n}\nCSL.XmlDOM.prototype.setAttribute = function (myxml,attr,val) {\n    if (!myxml.ownerDocument) {\n        myxml = myxml.firstChild;\n    }\n    if ([\"function\", \"unknown\"].indexOf(typeof myxml.setAttribute) > -1) {\n        myxml.setAttribute(attr, val);\n    }\n    return false;\n}\nCSL.XmlDOM.prototype.nodeCopy = function (myxml) {\n    var cloned_node = myxml.cloneNode(true);\n    return cloned_node;\n}\nCSL.XmlDOM.prototype.getNodesByName = function (myxml,name,nameattrval) {\n    var ret, nodes, node, pos, len;\n    ret = [];\n    nodes = myxml.getElementsByTagName(name);\n    for (pos = 0, len = nodes.length; pos < len; pos += 1) {\n        node = nodes.item(pos);\n        if (nameattrval && !(this.hasAttributes(node) && node.getAttribute(\"name\") == nameattrval)) {\n            continue;\n        }\n        ret.push(node);\n    }\n    return ret;\n}\nCSL.XmlDOM.prototype.nodeNameIs = function (myxml,name) {\n    if (name == myxml.nodeName) {\n        return true;\n    }\n    return false;\n}\nCSL.XmlDOM.prototype.makeXml = function (myxml) {\n    var ret, topnode;\n    if (!myxml) {\n        myxml = \"<docco><bogus/></docco>\";\n    }\n    myxml = myxml.replace(/\\s*<\\?[^>]*\\?>\\s*\\n*/g, \"\");\n    var nodetree = this.parser.parseFromString(myxml, \"application/xml\");\n    return nodetree.firstChild;\n};\nCSL.XmlDOM.prototype.insertChildNodeAfter = function (parent,node,pos,datexml) {\n    var myxml, xml;\n    myxml = this.importNode(node.ownerDocument, datexml);\n    parent.replaceChild(myxml, node);\n     return parent;\n};\nCSL.XmlDOM.prototype.insertPublisherAndPlace = function(myxml) {\n    var group = myxml.getElementsByTagName(\"group\");\n    for (var i = 0, ilen = group.length; i < ilen; i += 1) {\n        var node = group.item(i);\n        var skippers = [];\n        for (var j = 0, jlen = node.childNodes.length; j < jlen; j += 1) {\n            if (node.childNodes.item(j).nodeType !== 1) {\n                skippers.push(j);\n            }\n        }\n        if (node.childNodes.length - skippers.length === 2) {\n            var twovars = [];\n            for (var j = 0, jlen = 2; j < jlen; j += 1) {\n                if (skippers.indexOf(j) > -1) {\n                    continue;\n                }\n                var child = node.childNodes.item(j);                    \n                var subskippers = [];\n                for (var k = 0, klen = child.childNodes.length; k < klen; k += 1) {\n                    if (child.childNodes.item(k).nodeType !== 1) {\n                        subskippers.push(k);\n                    }\n                }\n                if (child.childNodes.length - subskippers.length === 0) {\n                    twovars.push(child.getAttribute('variable'));\n                    if (child.getAttribute('suffix')\n                        || child.getAttribute('prefix')) {\n                        twovars = [];\n                        break;\n                    }\n                }\n            }\n            if (twovars.indexOf(\"publisher\") > -1 && twovars.indexOf(\"publisher-place\") > -1) {\n                node.setAttribute('has-publisher-and-publisher-place', true);\n            }\n        }\n    }\n};\nCSL.XmlDOM.prototype.isChildOfSubstitute = function(node) {\n    if (node.parentNode) {\n        if (node.parentNode.tagName.toLowerCase() === \"substitute\") {\n            return true;\n        } else {\n            return this.isChildOfSubstitute(node.parentNode);\n        }\n    }\n    return false;\n};\nCSL.XmlDOM.prototype.addMissingNameNodes = function(myxml) {\n    var nameslist = myxml.getElementsByTagName(\"names\");\n    for (var i = 0, ilen = nameslist.length; i < ilen; i += 1) {\n        var names = nameslist.item(i);\n        var namelist = names.getElementsByTagName(\"name\");\n        if ((!namelist || namelist.length === 0)\n            && !this.isChildOfSubstitute(names)) {\n            var doc = names.ownerDocument;\n            var name = doc.createElement(\"name\");\n            names.appendChild(name);\n        }\n    }\n};\nCSL.XmlDOM.prototype.addInstitutionNodes = function(myxml) {\n    var names, thenames, institution, theinstitution, name, thename, xml, pos, len;\n    names = myxml.getElementsByTagName(\"names\");\n    for (pos = 0, len = names.length; pos < len; pos += 1) {\n        thenames = names.item(pos);\n        name = thenames.getElementsByTagName(\"name\");\n        if (name.length == 0) {\n            continue;\n        }\n        institution = thenames.getElementsByTagName(\"institution\");\n        if (institution.length == 0) {\n            theinstitution = this.importNode(myxml.ownerDocument, this.institution);\n            theinstitutionpart = theinstitution.getElementsByTagName(\"institution-part\").item(0);\n            thename = name.item(0);\n            thenames.insertBefore(theinstitution, thename.nextSibling);\n            for (var j = 0, jlen = CSL.INSTITUTION_KEYS.length; j < jlen; j += 1) {\n                var attrname = CSL.INSTITUTION_KEYS[j];\n                var attrval = thename.getAttribute(attrname);\n                if (attrval) {\n                    theinstitutionpart.setAttribute(attrname, attrval);\n                }\n            }\n            var nameparts = thename.getElementsByTagName(\"name-part\");\n            for (var j = 0, jlen = nameparts.length; j < jlen; j += 1) {\n                if ('family' === nameparts[j].getAttribute('name')) {\n                    for (var k = 0, klen = CSL.INSTITUTION_KEYS.length; k < klen; k += 1) {\n                        var attrname = CSL.INSTITUTION_KEYS[k];\n                        var attrval = nameparts[j].getAttribute(attrname);\n                        if (attrval) {\n                            theinstitutionpart.setAttribute(attrname, attrval);\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nCSL.XmlDOM.prototype.flagDateMacros = function(myxml) {\n    var pos, len, thenode, thedate;\n    nodes = myxml.getElementsByTagName(\"macro\");\n    for (pos = 0, len = nodes.length; pos < len; pos += 1) {\n        thenode = nodes.item(pos);\n        thedate = thenode.getElementsByTagName(\"date\");\n        if (thedate.length) {\n            thenode.setAttribute('macro-has-date', 'true');\n        }\n    }\n};\nif (\"undefined\" !== typeof XML) {\n    try {\n    } catch (e) {\n        throw \"OOPS: \"+e;\n    }\n}\nCSL.setupXml = function(xmlObject) {\n    var dataObj = {};\n    var parser = null;\n    if (\"undefined\" !== typeof xmlObject) {\n        if (\"string\" === typeof xmlObject) {\n            xmlObject = xmlObject.replace(\"^\\uFEFF\", \"\")\n                .replace(/^\\s+/, \"\");\n            if (xmlObject.slice(0, 1) === \"<\") {\n                dataObj = CSL.parseXml(xmlObject);\n            } else {\n                dataObj = JSON.parse(xmlObject);\n            }\n            parser = new CSL.XmlJSON(dataObj);\n        } else if (\"undefined\" !== typeof xmlObject.getAttribute) {\n            parser = new CSL.XmlDOM(xmlObject);\n        } else if (\"undefined\" !== typeof xmlObject.toXMLString) {\n            parser = new CSL.XmlE4X(xmlObject);\n        } else {\n            parser = new CSL.XmlJSON(xmlObject);\n        }\n    } else {\n        CSL.error(\"unable to parse XML input\");\n    }\n    if (!parser) {\n        throw \"citeproc-js error: unable to parse CSL style or locale object\";\n    }\n    return parser;\n}\nCSL.getSortCompare = function (default_locale) {\n    if (CSL.stringCompare) {\n        return CSL.stringCompare;\n    }\n    var strcmp;\n    var strcmp_opts = {\n        sensitivity:\"base\",\n        ignorePunctuation:true,\n        numeric:true\n   }\n    if (!default_locale) {\n        default_locale = \"en-US\";\n    }\n    strcmp = function (a, b) {\n        return a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase(),default_locale,strcmp_opts);\n    };\n    var stripPunct = function (str) {\n        return str.replace(/^[\\[\\]\\'\\\"]*/g, \"\");\n    }\n    var getBracketPreSort = function () {\n        if (!strcmp(\"[x\",\"x\")) {\n            return false;\n        } else {\n            return function (a, b) {\n                return strcmp(stripPunct(a), stripPunct(b));\n            }\n        }\n    }\n    var bracketPreSort = getBracketPreSort();\n    var sortCompare = function (a, b) {\n        if (bracketPreSort) {\n            return bracketPreSort(a, b);\n        } else {\n            return strcmp(a, b);\n        }\n    }\n    return sortCompare;\n};\nCSL.ambigConfigDiff = function(a, b) {\n    var ret, pos, len, ppos, llen;\n    if (a.names.length !== b.names.length) {\n        return 1;\n    } else {\n        for (pos = 0, len = a.names.length; pos < len; pos += 1) {\n            if (a.names[pos] !== b.names[pos]) {\n                return 1;\n            } else {\n                for (ppos = 0, llen = a.givens[pos]; ppos < llen; ppos += 1) {\n                    if (a.givens[pos][ppos] !== b.givens[pos][ppos]) {\n                        return 1;\n                    }\n                }\n            }\n        }\n    }\n    if (a.disambiguate != b.disambiguate) {\n        return 1;\n    }\n    if (a.year_suffix !== b.year_suffix) {\n        return 1;\n    }\n    return 0;\n};\nCSL.cloneAmbigConfig = function (config, oldconfig, tainters) {\n    var i, ilen, j, jlen, k, klen, param;\n    var ret = {};\n    ret.names = [];\n    ret.givens = [];\n    ret.year_suffix = false;\n    ret.disambiguate = false;\n    for (i = 0, ilen = config.names.length; i < ilen; i += 1) {\n        param = config.names[i];\n        ret.names[i] = param;\n    }\n    for (i  = 0, ilen = config.givens.length; i < ilen; i += 1) {\n        param = [];\n        for (j = 0, jlen = config.givens[i].length; j < jlen; j += 1) {\n            param.push(config.givens[i][j]);\n        }\n        ret.givens.push(param);\n    }\n    if (oldconfig) {\n        ret.year_suffix = oldconfig.year_suffix;\n        ret.disambiguate = oldconfig.disambiguate;\n    } else {\n        ret.year_suffix = config.year_suffix;\n        ret.disambiguate = config.disambiguate;\n    }\n    return ret;\n};\nCSL.getAmbigConfig = function () {\n    var config, ret;\n    config = this.tmp.disambig_request;\n    if (!config) {\n        config = this.tmp.disambig_settings;\n    }\n    ret = CSL.cloneAmbigConfig(config);\n    return ret;\n};\nCSL.getMaxVals = function () {\n    return this.tmp.names_max.mystack.slice();\n};\nCSL.getMinVal = function () {\n    return this.tmp[\"et-al-min\"];\n};\nCSL.tokenExec = function (token, Item, item) {\n    var next, maybenext, exec, debug;\n    debug = false;\n    next = token.next;\n    maybenext = false;\n    var record = function (result) {\n        if (result) {\n            this.tmp.jump.replace(\"succeed\");\n            return token.succeed;\n        } else {\n            this.tmp.jump.replace(\"fail\");\n            return token.fail;\n        }\n    }\n    if (token.test) {\n        next = record.call(this,token.test(Item, item));\n    }\n    for (var i=0,ilen=token.execs.length;i<ilen;i++) {\n        exec = token.execs[i];\n        maybenext = exec.call(token, this, Item, item);\n        if (maybenext) {\n            next = maybenext;\n        }\n    }\n    return next;\n};\nCSL.expandMacro = function (macro_key_token, target) {\n    var mkey, start_token, key, end_token, navi, macro_nodes, newoutput, mergeoutput, end_of_macro, func;\n    mkey = macro_key_token.postponed_macro;\n    macro_key_token = new CSL.Token(\"group\", CSL.START);\n    var hasDate = false;\n    var macroid = false;\n    macro_nodes = this.cslXml.getNodesByName(this.cslXml.dataObj, 'macro', mkey);\n    if (macro_nodes.length) {\n        macroid = this.cslXml.getAttributeValue(macro_nodes[0],'cslid');\n        hasDate = this.cslXml.getAttributeValue(macro_nodes[0], \"macro-has-date\");\n    }\n    if (hasDate) {\n        mkey = mkey + \"@\" + this.build.current_default_locale;\n        func = function (state, Item) {\n            if (state.tmp.extension) {\n                state.tmp[\"doing-macro-with-date\"] = true;\n            }\n        };\n        macro_key_token.execs.push(func);\n    }\n    if (this.build.macro_stack.indexOf(mkey) > -1) {\n        throw \"CSL processor error: call to macro \\\"\" + mkey + \"\\\" would cause an infinite loop\";\n    } else {\n        this.build.macro_stack.push(mkey);\n    }\n    macro_key_token.cslid = macroid;\n    if (CSL.MODULE_MACROS[mkey]) {\n        macro_key_token.juris = mkey;\n        this.opt.update_mode = CSL.POSITION;\n    }\n    CSL.Node.group.build.call(macro_key_token, this, target, true);\n    if (!this.cslXml.getNodeValue(macro_nodes)) {\n        throw \"CSL style error: undefined macro \\\"\" + mkey + \"\\\"\";\n    }\n    var mytarget = CSL.getMacroTarget.call(this, mkey);\n    if (mytarget) {\n        CSL.buildMacro.call(this, mytarget, macro_nodes);\n        CSL.configureMacro.call(this, mytarget);\n    }\n    if (!this.build.extension) {\n        var func = function(macro_name) {\n            return function (state, Item, item) {\n                var next = 0;\n                while (next < state.macros[macro_name].length) {\n                    next = CSL.tokenExec.call(state, state.macros[macro_name][next], Item, item);\n                }\n            }\n        }(mkey);\n        var text_node = new CSL.Token(\"text\", CSL.SINGLETON);\n        text_node.execs.push(func);\n        target.push(text_node);\n    }\n    end_of_macro = new CSL.Token(\"group\", CSL.END);\n    if (hasDate) {\n        func = function (state, Item) {\n            if (state.tmp.extension) {\n                state.tmp[\"doing-macro-with-date\"] = false;\n            }\n        };\n        end_of_macro.execs.push(func);\n    }\n    if (macro_key_token.juris) {\n        end_of_macro.juris = mkey;\n     }\n    CSL.Node.group.build.call(end_of_macro, this, target, true);\n    this.build.macro_stack.pop();\n};\nCSL.getMacroTarget = function (mkey) {\n    var mytarget = false;\n    if (this.build.extension) {\n        mytarget = this[this.build.root + this.build.extension].tokens;\n    } else if (!this.macros[mkey]) {\n        mytarget = [];\n        this.macros[mkey] = mytarget;\n    }\n    return mytarget;\n}\nCSL.buildMacro = function (mytarget, macro_nodes) {\n    var builder = CSL.makeBuilder(this, mytarget);\n    var mynode;\n    if (\"undefined\" === typeof macro_nodes.length) {\n        mynode = macro_nodes;\n    } else {\n        mynode = macro_nodes[0];\n    }\n    builder(mynode);\n}\nCSL.configureMacro = function (mytarget) {\n    if (!this.build.extension) {\n        this.configureTokenList(mytarget);\n    }\n}\nCSL.XmlToToken = function (state, tokentype, explicitTarget) {\n    var name, txt, attrfuncs, attributes, decorations, token, key, target;\n    name = state.cslXml.nodename(this);\n    if (state.build.skip && state.build.skip !== name) {\n        return;\n    }\n    if (!name) {\n        txt = state.cslXml.content(this);\n        if (txt) {\n            state.build.text = txt;\n        }\n        return;\n    }\n    if (!CSL.Node[state.cslXml.nodename(this)]) {\n        throw \"Undefined node name \\\"\" + name + \"\\\".\";\n    }\n    attrfuncs = [];\n    attributes = state.cslXml.attributes(this);\n    decorations = CSL.setDecorations.call(this, state, attributes);\n    token = new CSL.Token(name, tokentype);\n    if (tokentype !== CSL.END || name === \"if\" || name === \"else-if\" || name === \"layout\") {\n        for (key in attributes) {\n            if (attributes.hasOwnProperty(key)) {\n                if (tokentype === CSL.END && key !== \"@language\" && key !== \"@locale\") {\n                    continue;\n                }\n                if (attributes.hasOwnProperty(key)) {\n                    if (CSL.Attributes[key]) {\n                        try {\n                            CSL.Attributes[key].call(token, state, \"\" + attributes[key]);\n                        } catch (e) {\n                            CSL.error(e);\n                            throw \"CSL processor error, \" + key + \" attribute: \" + e;\n                        }\n                    } else {\n                        CSL.debug(\"warning: undefined attribute \\\"\"+key+\"\\\" in style\");\n                    }\n                }\n            }\n        }\n        token.decorations = decorations;\n    } else if (tokentype === CSL.END && attributes['@variable']) {\n        token.hasVariable = true;\n        if (CSL.DATE_VARIABLES.indexOf(attributes['@variable']) > -1) {\n            token.variables = attributes['@variable'].split(/\\s+/);\n        }\n    }\n    if (explicitTarget) {\n        target = explicitTarget;\n    } else {\n        target = state[state.build.area].tokens;\n    }\n    CSL.Node[name].build.call(token, state, target, true);\n};\nCSL.DateParser = new function () {\n    var epochPairs = [\n        [\"\\u660E\\u6CBB\", 1867],\n        [\"\\u5927\\u6B63\", 1911],\n        [\"\\u662D\\u548C\", 1925],\n        [\"\\u5E73\\u6210\", 1988]\n    ];\n    var epochYearByName = {};\n    for (var i=0,ilen=epochPairs.length; i<ilen; i++) {\n        var key = epochPairs[i][0];\n        var val = epochPairs[i][1];\n        epochYearByName[key] = val;\n    }\n    var epochMatchStrings = [];\n    for (var i=0,ilen=epochPairs.length; i<ilen; i++) {\n        var val = epochPairs[i][0];\n        epochMatchStrings.push(val);\n    }\n    var epochMatchString = epochMatchStrings.join(\"|\");\n    var epochSplitter = new RegExp(\"(?:\" + epochMatchString + \")(?:[0-9]+)\");\n    var epochMatcher = new RegExp(\"(?:\" + epochMatchString + \")(?:[0-9]+)\", \"g\");\n    var kanjiMonthDay = /(\\u6708|\\u5E74)/g;\n    var kanjiYear = /\\u65E5/g;\n    var kanjiRange = /\\u301c/g;\n    var yearLast = \"(?:[?0-9]{1,2}%%NUMD%%){0,2}[?0-9]{4}(?![0-9])\";\n    var yearFirst = \"[?0-9]{4}(?:%%NUMD%%[?0-9]{1,2}){0,2}(?![0-9])\";\n    var numberVal = \"[?0-9]{1,3}\";\n    var rangeSeparator = \"[%%DATED%%]\";\n    var fuzzyChar = \"[?~]\";\n    var chars = \"[^\\-\\/\\~\\?0-9]+\";\n    var rexString = \"(\" + yearFirst + \"|\" + yearLast + \"|\" + numberVal + \"|\" + rangeSeparator + \"|\" + fuzzyChar + \"|\" + chars + \")\";\n    var rexDash = new RegExp(rexString.replace(/%%NUMD%%/g, \"-\").replace(/%%DATED%%/g, \"-\"));\n    var rexDashSlash = new RegExp(rexString.replace(/%%NUMD%%/g, \"-\").replace(/%%DATED%%/g, \"\\/\"));\n    var rexSlashDash = new RegExp(rexString.replace(/%%NUMD%%/g, \"\\/\").replace(/%%DATED%%/g, \"-\"));\n    var monthString = \"january february march april may june july august september october november december spring summer fall winter spring summer\";\n    this.monthStrings = monthString.split(\" \");\n    this.setOrderDayMonth = function() {\n        this.monthGuess = 1;\n        this.dayGuess = 0;\n    };\n    this.setOrderMonthDay = function() {\n        this.monthGuess = 0;\n        this.dayGuess = 1;\n    };\n    this.resetDateParserMonths = function() {\n        this.monthSets = [];\n        for (var i=0,ilen=this.monthStrings.length; i<ilen; i++) {\n            this.monthSets.push([this.monthStrings[i]]);\n        }\n        this.monthAbbrevs = [];\n        for (var i=0,ilen=this.monthSets.length; i<ilen; i++) {\n            this.monthAbbrevs.push([]);\n            for (var j=0,jlen=this.monthSets[i].length; j<jlen; j++) {\n                this.monthAbbrevs[i].push(this.monthSets[i][0].slice(0, 3));\n            }\n        }\n        this.monthRexes = [];\n        for (var i=0,ilen=this.monthAbbrevs.length; i<ilen; i++) {\n            this.monthRexes.push(new RegExp(\"(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\"));\n        }\n    };\n    this.addDateParserMonths = function(lst) {\n        if (\"string\" === typeof lst) {\n            lst = lst.split(/\\s+/);\n        }\n        if (lst.length !== 12 && lst.length !== 16) {\n            CSL.debug(\"month [+season] list of \"+lst.length+\", expected 12 or 16. Ignoring.\");\n            return;\n        }\n        var otherMatch = [];\n        var thisMatch = [];\n        for (var i=0,ilen=lst.length; i<ilen; i++) {\n            var abbrevLength = null;\n            var skip = false;\n            var insert = 3;\n            var extendedSets = {};\n            for (var j=0,jlen=this.monthAbbrevs.length; j<jlen; j++) {\n                extendedSets[j] = {};\n                if (j === i) {\n                    for (var k=0,klen=this.monthAbbrevs[i].length; k<klen; k++) {\n                        if (this.monthAbbrevs[i][k] === lst[i].slice(0, this.monthAbbrevs[i][k].length)) {\n                            skip = true;\n                            break;\n                        }\n                    }\n                } else {\n                    for (var k=0,klen=this.monthAbbrevs[j].length; k<klen; k++) {\n                        abbrevLength = this.monthAbbrevs[j][k].length;\n                        if (this.monthAbbrevs[j][k] === lst[i].slice(0, abbrevLength)) {\n                            while (this.monthSets[j][k].slice(0, abbrevLength) === lst[i].slice(0, abbrevLength)) {\n                                if (abbrevLength > lst[i].length || abbrevLength > this.monthSets[j][k].length) {\n                                    CSL.debug(\"unable to disambiguate month string in date parser: \"+lst[i]);\n                                    break;\n                                } else {\n                                    abbrevLength += 1;\n                                }\n                            }\n                            insert = abbrevLength;\n                            extendedSets[j][k] = abbrevLength;\n                        }\n                    }\n                }\n                for (var jKey in extendedSets) {\n                    for (kKey in extendedSets[jKey]) {\n                        abbrevLength = extendedSets[jKey][kKey];\n                        jKey = parseInt(jKey, 10);\n                        kKey = parseInt(kKey, 10);\n                        this.monthAbbrevs[jKey][kKey] = this.monthSets[jKey][kKey].slice(0, abbrevLength);\n                    }\n                }\n            }\n            if (!skip) {\n                this.monthSets[i].push(lst[i]);\n                this.monthAbbrevs[i].push(lst[i].slice(0, insert));\n            }\n        }\n        this.monthRexes = [];\n        this.monthRexStrs = [];\n        for (var i=0,ilen=this.monthAbbrevs.length; i<ilen; i++) {\n            this.monthRexes.push(new RegExp(\"^(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\"));\n            this.monthRexStrs.push(\"^(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\");\n        }\n        if (this.monthAbbrevs.length === 18) {\n            for (var i=12,ilen=14; i<ilen; i++) {\n                this.monthRexes[i+4] = new RegExp(\"^(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\");\n                this.monthRexStrs[i+4] = \"^(?:\" + this.monthAbbrevs[i].join(\"|\") + \")\";\n            }\n        }\n    };\n    this.convertDateObjectToArray = function (thedate) {\n        thedate[\"date-parts\"] = [];\n        thedate[\"date-parts\"].push([]);\n        var slicelen = 0;\n        for (var i=0,ilen=3; i<ilen; i++) {\n            var part = [\"year\", \"month\", \"day\"][i];\n            if (!thedate[part]) {\n                break;\n            }\n            slicelen += 1;\n            thedate[\"date-parts\"][0].push(thedate[part]);\n            delete thedate[part];\n        }\n        thedate[\"date-parts\"].push([]);\n        for (var i=0, ilen=slicelen; i<ilen; i++) {\n            part = [\"year_end\", \"month_end\", \"day_end\"][i];\n            if (!thedate[part]) {\n                break;\n            }\n            thedate[\"date-parts\"][1].push(thedate[part]);\n            delete thedate[part];\n        }\n        if (thedate[\"date-parts\"][0].length !== thedate[\"date-parts\"][1].length) {\n            thedate[\"date-parts\"].pop();\n        }\n        return thedate;\n    };\n    this.convertDateObjectToString = function(thedate) {\n        var ret = [];\n        for (var i = 0, ilen = 3; i < ilen; i += 1) {\n            if (thedate[DATE_PARTS_ALL[i]]) {\n                ret.push(thedate[DATE_PARTS_ALL[i]]);\n            } else {\n                break;\n            }\n        }\n        return ret.join(\"-\");\n    }\n    this._parseNumericDate = function (ret, delim, suff, txt) {\n        if (!suff) suff = \"\";\n        var lst = txt.split(delim);\n        for (var i=0, ilen=lst.length; i<ilen; i++) {\n            if (lst[i].length === 4) {\n                ret[(\"year\" + suff)] = lst[i].replace(/^0*/, \"\");\n                if (!i) {\n                    lst = lst.slice(1);\n                } else {\n                    lst = lst.slice(0, i);\n                }\n                break;\n            }\n        }\n        for (var i=0,ilen=lst.length; i<ilen; i++) {\n            lst[i] = parseInt(lst[i], 10);\n        }\n        if (lst.length === 1 || (lst.length === 2 && !lst[1])) {\n            ret[(\"month\" + suff)] = \"\" + lst[0];\n        } else if (lst.length === 2) {\n            if (lst[this.monthGuess] > 12) {\n                ret[(\"month\" + suff)] = \"\" + lst[this.dayGuess];\n                ret[(\"day\" + suff)] = \"\" + lst[this.monthGuess];\n            } else {\n                ret[(\"month\" + suff)] = \"\" + lst[this.monthGuess];\n                ret[(\"day\" + suff)] = \"\" + lst[this.dayGuess];\n            }\n        }\n    };\n    this.parseDateToObject = function (txt) {\n        var orig = txt;\n        var slashPos = -1;\n        var dashPos = -1;\n        var yearIsNegative = false;\n        var lst;\n        if (txt) {\n            if (txt.slice(0, 1) === \"-\") {\n                yearIsNegative = true;\n                txt = txt.slice(1);\n            }\n            if (txt.match(/^[0-9]{1,3}$/)) {\n                while (txt.length < 4) {\n                    txt = \"0\" + txt;\n                }\n            }\n            txt = \"\" + txt;\n            txt = txt.replace(/\\s*[0-9]{2}:[0-9]{2}(?::[0-9]+)/,\"\");\n            var m = txt.match(kanjiMonthDay);\n            if (m) {\n                txt = txt.replace(/\\s+/g, \"\");\n                txt = txt.replace(kanjiYear, \"\");\n                txt = txt.replace(kanjiMonthDay, \"-\");\n                txt = txt.replace(kanjiRange, \"/\");\n                txt = txt.replace(/\\-\\//g, \"/\");\n                txt = txt.replace(/-$/g,\"\");\n                var slst = txt.split(epochSplitter);\n                lst = [];\n                var mm = txt.match(epochMatcher);\n                if (mm) {\n                    var mmx = [];\n                    for (var i=0,ilen=mm.length; i<ilen; i++) {\n                        mmx = mmx.concat(mm[i].match(/([^0-9]+)([0-9]+)/).slice(1));\n                    }\n                    for (var i=0,ilen=slst.length; i<ilen; i++) {\n                        lst.push(slst[i]);\n                        if (i !== (len - 1)) {\n                            var mmpos = (pos * 2);\n                            lst.push(mmx[mmpos]);\n                            lst.push(mmx[mmpos + 1]);\n                        }\n                    }\n                } else {\n                    lst = slst;\n                }\n                for (var i=1,ilen=lst.length; i<ilen; i+=3) {\n                    lst[i + 1] = jiy[lst[i]] + parseInt(lst[i + 1], 10);\n                    lst[i] = \"\";\n                }\n                txt = lst.join(\"\");\n                txt = txt.replace(/\\s*-\\s*$/, \"\").replace(/\\s*-\\s*\\//, \"/\");\n                txt = txt.replace(/\\.\\s*$/, \"\");\n                txt = txt.replace(/\\.(?! )/, \"\");\n                slashPos = txt.indexOf(\"/\");\n                dashPos = txt.indexOf(\"-\");\n            }\n        }\n        txt = txt.replace(/([A-Za-z])\\./g, \"$1\");\n        var number = \"\";\n        var note = \"\";\n        var thedate = {};\n        var rangeDelim;\n        var dateDelim;\n        if (txt.slice(0, 1) === \"\\\"\" && txt.slice(-1) === \"\\\"\") {\n            thedate.literal = txt.slice(1, -1);\n            return thedate;\n        }\n        if (slashPos > -1 && dashPos > -1) {\n            var slashCount = txt.split(\"/\");\n            if (slashCount.length > 3) {\n                rangeDelim = \"-\";\n                txt = txt.replace(/\\_/g, \"-\");\n                dateDelim = \"/\";\n                lst = txt.split(rexSlashDash);\n            } else {\n                rangeDelim = \"/\";\n                txt = txt.replace(/\\_/g, \"/\");\n                dateDelim = \"-\";\n                lst = txt.split(rexDashSlash);\n            }\n        } else {\n            txt = txt.replace(/\\//g, \"-\");\n            txt = txt.replace(/\\_/g, \"-\");\n            rangeDelim = \"-\";\n            dateDelim = \"-\";\n            lst = txt.split(rexDash);\n        }\n        var ret = [];\n        for (var i=0,ilen=lst.length; i<ilen; i++) {\n            var m = lst[i].match(/^\\s*([\\-\\/]|[^\\-\\/\\~\\?0-9]+|[\\-~?0-9]+)\\s*$/);\n            if (m) {\n                ret.push(m[1]);\n            }\n        }\n        var delimPos = ret.indexOf(rangeDelim);\n        var delims = [];\n        var isRange = false;\n        if (delimPos > -1) {\n            delims.push([0, delimPos]);\n            delims.push([(delimPos + 1), ret.length]);\n            isRange = true;\n        } else {\n            delims.push([0, ret.length]);\n        }\n        var suff = \"\";\n        for (var i=0,ilen=delims.length; i<ilen; i++) {\n            delim = delims[i];\n            date = ret.slice(delim[0], delim[1]);\n            outer: \n            for (var j=0,jlen=date.length; j<jlen; j++) {\n                var element = date[j];\n                if (element.indexOf(dateDelim) > -1) {\n                    this._parseNumericDate(thedate, dateDelim, suff, element);\n                    continue;\n                }\n                if (element.match(/[0-9]{4}/)) {\n                    thedate[(\"year\" + suff)] = element.replace(/^0*/, \"\");\n                    continue;\n                }\n                for (var k=0,klen=this.monthRexes.length; k<klen; k++) {\n                    if (element.toLocaleLowerCase().match(this.monthRexes[k])) {\n                        thedate[(\"month\" + suff)] = \"\" + (parseInt(k, 10) + 1);\n                        continue outer;\n                    }\n                }\n                if (element.match(/^[0-9]+$/)) {\n                    number = element;\n                }\n                if (element.toLocaleLowerCase().match(/^bc/) && number) {\n                    thedate[(\"year\" + suff)] = \"\" + (number * -1);\n                    number = \"\";\n                    continue;\n                }\n                if (element.toLocaleLowerCase().match(/^ad/) && number) {\n                    thedate[(\"year\" + suff)] = \"\" + number;\n                    number = \"\";\n                    continue;\n                }\n                if (element === \"~\" || element === \"?\" || element === \"c\" || element.match(/^cir/)) {\n                    thedate.circa = \"\" + 1;\n                    continue;\n                }\n                if (element.toLocaleLowerCase().match(/(?:mic|tri|hil|eas)/) && !thedate[(\"season\" + suff)]) {\n                    note = element;\n                    continue;\n                }\n            }\n            if (number) {\n                thedate[(\"day\" + suff)] = number;\n                number = \"\";\n            }\n            if (note && !thedate[(\"season\" + suff)]) {\n                thedate[(\"season\" + suff)] = note;\n                note = \"\";\n            }\n            suff = \"_end\";\n        }\n        if (isRange) {\n            for (var j=0,jlen=CSL.DATE_PARTS_ALL.length; j<jlen; j++) {\n                var item = CSL.DATE_PARTS_ALL[j];\n                if (thedate[item] && !thedate[(item + \"_end\")]) {\n                    thedate[(item + \"_end\")] = thedate[item];\n                } else if (!thedate[item] && thedate[(item + \"_end\")]) {\n                    thedate[item] = thedate[(item + \"_end\")];\n                }\n            }\n        }\n        if (!thedate.year || (thedate.year && thedate.day && !thedate.month)) {\n            thedate = { \"literal\": orig };\n        }\n        var parts = [\"year\", \"month\", \"day\", \"year_end\", \"month_end\", \"day_end\"];\n        for (var i=0,ilen=parts.length; i<ilen; i++) {\n            var part = parts[i];\n            if (\"string\" === typeof thedate[part] && thedate[part].match(/^[0-9]+$/)) {\n                thedate[part] = parseInt(thedate[part], 10);\n            }\n        }\n        if (yearIsNegative && Object.keys(thedate).indexOf(\"year\") > -1) {\n            thedate.year = (thedate.year * -1);\n        }\n        return thedate;\n    };\n    this.parseDateToArray = function(txt) {\n        return this.convertDateObjectToArray(this.parseDateToObject(txt));            \n    }\n    this.parseDateToString = function(txt) {\n        return this.convertDateObjectToString(this.parseDateToObject(txt));\n    }\n    this.parse = function(txt) {\n        return this.parseDateToObject(txt);\n    }\n    this.setOrderMonthDay();\n    this.resetDateParserMonths();\n};\nCSL.Engine = function (sys, style, lang, forceLang) {\n    var attrs, langspec, localexml, locale;\n    this.processor_version = CSL.PROCESSOR_VERSION;\n    this.csl_version = \"1.0\";\n    this.sys = sys;\n    if (sys.variableWrapper) {\n        CSL.VARIABLE_WRAPPER_PREPUNCT_REX = new RegExp('^([' + [\" \"].concat(CSL.SWAPPING_PUNCTUATION).join(\"\") + ']*)(.*)');\n    }\n    if (CSL.retrieveStyleModule) {\n        this.sys.retrieveStyleModule = CSL.retrieveStyleModule;\n    }\n    if (CSL.getAbbreviation) {\n        this.sys.getAbbreviation = CSL.getAbbreviation;\n    }\n    if (this.sys.stringCompare) {\n        CSL.stringCompare = this.sys.stringCompare;\n    }\n    this.sys.AbbreviationSegments = CSL.AbbreviationSegments;\n    this.parallel = new CSL.Parallel(this);\n    this.transform = new CSL.Transform(this);\n    this.setParseNames = function (val) {\n        this.opt['parse-names'] = val;\n    };\n    this.opt = new CSL.Engine.Opt();\n    this.tmp = new CSL.Engine.Tmp();\n    this.build = new CSL.Engine.Build();\n    this.fun = new CSL.Engine.Fun(this);\n    this.configure = new CSL.Engine.Configure();\n    this.citation_sort = new CSL.Engine.CitationSort();\n    this.bibliography_sort = new CSL.Engine.BibliographySort();\n    this.citation = new CSL.Engine.Citation(this);\n    this.bibliography = new CSL.Engine.Bibliography();\n    this.output = new CSL.Output.Queue(this);\n    this.dateput = new CSL.Output.Queue(this);\n    this.cslXml = CSL.setupXml(style);\n    if (this.opt.development_extensions.csl_reverse_lookup_support || this.sys.csl_reverse_lookup_support) {\n        this.build.cslNodeId = 0;\n        this.setCslNodeIds = function(myxml, nodename) {\n            var children = this.cslXml.children(myxml);\n            this.cslXml.setAttribute(myxml, 'cslid', this.build.cslNodeId);\n            this.opt.nodenames.push(nodename);\n            this.build.cslNodeId += 1;\n            for (var i = 0, ilen = this.cslXml.numberofnodes(children); i < ilen; i += 1) {\n                nodename = this.cslXml.nodename(children[i]);\n                if (nodename) {\n                    this.setCslNodeIds(children[i], nodename);\n                }\n            }\n        };\n        this.setCslNodeIds(this.cslXml.dataObj, \"style\");\n    }\n    this.cslXml.addMissingNameNodes(this.cslXml.dataObj);\n    this.cslXml.addInstitutionNodes(this.cslXml.dataObj);\n    this.cslXml.insertPublisherAndPlace(this.cslXml.dataObj);\n    this.cslXml.flagDateMacros(this.cslXml.dataObj);\n    attrs = this.cslXml.attributes(this.cslXml.dataObj);\n    if (\"undefined\" === typeof attrs[\"@sort-separator\"]) {\n        this.cslXml.setAttribute(this.cslXml.dataObj, \"sort-separator\", \", \");\n    }\n    this.opt[\"initialize-with-hyphen\"] = true;\n    this.setStyleAttributes();\n    this.opt.xclass = this.cslXml.getAttributeValue(this.cslXml.dataObj, \"class\");\n    this.opt[\"class\"] = this.opt.xclass;\n    this.opt.styleID = this.cslXml.getStyleId(this.cslXml.dataObj);\n    if (CSL.setSuppressedJurisdictions) {\n        CSL.setSuppressedJurisdictions(this.opt.styleID, this.opt.suppressedJurisdictions);\n    }\n    this.opt.styleName = this.cslXml.getStyleId(this.cslXml.dataObj, true);\n    if (this.opt.version.slice(0,4) === \"1.1m\") {\n        this.opt.development_extensions.static_statute_locator = true;\n        this.opt.development_extensions.handle_parallel_articles = true;\n        this.opt.development_extensions.main_title_from_short_title = true;\n        this.opt.development_extensions.rtl_support = true;\n        this.opt.development_extensions.expect_and_symbol_form = true;\n        this.opt.development_extensions.require_explicit_legal_case_title_short = true;\n        this.opt.development_extensions.force_jurisdiction = true;\n    }\n    if (lang) {\n        lang = lang.replace(\"_\", \"-\");\n        lang = CSL.normalizeLocaleStr(lang);\n    }\n    if (this.opt[\"default-locale\"][0]) {\n        this.opt[\"default-locale\"][0] = this.opt[\"default-locale\"][0].replace(\"_\", \"-\");\n        this.opt[\"default-locale\"][0] = CSL.normalizeLocaleStr(this.opt[\"default-locale\"][0]);\n    }\n    if (lang && forceLang) {\n        this.opt[\"default-locale\"] = [lang];\n    }\n    if (lang && !forceLang && this.opt[\"default-locale\"][0]) {\n        lang = this.opt[\"default-locale\"][0];\n    }\n    if (this.opt[\"default-locale\"].length === 0) {\n        if (!lang) {\n            lang = \"en-US\";\n        }\n        this.opt[\"default-locale\"].push(\"en-US\");\n    }\n    if (!lang) {\n        lang = this.opt[\"default-locale\"][0];\n    }\n    langspec = CSL.localeResolve(lang);\n    this.opt.lang = langspec.best;\n    this.opt[\"default-locale\"][0] = langspec.best;\n    this.locale = {};\n    if (!this.opt[\"default-locale-sort\"]) {\n        this.opt[\"default-locale-sort\"] = this.opt[\"default-locale\"][0];\n    }\n    if ('dale|'.localeCompare('daleb', this.opt[\"default-locale-sort\"]) > -1) {\n        this.opt.sort_sep = \"@\";\n    } else {\n        this.opt.sort_sep = \"|\";\n    }\n    this.localeConfigure(langspec);\n    function makeRegExp(lst) {\n        var lst = lst.slice();\n        var ret = new RegExp( \"(?:(?:[?!:]*\\\\s+|-|^)(?:\" + lst.join(\"|\") + \")(?=[!?:]*\\\\s+|-|$))\", \"g\");\n        return ret;\n    }\n    this.locale[this.opt.lang].opts[\"skip-words-regexp\"] = makeRegExp(this.locale[this.opt.lang].opts[\"skip-words\"]);\n    this.output.adjust = new CSL.Output.Queue.adjust(this.getOpt('punctuation-in-quote'));\n    this.registry = new CSL.Registry(this);\n    this.macros = {};\n    this.build.area = \"citation\";\n    var area_nodes = this.cslXml.getNodesByName(this.cslXml.dataObj, this.build.area);\n    this.buildTokenLists(area_nodes, this[this.build.area].tokens);\n    this.build.area = \"bibliography\";\n    var area_nodes = this.cslXml.getNodesByName(this.cslXml.dataObj, this.build.area);\n    this.buildTokenLists(area_nodes, this[this.build.area].tokens);\n    this.juris = {};\n    this.configureTokenLists();\n    this.disambiguate = new CSL.Disambiguation(this);\n    this.splice_delimiter = false;\n    this.fun.dateparser = CSL.DateParser;\n    this.fun.flipflopper = new CSL.Util.FlipFlopper(this);\n    this.setCloseQuotesArray();\n    this.fun.ordinalizer.init(this);\n    this.fun.long_ordinalizer.init(this);\n    this.fun.page_mangler = CSL.Util.PageRangeMangler.getFunction(this, \"page\");\n    this.fun.year_mangler = CSL.Util.PageRangeMangler.getFunction(this, \"year\");\n    this.setOutputFormat(\"html\");\n};\nCSL.Engine.prototype.setCloseQuotesArray = function () {\n    var ret;\n    ret = [];\n    ret.push(this.getTerm(\"close-quote\"));\n    ret.push(this.getTerm(\"close-inner-quote\"));\n    ret.push('\"');\n    ret.push(\"'\");\n    this.opt.close_quotes_array = ret;\n};\nCSL.makeBuilder = function (me, target) {\n    function enterFunc (node) {\n        CSL.XmlToToken.call(node, me, CSL.START, target);\n    };\n    function leaveFunc (node) {\n        CSL.XmlToToken.call(node, me, CSL.END, target);\n    };\n    function singletonFunc (node) {\n        CSL.XmlToToken.call(node, me, CSL.SINGLETON, target);\n    };\n    function buildStyle (node) {\n        var starttag, origparent;\n        if (me.cslXml.numberofnodes(me.cslXml.children(node))) {\n            origparent = node;\n            enterFunc(origparent);\n            for (var i=0;i<me.cslXml.numberofnodes(me.cslXml.children(origparent));i+=1) {\n                node = me.cslXml.children(origparent)[i];\n                if (me.cslXml.nodename(node) === null) {\n                    continue;\n                }\n                if (me.cslXml.nodename(node) === \"date\") {\n                    CSL.Util.fixDateNode.call(me, origparent, i, node)\n                    node = me.cslXml.children(origparent)[i];\n                }\n                buildStyle(node, enterFunc, leaveFunc, singletonFunc);\n            }\n            leaveFunc(origparent);\n        } else {\n            singletonFunc(node);\n        }\n    }\n    return buildStyle;\n};\nCSL.Engine.prototype.buildTokenLists = function (area_nodes, target) {\n    if (!this.cslXml.getNodeValue(area_nodes)) return;\n    var builder = CSL.makeBuilder(this, target);\n    var mynode;\n    if (\"undefined\" === typeof area_nodes.length) {\n        mynode = area_nodes;\n    } else {\n        mynode = area_nodes[0];\n    }\n    builder(mynode);\n};\nCSL.Engine.prototype.setStyleAttributes = function () {\n    var dummy, attr, key, attributes, attrname;\n    var dummy = {};\n    dummy.name = this.cslXml.nodename(this.cslXml.dataObj);\n    attributes = this.cslXml.attributes(this.cslXml.dataObj);\n    for (attrname in attributes) {\n        if (attributes.hasOwnProperty(attrname)) {\n            CSL.Attributes[attrname].call(dummy, this, attributes[attrname]);\n        }\n    }\n};\nCSL.Engine.prototype.getTerm = function (term, form, plural, gender, mode, forceDefaultLocale) {\n    if (term && term.match(/[A-Z]/) && term === term.toUpperCase()) {\n        CSL.debug(\"Warning: term key is in uppercase form: \"+term);\n        term = term.toLowerCase();\n    }\n    var lang;\n    if (forceDefaultLocale) {\n        lang = this.opt[\"default-locale\"][0];\n    } else {\n        lang = this.opt.lang;\n    }\n    var ret = CSL.Engine.getField(CSL.LOOSE, this.locale[lang].terms, term, form, plural, gender);\n    if (!ret && term === \"range-delimiter\") {\n        ret = \"\\u2013\";\n    }\n    if (typeof ret === \"undefined\") {\n        if (mode === CSL.STRICT) {\n            throw \"Error in getTerm: term \\\"\" + term + \"\\\" does not exist.\";\n        } else if (mode === CSL.TOLERANT) {\n            ret = \"\";\n        }\n    }\n    if (ret) {\n        this.tmp.cite_renders_content = true;\n    }\n    return ret;\n};\nCSL.Engine.prototype.getDate = function (form, forceDefaultLocale) {\n    var lang;\n    if (forceDefaultLocale) {\n        lang = this.opt[\"default-locale\"];\n    } else {\n        lang = this.opt.lang;\n    }\n    if (this.locale[lang].dates[form]) {\n        return this.locale[lang].dates[form];\n    } else {\n        return false;\n    }\n};\nCSL.Engine.prototype.getOpt = function (arg) {\n    if (\"undefined\" !== typeof this.locale[this.opt.lang].opts[arg]) {\n        return this.locale[this.opt.lang].opts[arg];\n    } else {\n        return false;\n    }\n};\nCSL.Engine.prototype.getVariable = function (Item, varname, form, plural) {\n    return CSL.Engine.getField(CSL.LOOSE, Item, varname, form, plural);\n};\nCSL.Engine.prototype.getDateNum = function (ItemField, partname) {\n    if (\"undefined\" === typeof ItemField) {\n        return 0;\n    } else {\n        return ItemField[partname];\n    }\n};\nCSL.Engine.getField = function (mode, hash, term, form, plural, gender) {\n    var ret, forms, f, pos, len, hashterm;\n    ret = \"\";\n    if (\"undefined\" === typeof hash[term]) {\n        if (mode === CSL.STRICT) {\n            throw \"Error in getField: term \\\"\" + term + \"\\\" does not exist.\";\n        } else {\n            return undefined;\n        }\n    }\n    if (gender && hash[term][gender]) {\n        hashterm = hash[term][gender];\n    } else {\n        hashterm = hash[term];\n    }\n    forms = [];\n    if (form === \"symbol\") {\n        forms = [\"symbol\", \"short\"];\n    } else if (form === \"verb-short\") {\n        forms = [\"verb-short\", \"verb\"];\n    } else if (form !== \"long\") {\n        forms = [form];\n    }\n    forms = forms.concat([\"long\"]);\n    len = forms.length;\n    for (pos = 0; pos < len; pos += 1) {\n        f = forms[pos];\n        if (\"string\" === typeof hashterm || \"number\" === typeof hashterm) {\n            ret = hashterm;\n        } else if (\"undefined\" !== typeof hashterm[f]) {\n            if (\"string\" === typeof hashterm[f] || \"number\" === typeof hashterm[f]) {\n                ret = hashterm[f];\n            } else {\n                if (\"number\" === typeof plural) {\n                    ret = hashterm[f][plural];\n                } else {\n                    ret = hashterm[f][0];\n                }\n            }\n            break;\n        }\n    }\n    return ret;\n};\nCSL.Engine.prototype.configureTokenLists = function () {\n    var dateparts_master, area, pos, token, dateparts, part, ppos, pppos, len, llen, lllen;\n    len = CSL.AREAS.length;\n    for (pos = 0; pos < len; pos += 1) {\n        area = CSL.AREAS[pos];\n        var tokens = this[area].tokens;\n        this.configureTokenList(tokens);\n    }\n    this.version = CSL.version;\n    return this.state;\n};\nCSL.Engine.prototype.configureTokenList = function (tokens) {\n    var dateparts_master, area, pos, token, dateparts, part, ppos, pppos, len, llen, lllen;\n    dateparts_master = [\"year\", \"month\", \"day\"];\n    llen = tokens.length - 1;\n    for (ppos = llen; ppos > -1; ppos += -1) {\n        token = tokens[ppos];\n        if (\"date\" === token.name && CSL.END === token.tokentype) {\n            dateparts = [];\n        }\n        if (\"date-part\" === token.name && token.strings.name) {\n            lllen = dateparts_master.length;\n            for (pppos = 0; pppos < lllen; pppos += 1) {\n                part = dateparts_master[pppos];\n                if (part === token.strings.name) {\n                    dateparts.push(token.strings.name);\n                }\n            }\n        }\n        if (\"date\" === token.name && CSL.START === token.tokentype) {\n            dateparts.reverse();\n            token.dateparts = dateparts;\n        }\n        token.next = (ppos + 1);\n        if (token.name && CSL.Node[token.name].configure) {\n            CSL.Node[token.name].configure.call(token, this, ppos);\n        }\n    }\n}\nCSL.Engine.prototype.retrieveItems = function (ids) {\n    var ret, pos, len;\n    ret = [];\n    for (var i = 0, ilen = ids.length; i < ilen; i += 1) {\n        ret.push(this.retrieveItem(\"\" + ids[i]));\n    }\n    return ret;\n};\nCSL.ITERATION = 0;\nCSL.Engine.prototype.retrieveItem = function (id) {\n    var Item, m, pos, len, mm;\n    if (!this.tmp.loadedItemIDs[id]) {\n        this.tmp.loadedItemIDs[id] = true;\n    } else {\n        return this.registry.refhash[id];\n    }\n    if (this.opt.development_extensions.normalize_lang_keys_to_lowercase &&\n        \"boolean\" === typeof this.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n        for (var i=0,ilen=this.opt[\"default-locale\"].length; i<ilen; i+=1) {\n            this.opt[\"default-locale\"][i] = this.opt[\"default-locale\"][i].toLowerCase();\n        }\n        for (var i=0,ilen=this.opt[\"locale-translit\"].length; i<ilen; i+=1) {\n            this.opt[\"locale-translit\"][i] = this.opt[\"locale-translit\"][i].toLowerCase();\n        }\n        for (var i=0,ilen=this.opt[\"locale-translat\"].length; i<ilen; i+=1) {\n            this.opt[\"locale-translat\"][i] = this.opt[\"locale-translat\"][i].toLowerCase();\n        }\n        this.opt.development_extensions.normalize_lang_keys_to_lowercase = 100;\n    }\n    CSL.ITERATION += 1;\n    Item = JSON.parse(JSON.stringify(this.sys.retrieveItem(\"\" + id)));\n    if (this.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n        if (Item.multi) {\n            if (Item.multi._keys) {\n                for (var field in Item.multi._keys) {\n                    for (var key in Item.multi._keys[field]) {\n                        if (key !== key.toLowerCase()) {\n                            Item.multi._keys[field][key.toLowerCase()] = Item.multi._keys[field][key];\n                            delete Item.multi._keys[field][key];\n                        }\n                    }\n                }\n            }\n            if (Item.multi.main) {\n                for (var field in Item.multi.main) {\n                    Item.multi.main[field] = Item.multi.main[field].toLowerCase();\n                }\n            }\n        }\n        for (var i=0, ilen=CSL.CREATORS.length; i>ilen; i+=1) {\n            var ctype = CSL.CREATORS[i];\n            if (Item[ctype] && Item[ctype].multi) {\n                for (var j=0, jlen=Item[ctype].length; j<jlen; j+=1) {\n                    var creator = Item[ctype][j];\n                    if (creator.multi) {\n                        if (creator.multi._key) {\n                            for (var key in creator.multi._key) {\n                                if (key !== key.toLowerCase()) {\n                                    creator.multi._key[key.toLowerCase()] = creator.multi._key[key];\n                                    delete creator.multi._key[key];\n                                }\n                            }\n                        }\n                        if (creator.multi.main) {\n                            creator.multi.main = creator.multi.main.toLowerCase();\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (this.sys.getLanguageName && Item.language) {\n\t\tif (Item.language) {\n            Item.language = Item.language.toLowerCase();\n\t\t\tvar lst = Item.language.split(\"<\");\n            if (lst.length > 0) {\n                var languageName = this.sys.getLanguageName(lst[0]);\n                if (languageName) {\n                    Item[\"language-name\"] = languageName;\n                }\n            }\n\t\t\tif (lst.length === 2) {\n\t\t\t\tvar originalLanguage = this.sys.getLanguageName(lst[1]);\n\t\t\t\tif (originalLanguage) {\n\t\t\t\t\tItem[\"language-name-original\"] = originalLanguage;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n    if (Item.page) {\n        Item[\"page-first\"] = Item.page;\n        var num = \"\" + Item.page;\n        m = num.split(/\\s*(?:&|, |-|\\u2013)\\s*/);\n        if (m[0].slice(-1) !== \"\\\\\") {\n            Item[\"page-first\"] = m[0];\n        }\n    }\n    if (this.opt.development_extensions.field_hack && Item.note) {\n        CSL.parseNoteFieldHacks(Item, false, this.opt.development_extensions.allow_field_hack_date_override);\n    }\n    for (var i = 1, ilen = CSL.DATE_VARIABLES.length; i < ilen; i += 1) {\n        var dateobj = Item[CSL.DATE_VARIABLES[i]];\n        if (dateobj) {\n            if (this.opt.development_extensions.raw_date_parsing) {\n                if (dateobj.raw) {\n                    dateobj = this.fun.dateparser.parseDateToObject(dateobj.raw);\n                }\n            }\n            Item[CSL.DATE_VARIABLES[i]] = this.dateParseArray(dateobj);\n        }\n    }\n    if (this.opt.development_extensions.static_statute_locator) {\n        if (Item.type && [\"bill\",\"gazette\",\"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) > -1) {\n            var varname;\n            var elements = [\"type\", \"title\", \"jurisdiction\", \"genre\", \"volume\", \"container-title\"];\n            var legislation_id = [];\n            for (i = 0, ilen = elements.length; i < ilen; i += 1) {\n                varname = elements[i];\n\t\t\t\tif (Item[varname]) {\n\t\t\t\t\tlegislation_id.push(Item[varname]);\n\t\t\t\t}\n\t\t\t}\n            elements = [\"original-date\", \"issued\"];\n\t\t\tfor (i = 0, elements.length; i < ilen; i += 1) {\n                varname = elements[i];\n\t\t\t\tif (Item[varname] && Item[varname].year) {\n\t\t\t\t\tvar value = Item[varname].year;\n\t\t\t\t\tlegislation_id.push(value);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tItem.legislation_id = legislation_id.join(\"::\");\n        }\n    }\n    if (this.opt.development_extensions.force_jurisdiction) {\n        if (\"string\" === typeof Item.authority) {\n            Item.authority = [\n                {\n                    literal: Item.authority\n                }\n            ]\n        }\n    }\n    if (!Item[\"title-short\"]) {\n        Item[\"title-short\"] = Item.shortTitle;\n    }\n    if (this.opt.development_extensions.main_title_from_short_title) {\n        CSL.extractTitleAndSubtitle(Item);\n    }\n    var isLegalType = [\"bill\",\"legal_case\",\"legislation\",\"gazette\",\"regulation\"].indexOf(Item.type) > -1;\n    if (this.opt.development_extensions.force_jurisdiction && isLegalType) {\n        if (!Item.jurisdiction) {\n            Item.jurisdiction = \"us\";\n        }\n    }\n    if (!isLegalType && Item.title && this.sys.getAbbreviation) {\n        var noHints = false;\n        if (!Item.jurisdiction) {\n            noHints = true;\n        }\n        var jurisdiction = this.transform.loadAbbreviation(Item.jurisdiction, \"title\", Item.title, Item.type, true);\n        if (this.transform.abbrevs[jurisdiction].title) {\n            if (this.transform.abbrevs[jurisdiction].title[Item.title]) {\n                Item[\"title-short\"] = this.transform.abbrevs[jurisdiction].title[Item.title];\n            }\n        }\n    }\n    if (!Item[\"container-title-short\"]) {\n        Item[\"container-title-short\"] = Item.journalAbbreviation;\n    }\n    if (Item[\"container-title\"] && this.sys.getAbbreviation) {\n        var jurisdiction = this.transform.loadAbbreviation(Item.jurisdiction, \"container-title\", Item[\"container-title\"]);\n        if (this.transform.abbrevs[jurisdiction][\"container-title\"]) {\n            if (this.transform.abbrevs[jurisdiction][\"container-title\"][Item[\"container-title\"]]) {\n                Item[\"container-title-short\"] = this.transform.abbrevs[jurisdiction][\"container-title\"][Item[\"container-title\"]];\n            }\n        }\n    }\n    this.registry.refhash[id] = Item;\n    return Item;\n};\nCSL.Engine.prototype.setOpt = function (token, name, value) {\n    if (token.name === \"style\" || token.name === \"cslstyle\") {\n        this.opt.inheritedAttributes[name] = value;\n        this.citation.opt.inheritedAttributes[name] = value;\n        this.bibliography.opt.inheritedAttributes[name] = value;\n    } else if ([\"citation\", \"bibliography\"].indexOf(token.name) > -1) {\n        this[token.name].opt.inheritedAttributes[name] = value;\n    } else {\n        token.strings[name] = value;\n    }\n};\nCSL.Engine.prototype.inheritOpt = function (token, attrname, parentname, defaultValue) {\n    if (\"undefined\" !== typeof token.strings[attrname]) {\n        return token.strings[attrname];\n    } else {\n        var parentValue = this[this.tmp.root].opt.inheritedAttributes[parentname ? parentname : attrname];\n        if (\"undefined\" !== typeof parentValue) {\n            return parentValue;\n        } else {\n            return defaultValue;\n        }\n    }\n};\nCSL.Engine.prototype.remapSectionVariable = function (inputList) {\n    for (var i = 0, ilen = inputList.length; i < ilen; i += 1) {\n        var Item = inputList[i][0];\n        var item = inputList[i][1];\n        if ([\"bill\",\"gazette\",\"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) > -1) {\n            if (item.locator) {\n                item.locator = item.locator.trim();\n                var m = item.locator.match(CSL.STATUTE_SUBDIV_PLAIN_REGEX);\n                if (!m) {\n                    if (item.label) {\n                        item.locator = CSL.STATUTE_SUBDIV_STRINGS_REVERSE[item.label] + \" \" + item.locator;\n                    } else {\n                        item.locator = \"p. \" + item.locator;\n                    }\n                }\n            }\n            var sectionMasterLabel = null;\n            if (Item.section) {\n                Item.section = Item.section.trim();\n                var m = Item.section.match(CSL.STATUTE_SUBDIV_PLAIN_REGEX);\n                if (!m) {\n                    Item.section = \"sec. \" + Item.section;\n                    sectionMasterLabel = \"sec.\";\n                } else {\n                    sectionMasterLabel = m[0].trim();\n                }\n            }\n            if (Item.section) {\n                if (!item.locator) {\n                    item.locator = Item.section;\n                } else {\n                    var m = item.locator.match(/^([^ ]*)\\s*(.*)/);\n                    var space = \" \";\n                    if (m) {\n                        if (m[1] === \"p.\" && sectionMasterLabel !== \"p.\") {\n                            item.locator = m[2];\n                        }\n                        if ([\"[\", \"(\", \".\", \",\", \";\", \":\", \"?\"].indexOf(item.locator.slice(0, 1)) > -1) {\n                            space = \"\";\n                        }\n                    } else {\n                       space = \"\"; \n                    }\n                    item.locator = Item.section + space + item.locator;\n                }\n            }\n            item.label = \"\";\n        }\n    }\n}\nCSL.Engine.prototype.setNumberLabels = function (Item) {\n     if (Item.number\n        && [\"bill\", \"gazette\", \"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) > -1\n        && this.opt.development_extensions.static_statute_locator\n        && !this.tmp.shadow_numbers[\"number\"]) {\n        this.tmp.shadow_numbers[\"number\"] = {};\n        this.tmp.shadow_numbers[\"number\"].values = [];\n        this.tmp.shadow_numbers[\"number\"].plural = 0;\n        this.tmp.shadow_numbers[\"number\"].numeric = false;\n        this.tmp.shadow_numbers[\"number\"].label = false;\n        var value = \"\" + Item.number;\n        value = value.split(\"\\\\\").join(\"\");\n        var firstword = value.split(/\\s+/)[0];\n        var firstlabel = CSL.STATUTE_SUBDIV_STRINGS[firstword];\n        if (firstlabel) {\n            var m = value.match(CSL.STATUTE_SUBDIV_GROUPED_REGEX);\n            var splt = value.split(CSL.STATUTE_SUBDIV_PLAIN_REGEX);\n            if (splt.length > 1) {\n                var lst = [];\n                for (var j=1, jlen=splt.length; j < jlen; j += 1) {\n                    var subdiv = m[j - 1].replace(/^\\s*/, \"\");\n                    lst.push(splt[j].replace(/\\s*$/, \"\").replace(/^\\s*/, \"\"));\n                }\n                value = lst.join(\" \");\n            } else {\n                value = splt[0];\n            }\n            this.tmp.shadow_numbers[\"number\"].label = firstlabel;\n            this.tmp.shadow_numbers[\"number\"].values.push([\"Blob\", value, false]);\n            this.tmp.shadow_numbers[\"number\"].numeric = false;\n        } else {\n            this.tmp.shadow_numbers[\"number\"].values.push([\"Blob\", value, false]);\n            this.tmp.shadow_numbers[\"number\"].numeric = true;\n        }\n    }\n}\nCSL.substituteOne = function (template) {\n    return function (state, list) {\n        if (!list) {\n            return \"\";\n        } else {\n            return template.replace(\"%%STRING%%\", list);\n        }\n    };\n};\nCSL.substituteTwo = function (template) {\n    return function (param) {\n        var template2 = template.replace(\"%%PARAM%%\", param);\n        return function (state, list) {\n            if (!list) {\n                return \"\";\n            } else {\n                return template2.replace(\"%%STRING%%\", list);\n            }\n        };\n    };\n};\nCSL.Mode = function (mode) {\n    var decorations, params, param, func, val, args;\n    decorations = {};\n    params = CSL.Output.Formats[mode];\n    for (param in params) {\n        if (true) {\n            if (\"@\" !== param.slice(0, 1)) {\n                decorations[param] = params[param];\n                continue;\n            }\n            func = false;\n            val = params[param];\n            args = param.split('/');\n            if (typeof val === \"string\" && val.indexOf(\"%%STRING%%\") > -1)  {\n                if (val.indexOf(\"%%PARAM%%\") > -1) {\n                    func = CSL.substituteTwo(val);\n                } else {\n                    func = CSL.substituteOne(val);\n                }\n            } else if (typeof val === \"boolean\" && !val) {\n                func = CSL.Output.Formatters.passthrough;\n            } else if (typeof val === \"function\") {\n                func = val;\n            } else {\n                throw \"CSL.Compiler: Bad \" + mode + \" config entry for \" + param + \": \" + val;\n            }\n            if (args.length === 1) {\n                decorations[args[0]] = func;\n            } else if (args.length === 2) {\n                if (!decorations[args[0]]) {\n                    decorations[args[0]] = {};\n                }\n                decorations[args[0]][args[1]] = func;\n            }\n        }\n    }\n    return decorations;\n};\nCSL.setDecorations = function (state, attributes) {\n    var ret, key, pos;\n    ret = [];\n    for (pos in CSL.FORMAT_KEY_SEQUENCE) {\n        if (true) {\n            key = CSL.FORMAT_KEY_SEQUENCE[pos];\n            if (attributes[key]) {\n                ret.push([key, attributes[key]]);\n                delete attributes[key];\n            }\n        }\n    }\n    return ret;\n};\nCSL.Doppeler = function(rexStr, stringMangler) {\n    var mx, lst, len, pos, m, buf1, buf2, idx, ret, myret;\n    this.split = split;\n    this.join = join;\n    var matchRex = new RegExp(\"(\" + rexStr + \")\", \"g\");\n    var splitRex = new RegExp(rexStr, \"g\");\n    function split(str) {\n        if (stringMangler) {\n            str = stringMangler(str);\n        }\n        var match = str.match(matchRex);\n        if (!match) {\n            return {\n                tags: [],\n                strings: [str]\n            };\n        }\n        var split = str.split(splitRex);\n        return {\n            tags: match,\n            strings: split,\n            origStrings: split.slice()\n        }\n    }\n    function join(obj) {\n        var lst = obj.strings.slice(-1);\n        for (var i=obj.tags.length-1; i>-1; i--) {\n            lst.push(obj.tags[i]);\n            lst.push(obj.strings[i]);\n        }\n        lst.reverse();\n        return lst.join(\"\");\n    }\n}\nCSL.Engine.prototype.normalDecorIsOrphan = function (blob, params) {\n    if (params[1] === \"normal\") {\n        var use_param = false;\n        var all_the_decor;\n        if (this.tmp.area === \"citation\") {\n            all_the_decor = [this.citation.opt.layout_decorations].concat(blob.alldecor);\n        } else {\n            all_the_decor = blob.alldecor;\n        }\n        for (var k = all_the_decor.length - 1; k > -1; k += -1) {\n            for (var n = all_the_decor[k].length - 1; n > -1; n += -1) {\n                if (all_the_decor[k][n][0] === params[0]) {\n                    if (all_the_decor[k][n][1] !== \"normal\") {\n                        use_param = true;\n                    }\n                }\n            }\n        }\n        if (!use_param) {\n            return true;\n        }\n    }\n    return false;\n};\nCSL.getJurisdictionNameAndSuppress = function(state, jurisdictionID, jurisdictionName) {\n    var ret = null;\n    if (!jurisdictionName) {\n        jurisdictionName = state.sys.getHumanForm(jurisdictionID);\n    }\n    if (!jurisdictionName) {\n        ret = jurisdictionID;\n    } else {\n        var code = jurisdictionID.split(\":\");\n        var name = jurisdictionName.split(\"|\");\n        var valid = false;\n        if (code.length === 1 && name.length === 2) {\n            valid = true;\n        } else if (code.length > 1 && name.length === code.length) {\n            valid = true;\n        }\n        if (!valid) {\n            ret = name.join(\"|\");\n        } else {\n            var mask = 0;\n            var stub;\n            for (var i=0,ilen=code.length;i<ilen;i++) {\n                stub = code.slice(0, i+1).join(\":\");\n                if (state.opt.suppressedJurisdictions[stub]) {\n                    mask = (i+1);\n                }\n            }\n            if (mask === 0) {\n                if (code.length === 1) {\n                    ret = name[0];\n                } else {\n                    ret = name.join(\"|\");\n                }\n            } else if (mask === 1) {\n                if (code.length === 1) {\n                    ret = \"\";\n                } else {\n                    ret = name.slice(mask).join(\"|\");\n                }\n            } else {\n                ret = name.slice(mask).join(\"|\");\n            }\n        }\n    }\n    return ret;\n}\nCSL.Engine.prototype.getCitationLabel = function (Item) {\n    var label = \"\";\n    var params = this.getTrigraphParams();\n    var config = params[0];\n    var myname = this.getTerm(\"reference\", \"short\", 0);\n    if (\"undefined\" === typeof myname) {\n        myname = \"reference\";\n    }\n    myname = myname.replace(\".\", \"\");\n    myname = myname.slice(0, 1).toUpperCase() + myname.slice(1);\n    for (var i = 0, ilen = CSL.CREATORS.length; i < ilen; i += 1) {\n        var n = CSL.CREATORS[i];\n        if (Item[n]) {\n            var names = Item[n];\n            if (names.length > params.length) {\n                config = params[params.length - 1];\n            } else {\n                config = params[names.length - 1];\n            }\n            for (var j = 0, jlen = names.length; j < jlen; j += 1) {\n                if (j === config.authors.length) {\n                    break;\n                }\n                var res = this.nameOutput.getName(names[j], \"locale-translit\", true);\n                var name = res.name;\n                if (name && name.family) {\n                    myname = name.family;\n                    myname = myname.replace(/^([ \\'\\u2019a-z]+\\s+)/, \"\");\n                } else if (name && name.literal) {\n                    myname = name.literal;\n                }\n                var m = myname.toLowerCase().match(/^(a\\s+|the\\s+|an\\s+)/);\n                if (m) {\n                    myname = myname.slice(m[1].length);\n                }\n                myname = myname.replace(CSL.ROMANESQUE_NOT_REGEXP, \"\");\n                if (!myname) {\n                    break;\n                }\n                myname = myname.slice(0, config.authors[j]);\n                if (myname.length > 1) {\n                    myname = myname.slice(0, 1).toUpperCase() + myname.slice(1).toLowerCase();\n                } else if (myname.length === 1) {\n                    myname = myname.toUpperCase();\n                }\n                label += myname;\n            }\n            break;\n        }\n    }\n    if (!label) {\n        if (Item.title) {\n            var skipWords = this.locale[this.opt.lang].opts[\"skip-words\"];\n            var lst = Item.title.split(/\\s+/);\n            for (var i = lst.length - 1; i > -1; i--) {\n                if (skipWords.indexOf(lst[i]) > -1) {\n                    lst = lst.slice(0, i).concat(lst.slice(i + 1));\n                }\n            }\n            var str = lst.join('');\n            str = str.slice(0, params[0].authors[0]);\n            if (str.length > 1) {\n                str = str.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase();\n            } else if (str.length === 1) {\n                str = str.toUpperCase();\n            }\n            label = str;\n        }\n    }\n    var year = \"0000\";\n    if (Item.issued) {\n        if (Item.issued.year) {\n            year = \"\" + Item.issued.year;\n        }\n    }\n    year = year.slice((config.year * -1));\n    label = label + year;\n    return label;\n};\nCSL.Engine.prototype.getTrigraphParams = function () {\n    var params = [];\n    var ilst = this.opt.trigraph.split(\":\");\n    if (!this.opt.trigraph || this.opt.trigraph.slice(0,1) !== \"A\") {\n        throw \"Bad trigraph definition: \"+this.opt.trigraph;\n    }\n    for (var i = 0, ilen = ilst.length; i < ilen; i += 1) {\n        var str = ilst[i];\n        var config = {authors:[], year:0};\n        for (var j = 0, jlen = str.length; j < jlen; j += 1) {\n            switch (str.slice(j,j+1)) {\n            case \"A\":\n                config.authors.push(1);\n                break;\n            case \"a\":\n                config.authors[config.authors.length - 1] += 1;\n                break;\n            case \"0\":\n                config.year += 1;\n                break;\n            default:\n                throw \"Invalid character in trigraph definition: \"+this.opt.trigraph;\n            }\n        }\n        params.push(config);\n    }\n    return params;\n};\nCSL.Engine.prototype.setOutputFormat = function (mode) {\n    this.opt.mode = mode;\n    this.fun.decorate = CSL.Mode(mode);\n    if (!this.output[mode]) {\n        this.output[mode] = {};\n        this.output[mode].tmp = {};\n    }\n};\nCSL.Engine.prototype.getSortFunc = function () {\n    return function (a,b) {\n        a = a.split(\"-\");\n        b = b.split(\"-\");\n        if (a.length < b.length) {\n            return 1\n        } else if (a.length > b.length) {\n            return -1\n        } else {\n            a = a.slice(-1)[0];\n            b = b.slice(-1)[0];\n            if (a.length < b.length) {\n                return 1;\n            } else if (a.length > b.length) {\n                return -1;\n            } else {\n                return 0;\n            }\n        }\n    };\n};\nCSL.Engine.prototype.setLangTagsForCslSort = function (tags) {\n    var i, ilen;\n    if (tags) {\n        this.opt['locale-sort'] = [];\n        for (i = 0, ilen = tags.length; i < ilen; i += 1) {\n            this.opt['locale-sort'].push(tags[i]);\n        }\n    }\n    this.opt['locale-sort'].sort(this.getSortFunc());\n};\nCSL.Engine.prototype.setLangTagsForCslTransliteration = function (tags) {\n    var i, ilen;\n    this.opt['locale-translit'] = [];\n    if (tags) {\n        for (i = 0, ilen = tags.length; i < ilen; i += 1) {\n            this.opt['locale-translit'].push(tags[i]);\n        }\n    }\n    this.opt['locale-translit'].sort(this.getSortFunc());\n};\nCSL.Engine.prototype.setLangTagsForCslTranslation = function (tags) {\n    var i, ilen;\n    this.opt['locale-translat'] = [];\n    if (tags) {\n        for (i = 0, ilen = tags.length; i < ilen; i += 1) {\n            this.opt['locale-translat'].push(tags[i]);\n        }\n    }\n    this.opt['locale-translat'].sort(this.getSortFunc());\n};\nCSL.Engine.prototype.setLangPrefsForCites = function (obj, conv) {\n    var opt = this.opt['cite-lang-prefs'];\n    if (!conv) {\n        conv = function (key) {\n            return key.toLowerCase();\n        };\n    }\n    var segments = ['Persons', 'Institutions', 'Titles', 'Journals', 'Publishers', 'Places'];\n    for (var i = 0, ilen = segments.length; i < ilen; i += 1) {\n        var clientSegment = conv(segments[i]);\n        var citeprocSegment = segments[i].toLowerCase();\n        if (!obj[clientSegment]) {\n            continue;\n        }\n        var supplements = [];\n        while (obj[clientSegment].length > 1) {\n            supplements.push(obj[clientSegment].pop());\n        }\n        var sortval = {orig:1,translit:2,translat:3};\n        if (supplements.length === 2 && sortval[supplements[0]] < sortval[supplements[1]]) {\n            supplements.reverse();\n        }\n        while (supplements.length) {\n            obj[clientSegment].push(supplements.pop());\n        }\n        var lst = opt[citeprocSegment];\n        while (lst.length) {\n            lst.pop();\n        }\n        for (var j = 0, jlen = obj[clientSegment].length; j < jlen; j += 1) {\n            lst.push(obj[clientSegment][j]);\n        }\n    }\n};\nCSL.Engine.prototype.setLangPrefsForCiteAffixes = function (affixList) {\n    if (affixList && affixList.length === 48) {\n        var affixes = this.opt.citeAffixes;\n        var count = 0;\n        var settings = [\"persons\", \"institutions\", \"titles\", \"journals\", \"publishers\", \"places\"];\n        var forms = [\"translit\", \"orig\", \"translit\", \"translat\"];\n        var value;\n        for (var i = 0, ilen = settings.length; i < ilen; i += 1) {\n            for (var j = 0, jlen = forms.length; j < jlen; j += 1) {\n                value = \"\";\n                if ((count % 8) === 4) {\n                    if (!affixes[settings[i]][\"locale-\"+forms[j]].prefix\n                        && !affixes[settings[i]][\"locale-\"+forms[j]].suffix) {\n                        value = affixList[count] ? affixList[count] : \"\";\n                        affixes[settings[i]][\"locale-\" + forms[j]].prefix = value;\n                        value = affixList[count] ? affixList[count + 1] : \"\";\n                        affixes[settings[i]][\"locale-\" + forms[j]].suffix = value;\n                    }\n                } else {\n                    value = affixList[count] ? affixList[count] : \"\";\n                    affixes[settings[i]][\"locale-\" + forms[j]].prefix = value;\n                    value = affixList[count] ? affixList[count + 1] : \"\";\n                    affixes[settings[i]][\"locale-\" + forms[j]].suffix = value;\n                }\n                count += 2;\n            }\n        }\n        this.opt.citeAffixes = affixes;\n    }\n};\nCSL.Engine.prototype.setAutoVietnameseNamesOption = function (arg) {\n    if (arg) {\n        this.opt[\"auto-vietnamese-names\"] = true;\n    } else {\n        this.opt[\"auto-vietnamese-names\"] = false;\n    }\n};\nCSL.Engine.prototype.setAbbreviations = function (arg) {\n    if (this.sys.setAbbreviations) {\n        this.sys.setAbbreviations(arg);\n    }\n};\nCSL.Engine.prototype.setSuppressTrailingPunctuation = function (arg) {\n    this.citation.opt.suppressTrailingPunctuation = !!arg;\n};\nCSL.Output = {};\nCSL.Output.Queue = function (state) {\n    this.levelname = [\"top\"];\n    this.state = state;\n    this.queue = [];\n    this.empty = new CSL.Token(\"empty\");\n    var tokenstore = {};\n    tokenstore.empty = this.empty;\n    this.formats = new CSL.Stack(tokenstore);\n    this.current = new CSL.Stack(this.queue);\n};\nCSL.Output.Queue.prototype.pop = function () {\n    var drip = this.current.value();\n    if (drip.length) {\n        return drip.pop();\n    } else {\n        return drip.blobs.pop();\n    }\n};\nCSL.Output.Queue.prototype.getToken = function (name) {\n    var ret = this.formats.value()[name];\n    return ret;\n};\nCSL.Output.Queue.prototype.mergeTokenStrings = function (base, modifier) {\n    var base_token, modifier_token, ret, key;\n    base_token = this.formats.value()[base];\n    modifier_token = this.formats.value()[modifier];\n    ret = base_token;\n    if (modifier_token) {\n        if (!base_token) {\n            base_token = new CSL.Token(base, CSL.SINGLETON);\n            base_token.decorations = [];\n        }\n        ret = new CSL.Token(base, CSL.SINGLETON);\n        key = \"\";\n        for (key in base_token.strings) {\n            if (base_token.strings.hasOwnProperty(key)) {\n                ret.strings[key] = base_token.strings[key];\n            }\n        }\n        for (key in modifier_token.strings) {\n            if (modifier_token.strings.hasOwnProperty(key)) {\n                ret.strings[key] = modifier_token.strings[key];\n            }\n        }\n        ret.decorations = base_token.decorations.concat(modifier_token.decorations);\n    }\n    return ret;\n};\nCSL.Output.Queue.prototype.addToken = function (name, modifier, token) {\n    var newtok, attr;\n    newtok = new CSL.Token(\"output\");\n    if (\"string\" === typeof token) {\n        token = this.formats.value()[token];\n    }\n    if (token && token.strings) {\n        for (attr in token.strings) {\n            if (token.strings.hasOwnProperty(attr)) {\n                newtok.strings[attr] = token.strings[attr];\n            }\n        }\n        newtok.decorations = token.decorations;\n    }\n    if (\"string\" === typeof modifier) {\n        newtok.strings.delimiter = modifier;\n    }\n    this.formats.value()[name] = newtok;\n};\nCSL.Output.Queue.prototype.pushFormats = function (tokenstore) {\n    if (!tokenstore) {\n        tokenstore = {};\n    }\n    tokenstore.empty = this.empty;\n    this.formats.push(tokenstore);\n};\nCSL.Output.Queue.prototype.popFormats = function (tokenstore) {\n    this.formats.pop();\n};\nCSL.Output.Queue.prototype.startTag = function (name, token) {\n    var tokenstore = {};\n    if (this.state.tmp[\"doing-macro-with-date\"] && this.state.tmp.extension) {\n        token = this.empty;\n        name = \"empty\";\n    }\n    tokenstore[name] = token;\n    this.pushFormats(tokenstore);\n    this.openLevel(name);\n};\nCSL.Output.Queue.prototype.endTag = function (name) {\n    this.closeLevel(name);\n    this.popFormats();\n};\nCSL.Output.Queue.prototype.openLevel = function (token, ephemeral) {\n    var blob, curr, x, has_ephemeral;\n    if (\"object\" === typeof token) {\n        blob = new CSL.Blob(undefined, token);\n    } else if (\"undefined\" === typeof token) {\n        blob = new CSL.Blob(undefined, this.formats.value().empty, \"empty\");\n    } else {\n        if (!this.formats.value() || !this.formats.value()[token]) {\n            throw \"CSL processor error: call to nonexistent format token \\\"\" + token + \"\\\"\";\n        }\n        blob = new CSL.Blob(undefined, this.formats.value()[token], token);\n    }\n    curr = this.current.value();\n    if (!this.state.tmp.just_looking && this.checkNestedBrace) {\n        blob.strings.prefix = this.checkNestedBrace.update(blob.strings.prefix);\n    }\n    curr.push(blob);\n    this.current.push(blob);\n};\nCSL.Output.Queue.prototype.closeLevel = function (name) {\n    if (name && name !== this.current.value().levelname) {\n        CSL.error(\"Level mismatch error:  wanted \" + name + \" but found \" + this.current.value().levelname);\n    }\n    var blob = this.current.pop();\n    if (!this.state.tmp.just_looking && this.checkNestedBrace) {\n        blob.strings.suffix = this.checkNestedBrace.update(blob.strings.suffix);\n    }\n};\nCSL.Output.Queue.prototype.append = function (str, tokname, notSerious, ignorePredecessor, noStripPeriods) {\n    var token, blob, curr;\n    var useblob = true;\n    if (notSerious) {\n        ignorePredecessor = true;\n    }\n    if (this.state.tmp[\"doing-macro-with-date\"] && !notSerious) {\n        if (tokname !== \"macro-with-date\") {\n            return false;\n        }\n        if (tokname === \"macro-with-date\") {\n            tokname = \"empty\";\n        }\n    }\n    if (\"undefined\" === typeof str) {\n        return false;\n    }\n    if (\"number\" === typeof str) {\n        str = \"\" + str;\n    }\n    if (!notSerious \n        && this.state.tmp.element_trace \n        && this.state.tmp.element_trace.value() === \"suppress-me\") {\n        return false;\n    }\n    blob = false;\n    if (!tokname) {\n        token = this.formats.value().empty;\n    } else if (tokname === \"literal\") {\n        token = true;\n        useblob = false;\n    } else if (\"string\" === typeof tokname) {\n        token = this.formats.value()[tokname];\n    } else {\n        token = tokname;\n    }\n    if (!token) {\n        throw \"CSL processor error: unknown format token name: \" + tokname;\n    }\n    if (token.strings && \"undefined\" === typeof token.strings.delimiter) {\n        token.strings.delimiter = \"\";\n    }\n    if (\"string\" === typeof str && str.length) {\n        str = str.replace(/ ([:;?!\\u00bb])/g, \"\\u202f$1\").replace(/\\u00ab /g, \"\\u00ab\\u202f\");\n        this.last_char_rendered = str.slice(-1);\n        str = str.replace(/\\s+'/g, \" \\'\");\n        if (!notSerious) {\n            str = str.replace(/^'/g, \" \\'\");\n        }\n        if (!ignorePredecessor) {\n            this.state.tmp.term_predecessor = true;\n            this.state.tmp.in_cite_predecessor = true;\n        } else if (notSerious) {\n            this.state.tmp.term_predecessor_name = true;\n        }\n    }\n    blob = new CSL.Blob(str, token);\n    curr = this.current.value();\n    if (\"undefined\" === typeof curr && this.current.mystack.length === 0) {\n        this.current.mystack.push([]);\n        curr = this.current.value();\n    }\n    if (\"string\" === typeof blob.blobs) {\n        if (!ignorePredecessor) {\n            this.state.tmp.term_predecessor = true;\n            this.state.tmp.in_cite_predecessor = true;\n        } else if (notSerious) {\n            this.state.tmp.term_predecessor_name = true;\n        }\n    }\n    if (!notSerious) {\n        this.state.parallel.AppendBlobPointer(curr);\n    }\n    if (\"string\" === typeof str) {\n        if (\"string\" === typeof blob.blobs && [':', '!', '?', '.', ',', ';'].indexOf(blob.blobs.slice(0, 1)) > -1) {\n            blob.strings.prefix = blob.strings.prefix + blob.blobs.slice(0, 1);\n            blob.blobs = blob.blobs.slice(1);\n        }\n        if (blob.strings[\"text-case\"]) {\n            blob.blobs = CSL.Output.Formatters[blob.strings[\"text-case\"]](this.state, str);\n        }\n        if (this.state.tmp.strip_periods && !noStripPeriods) {\n            blob.blobs = blob.blobs.replace(/\\.([^a-z]|$)/g, \"$1\");\n        }\n        for (var i = blob.decorations.length - 1; i > -1; i += -1) {\n            if (blob.decorations[i][0] === \"@quotes\" && blob.decorations[i][1] !== \"false\") {\n                blob.punctuation_in_quote = this.state.getOpt(\"punctuation-in-quote\");\n            }\n            if (!blob.blobs.match(CSL.ROMANESQUE_REGEXP)) {\n                if (blob.decorations[i][0] === \"@font-style\") {\n                    blob.decorations = blob.decorations.slice(0, i).concat(blob.decorations.slice(i + 1));\n                }\n            }\n        }\n        curr.push(blob);\n        this.state.fun.flipflopper.processTags(blob);\n    } else if (useblob) {\n        curr.push(blob);\n    } else {\n        curr.push(str);\n    }\n    return true;\n};\nCSL.Output.Queue.prototype.string = function (state, myblobs, blob) {\n    var i, ilen, j, jlen, b;\n    var txt_esc = CSL.getSafeEscape(this.state);\n    var blobs = myblobs.slice();\n    var ret = [];\n    if (blobs.length === 0) {\n        return ret;\n    }\n    var blob_delimiter = \"\";\n    if (blob) {\n        blob_delimiter = blob.strings.delimiter;\n    } else {\n        state.tmp.count_offset_characters = false;\n        state.tmp.offset_characters = 0;\n    }\n    if (blob && blob.new_locale) {\n        blob.old_locale = state.opt.lang;\n        state.opt.lang = blob.new_locale;\n    }\n    var blobjr, use_suffix, use_prefix, params;\n    for (i = 0, ilen = blobs.length; i < ilen; i += 1) {\n        blobjr = blobs[i];\n        if (blobjr.strings.first_blob) {\n            state.tmp.count_offset_characters = blobjr.strings.first_blob;\n        }\n        if (\"string\" === typeof blobjr.blobs) {\n            if (\"number\" === typeof blobjr.num) {\n                ret.push(blobjr);\n            } else if (blobjr.blobs) {\n                b = txt_esc(blobjr.blobs);\n                var blen = b.length;\n                if (!state.tmp.suppress_decorations) {\n                    for (j = 0, jlen = blobjr.decorations.length; j < jlen; j += 1) {\n                        params = blobjr.decorations[j];\n                        if (params[0] === \"@showid\") {\n                            continue;\n                        }\n                        if (state.normalDecorIsOrphan(blobjr, params)) {\n                            continue;\n                        }\n                        b = state.fun.decorate[params[0]][params[1]].call(blobjr, state, b, params[2]);\n                    }\n                }\n                if (b && b.length) {\n                    b = txt_esc(blobjr.strings.prefix) + b + txt_esc(blobjr.strings.suffix);\n                    if ((state.opt.development_extensions.csl_reverse_lookup_support || state.sys.csl_reverse_lookup_support) && !state.tmp.suppress_decorations) {\n                        for (j = 0, jlen = blobjr.decorations.length; j < jlen; j += 1) {\n                            params = blobjr.decorations[j];\n                            if (params[0] === \"@showid\") {\n                                b = state.fun.decorate[params[0]][params[1]].call(blobjr, state, b, params[2]);\n                            }\n                        }\n                    }\n                    ret.push(b);\n                    if (state.tmp.count_offset_characters) {\n                        state.tmp.offset_characters += (blen + blobjr.strings.suffix.length + blobjr.strings.prefix.length);\n                    }\n                }\n            }\n        } else if (blobjr.blobs.length) {\n            var addtoret = state.output.string(state, blobjr.blobs, blobjr);\n            if (blob) {\n                if (\"string\" !== addtoret && addtoret.length > 1 && blobjr.strings.delimiter) {\n                    var numberSeen = false;\n                    for (var j=0,jlen=addtoret.length;j<jlen;j++) {\n                        if (\"string\" !== typeof addtoret[j]) {\n                            numberSeen = true;\n                        } else if (numberSeen) {\n                            addtoret[j] = (blobjr.strings.delimiter + addtoret[j]);\n                        }\n                    }\n                }\n            }\n            ret = ret.concat(addtoret);\n        }\n        if (blobjr.strings.first_blob) {\n            state.registry.registry[blobjr.strings.first_blob].offset = state.tmp.offset_characters;\n            state.tmp.count_offset_characters = false;\n        }\n    }\n    for (i=0,ilen=ret.length - 1;i<ilen;i+=1) {\n        if (\"number\" === typeof ret[i].num && \"number\" === typeof ret[i+1].num && !ret[i+1].UGLY_DELIMITER_SUPPRESS_HACK) {\n            ret[i].strings.suffix = ret[i].strings.suffix + (blob_delimiter ? blob_delimiter : \"\");\n            ret[i+1].successor_prefix = \"\";\n            ret[i+1].UGLY_DELIMITER_SUPPRESS_HACK = true;\n        }\n    }\n    var span_split = 0;\n    for (i = 0, ilen = ret.length; i < ilen; i += 1) {\n        if (\"string\" === typeof ret[i]) {\n            span_split = (parseInt(i, 10) + 1);\n            if (i < ret.length - 1  && \"object\" === typeof ret[i + 1]) {\n                if (blob_delimiter && !ret[i + 1].UGLY_DELIMITER_SUPPRESS_HACK) {\n                    ret[i] += txt_esc(blob_delimiter);\n                }\n                ret[i + 1].UGLY_DELIMITER_SUPPRESS_HACK = true;\n            }\n        }\n    }\n    if (blob && (blob.decorations.length || blob.strings.suffix)) {\n        span_split = ret.length;\n    } else if (blob && blob.strings.prefix) {\n        for (var i=0,ilen=ret.length;i<ilen;i++) {\n            if (\"undefined\" !== typeof ret[i].num) {\n                span_split = i;\n                if (i === 0) {\n                    ret[i].strings.prefix = blob.strings.prefix + ret[i].strings.prefix;\n                }\n                break;\n            }\n        }\n    }\n    var blobs_start = state.output.renderBlobs(ret.slice(0, span_split), blob_delimiter, false, blob);\n    if (blobs_start && blob && (blob.decorations.length || blob.strings.suffix || blob.strings.prefix)) {\n        if (!state.tmp.suppress_decorations) {\n            for (i = 0, ilen = blob.decorations.length; i < ilen; i += 1) {\n                params = blob.decorations[i];\n                if ([\"@cite\",\"@bibliography\", \"@display\", \"@showid\"].indexOf(params[0]) > -1) {\n                    continue;\n                }\n                if (state.normalDecorIsOrphan(blobjr, params)) {\n                    continue;\n                }\n                if (\"string\" === typeof blobs_start) {\n                    blobs_start = state.fun.decorate[params[0]][params[1]].call(blob, state, blobs_start, params[2]);\n                }\n            }\n        }\n        b = blobs_start;\n        use_suffix = blob.strings.suffix;\n        if (b && b.length) {\n            use_prefix = blob.strings.prefix;\n            b = txt_esc(use_prefix) + b + txt_esc(use_suffix);\n            if (state.tmp.count_offset_characters) {\n                state.tmp.offset_characters += (use_prefix.length + use_suffix.length);\n            }\n        }\n        blobs_start = b;\n        if (!state.tmp.suppress_decorations) {\n            for (i = 0, ilen = blob.decorations.length; i < ilen; i += 1) {\n                params = blob.decorations[i];\n                if ([\"@cite\",\"@bibliography\", \"@display\", \"@showid\"].indexOf(params[0]) === -1) {\n                    continue;\n                }\n                if (\"string\" === typeof blobs_start) {\n                    blobs_start = state.fun.decorate[params[0]][params[1]].call(blob, state, blobs_start, params[2]);\n                }\n            }\n        }\n    }\n    var blobs_end = ret.slice(span_split, ret.length);\n    if (!blobs_end.length && blobs_start) {\n        ret = [blobs_start];\n    } else if (blobs_end.length && !blobs_start) {\n        ret = blobs_end;\n    } else if (blobs_start && blobs_end.length) {\n        ret = [blobs_start].concat(blobs_end);\n    }\n    if (\"undefined\" === typeof blob) {\n        this.queue = [];\n        this.current.mystack = [];\n        this.current.mystack.push(this.queue);\n        if (state.tmp.suppress_decorations) {\n            ret = state.output.renderBlobs(ret, undefined, false);\n        }\n    } else if (\"boolean\" === typeof blob) {\n        ret = state.output.renderBlobs(ret, undefined, true);\n    }\n    if (blob && blob.new_locale) {\n        state.opt.lang = blob.old_locale;\n    }\n    return ret;\n};\nCSL.Output.Queue.prototype.clearlevel = function () {\n    var blob, pos, len;\n    blob = this.current.value();\n    len = blob.blobs.length;\n    for (pos = 0; pos < len; pos += 1) {\n        blob.blobs.pop();\n    }\n};\nCSL.Output.Queue.prototype.renderBlobs = function (blobs, delim, in_cite, parent) {\n    var state, ret, ret_last_char, use_delim, i, blob, pos, len, ppos, llen, pppos, lllen, res, str, params, txt_esc;\n    txt_esc = CSL.getSafeEscape(this.state);\n    if (!delim) {\n        delim = \"\";\n    }\n    state = this.state;\n    ret = \"\";\n    ret_last_char = [];\n    use_delim = \"\";\n    len = blobs.length;\n    if (this.state.tmp.area === \"citation\" && !this.state.tmp.just_looking && len === 1 && typeof blobs[0] === \"object\" && parent) {\n        blobs[0].strings.prefix = parent.strings.prefix + blobs[0].strings.prefix;\n        blobs[0].strings.suffix = blobs[0].strings.suffix + parent.strings.suffix;\n        blobs[0].decorations = blobs[0].decorations.concat(parent.decorations);\n        blobs[0].params = parent.params;\n        return blobs[0];\n    }\n    var start = true;\n    for (pos = 0; pos < len; pos += 1) {\n        if (blobs[pos].checkNext) {\n            blobs[pos].checkNext(blobs[pos + 1],start);\n            start = false;\n        } else if (blobs[pos+1] && blobs[pos+1].splice_prefix) {\n            start = false;\n        } else {\n            start = true;\n        }\n    }\n    var doit = true;\n    for (pos = blobs.length - 1; pos > 0; pos += -1) {\n        if (blobs[pos].checkLast) {\n            if (doit && blobs[pos].checkLast(blobs[pos - 1])) {\n                doit = false;\n            }\n        } else {\n            doit = true;\n        }\n    }\n    len = blobs.length;\n    for (pos = 0; pos < len; pos += 1) {\n        blob = blobs[pos];\n        if (ret) {\n            use_delim = delim;\n        }\n        if (\"string\" === typeof blob) {\n            ret += txt_esc(use_delim);\n            ret += blob;\n            if (state.tmp.count_offset_characters) {\n                state.tmp.offset_characters += (use_delim.length);\n            }\n        } else if (in_cite) {\n            if (ret) {\n                ret = [ret, blob];\n            } else {\n                ret = [blob];\n            }\n        } else if (blob.status !== CSL.SUPPRESS) {\n            if (blob.particle) {\n                str = blob.particle + blob.num;\n            } else {\n                str = blob.formatter.format(blob.num, blob.gender);\n            }\n            var strlen = str.replace(/<[^>]*>/g, \"\").length;\n            this.append(str, \"empty\", true);\n            var str_blob = this.pop();\n            var count_offset_characters = state.tmp.count_offset_characters;\n            str = this.string(state, [str_blob], false);\n            state.tmp.count_offset_characters = count_offset_characters;\n            if (blob.strings[\"text-case\"]) {\n                str = CSL.Output.Formatters[blob.strings[\"text-case\"]](this.state, str);\n            }\n            if (str && this.state.tmp.strip_periods) {\n                str = str.replace(/\\.([^a-z]|$)/g, \"$1\");\n            }\n            if (!state.tmp.suppress_decorations) {\n                llen = blob.decorations.length;\n                for (ppos = 0; ppos < llen; ppos += 1) {\n                    params = blob.decorations[ppos];\n                    if (state.normalDecorIsOrphan(blob, params)) {\n                        continue;\n                    }\n                    str = state.fun.decorate[params[0]][params[1]].call(blob, state, str, params[2]);\n                }\n            }\n            str = txt_esc(blob.strings.prefix) + str + txt_esc(blob.strings.suffix);\n            var addme = \"\";\n            if (blob.status === CSL.END) {\n                addme = txt_esc(blob.range_prefix);\n            } else if (blob.status === CSL.SUCCESSOR) {\n                addme = txt_esc(blob.successor_prefix);\n            } else if (blob.status === CSL.START) {\n                if (pos > 0 && !blob.suppress_splice_prefix) {\n                    addme = txt_esc(blob.splice_prefix);\n                } else {\n                    addme = \"\";\n                }\n            } else if (blob.status === CSL.SEEN) {\n                addme = txt_esc(blob.splice_prefix);\n            }\n            ret += addme;\n            ret += str;\n            if (state.tmp.count_offset_characters) {\n                state.tmp.offset_characters += (addme.length + blob.strings.prefix.length + strlen + blob.strings.suffix.length);\n            }\n        }\n    }\n    return ret;\n};\nCSL.Output.Queue.purgeEmptyBlobs = function (parent) {\n    if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n        return;\n    }\n    for (var i=parent.blobs.length-1;i>-1;i--) {\n        CSL.Output.Queue.purgeEmptyBlobs(parent.blobs[i]);\n        var child = parent.blobs[i];\n        if (!child || !child.blobs || !child.blobs.length) {\n            var buf = [];\n            while ((parent.blobs.length-1) > i) {\n                buf.push(parent.blobs.pop());\n            }\n            parent.blobs.pop();\n            while (buf.length) {\n                parent.blobs.push(buf.pop());\n            }\n        }\n    }\n};\nCSL.Output.Queue.adjust = function (punctInQuote) {\n    var NO_SWAP_IN = {\n        \";\": true,\n        \":\": true\n    }\n    var NO_SWAP_OUT = {\n        \".\": true,\n        \"!\": true,\n        \"?\": true\n    }\n    this.upward = upward;\n    this.leftward = leftward;\n    this.downward = downward;\n    this.fix = fix;\n    var LtoR_MAP = {\n        \"!\": {\n            \".\": \"!\",\n            \"?\": \"!?\",\n            \":\": \"!\",\n            \",\": \"!,\",\n            \";\": \"!;\"\n        },\n        \"?\": {\n            \"!\": \"?!\",\n            \".\": \"?\",\n            \":\": \"?\",\n            \",\": \"?,\",\n            \";\": \"?;\"\n        },\n        \".\": {\n            \"!\": \".!\",\n            \"?\": \".?\",\n            \":\": \".:\",\n            \",\": \".,\",\n            \";\": \".;\"\n        },\n        \":\": {\n            \"!\": \"!\",\n            \"?\": \"?\",\n            \".\": \":\",\n            \",\": \":,\",\n            \";\": \":;\"\n        },\n        \",\": {\n            \"!\": \",!\",\n            \"?\": \",?\",\n            \":\": \",:\",\n            \".\": \",.\",\n            \";\": \",;\"\n        },\n        \";\": {\n            \"!\": \"!\",\n            \"?\": \"?\",\n            \":\": \";\",\n            \",\": \";,\",\n            \".\": \";\"\n        }\n    }\n    var SWAP_IN = {};\n    var SWAP_OUT = {};\n    var PUNCT = {};\n    var PUNCT_OR_SPACE = {};\n    for (var key in LtoR_MAP) {\n        PUNCT[key] = true;\n        PUNCT_OR_SPACE[key] = true;\n        if (!NO_SWAP_IN[key]) {\n            SWAP_IN[key] = true;\n        }\n        if (!NO_SWAP_OUT[key]) {\n            SWAP_OUT[key] = true;\n        }\n    }\n    PUNCT_OR_SPACE[\" \"] = true;\n    PUNCT_OR_SPACE[\" \"] = true;\n    var RtoL_MAP = {};\n    for (var key in LtoR_MAP) {\n        for (var subkey in LtoR_MAP[key]) {\n            if (!RtoL_MAP[subkey]) {\n                RtoL_MAP[subkey] = {};\n            }\n            RtoL_MAP[subkey][key] = LtoR_MAP[key][subkey];\n        }\n    }\n    function blobIsNumber(blob) {\n        return (\"number\" === typeof blob.num || (blob.blobs && blob.blobs.length === 1 && \"number\" === typeof blob.blobs[0].num));\n    };\n    function blobEndsInNumber(blob) {\n        if (\"number\" === typeof blob.num) {\n            return true;\n        }\n        if (!blob.blobs || \"object\" !==  typeof blob.blobs) return false;\n        if (blobEndsInNumber(blob.blobs[blob.blobs.length-1])) return true;\n    }\n    function blobHasDecorations(blob,includeQuotes) {\n        var ret = false;\n        var decorlist = ['@font-style','@font-variant','@font-weight','@text-decoration','@vertical-align'];\n        if (includeQuotes) {\n            decorlist.push('@quotes');\n        }\n        if (blob.decorations) {\n            for (var i=0,ilen=blob.decorations.length;i<ilen;i++) {\n                if (decorlist.indexOf(blob.decorations[i][0]) > -1) {\n                    ret = true;\n                    break;\n                }\n            }\n        }\n        return ret;\n    };\n    function blobHasDescendantQuotes(blob) {\n        if (blob.decorations) {\n            for (var i=0,ilen=blob.decorations.length;i<ilen;i++) {\n                if (blob.decorations[i][0] === '@quotes' && blob.decorations[i][1] !== \"false\") {\n                    return true;\n                }\n            }\n        }\n        if (\"object\" !== typeof blob.blobs) {\n            return false\n        };\n        return blobHasDescendantQuotes(blob.blobs[blob.blobs.length-1]);\n    }\n    function blobHasDescendantMergingPunctuation(parentChar,blob) {\n        var childChar = blob.strings.suffix.slice(-1);\n        if (!childChar && \"string\" === typeof blob.blobs) {\n            childChar = blob.blobs.slice(-1);\n        }\n        var mergedChars = RtoL_MAP[parentChar][childChar];\n        if (mergedChars && mergedChars.length === 1) {\n            return true;\n        }\n        if (\"object\" !== typeof blob.blobs) return false;\n        if (blobHasDescendantMergingPunctuation(parentChar,blob.blobs[blob.blobs.length-1])) return true;\n        return false;\n    }\n    function matchLastChar(blob, chr) {\n        if (!PUNCT[chr]) {\n            return false;\n        }\n        if (\"string\" === typeof blob.blobs) {\n            if (blob.blobs.slice(-1) === chr) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            var child = blob.blobs[blob.blobs.length-1];\n            if (child) {\n                var childChar = child.strings.suffix.slice(-1);\n                if (!childChar) {\n                    return matchLastChar(child,chr);\n                } else if (child.strings.suffix.slice(-1) == chr) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        }\n    };\n    function mergeChars (First, first, Second, second, merge_right) {\n        FirstStrings = \"blobs\" === first ? First : First.strings;\n        SecondStrings = \"blobs\" === second ? Second: Second.strings;\n        var firstChar = FirstStrings[first].slice(-1);\n        var secondChar = SecondStrings[second].slice(0,1);\n        function cullRight () {\n            SecondStrings[second] = SecondStrings[second].slice(1);\n        };\n        function cullLeft () {\n            FirstStrings[first] = FirstStrings[first].slice(0,-1);\n        };\n        function addRight (chr) {\n            SecondStrings[second] = chr + SecondStrings[second];\n        }\n        function addLeft (chr) {\n            FirstStrings[first] += chr;\n        }\n        var cull = merge_right ? cullLeft : cullRight;\n        function matchOnRight () {\n            return RtoL_MAP[secondChar];\n        }\n        function matchOnLeft () {\n            return LtoR_MAP[firstChar];\n        }\n        var match = merge_right ? matchOnLeft : matchOnRight;\n        function mergeToRight () {\n            var chr = LtoR_MAP[firstChar][secondChar];\n            if (\"string\" === typeof chr) {\n                cullLeft();\n                cullRight();\n                addRight(chr);\n            } else {\n                addRight(firstChar);\n                cullLeft();\n            }\n        }\n        function mergeToLeft () {\n            var chr = RtoL_MAP[secondChar][firstChar];\n            if (\"string\" === typeof chr) {\n                cullLeft();\n                cullRight();\n                addLeft(chr);\n            } else {\n                addLeft(secondChar);\n                cullRight();\n            }\n        }\n        var merge = merge_right ? mergeToRight: mergeToLeft;\n        var isDuplicate = firstChar === secondChar;\n        if (isDuplicate) {\n            cull();\n        } else {\n            if (match()) {\n                merge();\n            }\n        }\n    };\n    function upward (parent) {\n        if (parent.blobs && \"string\" == typeof parent.blobs) {\n            if (PUNCT[parent.strings.suffix.slice(0,1)]\n                && parent.strings.suffix.slice(0,1) === parent.blobs.slice(-1)) {\n                parent.strings.suffix = parent.strings.suffix.slice(1);\n            }\n            return;\n        } else if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n            return;\n        }\n        var parentDecorations = blobHasDecorations(parent,true);\n        for (var i=parent.blobs.length-1;i>-1;i--) {\n            var endFlag = i === (parent.blobs.length-1);\n            this.upward(parent.blobs[i]);\n            var parentStrings = parent.strings;\n            var childStrings = parent.blobs[i].strings;\n            if (i === 0) {\n                if (\" \" === parentStrings.prefix.slice(-1) && \" \" === childStrings.prefix.slice(0, 1)) {\n                    childStrings.prefix = childStrings.prefix.slice(1);\n                }\n                var childChar = childStrings.prefix.slice(0, 1);\n                if (!parentDecorations && PUNCT_OR_SPACE[childChar] && !parentStrings.prefix) {\n                    parentStrings.prefix += childChar;\n                    childStrings.prefix = childStrings.prefix.slice(1);\n                }\n            }\n            if (i === (parent.blobs.length - 1)) {\n                var childChar = childStrings.suffix.slice(-1);\n                if (!parentDecorations && [\" \"].indexOf(childChar) > -1) {\n                    if (parentStrings.suffix.slice(0,1) !== childChar) {\n                        parentStrings.suffix = childChar + parentStrings.suffix;\n                    }\n                    childStrings.suffix = childStrings.suffix.slice(0, -1);\n                }\n            }\n            if (parentStrings.delimiter && i > 0) {\n                if (PUNCT_OR_SPACE[parentStrings.delimiter.slice(-1)]\n                    && parentStrings.delimiter.slice(-1) === childStrings.prefix.slice(0, 1)) {\n                    childStrings.prefix = childStrings.prefix.slice(1);\n                }\n            }\n        }\n    };\n    function leftward (parent) {\n        if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n            return;\n        }\n        for (var i=parent.blobs.length-1;i>-1;i--) {\n            this.leftward(parent.blobs[i]);\n            if ((i < parent.blobs.length -1) && !parent.strings.delimiter) {\n                var child = parent.blobs[i];\n                var childChar = child.strings.suffix.slice(-1);\n                var sibling = parent.blobs[i+1];\n                var siblingChar = sibling.strings.prefix.slice(0, 1);\n                var hasDecorations = blobHasDecorations(child) || blobHasDecorations(sibling);\n                var hasNumber = \"number\" === typeof childChar || \"number\" === typeof siblingChar;\n                if (!hasDecorations && !hasNumber && PUNCT[siblingChar] && !hasNumber) {\n                    var suffixAndPrefixMatch = siblingChar === child.strings.suffix.slice(-1);\n                    var suffixAndFieldMatch = (!child.strings.suffix && \"string\" === typeof child.blobs && child.blobs.slice(-1) === siblingChar);\n                    if (!suffixAndPrefixMatch && !suffixAndFieldMatch) {\n                        mergeChars(child, 'suffix', sibling, 'prefix');\n                    } else {\n                        sibling.strings.prefix = sibling.strings.prefix.slice(1);\n                    }\n                }\n            }\n        }\n    };\n    function downward (parent, top) {\n        if (parent.blobs && \"string\" == typeof parent.blobs) {\n            if (PUNCT[parent.strings.suffix.slice(0,1)]\n                && parent.strings.suffix.slice(0,1) === parent.blobs.slice(-1)) {\n                parent.strings.suffix = parent.strings.suffix.slice(1);\n            }\n            return;\n        } else if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n            return;\n        }\n        var parentStrings = parent.strings;\n        var someChildrenAreNumbers = false;\n        for (var i=0,ilen=parent.blobs.length;i<ilen;i++) {\n            if (blobIsNumber(parent.blobs[i])) {\n                someChildrenAreNumbers = true;\n                break;\n            }\n        }\n        if (true || !someChildrenAreNumbers) {\n            if (parentStrings.delimiter && PUNCT[parentStrings.delimiter.slice(0, 1)]) {\n                var delimChar = parentStrings.delimiter.slice(0, 1);\n                for (var i=parent.blobs.length-2;i>-1;i--) {\n                    var childStrings = parent.blobs[i].strings;\n                    if (childStrings.suffix.slice(-1) !== delimChar) {\n                        childStrings.suffix += delimChar;\n                    }\n                }\n                parentStrings.delimiter = parentStrings.delimiter.slice(1);\n            }\n        }\n        var parentDecorations = blobHasDecorations(parent, true);\n        var parentIsNumber = blobIsNumber(parent);\n        for (var i=parent.blobs.length-1;i>-1;i--) {\n            var child = parent.blobs[i];\n            var childStrings = parent.blobs[i].strings;\n            var childDecorations = blobHasDecorations(child, true);\n            var childIsNumber = blobIsNumber(child);\n            if (i === (parent.blobs.length - 1)) {\n                if (true || !someChildrenAreNumbers) {\n                    var parentChar = parentStrings.suffix.slice(0, 1);\n                    var allowMigration = false;\n                    if (PUNCT[parentChar]) {\n                        allowMigration = blobHasDescendantMergingPunctuation(parentChar,child);\n                        if (!allowMigration && punctInQuote) {\n                            allowMigration = blobHasDescendantQuotes(child);\n                        }\n                    }\n                    if (allowMigration) {\n                        if (PUNCT[parentChar]) {\n                            if (!blobEndsInNumber(child)) {\n                                if (\"string\" === typeof child.blobs) {\n                                    mergeChars(child, 'blobs', parent, 'suffix');\n                                } else {\n                                    mergeChars(child, 'suffix', parent, 'suffix');\n                                }\n                                if (parentStrings.suffix.slice(0,1) === \".\") {\n                                    childStrings.suffix += parentStrings.suffix.slice(0,1);\n                                    parentStrings.suffix = parentStrings.suffix.slice(1);\n                                }\n                            }\n                        }\n                    }\n                    if (childStrings.suffix.slice(-1) === \" \" && parentStrings.suffix.slice(0,1) === \" \") {\n                        parentStrings.suffix = parentStrings.suffix.slice(1);\n                    }\n                    if (PUNCT_OR_SPACE[childStrings.suffix.slice(0,1)]) {\n                        if (\"string\" === typeof child.blobs && child.blobs.slice(-1) === childStrings.suffix.slice(0,1)) {\n                            childStrings.suffix = childStrings.suffix.slice(1);\n                        }\n                        if (childStrings.suffix.slice(-1) === parentStrings.suffix.slice(0, 1)) {\n                            parentStrings.suffix = parentStrings.suffix.slice(0, -1);\n                        }\n                    }\n                }\n                if (matchLastChar(parent,parent.strings.suffix.slice(0,1))) {\n                    parent.strings.suffix = parent.strings.suffix.slice(1);\n                }\n            } else if (parentStrings.delimiter) {\n                if (PUNCT_OR_SPACE[parentStrings.delimiter.slice(0,1)]\n                    && parentStrings.delimiter.slice(0, 1) === childStrings.suffix.slice(-1)) {\n                    parent.blobs[i].strings.suffix = parent.blobs[i].strings.suffix.slice(0, -1);\n                }\n            } else {\n                var siblingStrings = parent.blobs[i+1].strings;\n                if (!blobIsNumber(child) \n                    && !childDecorations\n                    && PUNCT_OR_SPACE[childStrings.suffix.slice(-1)]\n                    && childStrings.suffix.slice(-1) === siblingStrings.prefix.slice(0, 1)) {\n                    siblingStrings.prefix = siblingStrings.prefix.slice(1);\n                }\n            }\n            if (!childIsNumber && !childDecorations && PUNCT[childStrings.suffix.slice(0,1)]\n                && \"string\" === typeof child.blobs) {\n                mergeChars(child, 'blobs', child, 'suffix')\n            }\n            this.downward(parent.blobs[i]);\n        }\n    };\n    function swapToTheLeft (child) {\n        var childChar = child.strings.suffix.slice(0,1);\n        if (\"string\" === typeof child.blobs) {\n            while (SWAP_IN[childChar]) {\n                mergeChars(child, 'blobs', child, 'suffix');\n                childChar = child.strings.suffix.slice(0,1);\n            }                                \n        } else {\n            while (SWAP_IN[childChar]) {\n                mergeChars(child.blobs[child.blobs.length-1], 'suffix', child, 'suffix');\n                childChar = child.strings.suffix.slice(0,1);\n            }\n        }\n    }\n    function swapToTheRight (child) {\n        if (\"string\" === typeof child.blobs) {\n            var childChar = child.blobs.slice(-1);\n            while (SWAP_OUT[childChar]) {\n                mergeChars(child, 'blobs', child, 'suffix', true);\n                childChar = child.blobs.slice(-1);\n            }\n        } else {\n            var childChar = child.blobs[child.blobs.length-1].strings.suffix.slice(-1);\n            while (SWAP_OUT[childChar]) {\n                mergeChars(child.blobs[child.blobs.length-1], 'suffix', child, 'suffix', true);\n                childChar = child.blobs[child.blobs.length-1].strings.suffix.slice(-1);\n            }\n        }\n    }\n    function fix (parent) {\n        if (\"object\" !== typeof parent || \"object\" !== typeof parent.blobs || !parent.blobs.length) {\n            return;\n        }\n        var lastChar;\n        for (var i=0,ilen=parent.blobs.length;i<ilen;i++) {\n            var child = parent.blobs[i];\n            var quoteSwap = false;\n            for (var j=0,jlen=child.decorations.length;j<jlen;j++) {\n                var decoration = child.decorations[j];\n                if (decoration[0] === \"@quotes\" && decoration[1] !== \"false\") {\n                    quoteSwap = true;\n                }\n            }\n            if (quoteSwap) {\n                if (punctInQuote) {\n                    swapToTheLeft(child);\n                } else {\n                    swapToTheRight(child);\n                }\n            }\n            lastChar = this.fix(parent.blobs[i]);\n            if (child.blobs && \"string\" === typeof child.blobs) {\n                lastChar = child.blobs.slice(-1);\n            }\n        }\n        return lastChar;\n    };\n}\nCSL.Engine.Opt = function () {\n    this.has_disambiguate = false;\n    this.mode = \"html\";\n    this.dates = {};\n    this.jurisdictions_seen = {};\n    this.suppressedJurisdictions = {};\n    this.inheritedAttributes = {};\n    this[\"locale-sort\"] = [];\n    this[\"locale-translit\"] = [];\n    this[\"locale-translat\"] = [];\n    this.citeAffixes = {\n        persons:{\n            \"locale-orig\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translit\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translat\":{\n                prefix:\"\",\n                suffix:\"\"\n            }\n        },\n        institutions:{\n            \"locale-orig\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translit\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translat\":{\n                prefix:\"\",\n                suffix:\"\"\n            }\n        },\n        titles:{\n            \"locale-orig\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translit\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translat\":{\n                prefix:\"\",\n                suffix:\"\"\n            }\n        },\n        journals:{\n            \"locale-orig\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translit\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translat\":{\n                prefix:\"\",\n                suffix:\"\"\n            }\n        },\n        publishers:{\n            \"locale-orig\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translit\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translat\":{\n                prefix:\"\",\n                suffix:\"\"\n            }\n        },\n        places:{\n            \"locale-orig\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translit\":{\n                prefix:\"\",\n                suffix:\"\"\n            },\n            \"locale-translat\":{\n                prefix:\"\",\n                suffix:\"\"\n            }\n        }\n    };\n    this[\"default-locale\"] = [];\n    this.update_mode = CSL.NONE;\n    this.bib_mode = CSL.NONE;\n    this.sort_citations = false;\n    this[\"et-al-min\"] = 0;\n    this[\"et-al-use-first\"] = 1;\n    this[\"et-al-use-last\"] = false;\n    this[\"et-al-subsequent-min\"] = false;\n    this[\"et-al-subsequent-use-first\"] = false;\n    this[\"demote-non-dropping-particle\"] = \"display-and-sort\";\n    this[\"parse-names\"] = true;\n    this.citation_number_slug = false;\n    this.trigraph = \"Aaaa00:AaAa00:AaAA00:AAAA00\";\n    this.nodenames = [];\n    this.gender = {};\n    this['cite-lang-prefs'] = {\n        persons:['orig'],\n        institutions:['orig'],\n        titles:['orig'],\n        journals:['orig'],\n        publishers:['orig'],\n        places:['orig'],\n        number:['orig']\n    };\n    this.has_layout_locale = false;\n    this.development_extensions = {};\n    this.development_extensions.field_hack = true;\n    this.development_extensions.allow_field_hack_date_override = true;\n    this.development_extensions.locator_date_and_revision = true;\n    this.development_extensions.locator_parsing_for_plurals = true;\n    this.development_extensions.locator_label_parse = true;\n    this.development_extensions.raw_date_parsing = true;\n    this.development_extensions.clean_up_csl_flaws = true;\n    this.development_extensions.flip_parentheses_to_braces = true;\n    this.development_extensions.jurisdiction_subfield = true;\n    this.development_extensions.static_statute_locator = false;\n    this.development_extensions.csl_reverse_lookup_support = false;\n    this.development_extensions.clobber_locator_if_no_statute_section = false;\n    this.development_extensions.wrap_url_and_doi = false;\n    this.development_extensions.allow_force_lowercase = false;\n    this.development_extensions.handle_parallel_articles = false;\n    this.development_extensions.thin_non_breaking_space_html_hack = false;\n    this.development_extensions.apply_citation_wrapper = false;\n    this.development_extensions.main_title_from_short_title = false;\n    this.development_extensions.uppercase_subtitles = false;\n    this.development_extensions.normalize_lang_keys_to_lowercase = false;\n    this.development_extensions.strict_text_case_locales = false;\n    this.development_extensions.rtl_support = false;\n    this.development_extensions.expect_and_symbol_form = false;\n    this.development_extensions.require_explicit_legal_case_title_short = false;\n    this.development_extensions.spoof_institutional_affiliations = false;\n    this.development_extensions.force_jurisdiction = false;\n    this.development_extensions.parse_names = true;\n};\nCSL.Engine.Tmp = function () {\n    this.names_max = new CSL.Stack();\n    this.names_base = new CSL.Stack();\n    this.givens_base = new CSL.Stack();\n    this.value = [];\n    this.namepart_decorations = {};\n    this.namepart_type = false;\n    this.area = \"citation\";\n    this.root = \"citation\";\n    this.extension = \"\";\n    this.can_substitute = new CSL.Stack(0, CSL.LITERAL);\n    this.element_rendered_ok = false;\n    this.element_trace = new CSL.Stack(\"style\");\n    this.nameset_counter = 0;\n    this.group_context = new CSL.Stack({\n        term_intended: false,\n        variable_attempt: false,\n        variable_success: false,\n        output_tip: undefined,\n        label_form:  undefined,\n        parallel_conditions: undefined,\n        condition: false,\n        force_suppress: false,\n        done_vars: []\n    });\n    this.term_predecessor = false;\n    this.in_cite_predecessor = false;\n    this.jump = new CSL.Stack(0, CSL.LITERAL);\n    this.decorations = new CSL.Stack();\n    this.tokenstore_stack = new CSL.Stack();\n    this.last_suffix_used = \"\";\n    this.last_names_used = [];\n    this.last_years_used = [];\n    this.years_used = [];\n    this.names_used = [];\n    this.taintedItemIDs = {};\n    this.taintedCitationIDs = {};\n    this.initialize_with = new CSL.Stack();\n    this.disambig_request = false;\n    this[\"name-as-sort-order\"] = false;\n    this.suppress_decorations = false;\n    this.disambig_settings = new CSL.AmbigConfig();\n    this.bib_sort_keys = [];\n    this.prefix = new CSL.Stack(\"\", CSL.LITERAL);\n    this.suffix = new CSL.Stack(\"\", CSL.LITERAL);\n    this.delimiter = new CSL.Stack(\"\", CSL.LITERAL);\n    this.cite_locales = [];\n    this.cite_affixes = {\n        citation: false, \n        bibliography: false,\n        citation_sort: false, \n        bibliography_sort: false\n    };\n    this.strip_periods = 0;\n    this.shadow_numbers = {};\n    this.authority_stop_last = 0;\n    this.loadedItemIDs = {};\n};\nCSL.Engine.Fun = function (state) {\n    this.match = new CSL.Util.Match;\n    this.suffixator = new CSL.Util.Suffixator(CSL.SUFFIX_CHARS);\n    this.romanizer = new CSL.Util.Romanizer();\n    this.ordinalizer = new CSL.Util.Ordinalizer(state);\n    this.long_ordinalizer = new CSL.Util.LongOrdinalizer();\n};\nCSL.Engine.Build = function () {\n    this[\"alternate-term\"] = false;\n    this.in_bibliography = false;\n    this.in_style = false;\n    this.skip = false;\n    this.postponed_macro = false;\n    this.layout_flag = false;\n    this.name = false;\n    this.form = false;\n    this.term = false;\n    this.macro = {};\n    this.macro_stack = [];\n    this.text = false;\n    this.lang = false;\n    this.area = \"citation\";\n    this.root = \"citation\";\n    this.extension = \"\";\n    this.substitute_level = new CSL.Stack(0, CSL.LITERAL);\n    this.names_level = 0;\n    this.render_nesting_level = 0;\n    this.render_seen = false;\n};\nCSL.Engine.Configure = function () {\n    this.fail = [];\n    this.succeed = [];\n};\nCSL.Engine.Citation = function (state) {\n    this.opt = {\n        inheritedAttributes: {}\n    };\n    this.tokens = [];\n    this.srt = new CSL.Registry.Comparifier(state, \"citation_sort\");\n    this.opt.collapse = [];\n    this.opt[\"disambiguate-add-names\"] = false;\n    this.opt[\"disambiguate-add-givenname\"] = false;\n    this.opt[\"disambiguate-add-year-suffix\"] = false;\n    this.opt[\"givenname-disambiguation-rule\"] = \"by-cite\";\n    this.opt[\"near-note-distance\"] = 5;\n    this.opt.topdecor = [];\n    this.opt.layout_decorations = [];\n    this.opt.layout_prefix = \"\";\n    this.opt.layout_suffix = \"\";\n    this.opt.layout_delimiter = \"\";\n    this.opt.sort_locales = [];\n    this.opt.max_number_of_names = 0;\n    this.root = \"citation\";\n};\nCSL.Engine.Bibliography = function () {\n    this.opt = {\n        inheritedAttributes: {}\n    };\n    this.tokens = [];\n    this.opt.collapse = [];\n    this.opt.topdecor = [];\n    this.opt.layout_decorations = [];\n    this.opt.layout_prefix = \"\";\n    this.opt.layout_suffix = \"\";\n    this.opt.layout_delimiter = \"\";\n    this.opt[\"line-spacing\"] = 1;\n    this.opt[\"entry-spacing\"] = 1;\n    this.opt.sort_locales = [];\n    this.opt.max_number_of_names = 0;\n    this.root = \"bibliography\";\n};\nCSL.Engine.BibliographySort = function () {\n    this.tokens = [];\n    this.opt = {};\n    this.opt.sort_directions = [];\n    this.keys = [];\n    this.opt.topdecor = [];\n    this.root = \"bibliography\";\n};\nCSL.Engine.CitationSort = function () {\n    this.tokens = [];\n    this.opt = {};\n    this.opt.sort_directions = [];\n    this.keys = [];\n    this.opt.topdecor = [];\n    this.root = \"citation\";\n};\nCSL.Engine.prototype.previewCitationCluster = function (citation, citationsPre, citationsPost, newMode) {\n    var oldMode = this.opt.mode;\n    this.setOutputFormat(newMode);\n    var ret = this.processCitationCluster(citation, citationsPre, citationsPost, CSL.PREVIEW);\n    this.setOutputFormat(oldMode);\n    return ret[1];\n};\nCSL.Engine.prototype.appendCitationCluster = function (citation) {\n    var citationsPre = [];\n    var len = this.registry.citationreg.citationByIndex.length;\n    for (var pos = 0; pos < len; pos += 1) {\n        var c = this.registry.citationreg.citationByIndex[pos];\n        citationsPre.push([\"\" + c.citationID, c.properties.noteIndex]);\n    }\n    return this.processCitationCluster(citation, citationsPre, [])[1];\n};\nCSL.Engine.prototype.processCitationCluster = function (citation, citationsPre, citationsPost, flag) {\n    var c, i, ilen, j, jlen, k, klen, n, nlen, key, Item, item, noteCitations, textCitations, m, citationsInNote;\n    this.debug = false;\n    this.tmp.loadedItemIDs = {};\n    this.tmp.citation_errors = [];\n    var return_data = {\"bibchange\": false};\n    this.setCitationId(citation);\n    var oldCitationList;\n    var oldItemList;\n    var oldAmbigs;\n    if (flag === CSL.PREVIEW) {\n        oldCitationList = this.registry.citationreg.citationByIndex.slice();\n        oldItemList = this.registry.reflist.slice();\n        var newCitationList = citationsPre.concat([[\"\" + citation.citationID, citation.properties.noteIndex]]).concat(citationsPost);\n        var newItemIds = {};\n        var newItemIdsList = [];\n        for (i = 0, ilen = newCitationList.length; i < ilen; i += 1) {\n            c = this.registry.citationreg.citationById[newCitationList[i][0]];\n            for (j = 0, jlen = c.citationItems.length; j < jlen; j += 1) {\n                newItemIds[c.citationItems[j].id] = true;\n                newItemIdsList.push(\"\" + c.citationItems[j].id);\n            }\n        }\n        oldAmbigs = {};\n        for (i = 0, ilen = oldItemList.length; i < ilen; i += 1) {\n            if (!newItemIds[oldItemList[i].id]) {\n                var oldAkey = this.registry.registry[oldItemList[i].id].ambig;\n                var ids = this.registry.ambigcites[oldAkey];\n                if (ids) {\n                    for (j = 0, jlen = ids.length; j < jlen; j += 1) {\n                        oldAmbigs[ids[j]] = CSL.cloneAmbigConfig(this.registry.registry[ids[j]].disambig);\n                    }\n                }\n            }\n        }\n    }\n    this.tmp.taintedCitationIDs = {};\n    var sortedItems = [];\n    var rerunAkeys = {};\n    for (i = 0, ilen = citation.citationItems.length; i < ilen; i += 1) {\n        item = {};\n        for (key in citation.citationItems[i]) {\n            item[key] = citation.citationItems[i][key];\n        }\n        Item = this.retrieveItem(\"\" + item.id);\n        if (Item.id) {\n            this.transform.loadAbbreviation(\"default\", \"hereinafter\", Item.id);\n        }\n        item = CSL.parseLocator.call(this, item);\n        if (this.opt.development_extensions.static_statute_locator) {\n            this.remapSectionVariable([[Item,item]]);\n        }\n        if (this.opt.development_extensions.locator_label_parse) {\n            if (item.locator && [\"bill\",\"gazette\",\"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) === -1 && (!item.label || item.label === 'page')) {\n                m = CSL.LOCATOR_LABELS_REGEXP.exec(item.locator);\n                if (m) {\n                    var tryLabel = CSL.LOCATOR_LABELS_MAP[m[2]];\n                    if (this.getTerm(tryLabel)) {\n                        item.label = tryLabel;\n                        item.locator = m[3];\n                    }\n                }\n            }\n        }\n        var newitem = [Item, item];\n        sortedItems.push(newitem);\n        citation.citationItems[i].item = Item;\n    }\n    citation.sortedItems = sortedItems;\n    var citationByIndex = [];\n    for (i = 0, ilen = citationsPre.length; i < ilen; i += 1) {\n        c = citationsPre[i];\n        this.registry.citationreg.citationById[c[0]].properties.noteIndex = c[1];\n        citationByIndex.push(this.registry.citationreg.citationById[c[0]]);\n    }\n    citationByIndex.push(citation);\n    for (i = 0, ilen = citationsPost.length; i < ilen; i += 1) {\n        c = citationsPost[i];\n        this.registry.citationreg.citationById[c[0]].properties.noteIndex = c[1];\n        citationByIndex.push(this.registry.citationreg.citationById[c[0]]);\n    }\n    this.registry.citationreg.citationByIndex = citationByIndex;\n    this.registry.citationreg.citationsByItemId = {};\n    if (this.opt.update_mode === CSL.POSITION) {\n        textCitations = [];\n        noteCitations = [];\n        citationsInNote = {};\n    }\n    var update_items = [];\n    for (i = 0, ilen = citationByIndex.length; i < ilen; i += 1) {\n        citationByIndex[i].properties.index = i;\n        for (j = 0, jlen = citationByIndex[i].sortedItems.length; j < jlen; j += 1) {\n            item = citationByIndex[i].sortedItems[j];\n            if (!this.registry.citationreg.citationsByItemId[item[1].id]) {\n                this.registry.citationreg.citationsByItemId[item[1].id] = [];\n                update_items.push(\"\" + item[1].id);\n            }\n            if (this.registry.citationreg.citationsByItemId[item[1].id].indexOf(citationByIndex[i]) === -1) {\n                this.registry.citationreg.citationsByItemId[item[1].id].push(citationByIndex[i]);\n            }\n        }\n        if (this.opt.update_mode === CSL.POSITION) {\n            if (citationByIndex[i].properties.noteIndex) {\n                noteCitations.push(citationByIndex[i]);\n            } else {\n                citationByIndex[i].properties.noteIndex = 0;\n                textCitations.push(citationByIndex[i]);\n            }\n        }\n    }\n    if (flag !== CSL.ASSUME_ALL_ITEMS_REGISTERED) {\n        this.updateItems(update_items, null, null, true);\n    }\n    if (!this.opt.citation_number_sort && sortedItems && sortedItems.length > 1 && this.citation_sort.tokens.length > 0) {\n        for (i = 0, ilen = sortedItems.length; i < ilen; i += 1) {\n            sortedItems[i][1].sortkeys = CSL.getSortKeys.call(this, sortedItems[i][0], \"citation_sort\");\n        }\n        if (this.opt.grouped_sort &&  !citation.properties.unsorted) {\n            for (i = 0, ilen = sortedItems.length; i < ilen; i += 1) {\n                var sortkeys = sortedItems[i][1].sortkeys;\n                this.tmp.authorstring_request = true;\n                var mydisambig = this.registry.registry[sortedItems[i][0].id].disambig;\n                this.tmp.authorstring_request = true;\n                CSL.getAmbiguousCite.call(this, sortedItems[i][0], mydisambig);\n                var authorstring = this.registry.authorstrings[sortedItems[i][0].id];\n                this.tmp.authorstring_request = false;\n                sortedItems[i][1].sortkeys = [authorstring].concat(sortkeys);\n            }\n            sortedItems.sort(this.citation.srt.compareCompositeKeys);\n            var lastauthor = false;\n            var thiskey = false;\n            var thisauthor = false;\n            for (i = 0, ilen = sortedItems.length; i < ilen; i += 1) {\n                if (sortedItems[i][1].sortkeys[0] !== lastauthor) {\n                    thisauthor = sortedItems[i][1].sortkeys[0];\n                    thiskey =  sortedItems[i][1].sortkeys[1];\n                }\n                sortedItems[i][1].sortkeys[0] = \"\" + thiskey + i;\n                lastauthor = thisauthor;\n            }\n        }\n        if (!citation.properties.unsorted) {\n            sortedItems.sort(this.citation.srt.compareCompositeKeys);\n        }\n    }\n    var citations;\n    if (this.opt.update_mode === CSL.POSITION) {\n        for (i = 0; i < 2; i += 1) {\n            citations = [textCitations, noteCitations][i];\n            var first_ref = {};\n            var last_ref = {};\n            for (j = 0, jlen = citations.length; j < jlen; j += 1) {\n                var onecitation = citations[j];\n                if (!citations[j].properties.noteIndex) {\n                    citations[j].properties.noteIndex = 0;\n                }\n                citations[j].properties.noteIndex = parseInt(citations[j].properties.noteIndex, 10);\n                if (j > 0 && citations[j - 1].properties.noteIndex > citations[j].properties.noteIndex) {\n                    citationsInNote = {};\n                    first_ref = {};\n                    last_ref = {};\n                }\n                for (k = 0, klen = onecitation.sortedItems.length; k < klen; k += 1) {\n                    if (!this.registry.registry[onecitation.sortedItems[k][1].id].parallel) {\n                        if (!citationsInNote[onecitation.properties.noteIndex]) {\n                            citationsInNote[onecitation.properties.noteIndex] = 1;\n                        } else {\n                            citationsInNote[onecitation.properties.noteIndex] += 1;\n                        }\n                    }\n                }\n                for (k = 0, klen = citations[j].sortedItems.length; k < klen; k += 1) {\n                    item = citations[j].sortedItems[k];\n                    var myid = item[0].id;\n                    var mylocator = item[1].locator;\n                    var mylabel = item[1].label;\n                    if (item[0].legislation_id) {\n                        myid = item[0].legislation_id;\n                    }\n                    var incitationid;\n                    if (k > 0) {\n                        if (onecitation.sortedItems[k - 1][0].legislation_id) {\n                            incitationid = onecitation.sortedItems[k - 1][0].legislation_id;\n                        } else {\n                            incitationid = onecitation.sortedItems[k - 1][1].id;\n                        }\n                    }\n                    if (flag === CSL.PREVIEW) {\n                        if (onecitation.citationID != citation.citationID) {\n                            if (\"undefined\" === typeof first_ref[item[1].id]) {\n                                first_ref[myid] = onecitation.properties.noteIndex;\n                                last_ref[myid] = onecitation.properties.noteIndex;\n                            } else {\n                                last_ref[myid] = onecitation.properties.noteIndex;\n                            }\n                            continue;\n                        }\n                    }\n                    var oldvalue = {};\n                    oldvalue.position = item[1].position;\n                    oldvalue[\"first-reference-note-number\"] = item[1][\"first-reference-note-number\"];\n                    oldvalue[\"near-note\"] = item[1][\"near-note\"];\n                    item[1][\"first-reference-note-number\"] = 0;\n                    item[1][\"near-note\"] = false;\n                    if (this.registry.citationreg.citationsByItemId[myid]) {\n                        if (this.opt.xclass === 'note' && this.opt.has_disambiguate) {\n                            var oldCount = this.registry.registry[myid][\"citation-count\"]\n                            var newCount = this.registry.citationreg.citationsByItemId[myid].length;\n                            this.registry.registry[myid][\"citation-count\"] = this.registry.citationreg.citationsByItemId[myid].length;\n                            if (\"number\" === typeof oldCount) {\n                                var oldCountCheck = (oldCount < 2);\n                                var newCountCheck = (newCount < 2);\n                                if (oldCountCheck !== newCountCheck) {\n                                    for (var l=0,llen=this.registry.citationreg.citationsByItemId[myid].length;l<llen;l++) {\n                                        rerunAkeys[this.registry.registry[myid].ambig] = true;\n                                        this.tmp.taintedCitationIDs[this.registry.citationreg.citationsByItemId[myid][l].citationID] = true;\n                                    }\n                                }\n                            } else {\n                                for (var l=0,llen=this.registry.citationreg.citationsByItemId[myid].length;l<llen;l++) {\n                                    rerunAkeys[this.registry.registry[myid].ambig] = true;\n                                    this.tmp.taintedCitationIDs[this.registry.citationreg.citationsByItemId[myid][l].citationID] = true;\n                                }\n                            }\n                        }\n                    }\n                    var oldlastid;\n                    if (\"undefined\" === typeof first_ref[myid]) {\n                        first_ref[myid] = onecitation.properties.noteIndex;\n                        if (this.registry.registry[myid]) {\n                            this.registry.registry[myid]['first-reference-note-number'] = onecitation.properties.noteIndex;\n                        }\n                        last_ref[myid] = onecitation.properties.noteIndex;\n                        item[1].position = CSL.POSITION_FIRST;\n                    } else {\n                        var ibidme = false;\n                        var suprame = false;\n                        if (j > 0) {\n                            oldlastid =  citations[j - 1].sortedItems.slice(-1)[0][1].id;\n                            if (citations[j - 1].sortedItems[0].slice(-1)[0].legislation_id) {\n                                oldlastid = citations[j - 1].sortedItems[0].slice(-1)[0].legislation_id;\n                            }\n                        }\n                        if (j > 0 && parseInt(k, 10) === 0 && citations[j - 1].properties.noteIndex !== citations[j].properties.noteIndex) {\n                            var items = citations[(j - 1)].sortedItems;\n                            var useme = false;\n                            var oldid = citations[j - 1].sortedItems[0][0].id;\n                            if (citations[j - 1].sortedItems[0][0].legislation_id) {\n                                oldid = citations[j - 1].sortedItems[0][0].legislation_id;\n                            }\n                            if ((oldid  == myid && citations[j - 1].properties.noteIndex >= (citations[j].properties.noteIndex - 1)) || citations[j - 1].sortedItems[0][1].id == this.registry.registry[item[1].id].parallel) {\n                                if (citationsInNote[citations[j - 1].properties.noteIndex] === 1 || citations[j - 1].properties.noteIndex === 0) {\n                                    useme = true;\n                                }\n                            }\n                            for (n = 0, nlen = items.slice(1).length; n < nlen; n += 1) {\n                                var itmp = items.slice(1)[n];\n                                if (!this.registry.registry[itmp[1].id].parallel || this.registry.registry[itmp[1].id].parallel == this.registry.registry[itmp[1].id]) {\n                                    useme = false;\n                                }\n                            }\n                            if (useme) {\n                                ibidme = true;\n                            } else {\n                                suprame = true;\n                            }\n                        } else if (k > 0 && incitationid == myid) {\n                            ibidme = true;\n                        } else if (k === 0 && citations[j - 1].properties.noteIndex == citations[j].properties.noteIndex\n                                   && citations[j - 1].sortedItems.length \n                                   && oldlastid == myid) {\n                            ibidme = true;\n                        } else {\n                            suprame = true;\n                        }\n                        var prev, prev_locator, prev_label, curr_locator, curr_label;\n                        if (ibidme) {\n                            if (k > 0) {\n                                prev = onecitation.sortedItems[(k - 1)][1];\n                            } else {\n                                prev = citations[(j - 1)].sortedItems[0][1];\n                            }\n                            if (prev.locator) {\n                                if (prev.label) {\n                                    prev_label = prev.label;\n                                } else {\n                                    prev_label = \"\";\n                                }\n                                prev_locator = \"\" + prev.locator + prev_label;\n                            } else {\n                                prev_locator = prev.locator;\n                            }\n                            if (mylocator) {\n                                if (mylabel) {\n                                    curr_label = mylabel;\n                                } else {\n                                    curr_label = \"\";\n                                }\n                                curr_locator = \"\" + mylocator + curr_label;\n                            } else {\n                                curr_locator = mylocator;\n                            }\n                        }\n                        if (ibidme && prev_locator && !curr_locator) {\n                            ibidme = false;\n                            suprame = true;\n                        }\n                        if (ibidme) {\n                            if (!prev_locator && curr_locator) {\n                                item[1].position = CSL.POSITION_IBID_WITH_LOCATOR;\n                            } else if (!prev_locator && !curr_locator) {\n                                item[1].position = CSL.POSITION_IBID;\n                            } else if (prev_locator && curr_locator === prev_locator) {\n                                item[1].position = CSL.POSITION_IBID;\n                            } else if (prev_locator && curr_locator && curr_locator !== prev_locator) {\n                                item[1].position = CSL.POSITION_IBID_WITH_LOCATOR;\n                            } else {\n                                ibidme = false; // just to be clear\n                                suprame = true;\n                            }\n                        }\n                        if (suprame) {\n                            item[1].position = CSL.POSITION_SUBSEQUENT;\n                        }\n                        if (suprame || ibidme) {\n                            if (first_ref[myid] != onecitation.properties.noteIndex) {\n                                item[1][\"first-reference-note-number\"] = first_ref[myid];\n                                if (this.registry.registry[myid]) {\n                                    var oldFirst = this.registry.citationreg.citationsByItemId[myid][0].properties.noteIndex;\n                                    var newFirst = onecitation.properties.noteIndex;\n                                    this.registry.registry[myid]['first-reference-note-number'] = newFirst < oldFirst ? newFirst: oldFirst;\n                                }\n                            }\n                        }\n                    }\n                    if (onecitation.properties.noteIndex) {\n                        var note_distance = parseInt(onecitation.properties.noteIndex, 10) - parseInt(last_ref[myid], 10);\n                        if (item[1].position !== CSL.POSITION_FIRST \n                            && note_distance <= this.citation.opt[\"near-note-distance\"]) {\n                            item[1][\"near-note\"] = true;\n                        }\n                        last_ref[myid] = onecitation.properties.noteIndex;\n                    }\n                    if (onecitation.citationID != citation.citationID) {\n                        for (n = 0, nlen = CSL.POSITION_TEST_VARS.length; n < nlen; n += 1) {\n                            var param = CSL.POSITION_TEST_VARS[n];\n                            if (item[1][param] !== oldvalue[param]) {\n                                if (this.registry.registry[myid]) {\n                                    if (param === 'first-reference-note-number') {\n                                        rerunAkeys[this.registry.registry[myid].ambig] = true;\n                                        this.tmp.taintedItemIDs[myid] = true;\n                                    }\n                                }\n                                this.tmp.taintedCitationIDs[onecitation.citationID] = true;\n                            }\n                        }\n                    }\n                    if (this.sys.variableWrapper) {\n                        item[1].index = onecitation.properties.index;\n                        item[1].noteIndex = onecitation.properties.noteIndex;\n                    }\n                }\n            }\n        }\n    }\n    if (this.opt.citation_number_sort && sortedItems && sortedItems.length > 1 && this.citation_sort.tokens.length > 0) {\n        if (!citation.properties.unsorted) {\n            for (i = 0, ilen = sortedItems.length; i < ilen; i += 1) {\n                sortedItems[i][1].sortkeys = CSL.getSortKeys.call(this, sortedItems[i][0], \"citation_sort\");\n            }\n            sortedItems.sort(this.citation.srt.compareCompositeKeys);\n        }\n    }\n    for (key in this.tmp.taintedItemIDs) {\n        if (this.tmp.taintedItemIDs.hasOwnProperty(key)) {\n            citations = this.registry.citationreg.citationsByItemId[key];\n            if (citations) {\n                for (i = 0, ilen = citations.length; i < ilen; i += 1) {\n                    this.tmp.taintedCitationIDs[citations[i].citationID] = true;\n                }\n            }\n        }\n    }\n    var ret = [];\n    if (flag === CSL.PREVIEW) {\n        try {\n            ret = this.process_CitationCluster.call(this, citation.sortedItems, citation.citationID);\n        } catch (e) {\n            CSL.error(\"Error running CSL processor for preview: \"+e);\n        }\n        this.registry.citationreg.citationByIndex = oldCitationList;\n        this.registry.citationreg.citationById = {};\n        for (i = 0, ilen = oldCitationList.length; i < ilen; i += 1) {\n            this.registry.citationreg.citationById[oldCitationList[i].citationID] = oldCitationList[i];\n        }\n        var oldItemIds = [];\n        for (i = 0, ilen = oldItemList.length; i < ilen; i += 1) {\n            oldItemIds.push(\"\" + oldItemList[i].id);\n        }\n        this.updateItems(oldItemIds, null, null, true);\n        for (key in oldAmbigs) {\n            if (oldAmbigs.hasOwnProperty(key)) {\n                this.registry.registry[key].disambig = oldAmbigs[key];\n            }\n        }\n    } else {\n        for (var rerunAkey in rerunAkeys) {\n            this.disambiguate.run(rerunAkey, citation);\n        }\n        var obj;\n        for (key in this.tmp.taintedCitationIDs) {\n            if (key == citation.citationID) {\n                continue;\n            }\n            var mycitation = this.registry.citationreg.citationById[key];\n            if (!mycitation.properties.unsorted) {\n                for (i = 0, ilen = mycitation.sortedItems.length; i < ilen; i += 1) {\n                    mycitation.sortedItems[i][1].sortkeys = CSL.getSortKeys.call(this, mycitation.sortedItems[i][0], \"citation_sort\");\n                }\n                mycitation.sortedItems.sort(this.citation.srt.compareCompositeKeys);\n            }\n            this.tmp.citation_pos = mycitation.properties.index;\n            this.tmp.citation_note_index = mycitation.properties.noteIndex;\n            this.tmp.citation_id = \"\" + mycitation.citationID;\n            obj = [];\n            obj.push(mycitation.properties.index);\n            obj.push(this.process_CitationCluster.call(this, mycitation.sortedItems, mycitation.citationID));\n            obj.push(mycitation.citationID);\n            ret.push(obj);\n        }\n        this.tmp.taintedItemIDs = {};\n        this.tmp.taintedCitationIDs = {};\n        this.tmp.citation_pos = citation.properties.index;\n        this.tmp.citation_note_index = citation.properties.noteIndex;\n        this.tmp.citation_id = \"\" + citation.citationID;\n        obj = [];\n        obj.push(citationsPre.length);\n        obj.push(this.process_CitationCluster.call(this, sortedItems, citation.citationID));\n        obj.push(citation.citationID);\n        ret.push(obj);\n        ret.sort(function (a, b) {\n            if (a[0] > b[0]) {\n                return 1;\n            } else if (a[0] < b[0]) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n    }\n    return_data.citation_errors = this.tmp.citation_errors.slice();\n    return [return_data, ret];\n};\nCSL.Engine.prototype.process_CitationCluster = function (sortedItems, citationID) {\n    var str;\n    this.parallel.StartCitation(sortedItems);\n    str = CSL.getCitationCluster.call(this, sortedItems, citationID);\n    return str;\n};\nCSL.Engine.prototype.makeCitationCluster = function (rawList) {\n    var inputList, newitem, str, pos, len, item, Item;\n    inputList = [];\n    len = rawList.length;\n    for (pos = 0; pos < len; pos += 1) {\n        item = {};\n        for (var key in rawList[pos]) {\n            item[key] = rawList[pos][key];\n        }\n        Item = this.retrieveItem(\"\" + item.id);\n        if (this.opt.development_extensions.locator_label_parse) {\n            if (item.locator && [\"bill\",\"gazette\",\"legislation\",\"regulation\",\"treaty\"].indexOf(Item.type) === -1 && (!item.label || item.label === 'page')) {\n                var m = CSL.LOCATOR_LABELS_REGEXP.exec(item.locator);\n                if (m) {\n                    var tryLabel = CSL.LOCATOR_LABELS_MAP[m[2]];\n                    if (this.getTerm(tryLabel)) {\n                        item.label = tryLabel;\n                        item.locator = m[3];\n                    }\n                }\n            }\n        }\n        if (item.locator) {\n            item.locator = (\"\" + item.locator).replace(/\\s+$/, '');\n        }\n        newitem = [Item, item];\n        inputList.push(newitem);\n    }\n    if (this.opt.development_extensions.static_statute_locator) {\n        this.remapSectionVariable(inputList);\n    }\n    if (inputList && inputList.length > 1 && this.citation_sort.tokens.length > 0) {\n        len = inputList.length;\n        for (pos = 0; pos < len; pos += 1) {\n            inputList[pos][1].sortkeys = CSL.getSortKeys.call(this, inputList[pos][0], \"citation_sort\");\n        }\n        inputList.sort(this.citation.srt.compareCompositeKeys);\n    }\n    this.tmp.citation_errors = [];\n    this.parallel.StartCitation(inputList);\n    str = CSL.getCitationCluster.call(this, inputList);\n    return str;\n};\nCSL.getAmbiguousCite = function (Item, disambig, visualForm, item) {\n    var use_parallels, ret;\n    var flags = this.tmp.group_context.tip;\n    var oldTermSiblingLayer = {\n        term_intended: flags.term_intended,\n        variable_attempt: flags.variable_attempt,\n        variable_success: flags.variable_success,\n        output_tip: flags.output_tip,\n        label_form: flags.label_form,\n        parallel_conditions: flags.parallel_conditions,\n        condition: flags.condition,\n        force_suppress: flags.force_suppress,\n        done_vars: flags.done_vars.slice()\n    }\n    if (disambig) {\n        this.tmp.disambig_request = disambig;\n    } else {\n        this.tmp.disambig_request = false;\n    }\n    var itemSupp = {\n        position: 1,\n        \"near-note\": true\n    };\n    if (item) {\n        itemSupp.locator = item.locator;\n        itemSupp.label = item.label;\n    }\n    if (this.registry.registry[Item.id] \n        && this.registry.citationreg.citationsByItemId\n        && this.registry.citationreg.citationsByItemId[Item.id]\n        && this.registry.citationreg.citationsByItemId[Item.id].length \n        && visualForm) {\n        if (this.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\") {\n            itemSupp['first-reference-note-number'] = this.registry.registry[Item.id]['first-reference-note-number'];\n        }\n    }\n    this.tmp.area = \"citation\";\n    this.tmp.root = \"citation\";\n    this.parallel.use_parallels = (this.parallel.use_parallels === true || this.parallel.use_parallels === null) ? null : false;\n    this.tmp.suppress_decorations = true;\n    this.tmp.just_looking = true;\n    CSL.getCite.call(this, Item, itemSupp, null, false);\n    for (var i=0,ilen=this.output.queue.length;i<ilen;i+=1) {\n        CSL.Output.Queue.purgeEmptyBlobs(this.output.queue[i]);\n    }\n    if (this.opt.development_extensions.clean_up_csl_flaws) {\n        for (var j=0,jlen=this.output.queue.length;j<jlen;j+=1) {\n            this.output.adjust.upward(this.output.queue[j]);\n            this.output.adjust.leftward(this.output.queue[j]);\n            this.output.adjust.downward(this.output.queue[j]);\n            this.output.adjust.fix(this.output.queue[j]);\n        }\n    }\n    ret = this.output.string(this, this.output.queue);\n    this.tmp.just_looking = false;\n    this.tmp.suppress_decorations = false;\n    this.parallel.use_parallels = this.parallel.use_parallels === null ? true : false;\n    this.tmp.group_context.replace(oldTermSiblingLayer);\n    return ret;\n};\nCSL.getSpliceDelimiter = function (last_collapsed, pos) {\n    if (last_collapsed && ! this.tmp.have_collapsed && \"string\" === typeof this.citation.opt[\"after-collapse-delimiter\"]) {\n        this.tmp.splice_delimiter = this.citation.opt[\"after-collapse-delimiter\"];\n    } else if (this.tmp.use_cite_group_delimiter) {\n        this.tmp.splice_delimiter = this.citation.opt.cite_group_delimiter;\n    } else if (this.tmp.have_collapsed && this.opt.xclass === \"in-text\" && this.opt.update_mode !== CSL.NUMERIC) {\n        this.tmp.splice_delimiter = \", \";\n    } else if (this.tmp.cite_locales[pos - 1]) {\n        var alt_affixes = this.tmp.cite_affixes[this.tmp.area][this.tmp.cite_locales[pos - 1]];\n        if (alt_affixes && alt_affixes.delimiter) {\n            this.tmp.splice_delimiter = alt_affixes.delimiter;\n        }\n    } else if (!this.tmp.splice_delimiter) {\n        this.tmp.splice_delimiter = \"\";\n    }\n    return this.tmp.splice_delimiter;\n};\nCSL.getCitationCluster = function (inputList, citationID) {\n    var result, objects, myparams, len, pos, item, last_collapsed, params, empties, composite, compie, myblobs, Item, llen, ppos, obj, preceding_item, txt_esc, error_object;\n    inputList = inputList ? inputList : [];\n    this.tmp.last_primary_names_string = false;\n    txt_esc = CSL.getSafeEscape(this);\n    this.tmp.area = \"citation\";\n    this.tmp.root = \"citation\";\n    result = \"\";\n    objects = [];\n    this.tmp.last_suffix_used = \"\";\n    this.tmp.last_names_used = [];\n    this.tmp.last_years_used = [];\n    this.tmp.backref_index = [];\n    this.tmp.cite_locales = [];\n    this.output.checkNestedBrace = new CSL.checkNestedBrace(this);\n    var use_layout_prefix = this.output.checkNestedBrace.update(this.citation.opt.layout_prefix);\n    var suppressTrailingPunctuation = false;\n    if (this.opt.xclass === \"note\" && this.citation.opt.suppressTrailingPunctuation) {\n        suppressTrailingPunctuation = true;\n    }\n    if (citationID) {\n        if (this.registry.citationreg.citationById[citationID].properties[\"suppress-trailing-punctuation\"]) {\n            suppressTrailingPunctuation = true;\n        }\n    }\n    if (this.opt.xclass === \"note\") {\n        var parasets = [];\n        var lastTitle = false;\n        var lastPosition = false;\n        var lastID = false;\n        var lst = [];\n        for (var i=0, ilen = inputList.length; i < ilen; i += 1) {\n            var type = inputList[i][0].type;\n            var title = inputList[i][0].title;\n            var position = inputList[i][1].position;\n            var id = inputList[i][0].id;\n            if (title && type === \"legal_case\" && id !== lastID && position) {\n                if (title !== lastTitle || parasets.length === 0) {\n                    lst = [];\n                    parasets.push(lst);\n                }\n                lst.push(inputList[i][1]);\n            }\n            lastTitle = title;\n            lastPosition = position;\n            lastID = id;\n        }\n        for (i=0, ilen=parasets.length; i < ilen; i += 1) {\n            lst = parasets[i];\n            if (lst.length < 2) {\n                continue;\n            }\n            var locatorInLastPosition = lst.slice(-1)[0].locator;\n            if (locatorInLastPosition) {\n                for (var j=0, jlen=lst.length - 1; j < jlen; j += 1) {\n                    if (lst[j].locator) {\n                        locatorInLastPosition = false;\n                    }\n                }\n            }\n            if (locatorInLastPosition) {\n                lst[0].locator = locatorInLastPosition;\n                delete lst.slice(-1)[0].locator;\n                lst[0].label = lst.slice(-1)[0].label;\n                if (lst.slice(-1)[0].label) {\n                    delete lst.slice(-1)[0].label;\n                }\n            }\n       }\n    }\n    myparams = [];\n    len = inputList.length;\n    for (pos = 0; pos < len; pos += 1) {\n        Item = inputList[pos][0];\n        item = inputList[pos][1];\n        item = CSL.parseLocator.call(this, item);\n        last_collapsed = this.tmp.have_collapsed;\n        params = {};\n        this.tmp.shadow_numbers = {};\n        if (!this.tmp.just_looking && this.opt.hasPlaceholderTerm) {\n            var output = this.output;\n            this.output = new CSL.Output.Queue(this);\n            this.output.adjust = new CSL.Output.Queue.adjust();\n            CSL.getAmbiguousCite.call(this, Item, null, false, item);\n            this.output = output;\n        }\n        this.tmp.in_cite_predecessor = false;\n        if (pos > 0) {\n            CSL.getCite.call(this, Item, item, \"\" + inputList[(pos - 1)][0].id, true);\n        } else {\n            this.tmp.term_predecessor = false;\n            CSL.getCite.call(this, Item, item, null, true);\n        }\n        if (!this.tmp.cite_renders_content) {\n            error_object = {\n                citationID: \"\" + this.tmp.citation_id,\n                index: this.tmp.citation_pos,\n                noteIndex: this.tmp.citation_note_index,\n                itemID: \"\" + Item.id,\n                citationItems_pos: pos,\n                error_code: CSL.ERROR_NO_RENDERED_FORM\n            };\n            this.tmp.citation_errors.push(error_object);\n        }\n        if (pos === (inputList.length - 1)) {\n            this.parallel.ComposeSet();\n        }\n        params.splice_delimiter = CSL.getSpliceDelimiter.call(this, last_collapsed, pos);\n        if (item && item[\"author-only\"]) {\n            this.tmp.suppress_decorations = true;\n        }\n        if (pos > 0) {\n            preceding_item = inputList[pos - 1][1];\n            var precedingEndsInPeriodOrComma = preceding_item.suffix && [\".\", \",\"].indexOf(preceding_item.suffix.slice(-1)) > -1;\n            var currentStartsWithPeriodOrComma = !preceding_item.suffix && item.prefix && [\".\", \",\"].indexOf(item.prefix.slice(0, 1)) > -1;\n            if (precedingEndsInPeriodOrComma || currentStartsWithPeriodOrComma) {\n                var spaceidx = params.splice_delimiter.indexOf(\" \");\n                if (spaceidx > -1 && !currentStartsWithPeriodOrComma) {\n                    params.splice_delimiter = params.splice_delimiter.slice(spaceidx);\n                } else {\n                    params.splice_delimiter = \"\";\n                }\n            }\n        }\n        params.suppress_decorations = this.tmp.suppress_decorations;\n        params.have_collapsed = this.tmp.have_collapsed;\n        myparams.push(params);\n    }\n    this.tmp.has_purged_parallel = false;\n    this.parallel.PruneOutputQueue(this);\n    empties = 0;\n    myblobs = this.output.queue.slice();\n    var fakeblob = {\n        strings: {\n            suffix: this.citation.opt.layout_suffix,\n            delimiter: this.citation.opt.layout_delimiter                \n        }\n    };\n    var suffix = this.citation.opt.layout_suffix;\n    var last_locale = this.tmp.cite_locales[this.tmp.cite_locales.length - 1];\n    if (last_locale && this.tmp.cite_affixes[this.tmp.area][last_locale] && this.tmp.cite_affixes[this.tmp.area][last_locale].suffix) {\n        suffix = this.tmp.cite_affixes[this.tmp.area][last_locale].suffix;\n    }\n    if (CSL.TERMINAL_PUNCTUATION.slice(0, -1).indexOf(suffix.slice(0, 1)) > -1) {\n        suffix = suffix.slice(0, 1);\n    }\n    var delimiter = this.citation.opt.layout_delimiter;\n    if (!delimiter) {\n        delimiter = \"\";\n    }\n    if (CSL.TERMINAL_PUNCTUATION.slice(0, -1).indexOf(delimiter.slice(0, 1)) > -1) {\n        delimiter = delimiter.slice(0, 1);\n    }\n    suffix = this.output.checkNestedBrace.update(suffix);\n    for (var i=0,ilen=this.output.queue.length;i<ilen;i+=1) {\n        CSL.Output.Queue.purgeEmptyBlobs(this.output.queue[i]);\n    }\n    if (!this.tmp.suppress_decorations && this.output.queue.length) {\n        if (!(this.opt.development_extensions.apply_citation_wrapper\n              && this.sys.wrapCitationEntry\n               && !this.tmp.just_looking\n              && this.tmp.area === \"citation\")) { \n            if (!suppressTrailingPunctuation) {\n                this.output.queue[this.output.queue.length - 1].strings.suffix = suffix;\n            }\n            this.output.queue[0].strings.prefix = use_layout_prefix;\n        }\n    }\n    if (this.opt.development_extensions.clean_up_csl_flaws) {\n        for (var j=0,jlen=this.output.queue.length;j<jlen;j+=1) {\n            this.output.adjust.upward(this.output.queue[j]);\n            this.output.adjust.leftward(this.output.queue[j]);\n            this.output.adjust.downward(this.output.queue[j]);\n            this.tmp.last_chr = this.output.adjust.fix(this.output.queue[j]);\n        }\n    }\n    for (pos = 0, len = myblobs.length; pos < len; pos += 1) {\n        var buffer = [];\n        this.output.queue = [myblobs[pos]];\n        this.tmp.suppress_decorations = myparams[pos].suppress_decorations;\n        this.tmp.splice_delimiter = myparams[pos].splice_delimiter;\n        if (myblobs[pos].parallel_delimiter) {\n            this.tmp.splice_delimiter = myblobs[pos].parallel_delimiter;\n        }\n        this.tmp.have_collapsed = myparams[pos].have_collapsed;\n        composite = this.output.string(this, this.output.queue);\n        this.tmp.suppress_decorations = false;\n        if (\"string\" === typeof composite) {\n            this.tmp.suppress_decorations = false;\n            return composite;\n        }\n        if (\"object\" === typeof composite && composite.length === 0 && !item[\"suppress-author\"]) {\n            if (this.tmp.has_purged_parallel) {\n                composite.push(\"\");\n            } else {\n                var errStr = \"[CSL STYLE ERROR: reference with no printed form.]\";\n                var preStr = pos === 0 ? txt_esc(this.citation.opt.layout_prefix) : \"\";\n                var sufStr = pos === (myblobs.length - 1) ? txt_esc(this.citation.opt.layout_suffix) : \"\";\n                composite.push(preStr + errStr + sufStr);\n            }\n        }\n        if (buffer.length && \"string\" === typeof composite[0]) {\n            composite.reverse();\n            var tmpstr = composite.pop();\n            if (tmpstr && tmpstr.slice(0, 1) === \",\") {\n                buffer.push(tmpstr);\n            } else if (\"string\" == typeof buffer.slice(-1)[0] && buffer.slice(-1)[0].slice(-1) === \",\") {\n                buffer.push(\" \" + tmpstr);\n            } else if (tmpstr) {\n                buffer.push(txt_esc(this.tmp.splice_delimiter) + tmpstr);\n            }\n        } else {\n            composite.reverse();\n            compie = composite.pop();\n            if (\"undefined\" !== typeof compie) {\n                if (buffer.length && \"string\" === typeof buffer[buffer.length - 1]) {\n                    buffer[buffer.length - 1] += compie.successor_prefix;\n                }\n                buffer.push(compie);\n            }\n        }\n        llen = composite.length;\n        for (ppos = 0; ppos < llen; ppos += 1) {\n            obj = composite[ppos];\n            if (\"string\" === typeof obj) {\n                buffer.push(txt_esc(this.tmp.splice_delimiter) + obj);\n                continue;\n            }\n            compie = composite.pop();\n            if (\"undefined\" !== typeof compie) {\n                buffer.push(compie);\n            }\n        }\n        if (buffer.length === 0 && !inputList[pos][1][\"suppress-author\"]) {\n            empties += 1;\n        }\n        if (buffer.length > 1 && typeof buffer[0] !== \"string\") {\n            buffer = [this.output.renderBlobs(buffer)];\n        }\n        if (buffer.length) {\n            if (\"string\" === typeof buffer[0]) {\n                if (pos > 0) {\n                    if (((myblobs.length-1) > pos && myparams[pos+1].have_collapsed) && !myparams[pos].have_collapsed) {\n                        this.tmp.splice_delimiter = myparams[pos-1].splice_delimiter;\n                    }\n                    buffer[0] = txt_esc(this.tmp.splice_delimiter) + buffer[0];\n                }\n            } else {\n                if (pos > 0) {\n                    buffer[0].splice_prefix = this.tmp.splice_delimiter;\n                } else {\n                    buffer[0].splice_prefix = \"\";\n                }\n            }\n        }\n        objects = objects.concat(buffer);\n    }\n    result += this.output.renderBlobs(objects);\n    if (result) {\n        if (!this.tmp.suppress_decorations) {\n            len = this.citation.opt.layout_decorations.length;\n            for (pos = 0; pos < len; pos += 1) {\n                params = this.citation.opt.layout_decorations[pos];\n                if (params[1] === \"normal\") {\n                    continue;\n                }\n                if (!item || !item[\"author-only\"]) {\n                    result = this.fun.decorate[params[0]][params[1]](this, result);\n                }\n            }\n        }\n    }\n    this.tmp.suppress_decorations = false;\n    return result;\n};\nCSL.getCite = function (Item, item, prevItemID, blockShadowNumberReset) {\n    var next, error_object;\n    this.tmp.cite_renders_content = false;\n    this.parallel.StartCite(Item, item, prevItemID);\n    CSL.citeStart.call(this, Item, item, blockShadowNumberReset);\n    next = 0;\n    this.tmp.name_node = {};\n    this.nameOutput = new CSL.NameOutput(this, Item, item);\n    while (next < this[this.tmp.area].tokens.length) {\n        next = CSL.tokenExec.call(this, this[this.tmp.area].tokens[next], Item, item);\n    }\n    CSL.citeEnd.call(this, Item, item);\n    this.parallel.CloseCite(this);\n    if (!this.tmp.cite_renders_content && !this.tmp.just_looking) {\n        if (this.tmp.area === \"bibliography\") {\n            error_object = {\n                index: this.tmp.bibliography_pos,\n                itemID: \"\" + Item.id,\n                error_code: CSL.ERROR_NO_RENDERED_FORM\n            };\n            this.tmp.bibliography_errors.push(error_object);\n        }\n    }\n    return \"\" + Item.id;\n};\nCSL.citeStart = function (Item, item, blockShadowNumberReset) {\n    if (!blockShadowNumberReset) {\n        this.tmp.shadow_numbers = {};\n    }\n    this.tmp.disambiguate_count = 0;\n    this.tmp.disambiguate_maxMax = 0;\n    this.tmp.same_author_as_previous_cite = false;\n    if (!this.tmp.suppress_decorations) {\n        this.tmp.subsequent_author_substitute_ok = true;\n    } else {\n        this.tmp.subsequent_author_substitute_ok = false;\n    }\n    this.tmp.lastchr = \"\";\n    if (this.tmp.area === \"citation\" && this.citation.opt.collapse && this.citation.opt.collapse.length) {\n        this.tmp.have_collapsed = true;\n    } else {\n        this.tmp.have_collapsed = false;\n    }\n    this.tmp.render_seen = false;\n    if (this.tmp.disambig_request  && ! this.tmp.disambig_override) {\n        this.tmp.disambig_settings = this.tmp.disambig_request;\n    } else if (this.registry.registry[Item.id] && ! this.tmp.disambig_override) {\n        this.tmp.disambig_request = this.registry.registry[Item.id].disambig;\n        this.tmp.disambig_settings = this.registry.registry[Item.id].disambig;\n    } else {\n        this.tmp.disambig_settings = new CSL.AmbigConfig();\n    }\n    if (this.tmp.area !== 'citation') {\n        if (!this.registry.registry[Item.id]) {\n            this.tmp.disambig_restore = new CSL.AmbigConfig();\n        } else {\n            this.tmp.disambig_restore = CSL.cloneAmbigConfig(this.registry.registry[Item.id].disambig);\n            if (this.tmp.area === 'bibliography' && this.tmp.disambig_settings && this.tmp.disambig_override) {\n                if (this.opt[\"disambiguate-add-names\"]) {\n                    this.tmp.disambig_settings.names = this.registry.registry[Item.id].disambig.names.slice();\n                    this.tmp.disambig_request.names = this.registry.registry[Item.id].disambig.names.slice();\n                }\n                if (this.opt[\"disambiguate-add-givenname\"]) {\n                    this.tmp.disambig_request = this.tmp.disambig_settings;\n                    this.tmp.disambig_settings.givens = this.registry.registry[Item.id].disambig.givens.slice();\n                    this.tmp.disambig_request.givens = this.registry.registry[Item.id].disambig.givens.slice();\n                    for (var i=0,ilen=this.tmp.disambig_settings.givens.length;i<ilen;i+=1) {\n                        this.tmp.disambig_settings.givens[i] = this.registry.registry[Item.id].disambig.givens[i].slice();\n                    }\n                    for (var i=0,ilen=this.tmp.disambig_request.givens.length;i<ilen;i+=1) {\n                        this.tmp.disambig_request.givens[i] = this.registry.registry[Item.id].disambig.givens[i].slice();\n                    }\n                }\n            }\n        }\n    }\n    this.tmp.names_used = [];\n    this.tmp.nameset_counter = 0;\n    this.tmp.years_used = [];\n    this.tmp.names_max.clear();\n    this.tmp.splice_delimiter = this[this.tmp.area].opt.layout_delimiter;\n    this.bibliography_sort.keys = [];\n    this.citation_sort.keys = [];\n    this.tmp.has_done_year_suffix = false;\n    this.tmp.last_cite_locale = false;\n    if (!this.tmp.just_looking && item && !item.position && this.registry.registry[Item.id]) {\n        this.tmp.disambig_restore = CSL.cloneAmbigConfig(this.registry.registry[Item.id].disambig);\n    }\n    this.tmp.first_name_string = false;\n    this.tmp.authority_stop_last = 0;\n};\nCSL.citeEnd = function (Item, item) {\n    if (this.tmp.disambig_restore) {\n        this.registry.registry[Item.id].disambig.names = this.tmp.disambig_restore.names.slice();\n        this.registry.registry[Item.id].disambig.givens = this.tmp.disambig_restore.givens.slice();\n        for (var i=0,ilen=this.registry.registry[Item.id].disambig.givens.length;i<ilen;i+=1) {\n            this.registry.registry[Item.id].disambig.givens[i] = this.tmp.disambig_restore.givens[i].slice();\n        }\n    }\n    this.tmp.disambig_restore = false;\n    if (item && item.suffix) {\n        this.tmp.last_suffix_used = item.suffix;\n    } else {\n        this.tmp.last_suffix_used = \"\";\n    }\n    this.tmp.last_years_used = this.tmp.years_used.slice();\n    this.tmp.last_names_used = this.tmp.names_used.slice();\n    this.tmp.cut_var = false;\n    this.tmp.disambig_request = false;\n    this.tmp.cite_locales.push(this.tmp.last_cite_locale);\n    if (this.tmp.issued_date && this.tmp.renders_collection_number) {\n        var buf = [];\n        for (var i = this.tmp.issued_date.list.length - 1; i > this.tmp.issued_date.pos; i += -1) {\n            buf.push(this.tmp.issued_date.list.pop());\n        }\n        this.tmp.issued_date.list.pop();\n        for (i = buf.length - 1; i > -1; i += -1) {\n            this.tmp.issued_date.list.push(buf.pop());\n        }\n        if (this.parallel.use_parallels) {\n            this.parallel.cite[\"issued\"] = false;\n        }\n    }\n    this.tmp.issued_date = false;\n    this.tmp.renders_collection_number = false;\n};\nCSL.Engine.prototype.makeBibliography = function (bibsection) {\n    var debug, ret, params, maxoffset, item, len, pos, tok, tokk, tokkk, entry_ids, entry_strings, bibliography_errors;\n    debug = false;\n    if (!this.bibliography.tokens.length) {\n        return false;\n    }\n    if (\"string\" === typeof bibsection) {\n        this.opt.citation_number_slug = bibsection;\n        bibsection = false;\n    }\n    ret = CSL.getBibliographyEntries.call(this, bibsection);\n    entry_ids = ret[0];\n    entry_strings = ret[1];\n    var done = ret[2];\n    params = {\n        \"maxoffset\": 0,\n        \"entryspacing\": this.bibliography.opt[\"entry-spacing\"],\n        \"linespacing\": this.bibliography.opt[\"line-spacing\"],\n        \"second-field-align\": false,\n        \"entry_ids\": entry_ids,\n        \"bibliography_errors\": this.tmp.bibliography_errors.slice(),\n        \"done\": done\n    };\n    if (this.bibliography.opt[\"second-field-align\"]) {\n        params[\"second-field-align\"] = this.bibliography.opt[\"second-field-align\"];\n    }\n    maxoffset = 0;\n    len = this.registry.reflist.length;\n    for (pos = 0; pos < len; pos += 1) {\n        item = this.registry.reflist[pos];\n        if (item.offset > params.maxoffset) {\n            params.maxoffset = item.offset;\n        }\n    }\n    if (this.bibliography.opt.hangingindent) {\n        params.hangingindent = this.bibliography.opt.hangingindent;\n    }\n    params.bibstart = this.fun.decorate.bibstart;\n    params.bibend = this.fun.decorate.bibend;\n    this.opt.citation_number_slug = false;\n    return [params, entry_strings];\n};\nCSL.getBibliographyEntries = function (bibsection) {\n    var ret, input, include, anymatch, allmatch, bib_entry, res, len, pos, item, llen, ppos, spec, lllen, pppos, bib_layout, topblobs, all_item_ids, entry_item_ids, debug, collapse_parallel, i, ilen, siblings, skips, sortedItems, eyetem, chr, entry_item_data, j, jlen, newIDs, originalIDs;\n    ret = [];\n    entry_item_data = [];\n    this.tmp.area = \"bibliography\";\n    this.tmp.root = \"bibliography\";\n    this.tmp.last_rendered_name = false;\n    this.tmp.bibliography_errors = [];\n    this.tmp.bibliography_pos = 0;\n    if (bibsection && bibsection.page_start && bibsection.page_length) {\n        input = this.registry.getSortedIds();        \n    } else {\n        input = this.retrieveItems(this.registry.getSortedIds());\n    }\n    this.tmp.disambig_override = true;\n    function eval_string(a, b) {\n        if (a === b) {\n            return true;\n        }\n        return false;\n    }\n    function eval_list(a, lst) {\n        lllen = lst.length;\n        for (pppos = 0; pppos < lllen; pppos += 1) {\n            if (eval_string(a, lst[pppos])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function eval_spec(a, b) {\n        if ((a === \"none\" || !a) && !b) {\n            return true;\n        }\n        if (\"string\" === typeof b) {\n            return eval_string(a, b);\n        } else if (!b) {\n            return false;\n        } else {\n            return eval_list(a, b);\n        }\n    }\n    skips = {};\n    var page_item_count;\n    if (bibsection && bibsection.page_start && bibsection.page_length) {\n        page_item_count = 0;\n        if (bibsection.page_start !== true) {\n            for (i = 0, ilen = input.length; i < ilen; i += 1) {\n                skips[input[i]] = true;\n                if (bibsection.page_start == input[i]) {\n                    break;\n                }\n            }\n        }\n    }\n    var processed_item_ids = [];\n    for (i = 0, ilen = input.length; i < ilen; i += 1) {\n        if (bibsection && bibsection.page_start && bibsection.page_length) {\n            if (skips[input[i]]) {\n                continue;\n            }\n            item = this.retrieveItem(input[i]);\n            if (page_item_count === bibsection.page_length) {\n                break;\n            }\n        } else {\n            item = input[i];\n            if (skips[item.id]) {\n                continue;\n            }\n        }\n        if (bibsection) {\n            include = true;\n            if (bibsection.include) {\n                include = false;\n                for (j = 0, jlen = bibsection.include.length; j < jlen; j += 1) {\n                    spec = bibsection.include[j];\n                    if (eval_spec(spec.value, item[spec.field])) {\n                        include = true;\n                        break;\n                    }\n                }\n            } else if (bibsection.exclude) {\n                anymatch = false;\n                for (j = 0, jlen = bibsection.exclude.length; j < jlen; j += 1) {\n                    spec = bibsection.exclude[j];\n                    if (eval_spec(spec.value, item[spec.field])) {\n                        anymatch = true;\n                        break;\n                    }\n                }\n                if (anymatch) {\n                    include = false;\n                }\n            } else if (bibsection.select) {\n                include = false;\n                allmatch = true;\n                for (j = 0, jlen = bibsection.select.length; j < jlen; j += 1) {\n                    spec = bibsection.select[j];\n                    if (!eval_spec(spec.value, item[spec.field])) {\n                        allmatch = false;\n                    }\n                }\n                if (allmatch) {\n                    include = true;\n                }\n            }\n            if (bibsection.quash) {\n                allmatch = true;\n                for (j = 0, jlen = bibsection.quash.length; j < jlen; j += 1) {\n                    spec = bibsection.quash[j];\n                    if (!eval_spec(spec.value, item[spec.field])) {\n                        allmatch = false;\n                    }\n                }\n                if (allmatch) {\n                    include = false;\n                }\n            }\n            if (!include) {\n                continue;\n            }\n        }\n        bib_entry = new CSL.Token(\"group\", CSL.START);\n        bib_entry.decorations = [[\"@bibliography\", \"entry\"]].concat(this.bibliography.opt.layout_decorations);\n        this.output.startTag(\"bib_entry\", bib_entry);\n        if (item.system_id && this.sys.embedBibliographyEntry) {\n            this.output.current.value().item_id = item.system_id;\n        } else {\n            this.output.current.value().system_id = item.id;\n        }\n        sortedItems = [[{id: \"\" + item.id}, item]];\n        entry_item_ids = [];\n        if (this.registry.registry[item.id].master \n            && !(bibsection && bibsection.page_start && bibsection.page_length)) {\n            collapse_parallel = true;\n            this.parallel.StartCitation(sortedItems);\n            this.output.queue[0].strings.delimiter = \", \";\n            this.tmp.term_predecessor = false;\n            entry_item_ids.push(\"\" + CSL.getCite.call(this, item));\n            skips[item.id] = true;\n            siblings = this.registry.registry[item.id].siblings;\n            for (j = 0, jlen = siblings.length; j < jlen; j += 1) {\n                var k = this.registry.registry[item.id].siblings[j];\n                eyetem = this.retrieveItem(k);\n                entry_item_ids.push(\"\" + CSL.getCite.call(this, eyetem));\n                skips[eyetem.id] = true;\n            }\n            this.parallel.ComposeSet();\n            this.parallel.PruneOutputQueue();\n        } else if (!this.registry.registry[item.id].siblings) {\n            this.parallel.StartCitation(sortedItems);\n            this.tmp.term_predecessor = false;\n            entry_item_ids.push(\"\" + CSL.getCite.call(this, item));\n            if (bibsection && bibsection.page_start && bibsection.page_length) {\n                page_item_count += 1;\n            }\n        }\n        entry_item_data.push(\"\");\n        this.tmp.bibliography_pos += 1;\n        processed_item_ids.push(entry_item_ids);\n        this.output.endTag(\"bib_entry\");\n        if (this.output.queue[0].blobs.length && this.output.queue[0].blobs[0].blobs.length) {\n            if (collapse_parallel || !this.output.queue[0].blobs[0].blobs[0].strings) {\n                topblobs = this.output.queue[0].blobs;\n                collapse_parallel = false;\n            } else {\n                topblobs = this.output.queue[0].blobs[0].blobs;\n            }\n            topblobs[0].strings.prefix = this.bibliography.opt.layout_prefix + topblobs[0].strings.prefix;\n        }\n        for (var j=0,jlen=this.output.queue.length;j<jlen;j+=1) {\n            CSL.Output.Queue.purgeEmptyBlobs(this.output.queue[j]);\n        }\n        for (var j=0,jlen=this.output.queue.length;j<jlen;j+=1) {\n            this.output.adjust.upward(this.output.queue[j]);\n            this.output.adjust.leftward(this.output.queue[j]);\n            this.output.adjust.downward(this.output.queue[j],true);\n            this.output.adjust.fix(this.output.queue[j]);\n        }\n        res = this.output.string(this, this.output.queue)[0];\n        if (!res && this.opt.update_mode === CSL.NUMERIC) {\n            var err = (ret.length + 1) + \". [CSL STYLE ERROR: reference with no printed form.]\"\n            res = CSL.Output.Formats[this.opt.mode][\"@bibliography/entry\"](this, err) \n        }\n        if (res) {\n            ret.push(res);\n        }\n    }\n    var done = false;\n    if (bibsection && bibsection.page_start && bibsection.page_length) {\n        var last_expected_id = input.slice(-1)[0];\n        var last_seen_id = processed_item_ids.slice(-1)[0];\n        if (!last_expected_id || !last_seen_id || last_expected_id == last_seen_id) {\n            done = true;\n        }\n    }\n    this.tmp.disambig_override = false;\n    return [processed_item_ids, ret, done];\n};\nCSL.Engine.prototype.setCitationId = function (citation, force) {\n    var ret, id, direction;\n    ret = false;\n    if (!citation.citationID || force) {\n        id = Math.floor(Math.random() * 100000000000000);\n        while (true) {\n            direction = 0;\n            if (!this.registry.citationreg.citationById[id]) {\n                citation.citationID = \"a\" + id.toString(32);\n                break;\n            } else if (!direction && id < 50000000000000) {\n                direction = 1;\n            } else {\n                direction = -1;\n            }\n            if (direction === 1) {\n                id += 1;\n            } else {\n                id += -1;\n            }\n        }\n        ret = \"\" + id;\n    }\n    this.registry.citationreg.citationById[citation.citationID] = citation;\n    return ret;\n};\nCSL.Engine.prototype.rebuildProcessorState = function (citations, mode, uncitedItemIDs) {\n    if (!citations) {\n        citations = [];\n    }\n    if (!mode) {\n        mode = 'html';\n    }\n    var doneIDs = {};\n    var itemIDs = [];\n    for (var i=0,ilen=citations.length;i<ilen;i+=1) {\n        for (var j=0,jlen=citations[i].citationItems.length;j<jlen;j+=1) {\n            var itemID = \"\" + citations[i].citationItems[j].id;\n            if (!doneIDs[itemID]) {\n                itemIDs.push(itemID);\n            }\n            doneIDs[itemID] = true;\n        }\n    }\n    this.updateItems(itemIDs);\n    var pre = [];\n    var post = [];\n    var ret = [];\n    var oldMode = this.opt.mode;\n    this.setOutputFormat(mode);\n    for (var i=0,ilen=citations.length;i<ilen;i+=1) {\n        var res = this.processCitationCluster(citations[i],pre,post,CSL.ASSUME_ALL_ITEMS_REGISTERED);\n        pre.push([citations[i].citationID,citations[i].properties.noteIndex]);\n        for (var j=0,jlen=res[1].length;j<jlen;j+=1) {\n            var index = res[1][j][0];\n            ret[index] = [\n                pre[index][0],\n                pre[index][1],\n                res[1][j][1]\n            ];\n        }\n    }\n    this.updateUncitedItems(uncitedItemIDs);\n    this.setOutputFormat(oldMode);\n    return ret;\n}\nCSL.Engine.prototype.restoreProcessorState = function (citations) {\n    var i, ilen, j, jlen, item, Item, newitem, citationList, itemList, sortedItems;\n    citationList = [];\n    itemList = [];\n    if (!citations) {\n        citations = [];\n    }\n    var indexNumbers = [];\n    var citationIds = {};\n    for (i = 0, ilen = citations.length; i < ilen; i += 1) {\n        if (citationIds[citations[i].citationID]) {\n            this.setCitationId(citations[i], true);\n        }\n        citationIds[citations[i].citationID] = true;\n        indexNumbers.push(citations[i].properties.index);\n    }\n    var oldCitations = citations.slice();\n    oldCitations.sort(\n        function (a,b) {\n            if (a.properties.index < b.properties.index) {\n                return -1;\n            } else if (a.properties.index > b.properties.index) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n    );\n    for (i = 0, ilen = oldCitations.length; i < ilen; i += 1) {\n        oldCitations[i].properties.index = i;\n    }\n    for (i = 0, ilen = oldCitations.length; i < ilen; i += 1) {\n        sortedItems = [];\n        for (j = 0, jlen = oldCitations[i].citationItems.length; j < jlen; j += 1) {\n            item = oldCitations[i].citationItems[j];\n            if (\"undefined\" === typeof item.sortkeys) {\n                item.sortkeys = [];\n            }\n            Item = this.retrieveItem(\"\" + item.id);\n            newitem = [Item, item];\n            sortedItems.push(newitem);\n            oldCitations[i].citationItems[j].item = Item;\n            itemList.push(\"\" + item.id);\n        }\n        if (!oldCitations[i].properties.unsorted) {\n            sortedItems.sort(this.citation.srt.compareCompositeKeys);\n        }\n        oldCitations[i].sortedItems = sortedItems;\n        this.registry.citationreg.citationById[oldCitations[i].citationID] = oldCitations[i];\n    }\n    this.updateItems(itemList);\n    for (i = 0, ilen = citations.length; i < ilen; i += 1) {\n        citationList.push([\"\" + citations[i].citationID, citations[i].properties.noteIndex]);\n    }\n    var ret = [];\n    if (citations && citations.length) {\n        ret = this.processCitationCluster(citations[0], [], citationList.slice(1));\n    } else {\n        this.registry = new CSL.Registry(this);\n        this.tmp = new CSL.Engine.Tmp();\n        this.disambiguate = new CSL.Disambiguation(this);\n    }\n    return ret;\n};\nCSL.Engine.prototype.updateItems = function (idList, nosort, rerun_ambigs, implicitUpdate) {\n    var debug = false;\n    var oldArea = this.tmp.area;\n    var oldRoot = this.tmp.root;\n    var oldExtension = this.tmp.extension;\n    this.tmp.area = \"citation\";\n    this.tmp.root = \"citation\";\n    this.tmp.extension = \"\";\n    if (!implicitUpdate) {\n        this.tmp.loadedItemIDs = {};\n    }\n    this.registry.init(idList);\n\tif (rerun_ambigs) {\n\t\tfor (var ambig in this.registry.ambigcites) {\n\t\t\tthis.registry.ambigsTouched[ambig] = true;\n\t\t}\n\t}\n    this.registry.dodeletes(this.registry.myhash);\n    this.registry.doinserts(this.registry.mylist);\n    this.registry.dorefreshes();\n    this.registry.rebuildlist();\n    this.registry.setsortkeys();\n    this.registry.setdisambigs();\n    if (!nosort) {\n        this.registry.sorttokens();\n    }\n    this.registry.renumber();\n    this.tmp.extension = oldExtension;\n    this.tmp.area = oldArea;\n    this.tmp.root = oldRoot;\n    return this.registry.getSortedIds();\n};\nCSL.Engine.prototype.updateUncitedItems = function (idList, nosort) {\n    var debug = false;\n    var oldArea = this.tmp.area;\n    var oldRoot = this.tmp.root;\n    var oldExtension = this.tmp.extension;\n    this.tmp.area = \"citation\";\n    this.tmp.root = \"citation\"\n    this.tmp.extension = \"\"\n    this.tmp.loadedItemIDs = {};\n    if (!idList) {\n        idList = [];\n    }\n    if (\"object\" == typeof idList) {\n        if (\"undefined\" == typeof idList.length) {\n            var idHash = idList;\n            idList = [];\n            for (var key in idHash) {\n                idList.push(key);\n            }\n        } else if (\"number\" == typeof idList.length) {\n            var idHash = {};\n            for (var i=0,ilen=idList.length;i<ilen;i+=1) {\n                idHash[idList[i]] = true;\n            }\n        }\n    }\n    this.registry.init(idList, true);\n    this.registry.dopurge(idHash);\n    this.registry.doinserts(this.registry.mylist);\n    this.registry.dorefreshes();\n    this.registry.rebuildlist();\n    this.registry.setsortkeys();\n    this.registry.setdisambigs();\n    if (!nosort) {\n        this.registry.sorttokens();\n    }\n    this.registry.renumber();\n    this.tmp.extension = oldExtension;\n    this.tmp.area = oldArea;\n    this.tmp.root = oldRoot;\n    return this.registry.getSortedIds();\n};\nCSL.localeResolve = function (langstr, defaultLocale) {\n    var ret, langlst;\n    if (!defaultLocale) {\n        defaultLocale = \"en-US\";\n    }\n    if (!langstr) {\n        langstr = defaultLocale;\n    }\n    ret = {};\n    langlst = langstr.split(/[\\-_]/);\n    ret.base = CSL.LANG_BASES[langlst[0]];\n    if (\"undefined\" === typeof ret.base) {\n        return {base:defaultLocale, best:langstr, bare:langlst[0]};\n    }\n    if (langlst.length === 1) {\n        ret.generic = true;\n    }\n    if (langlst.length === 1 || langlst[1] === \"x\") {\n        ret.best = ret.base.replace(\"_\", \"-\");\n    } else {\n        ret.best = langlst.slice(0, 2).join(\"-\");\n    }\n    ret.base = ret.base.replace(\"_\", \"-\");\n    ret.bare = langlst[0];\n    return ret;\n};\nCSL.Engine.prototype.localeConfigure = function (langspec, beShy) {\n    var localexml;\n    if (beShy && this.locale[langspec.best]) {\n        return;\n    }\n    localexml = CSL.setupXml(this.sys.retrieveLocale(\"en-US\"));\n    this.localeSet(localexml, \"en-US\", langspec.best);\n    if (langspec.best !== \"en-US\") {\n        if (langspec.base !== langspec.best) {\n            localexml = CSL.setupXml(this.sys.retrieveLocale(langspec.base));\n            this.localeSet(localexml, langspec.base, langspec.best);\n        }\n        localexml = CSL.setupXml(this.sys.retrieveLocale(langspec.best));\n        this.localeSet(localexml, langspec.best, langspec.best);        \n    }\n    this.localeSet(this.cslXml, \"\", langspec.best);\n    this.localeSet(this.cslXml, langspec.bare, langspec.best);\n    if (langspec.base !== langspec.best) {\n        this.localeSet(this.cslXml, langspec.base, langspec.best);\n    }\n    this.localeSet(this.cslXml, langspec.best, langspec.best);\n    if (\"undefined\" === typeof this.locale[langspec.best].terms[\"page-range-delimiter\"]) {\n        if ([\"fr\", \"pt\"].indexOf(langspec.best.slice(0, 2).toLowerCase()) > -1) {\n            this.locale[langspec.best].terms[\"page-range-delimiter\"] = \"-\";\n        } else {\n            this.locale[langspec.best].terms[\"page-range-delimiter\"] = \"\\u2013\";\n        }\n    }\n    if (\"undefined\" === typeof this.locale[langspec.best].terms[\"year-range-delimiter\"]) {\n        this.locale[langspec.best].terms[\"year-range-delimiter\"] = \"\\u2013\";\n    }\n    if (\"undefined\" === typeof this.locale[langspec.best].terms[\"citation-range-delimiter\"]) {\n        this.locale[langspec.best].terms[\"citation-range-delimiter\"] = \"\\u2013\";\n    }\n    if (this.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n        var localeLists = [\"default-locale\",\"locale-sort\",\"locale-translit\",\"locale-translat\"];\n        for (var i=0,ilen=localeLists.length;i<ilen;i+=1) {\n            for (var j=0,jlen=this.opt[localeLists[i]].length;j<jlen;j+=1) {\n                this.opt[localeLists[i]][j] = this.opt[localeLists[i]][j].toLowerCase();\n            }\n        }\n        this.opt.lang = this.opt.lang.toLowerCase();\n    }\n};\nCSL.Engine.prototype.localeSet = function (myxml, lang_in, lang_out) {\n    var blob, locale, nodes, attributes, pos, ppos, term, form, termname, styleopts, attr, date, attrname, len, genderform, target, i, ilen;\n    lang_in = lang_in.replace(\"_\", \"-\");\n    lang_out = lang_out.replace(\"_\", \"-\");\n    if (this.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n        lang_in = lang_in.toLowerCase();\n        lang_out = lang_out.toLowerCase();\n    }\n    if (!this.locale[lang_out]) {\n        this.locale[lang_out] = {};\n        this.locale[lang_out].terms = {};\n        this.locale[lang_out].opts = {};\n        this.locale[lang_out].opts[\"skip-words\"] = CSL.SKIP_WORDS;\n        if (!this.locale[lang_out].opts[\"leading-noise-words\"]) {\n            this.locale[lang_out].opts[\"leading-noise-words\"] = [];\n        }\n        this.locale[lang_out].dates = {};\n        this.locale[lang_out].ord = {'1.0.1':false,keys:{}};\n        this.locale[lang_out][\"noun-genders\"] = {};\n    }\n    locale = myxml.makeXml();\n    if (myxml.nodeNameIs(myxml.dataObj, 'locale')) {\n        locale = myxml.dataObj;\n    } else {\n        nodes = myxml.getNodesByName(myxml.dataObj, \"locale\");\n        for (pos = 0, len = myxml.numberofnodes(nodes); pos < len; pos += 1) {\n            blob = nodes[pos];\n            if (myxml.getAttributeValue(blob, 'lang', 'xml') === lang_in) {\n                locale = blob;\n                break;\n            }\n        }\n    }\n    nodes = myxml.getNodesByName(locale, 'type');\n    for (i = 0, ilen = myxml.numberofnodes(nodes); i < ilen; i += 1) {\n        var typenode = nodes[i];\n        var type = myxml.getAttributeValue(typenode, 'name');\n        var gender = myxml.getAttributeValue(typenode, 'gender');\n        this.opt.gender[type] = gender;\n    }\n    var hasCslOrdinals101 = myxml.getNodesByName(locale, 'term', 'ordinal').length;\n    if (hasCslOrdinals101) {\n        for (var key in this.locale[lang_out].ord.keys) {\n            delete this.locale[lang_out].terms[key];\n        }\n        this.locale[lang_out].ord = {\"1.0.1\":false,keys:{}};\n    }\n    nodes = myxml.getNodesByName(locale, 'term');\n    var ordinals101 = {\"last-digit\":{},\"last-two-digits\":{},\"whole-number\":{}};\n    var ordinals101_toggle = false;\n    var genderized_terms = {};\n    for (pos = 0, len = myxml.numberofnodes(nodes); pos < len; pos += 1) {\n        term = nodes[pos];\n        termname = myxml.getAttributeValue(term, 'name');\n        if (termname === \"sub verbo\") {\n            termname = \"sub-verbo\";\n        }\n        if (termname.slice(0,7) === \"ordinal\") {\n            var termstring = myxml.getNodeValue(term);\n            if (termname === \"ordinal\") {\n                ordinals101_toggle = true;\n            } else {\n                var match = myxml.getAttributeValue(term, 'match');\n                var termstub = termname.slice(8);\n                var genderform = myxml.getAttributeValue(term, 'gender-form');\n                if (!genderform) {\n                    genderform = \"neuter\";\n                }\n                if (!match) {\n                    match = \"last-two-digits\";\n                    if (termstub.slice(0,1) === \"0\") {\n                        match = \"last-digit\";\n                    }\n                }\n                if (termstub.slice(0,1) === \"0\") {\n                    termstub = termstub.slice(1);\n                }\n                if (!ordinals101[match][termstub]) {\n                    ordinals101[match][termstub] = {};\n                }\n                ordinals101[match][termstub][genderform] = termname;\n            }\n            this.locale[lang_out].ord.keys[termname] = true;\n        }\n        if (\"undefined\" === typeof this.locale[lang_out].terms[termname]) {\n            this.locale[lang_out].terms[termname] = {};\n        }\n        form = \"long\";\n        genderform = false;\n        if (myxml.getAttributeValue(term, 'form')) {\n            form = myxml.getAttributeValue(term, 'form');\n        }\n        if (myxml.getAttributeValue(term, 'gender-form')) {\n            genderform = myxml.getAttributeValue(term, 'gender-form');\n        }\n        if (myxml.getAttributeValue(term, 'gender')) {\n            this.locale[lang_out][\"noun-genders\"][termname] = myxml.getAttributeValue(term, 'gender');\n        }\n        if (genderform) {\n            this.locale[lang_out].terms[termname][genderform] = {};\n            this.locale[lang_out].terms[termname][genderform][form] = [];\n            target = this.locale[lang_out].terms[termname][genderform];\n            genderized_terms[termname] = true;\n        } else {\n            this.locale[lang_out].terms[termname][form] = [];\n            target = this.locale[lang_out].terms[termname];\n        }\n        if (myxml.numberofnodes(myxml.getNodesByName(term, 'multiple'))) {\n            target[form][0] = myxml.getNodeValue(term, 'single');\n            if (target[form][0].indexOf(\"%s\") > -1) {\n                this.opt.hasPlaceholderTerm = true;\n            }\n            target[form][1] = myxml.getNodeValue(term, 'multiple');\n            if (target[form][1].indexOf(\"%s\") > -1) {\n                this.opt.hasPlaceholderTerm = true;\n            }\n        } else {\n            target[form] = myxml.getNodeValue(term);\n            if (target[form].indexOf(\"%s\") > -1) {\n                this.opt.hasPlaceholderTerm = true;\n            }\n        }\n    }\n    if (ordinals101_toggle) {\n        for (var ikey in genderized_terms) {\n            var gender_segments = {};\n            var form_segments = 0;\n            for (var jkey in this.locale[lang_out].terms[ikey]) {\n                if ([\"masculine\",\"feminine\"].indexOf(jkey) > -1) {\n                    gender_segments[jkey] = this.locale[lang_out].terms[ikey][jkey];\n                } else {\n                    form_segments += 1;\n                }\n            }\n            if (!form_segments) {\n                if (gender_segments.feminine) {\n                    for (var jkey in gender_segments.feminine) {\n                        this.locale[lang_out].terms[ikey][jkey] = gender_segments.feminine[jkey];\n                    }\n                } else if (gender_segments.masculine) {\n                    for (var jkey in gender_segments.masculine) {\n                        this.locale[lang_out].terms[ikey][jkey] = gender_segments.masculine[jkey];\n                    }\n                }\n            }\n        }\n        this.locale[lang_out].ord['1.0.1'] = ordinals101;\n    }\n    for (termname in this.locale[lang_out].terms) {\n        for (i = 0, ilen = 2; i < ilen; i += 1) {\n            genderform = CSL.GENDERS[i];\n            if (this.locale[lang_out].terms[termname][genderform]) {\n                for (form in this.locale[lang_out].terms[termname]) {\n                    if (!this.locale[lang_out].terms[termname][genderform][form]) {\n                        this.locale[lang_out].terms[termname][genderform][form] = this.locale[lang_out].terms[termname][form];\n                    }\n                }\n            }\n        }\n    }\n    nodes = myxml.getNodesByName(locale, 'style-options');\n    for (pos = 0, len = myxml.numberofnodes(nodes); pos < len; pos += 1) {\n        if (true) {\n            styleopts = nodes[pos];\n            attributes = myxml.attributes(styleopts);\n            for (attrname in attributes) {\n                if (attributes.hasOwnProperty(attrname)) {\n                    if (attrname === \"@punctuation-in-quote\" || attrname === \"@limit-day-ordinals-to-day-1\") {\n                        if (attributes[attrname] === \"true\") {\n                            this.locale[lang_out].opts[attrname.slice(1)] = true;\n                        } else {\n                            this.locale[lang_out].opts[attrname.slice(1)] = false;\n                        }\n                    } else if (attrname === \"@jurisdiction-preference\") {\n                        var jurisdiction_preference = attributes[attrname].split(/\\s*,\\s*/);\n                        this.locale[lang_out].opts[attrname.slice(1)] = jurisdiction_preference;\n                    } else if (attrname === \"@skip-words\") {\n                        var skip_words = attributes[attrname].split(/\\s*,\\s*/);\n                        this.locale[lang_out].opts[attrname.slice(1)] = skip_words;\n                    } else if (attrname === \"@leading-noise-words\") {\n                        var val = attributes[attrname].split(/\\s*,\\s*/);\n                        this.locale[lang_out].opts[\"leading-noise-words\"] = val;\n                    } else if (attrname === \"@name-as-sort-order\") {\n                        this.locale[lang_out].opts[\"name-as-sort-order\"] = {};\n                        var lst = attributes[attrname].split(/\\s+/);\n                        for (var i=0,ilen=lst.length;i<ilen;i+=1) {\n                            this.locale[lang_out].opts[\"name-as-sort-order\"][lst[i]] = true;\n                        }\n                    } else if (attrname === \"@name-as-reverse-order\") {\n                        this.locale[lang_out].opts[\"name-as-reverse-order\"] = {};\n                        var lst = attributes[attrname].split(/\\s+/);\n                        for (var i=0,ilen=lst.length;i<ilen;i+=1) {\n                            this.locale[lang_out].opts[\"name-as-reverse-order\"][lst[i]] = true;\n                        }\n                    } else if (attrname === \"@name-never-short\") {\n                        this.locale[lang_out].opts[\"name-never-short\"] = {};\n                        var lst = attributes[attrname].split(/\\s+/);\n                        for (var i=0,ilen=lst.length;i<ilen;i+=1) {\n                            this.locale[lang_out].opts[\"name-never-short\"][lst[i]] = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    nodes = myxml.getNodesByName(locale, 'date');\n    for (pos = 0, len = myxml.numberofnodes(nodes); pos < len; pos += 1) {\n        if (true) {\n            date = nodes[pos];\n            this.locale[lang_out].dates[myxml.getAttributeValue(date, \"form\")] = date;\n        }\n    }\n};\nCSL.getLocaleNames = function (myxml, preferredLocale) {\n    var stylexml = CSL.setupXml(myxml);\n    function extendLocaleList(localeList, locale) {\n        var forms = [\"base\", \"best\"];\n        if (locale) {\n            normalizedLocale = CSL.localeResolve(locale);\n            for (var i=0,ilen=forms.length;i<ilen;i++) {\n                if (normalizedLocale[forms[i]] && localeList.indexOf(normalizedLocale[forms[i]]) === -1) {\n                    localeList.push(normalizedLocale[forms[i]]);\n                }\n            }\n        }\n    }\n    function sniffLocaleOnOneNodeName(nodeName) {\n        var nodes = stylexml.getNodesByName(stylexml.dataObj, nodeName);\n        for (var i=0,ilen=nodes.length;i<ilen;i++) {\n            var nodeLocales = stylexml.getAttributeValue(nodes[i], \"locale\");\n            if (nodeLocales) {\n                nodeLocales = nodeLocales.split(/ +/);\n                for (var j=0,jlen=nodeLocales.length;j<jlen;j++) {\n                    this.extendLocaleList(localeIDs, nodeLocales[j]);\n                }\n            }\n        }\n    }\n    var localeIDs = [\"en-US\"];\n    extendLocaleList(localeIDs, preferredLocale);\n    var styleNode = stylexml.getNodesByName(stylexml.dataObj, \"style\")[0];\n    var defaultLocale = stylexml.getAttributeValue(styleNode, \"default-locale\");\n    extendLocaleList(localeIDs, defaultLocale);\n    var nodeNames = [\"layout\", \"if\", \"else-if\", \"condition\"];\n    for (var i=0,ilen=nodeNames.length;i<ilen;i++) {\n        sniffLocaleOnOneNodeName(stylexml, localeIDs, nodeNames[i]);\n    }\n    return localeIDs;\n};\nCSL.Node = {};\nCSL.Node.bibliography = {\n    build: function (state, target) {\n        if (this.tokentype === CSL.START) {\n            state.build.area = \"bibliography\";\n            state.build.root = \"bibliography\";\n            state.build.extension = \"\";\n            var func = function(state, Item) {\n                state.tmp.area = \"bibliography\";\n                state.tmp.root = \"bibliography\";\n                state.tmp.extension = \"\";\n            }\n            this.execs.push(func);\n        }\n        target.push(this);\n    }\n};\nCSL.Node.choose = {\n    build: function (state, target) {\n        var func;\n        if (this.tokentype === CSL.START) {\n            func = function (state, Item) {\n                state.tmp.jump.push(undefined, CSL.LITERAL);\n            };\n        }\n        if (this.tokentype === CSL.END) {\n            func = function (state, Item) {\n                state.tmp.jump.pop();\n            };\n        }\n        this.execs.push(func);\n        target.push(this);\n    },\n    configure: function (state, pos) {\n        if (this.tokentype === CSL.END) {\n            state.configure.fail.push((pos));\n            state.configure.succeed.push((pos));\n        } else {\n            state.configure.fail.pop();\n            state.configure.succeed.pop();\n        }\n    }\n};\nCSL.Node.citation = {\n    build: function (state, target) {\n        if (this.tokentype === CSL.START) {\n            state.build.area = \"citation\";\n            state.build.root = \"citation\";\n            state.build.extension = \"\";\n            var func = function(state, Item) {\n                state.tmp.area = \"citation\";\n                state.tmp.root = \"citation\";\n                state.tmp.extension = \"\";\n            }\n            this.execs.push(func);\n        }\n        if (this.tokentype === CSL.END) {\n            state.opt.grouped_sort = state.opt.xclass === \"in-text\" \n                && (state.citation.opt.collapse \n                    && state.citation.opt.collapse.length)\n                || (state.citation.opt.cite_group_delimiter\n                    && state.citation.opt.cite_group_delimiter.length)\n                && state.opt.update_mode !== CSL.POSITION\n                && state.opt.update_mode !== CSL.NUMERIC;\n            if (state.opt.grouped_sort \n                && state.citation_sort.opt.sort_directions.length) {\n                var firstkey = state.citation_sort.opt.sort_directions[0].slice();\n                state.citation_sort.opt.sort_directions = [firstkey].concat(state.citation_sort.opt.sort_directions);\n            }\n            state.citation.srt = new CSL.Registry.Comparifier(state, \"citation_sort\");\n        }\n        target.push(this);\n    }\n};\nCSL.Node[\"#comment\"] = {\n       build: function (state, target) {\n       }\n};\nCSL.Node.date = {\n    build: function (state, target) {\n        var func, date_obj, tok, len, pos, part, dpx, parts, mypos, start, end;\n        if (this.tokentype === CSL.START || this.tokentype === CSL.SINGLETON) {\n            state.build.date_parts = [];\n            state.build.date_variables = this.variables;\n            if (!state.build.extension) {\n                CSL.Util.substituteStart.call(this, state, target);\n            }\n            if (state.build.extension) {\n                func = CSL.dateMacroAsSortKey;\n            } else {\n                func = function (state, Item, item) {\n                    var key, dp;\n                    state.tmp.element_rendered_ok = false;\n                    state.tmp.donesies = [];\n                    state.tmp.dateparts = [];\n                    dp = [];\n                    if (this.variables.length\n                        && !(state.tmp.just_looking\n                             && this.variables[0] === \"accessed\")) {\n                        date_obj = Item[this.variables[0]];\n                        if (\"undefined\" === typeof date_obj) {\n                            date_obj = {\"date-parts\": [[0]] };\n                            if (state.opt.development_extensions.locator_date_and_revision) {\n                                if (item && this.variables[0] === \"locator-date\" && item[\"locator-date\"]) {\n                                    date_obj = item[\"locator-date\"];\n                                }\n                            }\n                        }\n                        state.tmp.date_object = date_obj;\n                        len = this.dateparts.length;\n                        for (pos = 0; pos < len; pos += 1) {\n                            part = this.dateparts[pos];\n                            if (\"undefined\" !== typeof state.tmp.date_object[(part +  \"_end\")]) {\n                                dp.push(part);\n                            } else if (part === \"month\" && \"undefined\" !== typeof state.tmp.date_object.season_end) {\n                                dp.push(part);\n                            }\n                        }\n                        dpx = [];\n                        parts = [\"year\", \"month\", \"day\"];\n                        len = parts.length;\n                        for (pos = 0; pos < len; pos += 1) {\n                            if (dp.indexOf(parts[pos]) > -1) {\n                                dpx.push(parts[pos]);\n                            }\n                        }\n                        dp = dpx.slice();\n                        mypos = 2;\n                        len = dp.length;\n                        for (pos = 0; pos < len; pos += 1) {\n                            part = dp[pos];\n                            start = state.tmp.date_object[part];\n                            end = state.tmp.date_object[(part + \"_end\")];\n                            if (start !== end) {\n                                mypos = pos;\n                                break;\n                            }\n                        }\n                        state.tmp.date_collapse_at = dp.slice(mypos);\n                    } else {\n                        state.tmp.date_object = false;\n                    }\n                };\n            }\n            this.execs.push(func);\n            func = function (state, Item) {\n                if (!Item[this.variables[0]]) return;\n                state.parallel.StartVariable(this.variables[0]);\n                state.output.startTag(\"date\", this);\n                if (this.variables[0] === \"issued\"\n                    && Item.type === \"legal_case\"\n                    && !state.tmp.extension\n                    && \"\" + Item[\"collection-number\"] === \"\" + state.tmp.date_object.year\n                    && this.dateparts.length === 1\n                    && this.dateparts[0] === \"year\") {\n                    for (var key in state.tmp.date_object) {\n                        if (state.tmp.date_object.hasOwnProperty(key)) {\n                            if (key.slice(0, 4) === \"year\") {\n                                state.tmp.issued_date = {};\n                                var lst = state.output.current.mystack.slice(-2)[0].blobs;\n                                state.tmp.issued_date.list = lst;\n                                state.tmp.issued_date.pos = lst.length - 1;\n                            }\n                        }\n                    }\n                }\n            };\n            this.execs.push(func);\n        }\n        if (!state.build.extension && (this.tokentype === CSL.END || this.tokentype === CSL.SINGLETON)) {\n            func = function (state, Item) {\n                if (!Item[this.variables[0]]) return;\n                state.output.endTag();\n                state.parallel.CloseVariable(this.variables[0]);\n            };\n            this.execs.push(func);\n        }\n        target.push(this);\n        if (this.tokentype === CSL.END || this.tokentype === CSL.SINGLETON) {\n            if (!state.build.extension) {\n                CSL.Util.substituteEnd.call(this, state, target);\n            }\n        }\n    }\n};\nCSL.Node[\"date-part\"] = {\n    build: function (state, target) {\n        var func, pos, len, decor, first_date, value, value_end, real, have_collapsed, invoked, precondition, known_year, bc, ad, bc_end, ad_end, ready, curr, dcurr, number, num, formatter, item, i, ilen;\n        if (!this.strings.form) {\n            this.strings.form = \"long\";\n        }\n        state.build.date_parts.push(this.strings.name);\n        var date_variable = state.build.date_variables[0];\n        func = function (state, Item) {\n            if (!state.tmp.date_object) {\n                return;\n            }\n            first_date = true;\n            value = \"\";\n            value_end = \"\";\n            state.tmp.donesies.push(this.strings.name);\n            if (state.tmp.date_object.literal && \"year\" === this.strings.name) {\n                state.parallel.AppendToVariable(state.tmp.date_object.literal);\n                state.output.append(state.tmp.date_object.literal, this);\n            }\n            if (state.tmp.date_object) {\n                value = state.tmp.date_object[this.strings.name];\n                value_end = state.tmp.date_object[(this.strings.name + \"_end\")];\n            }\n            if (\"year\" === this.strings.name && value === 0 && !state.tmp.suppress_decorations) {\n                value = false;\n            }\n            real = !state.tmp.suppress_decorations;\n            have_collapsed = state.tmp.have_collapsed;\n            invoked = state[state.tmp.area].opt.collapse === \"year-suffix\" || state[state.tmp.area].opt.collapse === \"year-suffix-ranged\";\n            precondition = state.opt[\"disambiguate-add-year-suffix\"];\n            if (real && precondition && invoked) {\n                state.tmp.years_used.push(value);\n                known_year = state.tmp.last_years_used.length >= state.tmp.years_used.length;\n                if (known_year && have_collapsed) {\n                    if (state.tmp.last_years_used[(state.tmp.years_used.length - 1)] === value) {\n                        value = false;\n                    }\n                }\n            }\n            if (\"undefined\" !== typeof value) {\n                bc = false;\n                ad = false;\n                bc_end = false;\n                ad_end = false;\n                if (\"year\" === this.strings.name) {\n                    if (parseInt(value, 10) < 500 && parseInt(value, 10) > 0) {\n                        ad = state.getTerm(\"ad\");\n                    }\n                    if (parseInt(value, 10) < 0) {\n                        bc = state.getTerm(\"bc\");\n                        value = (parseInt(value, 10) * -1);\n                    }\n                    if (value_end) {\n                        if (parseInt(value_end, 10) < 500 && parseInt(value_end, 10) > 0) {\n                            ad_end = state.getTerm(\"ad\");\n                        }\n                        if (parseInt(value_end, 10) < 0) {\n                            bc_end = state.getTerm(\"bc\");\n                            value_end = (parseInt(value_end, 10) * -1);\n                        }\n                    }\n                }\n                state.parallel.AppendToVariable(value);\n                var monthnameid = \"\"+state.tmp.date_object.month;\n                while (monthnameid.length < 2) {\n                    monthnameid = \"0\"+monthnameid;\n                }\n                monthnameid = \"month-\"+monthnameid;\n                var gender = state.locale[state.opt.lang][\"noun-genders\"][monthnameid];\n                if (this.strings.form) {\n                    var myform = this.strings.form;\n                    if (this.strings.name === \"day\") {\n                        if (myform === \"ordinal\"\n                            && state.locale[state.opt.lang].opts[\"limit-day-ordinals-to-day-1\"]\n                            && (\"\" + value) !== \"1\") {\n                            myform = \"numeric\";\n                        }\n                    }\n                    value = CSL.Util.Dates[this.strings.name][myform](state, value, gender, this.default_locale);\n                    if (\"month\" === this.strings.name) {\n                        if (state.tmp.strip_periods) {\n                            value = value.replace(/\\./g, \"\");\n                        } else {\n                            for (i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n                                if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n                                    value = value.replace(/\\./g, \"\");\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (value_end) {\n                        value_end = CSL.Util.Dates[this.strings.name][myform](state, value_end, gender, (\"accessed\" === date_variable), \"_end\");\n                        if (state.tmp.strip_periods) {\n                            value_end = value_end.replace(/\\./g, \"\");\n                        } else {\n                            for (i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n                                if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n                                    value_end = value_end.replace(/\\./g, \"\");\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                state.output.openLevel(\"empty\");\n                if (state.tmp.date_collapse_at.length) {\n                    ready = true;\n                    len = state.tmp.date_collapse_at.length;\n                    for (pos = 0; pos < len; pos += 1) {\n                        item = state.tmp.date_collapse_at[pos];\n                        if (state.tmp.donesies.indexOf(item) === -1) {\n                            ready = false;\n                            break;\n                        }\n                    }\n                    if (ready) {\n                        if (\"\" + value_end !== \"0\") {\n                            if (state.dateput.queue.length === 0) {\n                                first_date = true;\n                            }\n                            if (state.opt[\"year-range-format\"]\n                                && state.opt[\"year-range-format\"] !== \"expanded\"\n                                && !state.tmp.date_object.day\n                                && !state.tmp.date_object.month\n                                && !state.tmp.date_object.season\n                                && this.strings.name === \"year\"\n                                && value && value_end) {\n                                value_end = state.fun.year_mangler(value + \"-\" + value_end, true);\n                                var range_delimiter = state.getTerm(\"year-range-delimiter\");\n                                value_end = value_end.slice(value_end.indexOf(range_delimiter) + 1);\n                            }\n                            state.dateput.append(value_end, this);\n                            if (first_date) {\n                                state.dateput.current.value()[0].strings.prefix = \"\";\n                            }\n                        }\n                        state.output.append(value, this);\n                        curr = state.output.current.value();\n                        curr.blobs[(curr.blobs.length - 1)].strings.suffix = \"\";\n                        state.output.append(state.getTerm(\"year-range-delimiter\"), \"empty\");\n                        dcurr = state.dateput.current.value();\n                        curr.blobs = curr.blobs.concat(dcurr);\n                        state.dateput.string(state, state.dateput.queue);\n                        state.tmp.date_collapse_at = [];\n                    } else {\n                        state.output.append(value, this);\n                        if (state.tmp.date_collapse_at.indexOf(this.strings.name) > -1) {\n                            if (\"\" + value_end !== \"0\") {\n                                if (state.dateput.queue.length === 0) {\n                                    first_date = true;\n                                }\n                                state.dateput.openLevel(\"empty\");\n                                state.dateput.append(value_end, this);\n                                if (first_date) {\n                                    state.dateput.current.value().blobs[0].strings.prefix = \"\";\n                                }\n                                if (bc) {\n                                    state.dateput.append(bc);\n                                }\n                                if (ad) {\n                                    state.dateput.append(ad);\n                                }\n                                state.dateput.closeLevel();\n                            }\n                        }\n                    }\n                } else {\n                    state.output.append(value, this);\n                }\n                if (bc) {\n                    state.output.append(bc);\n                }\n                if (ad) {\n                    state.output.append(ad);\n                }\n                state.output.closeLevel();\n            } else if (\"month\" === this.strings.name) {\n                if (state.tmp.date_object.season) {\n                    value = \"\" + state.tmp.date_object.season;\n                    if (value && value.match(/^[1-4]$/)) {\n                        state.tmp.group_context.tip.variable_success = true;\n                        state.output.append(state.getTerm((\"season-0\" + value)), this);\n                    } else if (value) {\n                        state.output.append(value, this);\n                    }\n                }\n            }\n            state.tmp.value = [];\n            if (Item[date_variable] && (value || state.tmp.have_collapsed) && !state.opt.has_year_suffix && \"year\" === this.strings.name && !state.tmp.just_looking) {\n                if (state.registry.registry[Item.id] && state.registry.registry[Item.id].disambig.year_suffix !== false && !state.tmp.has_done_year_suffix) {\n                    state.tmp.has_done_year_suffix = true;\n                    num = parseInt(state.registry.registry[Item.id].disambig.year_suffix, 10);\n                    number = new CSL.NumericBlob(false, num, this, Item.id);\n                    this.successor_prefix = state[state.build.area].opt.layout_delimiter;\n                    this.splice_prefix = state[state.build.area].opt.layout_delimiter;\n                    formatter = new CSL.Util.Suffixator(CSL.SUFFIX_CHARS);\n                    number.setFormatter(formatter);\n                    if (state[state.tmp.area].opt.collapse === \"year-suffix-ranged\") {\n                        number.range_prefix = state.getTerm(\"citation-range-delimiter\");\n                    }\n                    if (state[state.tmp.area].opt.cite_group_delimiter) {\n                        number.successor_prefix = state[state.tmp.area].opt.cite_group_delimiter;\n                    } else if (state[state.tmp.area].opt[\"year-suffix-delimiter\"]) {\n                        number.successor_prefix = state[state.tmp.area].opt[\"year-suffix-delimiter\"];\n                    } else {\n                        number.successor_prefix = state[state.tmp.area].opt.layout_delimiter;\n                    }\n                    number.UGLY_DELIMITER_SUPPRESS_HACK = true;\n                    state.output.append(number, \"literal\");\n                }\n            }\n        };\n        this.execs.push(func);\n        target.push(this);\n    }\n};\nCSL.Node[\"else-if\"] = {\n    build: function (state, target) {\n        CSL.Conditions.TopNode.call(this, state, target);\n        target.push(this);\n    },\n    configure: function (state, pos) {\n        CSL.Conditions.Configure.call(this, state, pos);\n    }\n};\nCSL.Node[\"else\"] = {\n    build: function (state, target) {\n        target.push(this);\n    },\n    configure: function (state, pos) {\n        if (this.tokentype === CSL.START) {\n            state.configure.fail[(state.configure.fail.length - 1)] = pos;\n        }\n    }\n};\nCSL.Node[\"et-al\"] = {\n    build: function (state, target) {\n        if (state.build.area === \"citation\" || state.build.area === \"bibliography\") {\n            var func = function (state, Item, item) {\n                state.tmp.etal_node = this;\n                if (\"string\" === typeof this.strings.term) {\n                    state.tmp.etal_term = this.strings.term;\n                }\n            }\n            this.execs.push(func);\n        }\n        target.push(this);\n    }\n};\nCSL.Node.group = {\n    build: function (state, target, realGroup) {\n        var func, execs;\n        this.realGroup = realGroup;\n        if (this.tokentype === CSL.START) {\n            CSL.Util.substituteStart.call(this, state, target);\n            if (state.build.substitute_level.value()) {\n                state.build.substitute_level.replace((state.build.substitute_level.value() + 1));\n            }\n            if (!this.juris) {\n                target.push(this);\n            }\n            func = function (state, Item) {\n                state.output.startTag(\"group\", this);\n                if (this.strings.label_form_override) {\n                    if (!state.tmp.group_context.tip.label_form) {\n                        state.tmp.group_context.tip.label_form = this.strings.label_form_override;\n                    }\n                }\n                if (this.realGroup) {\n                    var condition = false;\n                    var force_suppress = false;\n                    if (state.tmp.group_context.mystack.length) {\n                        state.output.current.value().parent = state.tmp.group_context.tip.output_tip;\n                    }\n                    var label_form = state.tmp.group_context.tip.label_form;\n                    if (!label_form) {\n                        label_form = this.strings.label_form_override;\n                    }\n                    if (state.tmp.group_context.tip.condition) {\n                        condition = state.tmp.group_context.tip.condition;\n                        force_suppress = state.tmp.group_context.tip.force_suppress;\n                    } else if (this.strings.reject) {\n                        condition = {\n                            test: this.strings.reject,\n                            not: true\n                        }\n                        force_suppress = true;\n                        done_vars = [];\n                    } else if (this.strings.require) {\n                        condition = {\n                            test: this.strings.require,\n                            not: false\n                        }\n                        done_vars = [];\n                    }\n                    state.tmp.group_context.push({\n                        term_intended: false,\n                        variable_attempt: false,\n                        variable_success: false,\n                        variable_success_parent: state.tmp.group_context.tip.variable_success,\n                        output_tip: state.output.current.tip,\n                        label_form: label_form,\n                        parallel_conditions: this.strings.set_parallel_condition,\n                        condition: condition,\n                        force_suppress: force_suppress,\n                        done_vars: state.tmp.group_context.tip.done_vars.slice()\n                    });\n                }\n            };\n            execs = [];\n            execs.push(func);\n            this.execs = execs.concat(this.execs);\n            if (this.strings[\"has-publisher-and-publisher-place\"]) {\n                state.build[\"publisher-special\"] = true;\n                func = function (state, Item) {\n                    if (this.strings[\"subgroup-delimiter\"]\n                        && Item.publisher && Item[\"publisher-place\"]) {\n                        var publisher_lst = Item.publisher.split(/;\\s*/);\n                        var publisher_place_lst = Item[\"publisher-place\"].split(/;\\s*/);\n                        if (publisher_lst.length > 1\n                            && publisher_lst.length === publisher_place_lst.length) {\n                            state.publisherOutput = new CSL.PublisherOutput(state, this);\n                            state.publisherOutput[\"publisher-list\"] = publisher_lst;\n                            state.publisherOutput[\"publisher-place-list\"] = publisher_place_lst;\n                        }\n                    }\n                };\n                this.execs.push(func);\n            }\n            if (this.juris) {\n                for (var x=0,xlen=target.length;x<xlen;x++) {\n                    var token = target[x];\n                }\n                var choose_start = new CSL.Token(\"choose\", CSL.START);\n                CSL.Node.choose.build.call(choose_start, state, target);\n                var if_start = new CSL.Token(\"if\", CSL.START);\n                func = function (macroName) {\n                    return function (Item) {\n                        if (!state.sys.retrieveStyleModule || !CSL.MODULE_MACROS[macroName] || !Item.jurisdiction) return false;\n                        var jurisdictionList = state.getJurisdictionList(Item.jurisdiction);\n                        if (!state.opt.jurisdictions_seen[jurisdictionList[0]]) {\n                            var res = state.retrieveAllStyleModules(jurisdictionList);\n                            for (var jurisdiction in res) {\n                                var macroCount = 0;\n                                state.juris[jurisdiction] = {};\n                                var myXml = CSL.setupXml(res[jurisdiction]);\n                                var myNodes = myXml.getNodesByName(myXml.dataObj, \"law-module\");\n                                for (var i=0,ilen=myNodes.length;i<ilen;i++) {\n                                    var myTypes = myXml.getAttributeValue(myNodes[i],\"types\");\n                                    if (myTypes) {\n                                        state.juris[jurisdiction].types = {};\n                                        myTypes =  myTypes.split(/\\s+/);\n                                        for (var j=0,jlen=myTypes.length;j<jlen;j++) {\n                                            state.juris[jurisdiction].types[myTypes[j]] = true;\n                                        }\n                                    }\n                                }\n                                if (!state.juris[jurisdiction].types) {\n                                    state.juris[jurisdiction].types = CSL.MODULE_TYPES;\n                                }\n                                var myNodes = myXml.getNodesByName(myXml.dataObj, \"macro\");\n                                for (var i=0,ilen=myNodes.length;i<ilen;i++) {\n                                    var myName = myXml.getAttributeValue(myNodes[i], \"name\");\n                                    if (!CSL.MODULE_MACROS[myName]) {\n                                        CSL.debug(\"CSL: skipping non-modular macro name \\\"\" + myName + \"\\\" in module context\");\n                                        continue;\n                                    };\n                                    macroCount++;\n                                    state.juris[jurisdiction][myName] = [];\n                                    state.buildTokenLists(myNodes[i], state.juris[jurisdiction][myName]);\n                                    state.configureTokenList(state.juris[jurisdiction][myName]);\n                                }\n                            }\n                        }\n                        for (var i=0,ilen=jurisdictionList.length;i<ilen;i++) {\n                            var jurisdiction = jurisdictionList[i];\n                            if(state.juris[jurisdiction] && state.juris[jurisdiction].types[Item.type]) {\n                                Item[\"best-jurisdiction\"] = jurisdiction;\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                }(this.juris);\n                if_start.tests.push(func);\n                if_start.test = state.fun.match.any(if_start, state, if_start.tests);\n                target.push(if_start);\n                var text_node = new CSL.Token(\"text\", CSL.SINGLETON);\n                func = function (state, Item, item) {\n                    var next = 0;\n                    if (state.juris[Item[\"best-jurisdiction\"]][this.juris]) {\n                        while (next < state.juris[Item[\"best-jurisdiction\"]][this.juris].length) {\n                            next = CSL.tokenExec.call(state, state.juris[Item[\"best-jurisdiction\"]][this.juris][next], Item, item);\n                        }\n                    }\n                }\n                text_node.juris = this.juris;\n                text_node.execs.push(func);\n                target.push(text_node);\n                var if_end = new CSL.Token(\"if\", CSL.END);\n                CSL.Node[\"if\"].build.call(if_end, state, target);\n                var else_start = new CSL.Token(\"else\", CSL.START);\n                CSL.Node[\"else\"].build.call(else_start, state, target);\n            }\n        }\n        if (this.tokentype === CSL.END) {\n            if (state.build[\"publisher-special\"]) {\n                state.build[\"publisher-special\"] = false;\n                if (\"string\" === typeof state[state.build.root].opt[\"name-delimiter\"]) {\n                    func = function (state, Item) {\n                        if (state.publisherOutput) {\n                            state.publisherOutput.render();\n                            state.publisherOutput = false;\n                        }\n                    };\n                    this.execs.push(func);\n                }\n            }\n            func = function (state, Item) {\n                state.output.endTag();\n                if (this.realGroup) {\n                    var flags = state.tmp.group_context.pop();\n                    if (state.tmp.group_context.tip.condition) {\n                        state.tmp.group_context.tip.force_suppress = flags.force_suppress;\n                    }\n                    if (!flags.force_suppress && (flags.variable_success || (flags.term_intended && !flags.variable_attempt))) {\n                        if (!this.isJurisLocatorLabel) {\n                            state.tmp.group_context.tip.variable_success = true;\n                        }\n                        var blobs = state.output.current.value().blobs;\n                        var pos = state.output.current.value().blobs.length - 1;\n                        if (!state.tmp.just_looking && \"undefined\" !== typeof flags.parallel_conditions) {\n                            var parallel_condition_object = {\n                                blobs: blobs,\n                                conditions: flags.parallel_conditions,\n                                id: Item.id,\n                                pos: pos\n                            };\n                            state.parallel.parallel_conditional_blobs_list.push(parallel_condition_object);\n                        }\n                    } else {\n                        state.tmp.group_context.tip.variable_attempt = flags.variable_attempt;\n                        if (flags.force_suppress && !state.tmp.group_context.tip.condition) {\n                            state.tmp.group_context.tip.variable_attempt = true;\n                            state.tmp.group_context.tip.variable_success = flags.variable_success_parent;\n                            for (var i=0,ilen=flags.done_vars.length;i<ilen;i++) {\n                                if (state.tmp.done_vars.indexOf(flags.done_vars[i]) > -1) {\n                                    state.tmp.done_vars = state.tmp.done_vars.slice(0, i).concat(state.tmp.done_vars.slice(i+1));\n                                }\n                            }\n                        }\n                        if (state.output.current.value().blobs) {\n                            state.output.current.value().blobs.pop();\n                        }\n                    }\n                }\n            };\n            this.execs.push(func);\n            if (this.juris) {\n                var else_end = new CSL.Token(\"else\", CSL.END);\n                CSL.Node[\"else\"].build.call(else_end, state, target);\n                var choose_end = new CSL.Token(\"choose\", CSL.END);\n                CSL.Node.choose.build.call(choose_end, state, target);\n            }\n        }\n        if (this.tokentype === CSL.END) {\n            if (!this.juris) {\n                target.push(this);\n            }\n            if (state.build.substitute_level.value()) {\n                state.build.substitute_level.replace((state.build.substitute_level.value() - 1));\n            }\n            CSL.Util.substituteEnd.call(this, state, target);\n        }\n    }\n};\nCSL.Node[\"if\"] = {\n    build: function (state, target) {\n        CSL.Conditions.TopNode.call(this, state, target);\n        target.push(this);\n    },\n    configure: function (state, pos) {\n        CSL.Conditions.Configure.call(this, state, pos);\n    }\n};\nCSL.Node[\"conditions\"] = {\n    build: function (state, target) {\n        if (this.tokentype === CSL.START) {\n            state.tmp.conditions.addMatch(this.match);\n        }\n        if (this.tokentype === CSL.END) {\n            state.tmp.conditions.matchCombine();\n        }\n    }\n};\nCSL.Node[\"condition\"] = {\n    build: function (state, target) {\n        if (this.tokentype === CSL.SINGLETON) {\n            var test = state.fun.match[this.match](this, state, this.tests);\n            state.tmp.conditions.addTest(test);\n        }\n    }\n};\nCSL.Conditions = {};\nCSL.Conditions.TopNode = function (state, target) {\n    var func;\n    if (this.tokentype === CSL.START || this.tokentype === CSL.SINGLETON) {\n        if (this.locale) {\n            state.opt.lang = this.locale;\n        }\n        if (!this.tests || !this.tests.length) {\n            state.tmp.conditions = new CSL.Conditions.Engine(state, this);\n        } else {\n            this.test = state.fun.match[this.match](this, state, this.tests);\n        }\n    }\n    if (this.tokentype === CSL.END || this.tokentype === CSL.SINGLETON) {\n        func = function (state, Item) {\n            if (this.locale_default) {\n                state.output.current.value().old_locale = this.locale_default;\n                state.output.closeLevel(\"empty\");\n                state.opt.lang = this.locale_default;\n            }\n            var next = this[state.tmp.jump.value()];\n            return next;\n        };\n        this.execs.push(func);\n        if (this.locale_default) {\n            state.opt.lang = this.locale_default;\n        }\n    }\n};\nCSL.Conditions.Configure = function (state, pos) {\n    if (this.tokentype === CSL.START) {\n        this.fail = state.configure.fail.slice(-1)[0];\n        this.succeed = this.next;\n        state.configure.fail[(state.configure.fail.length - 1)] = pos;\n    } else if (this.tokentype === CSL.SINGLETON) {\n        this.fail = this.next;\n        this.succeed = state.configure.succeed.slice(-1)[0];\n        state.configure.fail[(state.configure.fail.length - 1)] = pos;\n    } else {\n        this.succeed = state.configure.succeed.slice(-1)[0];\n        this.fail = this.next;\n    }\n};\nCSL.Conditions.Engine = function (state, token) {\n    this.token = token;\n    this.state = state;\n};\nCSL.Conditions.Engine.prototype.addTest = function (test) {\n    this.token.tests.push(test);\n};\nCSL.Conditions.Engine.prototype.addMatch = function (match) {\n    this.token.match = match;\n};\nCSL.Conditions.Engine.prototype.matchCombine = function () {\n    this.token.test = this.state.fun.match[this.token.match](this.token, this.state, this.token.tests);\n};\nCSL.Node.info = {\n    build: function (state, target) {\n        if (this.tokentype === CSL.START) {\n            state.build.skip = \"info\";\n        } else {\n            state.build.skip = false;\n        }\n    }\n};\nCSL.Node.institution = {\n    build: function (state, target) {\n        if ([CSL.SINGLETON, CSL.START].indexOf(this.tokentype) > -1) {\n            var func = function (state, Item) {\n                if (\"string\" === typeof this.strings.delimiter) {\n                    state.tmp.institution_delimiter = this.strings.delimiter;\n                } else {\n                    state.tmp.institution_delimiter = state.tmp.name_delimiter;\n                }\n                var myand, and_default_prefix, and_suffix;\n                if (\"text\" === state.inheritOpt(this, \"and\")) {\n                    this.and_term = state.getTerm(\"and\", \"long\", 0);\n                } else if (\"symbol\" === state.inheritOpt(this, \"and\")) {\n                    if (state.opt.development_extensions.expect_and_symbol_form) {\n                        this.and_term = state.getTerm(\"and\", \"symbol\", 0);\n                    } else {\n                        this.and_term = \"&\";\n                    }\n                } else if (\"none\" === state.inheritOpt(this, \"and\")) {\n                    this.and_term = state.tmp.institution_delimiter;\n                }\n                if (\"undefined\" === typeof this.and_term && state.tmp.and_term) {\n                    this.and_term = state.getTerm(\"and\", \"long\", 0);\n                }\n                if (CSL.STARTSWITH_ROMANESQUE_REGEXP.test(this.and_term)) {\n                    this.and_prefix_single = \" \";\n                    this.and_prefix_multiple = \", \";\n                    if (\"string\" === typeof state.tmp.institution_delimiter) {\n                        this.and_prefix_multiple = state.tmp.institution_delimiter;\n                    }\n                    this.and_suffix = \" \";\n                } else {\n                    this.and_prefix_single = \"\";\n                    this.and_prefix_multiple = \"\";\n                    this.and_suffix = \"\";\n                }\n                if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"always\") {\n                    this.and_prefix_single = state.tmp.institution_delimiter;\n                } else if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"never\") {\n                    if (this.and_prefix_multiple) {\n                        this.and_prefix_multiple = \" \";\n                    }\n                }\n                this.and = {};\n                if (\"undefined\" !== typeof this.and_term) {\n                    state.output.append(this.and_term, \"empty\", true);\n                    this.and.single = state.output.pop();\n                    this.and.single.strings.prefix = this.and_prefix_single;\n                    this.and.single.strings.suffix = this.and_suffix;\n                    state.output.append(this.and_term, \"empty\", true);\n                    this.and.multiple = state.output.pop();\n                    this.and.multiple.strings.prefix = this.and_prefix_multiple;\n                    this.and.multiple.strings.suffix = this.and_suffix;\n                } else if (\"undefined\" !== this.strings.delimiter) {\n                    this.and.single = new CSL.Blob(state.tmp.institution_delimiter);\n                    this.and.single.strings.prefix = \"\";\n                    this.and.single.strings.suffix = \"\";\n                    this.and.multiple = new CSL.Blob(state.tmp.institution_delimiter);\n                    this.and.multiple.strings.prefix = \"\";\n                    this.and.multiple.strings.suffix = \"\";\n                }\n                state.nameOutput.institution = this;\n            };\n            this.execs.push(func);\n        }\n        target.push(this);\n    },\n    configure: function (state, pos) {\n        if ([CSL.SINGLETON, CSL.START].indexOf(this.tokentype) > -1) {\n            state.build.has_institution = true;\n        }\n    }\n};\nCSL.Node[\"institution-part\"] = {\n    build: function (state, target) {\n        var func;\n        if (\"long\" === this.strings.name) {\n            if (this.strings[\"if-short\"]) {\n                func = function (state, Item) {\n                    state.nameOutput.institutionpart[\"long-with-short\"] = this;\n                };\n            } else {\n                func = function (state, Item) {\n                    state.nameOutput.institutionpart[\"long\"] = this;\n                };\n            }\n        } else if (\"short\" === this.strings.name) {\n            func = function (state, Item) {\n                state.nameOutput.institutionpart[\"short\"] = this;\n            };\n        }\n        this.execs.push(func);\n        target.push(this);\n    }\n};\nCSL.Node.key = {\n    build: function (state, target) {\n        target = state[state.build.root + \"_sort\"].tokens;\n        var func, i, ilen;\n        var debug = false;\n        var start_key = new CSL.Token(\"key\", CSL.START);\n        state.tmp.root = state.build.root;\n        start_key.strings[\"et-al-min\"] = state.inheritOpt(this, \"et-al-min\");\n        start_key.strings[\"et-al-use-first\"] = state.inheritOpt(this, \"et-al-use-first\");\n        start_key.strings[\"et-al-use-last\"] = state.inheritOpt(this, \"et-al-use-last\");\n        func = function (state, Item) {\n            state.tmp.done_vars = [];\n        };\n        start_key.execs.push(func);\n        state.opt.citation_number_sort_direction = this.strings.sort_direction;\n        func = function (state, Item) {\n            state.output.openLevel(\"empty\");\n        };\n        start_key.execs.push(func);\n        var sort_direction = [];\n        if (this.strings.sort_direction === CSL.DESCENDING) {\n            sort_direction.push(1);\n            sort_direction.push(-1);\n        } else {\n            sort_direction.push(-1);\n            sort_direction.push(1);\n        }\n        state[state.build.area].opt.sort_directions.push(sort_direction);\n        if (CSL.DATE_VARIABLES.indexOf(this.variables[0]) > -1) {\n            state.build.date_key = true;\n        }\n        func = function (state, Item) {\n            state.tmp.sort_key_flag = true;\n            if (state.inheritOpt(this, \"et-al-min\")) {\n                state.tmp[\"et-al-min\"] = state.inheritOpt(this, \"et-al-min\");\n            }\n            if (state.inheritOpt(this, \"et-al-use-first\")) {\n                state.tmp[\"et-al-use-first\"] = state.inheritOpt(this, \"et-al-use-first\");\n            }\n            if (\"boolean\" === typeof state.inheritOpt(this, \"et-al-use-last\")) {\n                state.tmp[\"et-al-use-last\"] = state.inheritOpt(this, \"et-al-use-last\");\n            }\n        };\n        start_key.execs.push(func);\n        target.push(start_key);\n        if (this.variables.length) {\n            var variable = this.variables[0];\n            if (variable === \"citation-number\") {\n                if (state.build.area === \"citation\" && state.build.extension === \"_sort\") {\n                    state.opt.citation_number_sort = false;\n                }\n                if (state.build.root === \"bibliography\" && state.build.extension === \"_sort\") {\n                    state.opt.citation_number_sort_used = false;\n                }\n            }\n            if (CSL.CREATORS.indexOf(variable) > -1) {\n                var names_start_token = new CSL.Token(\"names\", CSL.START);\n                names_start_token.tokentype = CSL.START;\n                names_start_token.variables = this.variables;\n                CSL.Node.names.build.call(names_start_token, state, target);\n                var name_token = new CSL.Token(\"name\", CSL.SINGLETON);\n                name_token.tokentype = CSL.SINGLETON;\n                name_token.strings[\"name-as-sort-order\"] = \"all\";\n                name_token.strings[\"sort-separator\"] = \" \";\n                name_token.strings[\"et-al-use-last\"] = state.inheritOpt(this, \"et-al-use-last\");\n                name_token.strings[\"et-al-min\"] = state.inheritOpt(this, \"et-al-min\");\n                name_token.strings[\"et-al-use-first\"] = state.inheritOpt(this, \"et-al-use-first\");\n                CSL.Node.name.build.call(name_token, state, target);\n                var institution_token = new CSL.Token(\"institution\", CSL.SINGLETON);\n                institution_token.tokentype = CSL.SINGLETON;\n                CSL.Node.institution.build.call(institution_token, state, target);\n                var names_end_token = new CSL.Token(\"names\", CSL.END);\n                names_end_token.tokentype = CSL.END;\n                CSL.Node.names.build.call(names_end_token, state, target);\n            } else {\n                var single_text = new CSL.Token(\"text\", CSL.SINGLETON);\n                single_text.dateparts = this.dateparts;\n                if (CSL.NUMERIC_VARIABLES.indexOf(variable) > -1) {\n                    func = function (state, Item) {\n                        var num, m;\n                        num = false;\n                        if (\"citation-number\" === variable) {\n                            num = state.registry.registry[Item.id].seq.toString();\n                        } else {\n                            num = Item[variable];\n                        }\n                        if (num) {\n                            num = CSL.Util.padding(num);\n                        }\n                        state.output.append(num, this);\n                    };\n                } else if (variable === \"citation-label\") {\n                    func = function (state, Item) {\n                        var trigraph = state.getCitationLabel(Item);\n                        state.output.append(trigraph, this);\n                    };\n                } else if (CSL.DATE_VARIABLES.indexOf(variable) > -1) {\n                    func = CSL.dateAsSortKey;\n                    single_text.variables = this.variables;\n                } else if (\"title\" === variable) {\n                    var abbrevfam = \"title\";\n                    var abbrfall = false;\n                    var altvar = false;\n                    var transfall = true;\n                    func = state.transform.getOutputFunction(this.variables, abbrevfam, abbrfall, altvar, transfall);\n                } else {\n                    func = function (state, Item) {\n                        var varval = Item[variable];\n                        state.output.append(varval, \"empty\");\n                    };\n                }\n                single_text.execs.push(func);\n                target.push(single_text);\n            }\n        } else { // macro\n            var token = new CSL.Token(\"text\", CSL.SINGLETON);\n            token.postponed_macro = this.postponed_macro;\n            CSL.expandMacro.call(state, token, target);\n        }\n        var end_key = new CSL.Token(\"key\", CSL.END);\n        func = function (state, Item) {\n            var keystring = state.output.string(state, state.output.queue);\n            if (state.sys.normalizeUnicode) {\n                keystring = state.sys.normalizeUnicode(keystring);\n            }\n            keystring = keystring ? (keystring.split(\" \").join(state.opt.sort_sep) + state.opt.sort_sep) : \"\";\n            if (\"\" === keystring) {\n                keystring = undefined;\n            }\n            if (\"string\" !== typeof keystring || state.tmp.empty_date) {\n                keystring = undefined;\n                state.tmp.empty_date = false;\n            }\n            state[state[state.tmp.area].root + \"_sort\"].keys.push(keystring);\n            state.tmp.value = [];\n        };\n        end_key.execs.push(func);\n        if (state.build.date_key) {\n            if (state.build.area === \"citation\" && state.build.extension === \"_sort\") {\n                state[state.build.area].opt.sort_directions.push([-1,1]);\n                func = function (state, Item) {\n                    var year_suffix = state.registry.registry[Item.id].disambig.year_suffix;\n                    if (!year_suffix) {\n                        year_suffix = 0;\n                    }\n                    var key = CSL.Util.padding(\"\" + year_suffix);\n                    state[state.tmp.area].keys.push(key);\n                }\n                end_key.execs.push(func);\n            }\n            state.build.date_key = false;\n        }\n        func = function (state, Item) {\n            state.tmp[\"et-al-min\"] = undefined;\n            state.tmp[\"et-al-use-first\"] = undefined;\n            state.tmp[\"et-al-use-last\"] = undefined;\n            state.tmp.sort_key_flag = false;\n        };\n        end_key.execs.push(func);\n        target.push(end_key);\n    }\n};\nCSL.Node.label = {\n    build: function (state, target) {\n        var debug = false;\n        if (this.strings.term) {\n            var plural = false;\n            if (!this.strings.form) {\n            }\n            var func = function (state, Item, item) {\n                var termtxt = CSL.evaluateLabel(this, state, Item, item);\n                if (item && this.strings.term === \"locator\") {\n                    state.parallel.StartVariable(\"label\");\n                    state.parallel.AppendToVariable(item.label);\n                    item.section_form_override = this.strings.form;\n                }\n                if (termtxt) {\n                    state.tmp.group_context.tip.term_intended = true;\n                }\n                CSL.UPDATE_GROUP_CONTEXT_CONDITION(state, termtxt);\n                if (termtxt.indexOf(\"%s\") === -1) {\n                    state.output.append(termtxt, this);\n                }\n                if (item && this.strings.term === \"locator\") {\n                    state.parallel.CloseVariable();\n                }\n            };\n            this.execs.push(func);\n        } else {\n            var namevars = state.build.names_variables.slice(-1)[0];\n            if (!state.build.name_label) {\n                state.build.name_label = {};\n            }\n            for (var i = 0, ilen = namevars.length; i < ilen; i += 1) {\n                if (!state.build.name_label[namevars[i]]) {\n                    state.build.name_label[namevars[i]] = {};\n                }\n            }\n            if (!state.build.name_flag) {\n                for (var i = 0, ilen = namevars.length; i < ilen; i += 1) {\n                    state.build.name_label[namevars[i]].before = this;\n                }\n            } else {\n                for (var i = 0, ilen = namevars.length; i < ilen; i += 1) {\n                    state.build.name_label[namevars[i]].after = this;\n                }\n            }\n        }\n        target.push(this);\n    }\n};\nCSL.Node.layout = {\n    build: function (state, target) {\n        var func, prefix_token, suffix_token, tok;\n        function setSuffix() {\n            if (state.build.area === \"bibliography\") {\n                suffix_token = new CSL.Token(\"text\", CSL.SINGLETON);\n                func = function(state, Item, item) {\n                    var last_locale = state.tmp.cite_locales[state.tmp.cite_locales.length - 1];\n                    var suffix;\n                    if (state.tmp.cite_affixes[state.tmp.area][state.tmp.last_cite_locale]) {\n                        suffix = state.tmp.cite_affixes[state.tmp.area][state.tmp.last_cite_locale].suffix;\n                    } else {\n                        suffix = state.bibliography.opt.layout_suffix;\n                    }\n                    var topblob = state.output.current.value();\n                    if (state.opt.using_display) {\n                        topblob.blobs[topblob.blobs.length-1].strings.suffix = suffix;\n                    } else {\n                        topblob.strings.suffix = suffix;\n                    }\n                    if (state.bibliography.opt[\"second-field-align\"]) {\n                        state.output.endTag(\"bib_other\");\n                    }\n                };\n                suffix_token.execs.push(func);\n                target.push(suffix_token);\n            }\n        }\n        if (this.tokentype === CSL.START) {\n            if (this.locale_raw) {\n                state.build.current_default_locale = this.locale_raw;\n            } else {\n                state.build.current_default_locale = state.opt[\"default-locale\"];\n            }\n            func = function (state, Item, item) {\n                if (state.opt.development_extensions.apply_citation_wrapper\n                    && state.sys.wrapCitationEntry\n                    && !state.tmp.just_looking\n                    && Item.system_id \n                    && state.tmp.area === \"citation\") { \n                    cite_entry = new CSL.Token(\"group\", CSL.START);\n                    cite_entry.decorations = [[\"@cite\", \"entry\"]];\n                    state.output.startTag(\"cite_entry\", cite_entry);\n                    state.output.current.value().item_id = Item.system_id;\n                    if (item) {\n                        state.output.current.value().locator_txt = item.locator_txt;\n                        state.output.current.value().suffix_txt = item.suffix_txt;\n                    }\n                }\n            }\n            this.execs.push(func);\n        }\n        if (this.tokentype === CSL.START && !state.tmp.cite_affixes[state.build.area]) {\n            func = function (state, Item) {\n                state.tmp.done_vars = [];\n                if (!state.tmp.just_looking && state.registry.registry[Item.id].parallel) {\n                    state.tmp.done_vars.push(\"first-reference-note-number\");\n                }\n                state.tmp.rendered_name = false;\n            };\n            this.execs.push(func);\n            func = function (state, Item) {\n                state.tmp.sort_key_flag = false;\n            };\n            this.execs.push(func);\n            func = function (state, Item) {\n                state.tmp.nameset_counter = 0;\n            };\n            this.execs.push(func);\n            func = function (state, Item) {\n                var tok = new CSL.Token();\n                if (state.opt.development_extensions.rtl_support) {\n                    if ([\"ar\", \"he\", \"fa\", \"ur\", \"yi\", \"ps\", \"syr\"].indexOf(Item.language) > -1) {\n                        tok = new CSL.Token();\n                        tok.strings.prefix = \"\\u202b\";\n                        tok.strings.suffix = \"\\u202c\";\n                    }\n                }\n                state.output.openLevel(tok);\n            }\n            this.execs.push(func);\n            target.push(this);\n            if (state.opt.development_extensions.rtl_support && false) {\n                this.strings.prefix = this.strings.prefix.replace(/\\((.|$)/g,\"(\\u200e$1\");\n                this.strings.suffix = this.strings.suffix.replace(/\\)(.|$)/g,\")\\u200e$1\");\n            }\n            if (state.build.area === \"citation\") {\n                prefix_token = new CSL.Token(\"text\", CSL.SINGLETON);\n                func = function (state, Item, item) {\n                    var sp;\n                    if (item && item.prefix) {\n                        sp = \"\";\n                        var test_prefix = item.prefix.replace(/<[^>]+>/g, \"\").replace(/[\"'\\u201d\\u2019\\u00bb\\u202f\\u00a0 ]+$/g,\"\");\n                        var test_char = test_prefix.slice(-1);\n                        if (test_prefix.match(CSL.ENDSWITH_ROMANESQUE_REGEXP)) {\n                            sp = \" \";\n                        } else if (CSL.TERMINAL_PUNCTUATION.slice(0,-1).indexOf(test_char) > -1) {\n                            sp = \" \";\n                        } else if (test_char.match(/[\\)\\],0-9]/)) {\n                            sp = \" \";\n                        }\n                        var ignorePredecessor = false;\n                        if (CSL.TERMINAL_PUNCTUATION.slice(0,-1).indexOf(test_char) > -1 && item.prefix.trim().indexOf(\" \") > -1) {\n                            state.tmp.term_predecessor = false;\n                            ignorePredecessor = true;\n                        }\n                        prefix = (item.prefix + sp).replace(/\\s+/g, \" \");\n                        if (!state.tmp.just_looking) {\n                            prefix = state.output.checkNestedBrace.update(prefix);\n                        }\n                        state.output.append(prefix, this, false, ignorePredecessor);\n                    }\n                };\n                prefix_token.execs.push(func);\n                target.push(prefix_token);\n            }\n        }\n        var my_tok;\n        if (this.locale_raw) {\n            my_tok = new CSL.Token(\"dummy\", CSL.START);\n            my_tok.locale = this.locale_raw;\n            my_tok.strings.delimiter = this.strings.delimiter;\n            my_tok.strings.suffix = this.strings.suffix;\n            if (!state.tmp.cite_affixes[state.build.area]) {\n                state.tmp.cite_affixes[state.build.area] = {};\n            }\n        }\n        if (this.tokentype === CSL.START) {\n            state.build.layout_flag = true;\n            if (!this.locale_raw) {\n                state[state.tmp.area].opt.topdecor = [this.decorations];\n                state[(state.tmp.area + \"_sort\")].opt.topdecor = [this.decorations];\n                state[state.build.area].opt.layout_prefix = this.strings.prefix;\n                state[state.build.area].opt.layout_suffix = this.strings.suffix;\n                state[state.build.area].opt.layout_delimiter = this.strings.delimiter;\n                state[state.build.area].opt.layout_decorations = this.decorations;\n                if (state.tmp.cite_affixes[state.build.area]) {\n                    tok = new CSL.Token(\"else\", CSL.START);\n                    CSL.Node[\"else\"].build.call(tok, state, target);\n                }\n            } // !this.locale_raw\n            if (this.locale_raw) {\n                if (!state.build.layout_locale_flag) {\n                    var choose_tok = new CSL.Token(\"choose\", CSL.START);\n                    CSL.Node.choose.build.call(choose_tok, state, target);\n                    my_tok.name = \"if\";\n                    CSL.Attributes[\"@locale-internal\"].call(my_tok, state, this.locale_raw);\n                    CSL.Node[\"if\"].build.call(my_tok, state, target);\n                } else {\n                    my_tok.name = \"else-if\";\n                    CSL.Attributes[\"@locale-internal\"].call(my_tok, state, this.locale_raw);\n                    CSL.Node[\"else-if\"].build.call(my_tok, state, target);\n                }\n                state.tmp.cite_affixes[state.build.area][my_tok.locale] = {};\n                state.tmp.cite_affixes[state.build.area][my_tok.locale].delimiter = this.strings.delimiter;\n                state.tmp.cite_affixes[state.build.area][my_tok.locale].suffix = this.strings.suffix;\n            }\n        }\n        if (this.tokentype === CSL.END) {\n            if (this.locale_raw) {\n                setSuffix();\n                if (!state.build.layout_locale_flag) {\n                    my_tok.name = \"if\";\n                    my_tok.tokentype = CSL.END;\n                    CSL.Attributes[\"@locale-internal\"].call(my_tok, state, this.locale_raw);\n                    CSL.Node[\"if\"].build.call(my_tok, state, target);\n                    state.build.layout_locale_flag = true;\n                } else {\n                    my_tok.name = \"else-if\";\n                    my_tok.tokentype = CSL.END;\n                    CSL.Attributes[\"@locale-internal\"].call(my_tok, state, this.locale_raw);\n                    CSL.Node[\"else-if\"].build.call(my_tok, state, target);\n                }\n            }\n            if (!this.locale_raw) {\n                setSuffix();\n                if (state.tmp.cite_affixes[state.build.area]) {\n                    if (state.build.layout_locale_flag) {\n                        tok = new CSL.Token(\"else\", CSL.END);\n                        CSL.Node[\"else\"].build.call(tok, state, target);\n                        tok = new CSL.Token(\"choose\", CSL.END);\n                        CSL.Node.choose.build.call(tok, state, target);\n                    }\n                }\n                state.build_layout_locale_flag = true;\n                if (state.build.area === \"citation\") {\n                    suffix_token = new CSL.Token(\"text\", CSL.SINGLETON);\n                    func = function (state, Item, item) {\n                        var sp;\n                        if (item && item.suffix) {\n                            sp = \"\";\n                            if (item.suffix.match(CSL.STARTSWITH_ROMANESQUE_REGEXP)\n                                || ['[','('].indexOf(item.suffix.slice(0,1)) > -1) {\n                                sp = \" \";\n                            }\n                            var suffix = item.suffix;\n                            if (!state.tmp.just_looking) {\n                                suffix = state.output.checkNestedBrace.update(suffix);\n                            }\n                            state.output.append((sp + suffix), this);\n                        }\n                    };\n                    suffix_token.execs.push(func);\n                    target.push(suffix_token);\n                }\n                func = function (state, Item) {\n                    state.output.closeLevel();\n                };\n                this.execs.push(func);\n                func = function (state, Item) {\n                    if (state.opt.development_extensions.apply_citation_wrapper\n                        && state.sys.wrapCitationEntry\n                        && !state.tmp.just_looking\n                        && Item.system_id \n                        && state.tmp.area === \"citation\") { \n                        state.output.endTag(); // closes citation link wrapper\n                    }\n                }\n                this.execs.push(func);\n                target.push(this);\n                state.build.layout_flag = false;\n                state.build.layout_locale_flag = false;\n            } // !this.layout_raw\n        }\n    }\n};\nCSL.Node.macro = {\n    build: function (state, target) {}\n};\nCSL.NameOutput = function(state, Item, item, variables) {\n    this.debug = false;\n    this.state = state;\n    this.Item = Item;\n    this.item = item;\n    this.nameset_base = 0;\n    this.etal_spec = {};\n    this._first_creator_variable = false;\n    this._please_chop = false;\n};\nCSL.NameOutput.prototype.init = function (names) {\n    if (this.state.tmp.term_predecessor) {\n        this.state.tmp.subsequent_author_substitute_ok = false;\n    }\n    if (this.nameset_offset) {\n        this.nameset_base = this.nameset_base + this.nameset_offset;\n    }\n    this.nameset_offset = 0;\n    this.names = names;\n    this.variables = names.variables;\n    this.state.tmp.value = [];\n    this.state.tmp.rendered_name = [];\n    this.state.tmp.label_blob = false;\n    this.state.tmp.etal_node = false;\n    this.state.tmp.etal_term = false;\n    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n        if (this.Item[this.variables[i]] && this.Item[this.variables[i]].length) {\n            this.state.tmp.value = this.state.tmp.value.concat(this.Item[this.variables[i]]);\n        }\n    }\n    this[\"et-al\"] = undefined;\n    this[\"with\"] = undefined;\n    this.name = undefined;\n    this.institutionpart = {};\n    this.state.tmp.group_context.tip.variable_attempt = true;\n    this.labelVariable = this.variables[0];\n    if (!this.state.tmp.value.length) {\n        return;\n    }\n};\nCSL.NameOutput.prototype.reinit = function (names, labelVariable) {\n    this.labelVariable = labelVariable;\n    if (this.state.tmp.can_substitute.value()) {\n        this.nameset_offset = 0;\n        this.variables = names.variables;\n        var oldval = this.state.tmp.value.slice();\n        this.state.tmp.value = [];\n        for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n            if (this.Item[this.variables[i]] && this.Item[this.variables[i]].length) {\n                this.state.tmp.value = this.state.tmp.value.concat(this.Item[this.variables[i]]);\n            }\n        }\n        if (this.state.tmp.value.length) {\n            this.state.tmp.can_substitute.replace(false, CSL.LITERAL);\n        }\n        this.state.tmp.value = oldval;\n    }\n};\nCSL.NameOutput.prototype.outputNames = function () {\n    var i, ilen;\n    var variables = this.variables;\n    if (this.institution.and) {\n        if (!this.institution.and.single.blobs || !this.institution.and.single.blobs.length) {\n            this.institution.and.single.blobs = this.name.and.single.blobs;\n        }\n        if (!this.institution.and.multiple.blobs || !this.institution.and.multiple.blobs.length) {\n            this.institution.and.multiple.blobs = this.name.and.multiple.blobs;\n        }\n    }\n    this.variable_offset = {};\n    if (this.family) {\n        this.family_decor = CSL.Util.cloneToken(this.family);\n        this.family_decor.strings.prefix = \"\";\n        this.family_decor.strings.suffix = \"\";\n        for (i = 0, ilen = this.family.execs.length; i < ilen; i += 1) {\n            this.family.execs[i].call(this.family_decor, this.state, this.Item);\n        }\n    } else {\n        this.family_decor = false;\n    }\n    if (this.given) {\n        this.given_decor = CSL.Util.cloneToken(this.given);\n        this.given_decor.strings.prefix = \"\";\n        this.given_decor.strings.suffix = \"\";\n        for (i = 0, ilen = this.given.execs.length; i < ilen; i += 1) {\n            this.given.execs[i].call(this.given_decor, this.state, this.Item);\n        }\n    } else {\n        this.given_decor = false;\n    }\n    this.getEtAlConfig();\n    this.divideAndTransliterateNames();\n    this.truncatePersonalNameLists();\n    this.disambigNames();\n    this.constrainNames();\n    if (this.name.strings.form === \"count\") {\n        if (this.state.tmp.extension || this.names_count != 0) {\n            this.state.output.append(this.names_count, \"empty\");\n            this.state.tmp.group_context.tip.variable_success = true;\n        }\n        return;\n    }\n    this.setEtAlParameters();\n    this.setCommonTerm();\n    this.state.tmp.name_node = {};\n    this.state.tmp.name_node.children = [];\n    this.renderAllNames();\n    var blob_list = [];\n    for (i = 0, ilen = variables.length; i < ilen; i += 1) {\n        var v = variables[i];\n        var institution_sets = [];\n        var institutions = false;\n        var varblob = null;\n        if (!this.state.opt.development_extensions.spoof_institutional_affiliations) {\n            varblob = this._join([this.freeters[v]], \"\");\n        } else {\n            for (var j = 0, jlen = this.institutions[v].length; j < jlen; j += 1) {\n                institution_sets.push(this.joinPersonsAndInstitutions([this.persons[v][j], this.institutions[v][j]]));\n            }\n            if (this.institutions[v].length) {\n                var pos = this.nameset_base + this.variable_offset[v];\n                if (this.freeters[v].length) {\n                    pos += 1;\n                }\n                institutions = this.joinInstitutionSets(institution_sets, pos);\n            }\n            var varblob = this.joinFreetersAndInstitutionSets([this.freeters[v], institutions]);\n        }\n        if (varblob) {\n            if (!this.state.tmp.extension) {\n                varblob = this._applyLabels(varblob, v);\n            }\n            blob_list.push(varblob);\n        }\n        if (this.common_term) {\n            break;\n        }\n    }\n    this.state.output.openLevel(\"empty\");\n    this.state.output.current.value().strings.delimiter = this.state.inheritOpt(this.names, \"delimiter\", \"names-delimiter\");\n    for (i = 0, ilen = blob_list.length; i < ilen; i += 1) {\n        this.state.output.append(blob_list[i], \"literal\", true);\n    }\n    this.state.output.closeLevel(\"empty\");\n    var blob = this.state.output.pop();\n    var namesToken = CSL.Util.cloneToken(this.names);\n    this.state.output.append(blob, namesToken);\n    if (this.state.tmp.term_predecessor_name) {\n        this.state.tmp.term_predecessor = true;\n    }\n    this.state.tmp.name_node.top = this.state.output.current.value();\n    if (variables[0] !== \"authority\") {\n        var name_node_string = [];\n        var nameobjs = this.Item[variables[0]];\n        if (nameobjs) {\n            for (var i = 0, ilen = nameobjs.length; i < ilen; i += 1) {\n                substring = CSL.Util.Names.getRawName(nameobjs[i]);\n                if (substring) {\n                    name_node_string.push(substring);\n                }\n            }\n        }\n        name_node_string = name_node_string.join(\", \");\n        if (name_node_string) {\n            this.state.tmp.name_node.string = name_node_string;\n        }\n    }\n    if (this.state.tmp.name_node.string && !this.state.tmp.first_name_string) {\n        this.state.tmp.first_name_string = this.state.tmp.name_node.string;\n    }\n    if (\"classic\" === this.Item.type) {\n        var author_title = [];\n        if (this.state.tmp.first_name_string) {\n            author_title.push(this.state.tmp.first_name_string);\n        }\n        if (this.Item.title) {\n            author_title.push(this.Item.title);\n        }\n        author_title = author_title.join(\", \");\n        if (author_title && this.state.sys.getAbbreviation) {\n            this.state.transform.loadAbbreviation(\"default\", \"classic\", author_title);\n            if (this.state.transform.abbrevs[\"default\"].classic[author_title]) {\n                this.state.tmp.done_vars.push(\"title\");\n                this.state.output.append(this.state.transform.abbrevs[\"default\"].classic[author_title], \"empty\", true);\n                blob = this.state.output.pop();\n\t\t\t\tthis.state.tmp.name_node.top.blobs.pop();\n                this.state.tmp.name_node.top.blobs.push(blob);\n            }\n        }\n    }\n    this._collapseAuthor();\n    this.variables = [];\n};\nCSL.NameOutput.prototype._applyLabels = function (blob, v) {\n    var txt;\n    if (!this.label || !this.label[this.labelVariable]) {\n        return blob;\n    }\n    var plural = 0;\n    var num = this.freeters_count[v] + this.institutions_count[v];\n    if (num > 1) {\n        plural = 1;\n    } else {\n        for (var i = 0, ilen = this.persons[v].length; i < ilen; i += 1) {\n            num += this.persons_count[v][i];\n        }\n        if (num > 1) {\n            plural = 1;\n        }\n    }\n    if (this.label[this.labelVariable].before) {\n        if (\"number\" === typeof this.label[this.labelVariable].before.strings.plural) {\n            plural = this.label[this.labelVariable].before.strings.plural;\n        }\n        txt = this._buildLabel(v, plural, \"before\", this.labelVariable);\n        this.state.output.openLevel(\"empty\");\n        this.state.output.append(txt, this.label[this.labelVariable].before, true);\n        this.state.output.append(blob, \"literal\", true);\n        this.state.output.closeLevel(\"empty\");\n        blob = this.state.output.pop();\n    } else if (this.label[this.labelVariable].after) {\n        if (\"number\" === typeof this.label[this.labelVariable].after.strings.plural) {\n            plural = this.label[this.labelVariable].after.strings.plural;\n        }\n        txt = this._buildLabel(v, plural, \"after\", this.labelVariable);\n        this.state.output.openLevel(\"empty\");\n        this.state.output.append(blob, \"literal\", true);\n        this.state.output.append(txt, this.label[this.labelVariable].after, true);\n        this.state.tmp.label_blob = this.state.output.pop();\n        this.state.output.append(this.state.tmp.label_blob,\"literal\",true);\n        this.state.output.closeLevel(\"empty\");\n        blob = this.state.output.pop();\n    }\n    return blob;\n};\nCSL.NameOutput.prototype._buildLabel = function (term, plural, position, v) {\n    if (this.common_term) {\n        term = this.common_term;\n    }\n    var ret = false;\n    var node = this.label[v][position];\n    if (node) {\n        ret = CSL.castLabel(this.state, node, term, plural, CSL.TOLERANT);\n    }\n    return ret;\n};\nCSL.NameOutput.prototype._collapseAuthor = function () {\n    var myqueue, mystr, oldchars;\n    if (this.nameset_base === 0 && this.Item[this.variables[0]] && !this._first_creator_variable) {\n        this._first_creator_variable = this.variables[0];\n    }\n    if ((this.item && this.item[\"suppress-author\"] && this._first_creator_variable == this.variables[0])\n        || (this.state[this.state.tmp.area].opt.collapse \n            && this.state[this.state.tmp.area].opt.collapse.length)\n        || (this.state[this.state.tmp.area].opt.cite_group_delimiter \n            && this.state[this.state.tmp.area].opt.cite_group_delimiter.length)) {\n        if (this.state.tmp.authorstring_request) {\n            mystr = \"\";\n            myqueue = this.state.tmp.name_node.top.blobs.slice(-1)[0].blobs;\n            oldchars = this.state.tmp.offset_characters;\n            if (myqueue) {\n                mystr = this.state.output.string(this.state, myqueue, false);\n            }\n            this.state.tmp.offset_characters = oldchars;\n            this.state.registry.authorstrings[this.Item.id] = mystr;\n        } else if (!this.state.tmp.just_looking\n                   && !this.state.tmp.suppress_decorations && (this.item[\"suppress-author\"] || (this.state[this.state.tmp.area].opt.collapse && this.state[this.state.tmp.area].opt.collapse.length) || this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter)) {\n            mystr = \"\";\n            myqueue = this.state.tmp.name_node.top.blobs.slice(-1)[0].blobs;\n            oldchars = this.state.tmp.offset_characters;\n            if (myqueue) {\n                mystr = this.state.output.string(this.state, myqueue, false);\n            }\n            if (mystr === this.state.tmp.last_primary_names_string) {\n                if (this.item[\"suppress-author\"] || (this.state[this.state.tmp.area].opt.collapse && this.state[this.state.tmp.area].opt.collapse.length)) {\n                    this.state.tmp.name_node.top.blobs.pop();\n                    this.state.tmp.name_node.children = [];\n                    this.state.tmp.offset_characters = oldchars;\n                }\n                if (this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter) {\n                    this.state.tmp.use_cite_group_delimiter = true;\n                }\n            } else {\n                this.state.tmp.last_primary_names_string = mystr;\n                if (this.variables.indexOf(this._first_creator_variable) > -1 && this.item && this.item[\"suppress-author\"] && this.Item.type !== \"legal_case\") {\n                    this.state.tmp.name_node.top.blobs.pop();\n                    this.state.tmp.name_node.children = [];\n                    this.state.tmp.offset_characters = oldchars;\n                    this.state.tmp.term_predecessor = false;\n                }\n                this.state.tmp.have_collapsed = false;\n                if (this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter) {\n                    this.state.tmp.use_cite_group_delimiter = false;\n                }\n            }\n        }\n    }\n};\nCSL.NameOutput.prototype.isPerson = function (value) {\n    if (value.literal\n        || (!value.given && value.family && value.isInstitution)) {\n        return false;\n    } else {\n        return true;\n    }\n};\nCSL.NameOutput.prototype.truncatePersonalNameLists = function () {\n    var v, i, ilen, j, jlen, chopvar, values;\n    this.freeters_count = {};\n    this.persons_count = {};\n    this.institutions_count = {};\n    for (v in this.freeters) {\n        if (this.freeters.hasOwnProperty(v)) {\n            this.freeters_count[v] = this.freeters[v].length;\n            this.freeters[v] = this._truncateNameList(this.freeters, v);\n        }\n    }\n    for (v in this.persons) {\n        if (this.persons.hasOwnProperty(v)) {\n            this.institutions_count[v] = this.institutions[v].length;\n            this._truncateNameList(this.institutions, v);\n            this.persons[v] = this.persons[v].slice(0, this.institutions[v].length);\n            this.persons_count[v] = [];\n            for (j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n                this.persons_count[v][j] = this.persons[v][j].length;\n                this.persons[v][j] = this._truncateNameList(this.persons, v, j);\n            }\n        }\n    }\n    if (this.etal_min === 1 && this.etal_use_first === 1 \n        && !(this.state.tmp.extension\n             || this.state.tmp.just_looking)) {\n        chopvar = v;\n    } else {\n        chopvar = false;\n    }\n    if (chopvar || this._please_chop) {\n        for (i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n            v = this.variables[i];\n            if (this.freeters[v].length) {\n                if (this._please_chop === v) {\n                    this.freeters[v] = this.freeters[v].slice(1);\n                    this.freeters_count[v] += -1;\n                    this._please_chop = false;\n                } else if (chopvar && !this._please_chop) {\n                    this.freeters[v] = this.freeters[v].slice(0, 1);\n                    this.freeters_count[v] = 1;\n                    this.institutions[v] = [];\n                    this.persons[v] = [];\n                    this._please_chop = chopvar;\n                }\n            }\n            for (var j=0,jlen = this.persons[v].length;j<jlen;j++) {\n                if (this.persons[v][j].length) {\n                    if (this._please_chop === v) {\n                        this.persons[v][j] = this.persons[v][j].slice(1);\n                        this.persons_count[v][j] += -1;\n                        this._please_chop = false;\n                        break;\n                    } else if (chopvar && !this._please_chop) {\n                        this.freeters[v] = this.persons[v][j].slice(0, 1);\n                        this.freeters_count[v] = 1;\n                        this.institutions[v] = [];\n                        this.persons[v] = [];\n                        values = [];\n                        this._please_chop = chopvar;\n                        break;\n                    }\n                }\n            }\n            if (this.institutions[v].length) {\n                if (this._please_chop === v) {\n                    this.institutions[v] = this.institutions[v].slice(1);\n                    this.institutions_count[v] += -1;\n                    this._please_chop = false;\n                } else if (chopvar && !this._please_chop) {\n                    this.institutions[v] = this.institutions[v].slice(0, 1);\n                    this.institutions_count[v] = 1;\n                    values = [];\n                    this._please_chop = chopvar;\n                }\n            }\n        }\n    }\n    for (i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n        if (this.institutions[v].length) {\n            this.nameset_offset += 1;\n        }\n        for (var j=0,jlen=this.persons[v].length;j<jlen;j++) {\n            if (this.persons[v][j].length) {\n                this.nameset_offset += 1;\n            }\n        }\n    }\n};\nCSL.NameOutput.prototype._truncateNameList = function (container, variable, index) {\n    var lst;\n    if (\"undefined\" === typeof index) {\n        lst = container[variable];\n    } else {\n        lst = container[variable][index];\n    }\n    if (this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names \n        && lst.length > 50 \n        && lst.length > (this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names + 2)) {\n        var limit = this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names;\n        lst = lst.slice(0, limit+1).concat(lst.slice(-1));\n    }\n    return lst;\n};\nCSL.NameOutput.prototype.divideAndTransliterateNames = function () {\n    var i, ilen, j, jlen;\n    var Item = this.Item;\n    var variables = this.variables;\n    this.varnames = variables.slice();\n    this.freeters = {};\n    this.persons = {};\n    this.institutions = {};\n    for (i = 0, ilen = variables.length; i < ilen; i += 1) {\n        var v = variables[i];\n        this.variable_offset[v] = this.nameset_offset;\n        var values = this._normalizeVariableValue(Item, v);\n        if (this.name.strings[\"suppress-min\"] && values.length >= this.name.strings[\"suppress-min\"]) {\n            values = [];\n        }\n        if (this.name.strings[\"suppress-max\"] && values.length <= this.name.strings[\"suppress-max\"]) {\n            values = [];\n        }\n        this._getFreeters(v, values);\n        this._getPersonsAndInstitutions(v, values);\n        if (this.state.opt.development_extensions.spoof_institutional_affiliations) {\n            if (this.name.strings[\"suppress-min\"] === 0) {\n                this.freeters[v] = [];\n                for (j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n                    this.persons[v][j] = [];\n                }\n            } else if (this.institution.strings[\"suppress-min\"] === 0) {\n                this.institutions[v] = [];\n                this.freeters[v] = this.freeters[v].concat(this.persons[v]);\n                for (j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n                    for (var k = 0, klen = this.persons[v][j].length; k < klen; k += 1) {\n                        this.freeters[v].push(this.persons[v][j][k]);\n                    }\n                }\n                this.persons[v] = [];\n            }\n        }\n    }\n};\nCSL.NameOutput.prototype._normalizeVariableValue = function (Item, variable) {\n    var names, name, i, ilen;\n    if (\"string\" === typeof Item[variable] || \"number\" === typeof Item[variable]) {\n        CSL.debug(\"name variable \\\"\" + variable + \"\\\" is string or number, not array. Attempting to fix.\");\n        names = [{literal: Item[variable] + \"\"}];\n    } else if (!Item[variable]) {\n        names = [];\n    } else if (\"number\" !== typeof Item[variable].length) {\n        CSL.debug(\"name variable \\\"\" + variable + \"\\\" is object, not array. Attempting to fix.\");\n        Item[variable] = [Item[variable]];\n        names = Item[variable].slice();\n    } else {\n        names = Item[variable].slice();\n    }\n    return names;\n};\nCSL.NameOutput.prototype._getFreeters = function (v, values) {\n    this.freeters[v] = [];\n    if (this.state.opt.development_extensions.spoof_institutional_affiliations) {\n        for (var i=values.length-1;i>-1;i--) {\n            if (this.isPerson(values[i])) {\n                var value = this._checkNickname(values.pop());\n                if (value) {\n                    this.freeters[v].push(value);\n                }\n            } else {\n                break;\n            }\n        }\n    } else {\n        for (var i=values.length-1;i>-1;i--) {\n            var value = values.pop();\n            if (this.isPerson(value)) {\n                var value = this._checkNickname(value);\n            }\n            this.freeters[v].push(value);\n        }\n    }\n    this.freeters[v].reverse();\n    if (this.freeters[v].length) {\n        this.nameset_offset += 1;\n    }\n};\nCSL.NameOutput.prototype._getPersonsAndInstitutions = function (v, values) {\n    this.persons[v] = [];\n    this.institutions[v] = [];\n    if (!this.state.opt.development_extensions.spoof_institutional_affiliations) return;\n    var persons = [];\n    var has_affiliates = false;\n    var first = true;\n    for (var i = values.length - 1; i > -1; i += -1) {\n        if (this.isPerson(values[i])) {\n            var value = this._checkNickname(values[i]);\n            if (value) {\n                persons.push(value);\n            }\n        } else {\n            has_affiliates = true;\n            this.institutions[v].push(values[i]);\n            if (!first) {\n                persons.reverse();\n                this.persons[v].push(persons);\n                persons = [];\n            }\n            first = false;\n        }\n    }\n    if (has_affiliates) {\n        persons.reverse();\n        this.persons[v].push(persons);\n        this.persons[v].reverse();\n        this.institutions[v].reverse();\n    }\n};\nCSL.NameOutput.prototype._clearValues = function (values) {\n    for (var i = values.length - 1; i > -1; i += -1) {\n        values.pop();\n    }\n};\nCSL.NameOutput.prototype._checkNickname = function (name) {\n    if ([\"interview\", \"personal_communication\"].indexOf(this.Item.type) > -1) {\n        var author = \"\";\n        author = CSL.Util.Names.getRawName(name);\n        if (author && this.state.sys.getAbbreviation && !(this.item && this.item[\"suppress-author\"])) {\n            this.state.transform.loadAbbreviation(\"default\", \"nickname\", author);\n            var myLocalName = this.state.transform.abbrevs[\"default\"].nickname[author];\n            if (myLocalName) {\n                if (myLocalName === \"!here>>>\") {\n                    name = false;\n                } else {\n                    name = {family:myLocalName,given:''};\n                }\n            }\n        }\n    }\n    return name;\n};\nCSL.NameOutput.prototype.joinPersons = function (blobs, pos, j, tokenname) {\n    var ret;\n    if (!tokenname) {\n        tokenname = \"name\";\n    }\n    if (\"undefined\" === typeof j) {\n        if (this.etal_spec[pos].freeters === 1) {\n           ret = this._joinEtAl(blobs, tokenname);\n        } else if (this.etal_spec[pos].freeters === 2) {\n            ret = this._joinEllipsis(blobs, tokenname);\n        } else if (!this.state.tmp.sort_key_flag) {\n            ret = this._joinAnd(blobs, tokenname);\n        } else {\n            ret = this._join(blobs, \" \");\n        }\n    } else {\n        if (this.etal_spec[pos].persons[j] === 1) {\n            ret = this._joinEtAl(blobs, tokenname);\n        } else if (this.etal_spec[pos].persons[j] === 2) {\n            ret = this._joinEllipsis(blobs, tokenname);\n        } else if (!this.state.tmp.sort_key_flag) {\n            ret = this._joinAnd(blobs, tokenname);\n        } else {\n            ret = this._join(blobs, \" \");\n        }\n    }\n    return ret;\n};\nCSL.NameOutput.prototype.joinInstitutionSets = function (blobs, pos) {\n    var ret;\n    if (this.etal_spec[pos].institutions === 1) {\n        ret = this._joinEtAl(blobs, \"institution\");\n    } else if (this.etal_spec[pos].institutions === 2) {\n        ret = this._joinEllipsis(blobs, \"institution\");\n    } else {\n        ret = this._joinAnd(blobs, \"institution\");\n    }\n    return ret;\n};\nCSL.NameOutput.prototype.joinPersonsAndInstitutions = function (blobs) {\n    return this._join(blobs, this.state.tmp.name_delimiter);\n};\nCSL.NameOutput.prototype.joinFreetersAndInstitutionSets = function (blobs) {\n    var ret = this._join(blobs, \"[never here]\", this[\"with\"].single, this[\"with\"].multiple);\n    return ret;\n};\nCSL.NameOutput.prototype._joinEtAl = function (blobs, tokenname) {\n    var blob = this._join(blobs, this.state.tmp.name_delimiter);\n    this.state.output.openLevel(this._getToken(tokenname));\n    this.state.output.current.value().strings.delimiter = \"\";\n    this.state.output.append(blob, \"literal\", true);\n    if (blobs.length > 1) {\n        this.state.output.append(this[\"et-al\"].multiple, \"literal\", true);\n    } else if (blobs.length === 1) {\n        this.state.output.append(this[\"et-al\"].single, \"literal\", true);\n    }\n    this.state.output.closeLevel();\n    return this.state.output.pop();\n};\nCSL.NameOutput.prototype._joinEllipsis = function (blobs, tokenname) {\n    return this._join(blobs, this.state.tmp.name_delimiter, this.name.ellipsis.single, this.name.ellipsis.multiple, tokenname);\n};\nCSL.NameOutput.prototype._joinAnd = function (blobs, tokenname) {\n    return this._join(blobs, this.state.inheritOpt(this[tokenname], \"delimiter\", (tokenname + \"-delimiter\"), \", \"), this[tokenname].and.single, this[tokenname].and.multiple, tokenname);\n};\nCSL.NameOutput.prototype._join = function (blobs, delimiter, single, multiple, tokenname) {\n    var i, ilen;\n    if (!blobs) {\n        return false;\n    }\n    for (i = blobs.length - 1; i > -1; i += -1) {\n        if (!blobs[i] || blobs[i].length === 0 || !blobs[i].blobs.length) {\n            blobs = blobs.slice(0, i).concat(blobs.slice(i + 1));\n        }\n    }\n    if (!blobs.length) {\n        return false;\n    } else if (single && blobs.length === 2) {\n        if (single) {\n            single = new CSL.Blob(single.blobs,single);\n        }\n        blobs = [blobs[0], single, blobs[1]];\n    } else {\n        var delimiter_offset;\n        if (multiple) {\n            delimiter_offset = 2;\n        } else {\n            delimiter_offset = 1;\n        }\n        for (i = 0, ilen = blobs.length - delimiter_offset; i < ilen; i += 1) {\n            blobs[i].strings.suffix += delimiter;\n        }\n        if (blobs.length > 1) {\n            var blob = blobs.pop();\n            if (multiple) {\n                multiple = new CSL.Blob(multiple.blobs,multiple);\n                blobs.push(multiple);\n            } else {\n                if (single) {\n                    single = new CSL.Blob(single.blobs,single);\n                }\n                blobs.push(single);\n            }\n            blobs.push(blob);\n        }\n    }\n    this.state.output.openLevel();\n    if (single && multiple) {\n        this.state.output.current.value().strings.delimiter = \"\";\n    }\n    for (i = 0, ilen = blobs.length; i < ilen; i += 1) {\n        this.state.output.append(blobs[i], false, true);\n    }\n    this.state.output.closeLevel();\n    return this.state.output.pop();\n};\nCSL.NameOutput.prototype._getToken = function (tokenname) {\n    var token = this[tokenname];\n    if (tokenname === \"institution\") {\n        var newtoken = new CSL.Token();\n        return newtoken;\n    }\n    return token;\n};\nCSL.NameOutput.prototype.setCommonTerm = function () {\n    var variables = this.variables;\n    var varnames = variables.slice();\n    varnames.sort();\n    this.common_term = varnames.join(\"\");\n    if (!this.common_term) {\n        return false;\n    }\n    var has_term = false;\n    if (this.label && this.label[this.variables[0]]) {\n        if (this.label[this.variables[0]].before) {\n            has_term = this.state.getTerm(this.common_term, this.label[this.variables[0]].before.strings.form, 0);\n        } else if (this.label[this.variables[0]].after) {\n            has_term = this.state.getTerm(this.common_term, this.label[this.variables[0]].after.strings.form, 0);\n        }\n    }\n    if (!this.state.locale[this.state.opt.lang].terms[this.common_term]\n        || !has_term\n        || this.variables.length < 2) {\n        this.common_term = false;\n        return;\n    }\n    var freeters_offset = 0;\n    for (var i = 0, ilen = this.variables.length - 1; i < ilen; i += 1) {\n        var v = this.variables[i];\n        var vv = this.variables[i + 1];\n        if (this.freeters[v].length || this.freeters[vv].length) {\n            if (this.etal_spec[v].freeters !== this.etal_spec[vv].freeters\n                || !this._compareNamesets(this.freeters[v], this.freeters[vv])) {\n                this.common_term = false;\n                return;\n            }\n            freeters_offset += 1;\n        }\n        if (this.persons[v].length !== this.persons[vv].length) {\n            this.common_term = false;\n            return;\n        }\n        for (var j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n            if (this.etal_spec[v].persons[j] !== this.etal_spec[vv].persons[j]\n                || !this._compareNamesets(this.persons[v][j], this.persons[vv][j])) {\n                this.common_term = false;\n                return;\n            }\n        }\n    }\n};\nCSL.NameOutput.prototype._compareNamesets = function (base_nameset, nameset) {\n    if (base_nameset.length !== nameset.length) {\n        return false;\n    }\n    for (var i = 0, ilen = nameset.length; i < ilen; i += 1) {\n        var name = nameset[i];\n        for (var j = 0, jlen = CSL.NAME_PARTS.length; j < jlen; j += 1) {\n            var part = CSL.NAME_PARTS[j];\n            if (!base_nameset[i] || base_nameset[i][part] != nameset[i][part]) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nCSL.NameOutput.prototype.constrainNames = function () {\n    this.names_count = 0;\n    var pos;\n    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n        var v = this.variables[i];\n        pos = this.nameset_base + i;\n        if (this.freeters[v].length) {\n            this.state.tmp.names_max.push(this.freeters[v].length, \"literal\");\n            this._imposeNameConstraints(this.freeters, this.freeters_count, v, pos);\n            this.names_count += this.freeters[v].length;\n        }\n        if (this.institutions[v].length) {\n            this.state.tmp.names_max.push(this.institutions[v].length, \"literal\");\n            this._imposeNameConstraints(this.institutions, this.institutions_count, v, pos);\n            this.persons[v] = this.persons[v].slice(0, this.institutions[v].length);\n            this.names_count += this.institutions[v].length;\n        }\n        for (var j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n            if (this.persons[v][j].length) {\n                this.state.tmp.names_max.push(this.persons[v][j].length, \"literal\");\n                this._imposeNameConstraints(this.persons[v], this.persons_count[v], j, pos);\n                this.names_count += this.persons[v][j].length;\n            }\n        }\n    }\n};\nCSL.NameOutput.prototype._imposeNameConstraints = function (lst, count, key, pos) {\n    var display_names = lst[key];\n    var discretionary_names_length = this.state.tmp[\"et-al-min\"];\n    if (this.state.tmp.suppress_decorations) {\n        if (this.state.tmp.disambig_request && this.state.tmp.disambig_request.names[pos]) {\n            discretionary_names_length = this.state.tmp.disambig_request.names[pos];\n        } else if (count[key] >= this.etal_min) {\n            discretionary_names_length = this.etal_use_first;\n        }\n    } else {\n        if (this.state.tmp.disambig_request \n            && this.state.tmp.disambig_request.names[pos] > this.etal_use_first) {\n            if (count[key] < this.etal_min) {\n                discretionary_names_length = count[key];\n            } else {\n                discretionary_names_length = this.state.tmp.disambig_request.names[pos];\n            }\n        } else if (count[key] >= this.etal_min) {\n            discretionary_names_length = this.etal_use_first;\n        }\n        if (this.etal_use_last && discretionary_names_length > (this.etal_min - 2)) {\n            discretionary_names_length = this.etal_min - 2;\n        }\n    }\n    var sane = this.etal_min >= this.etal_use_first;\n    var overlength = count[key] > discretionary_names_length;\n    if (discretionary_names_length > count[key]) {\n        discretionary_names_length = display_names.length;\n    }\n    if (sane && overlength) {\n        if (this.etal_use_last) {\n            lst[key] = display_names.slice(0, discretionary_names_length).concat(display_names.slice(-1));\n        } else {\n            lst[key] = display_names.slice(0, discretionary_names_length);\n        }\n    }\n    this.state.tmp.disambig_settings.names[pos] = lst[key].length;\n    this.state.disambiguate.padBase(this.state.tmp.disambig_settings);\n};\nCSL.NameOutput.prototype.disambigNames = function () {\n    var pos;\n    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n        var v = this.variables[i];\n        pos = this.nameset_base + i;\n        if (this.freeters[v].length) {\n            this._runDisambigNames(this.freeters[v], pos);\n        }\n        if (this.institutions[v].length) {\n            if (\"undefined\" === typeof this.state.tmp.disambig_settings.givens[pos]) {\n                this.state.tmp.disambig_settings.givens[pos] = [];\n            }\n            for (var j=0,jlen=this.institutions[v].length;j<jlen;j+=1) {\n                if (\"undefined\" === typeof this.state.tmp.disambig_settings.givens[pos][j]) {\n                    this.state.tmp.disambig_settings.givens[pos].push(2);\n                }\n            }\n        }\n        for (var j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n            if (this.persons[v][j].length) {\n                this._runDisambigNames(this.persons[v][j], pos);\n            }\n        }\n    }\n};\nCSL.NameOutput.prototype._runDisambigNames = function (lst, pos) {\n    var chk, myform, myinitials, param, i, ilen, paramx;\n    for (i = 0, ilen = lst.length; i < ilen; i += 1) {\n        if (!lst[i].given && !lst[i].family) {\n            continue;\n        }\n        myinitials = this.state.inheritOpt(this.name, \"initialize-with\");\n        this.state.registry.namereg.addname(\"\" + this.Item.id, lst[i], i);\n        chk = this.state.tmp.disambig_settings.givens[pos];\n        if (\"undefined\" === typeof chk) {\n            for (var j = 0, jlen = pos + 1; j < jlen; j += 1) {\n                if (!this.state.tmp.disambig_settings.givens[j]) {\n                    this.state.tmp.disambig_settings.givens[j] = [];\n                }\n            }\n        }\n        chk = this.state.tmp.disambig_settings.givens[pos][i];\n        if (\"undefined\" === typeof chk) {\n            myform = this.state.inheritOpt(this.name, \"form\", \"name-form\");\n            param = this.state.registry.namereg.evalname(\"\" + this.Item.id, lst[i], i, 0, myform, myinitials);\n            this.state.tmp.disambig_settings.givens[pos].push(param);\n        }\n        myform = this.state.inheritOpt(this.name, \"form\", \"name-form\");\n        paramx = this.state.registry.namereg.evalname(\"\" + this.Item.id, lst[i], i, 0, myform, myinitials);\n        if (this.state.tmp.disambig_request) {\n            var val = this.state.tmp.disambig_settings.givens[pos][i];\n            if (val === 1 && \n                this.state.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\" && \n                (\"undefined\" === typeof this.state.inheritOpt(this.name, \"initialize-with\")\n                 || \"undefined\" === typeof lst[i].given)) {\n                val = 2;\n            }\n            param = val;\n            if (this.state.opt[\"disambiguate-add-givenname\"] && lst[i].given) {\n                param = this.state.registry.namereg.evalname(\"\" + this.Item.id, lst[i], i, param, this.state.inheritOpt(this.name, \"form\", \"name-form\"), this.state.inheritOpt(this.name, \"initialize-with\"));\n            }\n        } else {\n            param = paramx;\n        }\n        if (!this.state.tmp.just_looking && this.item && this.item.position === CSL.POSITION_FIRST) {\n            if (paramx > param) {\n                param = paramx;\n            }\n        }\n        if (!this.state.tmp.sort_key_flag) {\n            this.state.tmp.disambig_settings.givens[pos][i] = param;\n            if (\"string\" === typeof myinitials\n                && (\"undefined\" === typeof this.name.strings[\"initialize\"]\n                    || true === this.name.strings[\"initialize\"])) {\n                this.state.tmp.disambig_settings.use_initials = true;\n            }\n        }\n    }\n};\nCSL.NameOutput.prototype.getEtAlConfig = function () {\n    var item = this.item;\n    this[\"et-al\"] = {};\n    this.state.output.append(this.etal_term, this.etal_style, true);\n    this[\"et-al\"].single = this.state.output.pop();\n    this[\"et-al\"].single.strings.suffix = this.etal_suffix;\n    this[\"et-al\"].single.strings.prefix = this.etal_prefix_single;\n    this.state.output.append(this.etal_term, this.etal_style, true);\n    this[\"et-al\"].multiple = this.state.output.pop();\n    this[\"et-al\"].multiple.strings.suffix = this.etal_suffix;\n    this[\"et-al\"].multiple.strings.prefix = this.etal_prefix_multiple;\n    if (\"undefined\" === typeof item) {\n        item = {};\n    }\n    if (item.position) {\n        if (this.state.inheritOpt(this.name, \"et-al-subsequent-min\")) {\n            this.etal_min = this.state.inheritOpt(this.name, \"et-al-subsequent-min\");\n        } else {\n            this.etal_min = this.state.inheritOpt(this.name, \"et-al-min\");\n        }\n        if (this.state.inheritOpt(this.name, \"et-al-subsequent-use-first\")) {\n            this.etal_use_first = this.state.inheritOpt(this.name, \"et-al-subsequent-use-first\");\n        } else {\n            this.etal_use_first = this.state.inheritOpt(this.name, \"et-al-use-first\");\n        }\n    } else {\n        if (this.state.tmp[\"et-al-min\"]) {\n            this.etal_min = this.state.tmp[\"et-al-min\"];\n        } else {\n            this.etal_min = this.state.inheritOpt(this.name, \"et-al-min\");\n        }\n        if (this.state.tmp[\"et-al-use-first\"]) {\n            this.etal_use_first = this.state.tmp[\"et-al-use-first\"];\n        } else {\n            this.etal_use_first = this.state.inheritOpt(this.name, \"et-al-use-first\");\n        }\n        if (\"boolean\" === typeof this.state.tmp[\"et-al-use-last\"]) {\n            this.etal_use_last = this.state.tmp[\"et-al-use-last\"];\n        } else {\n            this.etal_use_last = this.state.inheritOpt(this.name, \"et-al-use-last\");\n        }\n    }\n    if (!this.state.tmp[\"et-al-min\"]) {\n        this.state.tmp[\"et-al-min\"] = this.etal_min;\n    }\n};\nCSL.NameOutput.prototype.setEtAlParameters = function () {\n    var i, ilen, j, jlen;\n    for (i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n        var v = this.variables[i];\n        if (\"undefined\" === typeof this.etal_spec[v]) {\n            this.etal_spec[v] = {freeters:0,institutions:0,persons:[]};\n        }\n        this.etal_spec[this.nameset_base + i] = this.etal_spec[v];\n        if (this.freeters[v].length) {\n            this._setEtAlParameter(\"freeters\", v);\n        }\n        for (j = 0, jlen = this.persons[v].length; j < jlen; j += 1) {\n            if (\"undefined\" === typeof this.etal_spec[v][j]) {\n                this.etal_spec[v].persons[j] = 0;\n            }\n            this._setEtAlParameter(\"persons\", v, j);\n        }\n        if (this.institutions[v].length) {\n            this._setEtAlParameter(\"institutions\", v);\n        }\n    }\n};\nCSL.NameOutput.prototype._setEtAlParameter = function (type, v, j) {\n    var lst, count;\n    if (type === \"persons\") {\n        lst = this.persons[v][j];\n        count = this.persons_count[v][j];\n    } else {\n        lst = this[type][v];\n        count = this[type + \"_count\"][v];\n    }\n    if (lst.length < count && !this.state.tmp.sort_key_flag) {\n        if (this.etal_use_last) {\n            if (type === \"persons\") {\n                this.etal_spec[v].persons[j] = 2\n            } else {\n                this.etal_spec[v][type] = 2;\n            }\n        } else {\n            if (type === \"persons\") {\n                this.etal_spec[v].persons[j] = 1;\n            } else {\n                this.etal_spec[v][type] = 1;\n            }\n        }\n    } else {\n        if (type === \"persons\") {\n            this.etal_spec[v].persons[j] = 0;\n        } else {\n            this.etal_spec[v][type] = 0;\n        }\n    }\n};\nCSL.NameOutput.prototype.renderAllNames = function () {\n    var pos;\n    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n        var v = this.variables[i];\n        if (this.freeters[v].length || this.institutions[v].length) {\n            if (!this.state.tmp.group_context.tip.condition) {\n                this.state.tmp.just_did_number = false;\n            }\n        }\n        pos = this.nameset_base + i;\n        if (this.freeters[v].length) {\n            this.freeters[v] = this._renderNames(v, this.freeters[v], pos);\n        }\n        for (var j = 0, jlen = this.institutions[v].length; j < jlen; j += 1) {\n            this.persons[v][j] = this._renderNames(v, this.persons[v][j], pos, j);\n        }\n    }\n    this.renderInstitutionNames();\n};\nCSL.NameOutput.prototype.renderInstitutionNames = function () {\n    for (var i = 0, ilen = this.variables.length; i < ilen; i += 1) {\n        var v = this.variables[i];\n        for (var j = 0, jlen = this.institutions[v].length; j < jlen; j += 1) {\n            var institution, institution_short, institution_long, short_style, long_style;\n            var name = this.institutions[v][j];\n            var j, ret, optLangTag, jlen, key, localesets;\n            if (this.state.tmp.extension) {\n                localesets = [\"sort\"];\n            } else if (name.isInstitution || name.literal) {\n                localesets = this.state.opt['cite-lang-prefs'].institutions;\n            } else {\n                localesets = this.state.opt['cite-lang-prefs'].persons;\n            }\n            slot = {primary:'locale-orig',secondary:false,tertiary:false};\n\t        if (localesets) {\n\t\t        var slotnames = [\"primary\", \"secondary\", \"tertiary\"];\n\t\t        for (var k = 0, klen = slotnames.length; k < klen; k += 1) {\n\t\t\t        if (localesets.length - 1 <  k) {\n\t\t\t\t        break;\n\t\t\t        }\n                    if (localesets[k]) {\n\t\t\t            slot[slotnames[k]] = 'locale-' + localesets[k];\n                    }\n\t\t        }\n\t        } else {\n\t\t        slot.primary = 'locale-translat';\n\t        }\n\t        if (this.state.tmp.area !== \"bibliography\"\n\t\t        && !(this.state.tmp.area === \"citation\"\n\t\t\t         && this.state.opt.xclass === \"note\"\n\t\t\t         && this.item && !this.item.position)) {\n\t\t        slot.secondary = false;\n\t\t        slot.tertiary = false;\n\t        }\n            var res;\n            this.setRenderedName(name);\n            var institution = this._renderInstitutionName(v, name, slot, j);\n            this.institutions[v][j] = institution;\n        }\n    }\n}\nCSL.NameOutput.prototype._renderInstitutionName = function (v, name, slot, j) {\n    res = this.getName(name, slot.primary, true);\n    var primary = res.name;\n    var usedOrig = res.usedOrig;\n    if (primary) {\n        primary = this.fixupInstitution(primary, v, j);\n    }\n\tsecondary = false;\n\tif (slot.secondary) {\n        res = this.getName(name, slot.secondary, false, usedOrig);\n        secondary = res.name;\n        usedOrig = res.usedOrig;\n        if (secondary) {\n\t\t\tsecondary = this.fixupInstitution(secondary, v, j);\n        }\n\t}\n\ttertiary = false;\n\tif (slot.tertiary) {\n        res = this.getName(name, slot.tertiary, false, usedOrig);\n        tertiary = res.name;\n        if (tertiary) {\n\t\t\ttertiary = this.fixupInstitution(tertiary, v, j);\n        }\n\t}\n    var n = {\n        l: {\n            pri: false,\n            sec: false,\n            ter: false\n        },\n        s: {\n            pri: false,\n            sec: false,\n            ter: false\n        }\n    };\n    if (primary) {\n        n.l.pri = primary[\"long\"];\n        n.s.pri = primary[\"short\"].length ? primary[\"short\"] : primary[\"long\"];\n    }\n    if (secondary) {\n        n.l.sec = secondary[\"long\"];\n        n.s.sec = secondary[\"short\"].length ? secondary[\"short\"] : secondary[\"long\"];\n    }\n    if (tertiary) {\n        n.l.ter = tertiary[\"long\"];\n        n.s.ter = tertiary[\"short\"].length ? tertiary[\"short\"] : tertiary[\"long\"];\n    }\n    switch (this.institution.strings[\"institution-parts\"]) {\n    case \"short\":\n        if (primary[\"short\"].length) {\n            short_style = this._getShortStyle();\n            institution = [this._composeOneInstitutionPart([n.s.pri, n.s.sec, n.s.ter], slot, short_style, v)];\n        } else {\n            long_style = this._getLongStyle(primary, v, j);\n            institution = [this._composeOneInstitutionPart([n.l.pri, n.l.sec, n.l.ter], slot, long_style, v)];\n        }\n        break;\n    case \"short-long\":\n        long_style = this._getLongStyle(primary, v, j);\n        short_style = this._getShortStyle();\n        institution_short = this._renderOneInstitutionPart(primary[\"short\"], short_style);\n        institution_long = this._composeOneInstitutionPart([n.l.pri, n.l.sec, n.l.ter], slot, long_style, v);\n        institution = [institution_short, institution_long];\n        break;\n    case \"long-short\":\n        long_style = this._getLongStyle(primary, v, j);\n        short_style = this._getShortStyle();\n        institution_short = this._renderOneInstitutionPart(primary[\"short\"], short_style);\n        institution_long = this._composeOneInstitutionPart([n.l.pri, n.l.sec, n.l.ter], slot, long_style, v);\n        institution = [institution_long, institution_short];\n        break;\n    default:\n        long_style = this._getLongStyle(primary, v, j);\n        institution = [this._composeOneInstitutionPart([n.l.pri, n.l.sec, n.l.ter], slot, long_style, v)];\n        break;\n    }\n    var blob = this._join(institution, \" \");\n    this.state.tmp.name_node.children.push(blob);\n    return blob;\n};\nCSL.NameOutput.prototype._composeOneInstitutionPart = function (names, slot, style, v) {\n    var primary = false, secondary = false, tertiary = false, primary_tok, secondary_tok, tertiary_tok;\n    if (names[0]) {\n        primary_tok = CSL.Util.cloneToken(style);\n        if (this.state.opt.citeAffixes[slot.primary]){\n            if (\"<i>\" === this.state.opt.citeAffixes.institutions[slot.primary].prefix) {\n                var hasItalic = false;\n                for (var i = 0, ilen = primary_tok.decorations.length; i < ilen; i += 1) {\n                    if (style.decorations[i][0] === \"@font-style\"\n                        && primary_tok.decorations[i][1] === \"italic\") {\n                        hasItalic = true;\n                    }\n                }\n                if (!hasItalic) {\n                    primary_tok.decorations.push([\"@font-style\", \"italic\"])\n                }\n            }\n        }\n        primary = this._renderOneInstitutionPart(names[0], primary_tok);\n     }\n    if (names[1]) {\n        secondary = this._renderOneInstitutionPart(names[1], style);\n    }\n    if (names[2]) {\n        tertiary = this._renderOneInstitutionPart(names[2], style);\n    }\n    var institutionblob;\n    if (secondary || tertiary) {\n        this.state.output.openLevel(\"empty\");\n        this.state.output.append(primary);\n        secondary_tok = CSL.Util.cloneToken(style);\n        if (slot.secondary) {\n            secondary_tok.strings.prefix = this.state.opt.citeAffixes.institutions[slot.secondary].prefix;\n            secondary_tok.strings.suffix = this.state.opt.citeAffixes.institutions[slot.secondary].suffix;\n            if (!secondary_tok.strings.prefix) {\n                secondary_tok.strings.prefix = \" \";\n            }\n        }\n        var secondary_outer = new CSL.Token();\n        secondary_outer.decorations.push([\"@font-style\", \"normal\"]);\n        secondary_outer.decorations.push([\"@font-weight\", \"normal\"]);\n        this.state.output.openLevel(secondary_outer);\n        this.state.output.append(secondary, secondary_tok);\n        this.state.output.closeLevel();\n        tertiary_tok = CSL.Util.cloneToken(style);\n        if (slot.tertiary) {\n            tertiary_tok.strings.prefix = this.state.opt.citeAffixes.institutions[slot.tertiary].prefix;\n            tertiary_tok.strings.suffix = this.state.opt.citeAffixes.institutions[slot.tertiary].suffix;\n            if (!tertiary_tok.strings.prefix) {\n                tertiary_tok.strings.prefix = \" \";\n            }\n        }\n        var tertiary_outer = new CSL.Token();\n        tertiary_outer.decorations.push([\"@font-style\", \"normal\"]);\n        tertiary_outer.decorations.push([\"@font-weight\", \"normal\"]);\n        this.state.output.openLevel(tertiary_outer);\n        this.state.output.append(tertiary, tertiary_tok);\n        this.state.output.closeLevel();\n        this.state.output.closeLevel();\n        institutionblob = this.state.output.pop();\n    } else {\n        institutionblob = primary;\n    }\n    return institutionblob;\n}\nCSL.NameOutput.prototype._renderOneInstitutionPart = function (blobs, style) {\n    for (var i = 0, ilen = blobs.length; i < ilen; i += 1) {\n        if (blobs[i]) {\n            var str = blobs[i];\n            if (this.state.tmp.strip_periods) {\n                str = str.replace(/\\./g, \"\");\n            } else {\n                for (var j = 0, jlen = style.decorations.length; j < jlen; j += 1) {\n                    if (\"@strip-periods\" === style.decorations[j][0] && \"true\" === style.decorations[j][1]) {\n                        str = str.replace(/\\./g, \"\");\n                        break;\n                    }\n                }\n            }\n            this.state.tmp.group_context.tip.variable_success = true;\n            this.state.tmp.can_substitute.replace(false, CSL.LITERAL);\n            if (str === \"!here>>>\") {\n                blobs[i] = false;\n            } else {\n                this.state.output.append(str, style, true);\n                blobs[i] = this.state.output.pop();\n            }\n        }\n    }\n    if (\"undefined\" === typeof this.institution.strings[\"part-separator\"]) {\n        this.institution.strings[\"part-separator\"] = this.state.tmp.name_delimiter;\n    }\n    return this._join(blobs, this.institution.strings[\"part-separator\"]);\n};\nCSL.NameOutput.prototype._renderNames = function (v, values, pos, j) {\n    var ret = false;\n    if (values.length) {\n        var names = [];\n        for (var i = 0, ilen = values.length; i < ilen; i += 1) {\n            var name = values[i];\n            var ret, optLangTag, jlen, key, localesets;\n            if (this.state.tmp.extension) {\n                localesets = [\"sort\"];\n            } else if (name.isInstitution || name.literal) {\n                localesets = this.state.opt['cite-lang-prefs'].institutions;\n            } else {\n                localesets = this.state.opt['cite-lang-prefs'].persons;\n            }\n            slot = {primary:'locale-orig',secondary:false,tertiary:false};\n\t        if (localesets) {\n\t\t        var slotnames = [\"primary\", \"secondary\", \"tertiary\"];\n\t\t        for (var k = 0, klen = slotnames.length; k < klen; k += 1) {\n\t\t\t        if (localesets.length - 1 <  k) {\n\t\t\t\t        break;\n\t\t\t        }\n\t\t\t        slot[slotnames[k]] = 'locale-' + localesets[k];\n\t\t        }\n\t        } else {\n\t\t        slot.primary = 'locale-translat';\n\t        }\n\t        if (this.state.tmp.sort_key_flag || (this.state.tmp.area !== \"bibliography\"\n\t\t        && !(this.state.tmp.area === \"citation\"\n\t\t\t         && this.state.opt.xclass === \"note\"\n\t\t\t         && this.item && !this.item.position))) {\n\t\t        slot.secondary = false;\n\t\t        slot.tertiary = false;\n\t        }\n            this.setRenderedName(name);\n            if (!name.literal && !name.isInstitution) {\n                var nameBlob = this._renderPersonalName(v, name, slot, pos, i, j);\n                var nameToken = CSL.Util.cloneToken(this.name);\n                this.state.output.append(nameBlob, nameToken, true);\n                names.push(this.state.output.pop());\n            } else {\n                names.push(this._renderInstitutionName(v, name, slot, j));\n            }\n        }\n        ret = this.joinPersons(names, pos, j);\n    }\n    return ret\n}\nCSL.NameOutput.prototype._renderPersonalName = function (v, name, slot, pos, i, j) {\n    var res = this.getName(name, slot.primary, true);\n    var primary = this._renderOnePersonalName(res.name, pos, i, j);\n\tsecondary = false;\n\tif (slot.secondary) {\n        res = this.getName(name, slot.secondary, false, res.usedOrig);\n        if (res.name) {\n\t\t\tsecondary = this._renderOnePersonalName(res.name, pos, i, j);\n        }\n\t}\n\ttertiary = false;\n\tif (slot.tertiary) {\n        res = this.getName(name, slot.tertiary, false, res.usedOrig);\n        if (res.name) {\n\t\t\ttertiary = this._renderOnePersonalName(res.name, pos, i, j);\n        }\n\t}\n    var personblob;\n    if (secondary || tertiary) {\n        this.state.output.openLevel(\"empty\");\n        this.state.output.append(primary);\n        secondary_tok = new CSL.Token();\n        if (slot.secondary) {\n            secondary_tok.strings.prefix = this.state.opt.citeAffixes.persons[slot.secondary].prefix;\n            secondary_tok.strings.suffix = this.state.opt.citeAffixes.persons[slot.secondary].suffix;\n            if (!secondary_tok.strings.prefix) {\n                secondary_tok.strings.prefix = \" \";\n            }\n        }\n        this.state.output.append(secondary, secondary_tok);\n        tertiary_tok = new CSL.Token();\n        if (slot.tertiary) {\n            tertiary_tok.strings.prefix = this.state.opt.citeAffixes.persons[slot.tertiary].prefix;\n            tertiary_tok.strings.suffix = this.state.opt.citeAffixes.persons[slot.tertiary].suffix;\n            if (!tertiary_tok.strings.prefix) {\n                tertiary_tok.strings.prefix = \" \";\n            }\n        }\n        this.state.output.append(tertiary, tertiary_tok);\n        this.state.output.closeLevel();\n        personblob = this.state.output.pop();\n    } else {\n        personblob = primary;\n    }\n    return personblob;\n};\nCSL.NameOutput.prototype._isRomanesque = function (name) {\n    var ret = 2;\n    if (!name.family.replace(/\\\"/g, '').match(CSL.ROMANESQUE_REGEXP)) {\n        ret = 0;\n    }\n    if (!ret && name.given && name.given.match(CSL.STARTSWITH_ROMANESQUE_REGEXP)) {\n        ret = 1;\n    }\n    if (ret == 2) {\n        if (name.multi && name.multi.main) {\n            var top_locale = name.multi.main.slice(0, 2);\n        } else if (this.Item.language) {\n            top_locale = this.Item.language.slice(0, 2);\n        }\n        if ([\"ja\", \"zh\"].indexOf(top_locale) > -1) {\n            ret = 1;\n        }\n    }\n    return ret;\n};\nCSL.NameOutput.prototype._renderOnePersonalName = function (value, pos, i, j) {\n    var name = value;\n    var dropping_particle = this._droppingParticle(name, pos, j);\n    var family = this._familyName(name);\n    var non_dropping_particle = this._nonDroppingParticle(name);\n    var given = this._givenName(name, pos, i);\n    var suffix = this._nameSuffix(name);\n    if (this._isShort(pos, i) && !name[\"full-form-always\"]) {\n        dropping_particle = false;\n        given = false;\n        suffix = false;\n    }\n    var sort_sep = this.state.inheritOpt(this.name, \"sort-separator\");\n    if (!sort_sep) {\n        sort_sep = \"\";\n    }\n    var suffix_sep;\n    if (name[\"comma-suffix\"]) {\n        suffix_sep = \", \";\n    } else {\n        suffix_sep = \" \";\n    }\n    var romanesque = this._isRomanesque(name);\n    function hasJoiningPunctuation(blob) {\n        if (!blob) {\n            return false;\n        } else if (\"string\" === typeof blob.blobs) {\n            if ([\"\\u2019\", \"\\'\", \"-\", \" \"].indexOf(blob.blobs.slice(-1)) > -1) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return hasJoiningPunctuation(blob.blobs[blob.blobs.length-1]);\n        }\n    }\n    var has_hyphenated_non_dropping_particle = hasJoiningPunctuation(non_dropping_particle);\n    var blob, merged, first, second;\n    if (romanesque === 0) {\n        blob = this._join([non_dropping_particle, family, given], \"\");\n    } else if (romanesque === 1 || name[\"static-ordering\"]) { // entry likes sort order\n        blob = this._join([non_dropping_particle, family, given], \" \");\n    } else if (name[\"reverse-ordering\"]) { // entry likes reverse order\n        blob = this._join([given, non_dropping_particle, family], \" \");\n    } else if (this.state.tmp.sort_key_flag) {\n        if (this.state.opt[\"demote-non-dropping-particle\"] === \"never\") {\n            first = this._join([non_dropping_particle, family, dropping_particle], \" \");\n            merged = this._join([first, given], this.state.opt.sort_sep);\n            blob = this._join([merged, suffix], \" \");\n        } else {\n            second = this._join([given, dropping_particle, non_dropping_particle], \" \");\n            merged = this._join([family, second], this.state.opt.sort_sep);\n            blob = this._join([merged, suffix], \" \");\n        }\n    } else if (this.state.inheritOpt(this.name, \"name-as-sort-order\") === \"all\" || (this.state.inheritOpt(this.name, \"name-as-sort-order\") === \"first\" && i === 0 && (j === 0 || \"undefined\" === typeof j))) {\n        if ([\"Lord\", \"Lady\"].indexOf(name.given) > -1) {\n            sort_sep = \", \";\n        }\n        if ([\"always\", \"display-and-sort\"].indexOf(this.state.opt[\"demote-non-dropping-particle\"]) > -1) {\n            second = this._join([given, dropping_particle], (name[\"comma-dropping-particle\"] + \" \"));\n            second = this._join([second, non_dropping_particle], \" \");\n            if (second && this.given) {\n                second.strings.prefix = this.given.strings.prefix;\n                second.strings.suffix = this.given.strings.suffix;\n            }\n            if (family && this.family) {\n                family.strings.prefix = this.family.strings.prefix;\n                family.strings.suffix = this.family.strings.suffix;\n            }\n            merged = this._join([family, second], sort_sep);\n            blob = this._join([merged, suffix], sort_sep);\n        } else {\n            if (has_hyphenated_non_dropping_particle) {\n                first = this._join([non_dropping_particle, family], \"\");\n            } else {\n                first = this._join([non_dropping_particle, family], \" \");\n            }\n            if (first && this.family) {\n                first.strings.prefix = this.family.strings.prefix;\n                first.strings.suffix = this.family.strings.suffix;\n            }\n            second = this._join([given, dropping_particle], (name[\"comma-dropping-particle\"] + \" \"));\n            if (second && this.given) {\n                second.strings.prefix = this.given.strings.prefix;\n                second.strings.suffix = this.given.strings.suffix;\n            }\n            merged = this._join([first, second], sort_sep);\n            blob = this._join([merged, suffix], sort_sep);\n        }\n    } else { // plain vanilla\n        if (name[\"dropping-particle\"] && name.family && !name[\"non-dropping-particle\"]) {\n            if ([\"'\",\"\\u02bc\",\"\\u2019\",\"-\"].indexOf(name[\"dropping-particle\"].slice(-1)) > -1) {\n                family = this._join([dropping_particle, family], \"\");\n                dropping_particle = false;\n            }\n        }\n        if (!this.state.tmp.term_predecessor) {\n        }\n        var space = \" \";\n        if (this.state.inheritOpt(this.name, \"initialize-with\")\n            && this.state.inheritOpt(this.name, \"initialize-with\").match(/[\\u00a0\\ufeff]/)\n            && [\"fr\", \"ru\", \"cs\"].indexOf(this.state.opt[\"default-locale\"][0].slice(0, 2)) > -1) {\n            space = \"\\u00a0\"\n        }\n        if (has_hyphenated_non_dropping_particle) {\n            second = this._join([non_dropping_particle, family], \"\");\n            second = this._join([dropping_particle, second], space);\n        } else {\n            second = this._join([dropping_particle, non_dropping_particle, family], space);\n        }\n        second = this._join([second, suffix], suffix_sep);\n        if (second && this.family) {\n            second.strings.prefix = this.family.strings.prefix;\n            second.strings.suffix = this.family.strings.suffix;\n        }\n        if (given && this.given) {\n            given.strings.prefix = this.given.strings.prefix;\n            given.strings.suffix = this.given.strings.suffix;\n        }\n        if (second.strings.prefix) {\n            name[\"comma-dropping-particle\"] = \"\";\n        }\n        blob = this._join([given, second], (name[\"comma-dropping-particle\"] + space));\n    }\n    this.state.tmp.group_context.tip.variable_success = true;\n    this.state.tmp.can_substitute.replace(false, CSL.LITERAL);\n    this.state.tmp.term_predecessor = true;\n    this.state.tmp.name_node.children.push(blob);\n    return blob;\n};\nCSL.NameOutput.prototype._isShort = function (pos, i) {\n    if (0 === this.state.tmp.disambig_settings.givens[pos][i]) {\n        return true;\n    } else {\n        return false;\n    }\n};\nCSL.NameOutput.prototype._normalizeNameInput = function (value) {\n    var name = {\n        literal:value.literal,\n        family:value.family,\n        isInstitution:value.isInstitution,\n        given:value.given,\n        suffix:value.suffix,\n        \"comma-suffix\":value[\"comma-suffix\"],\n        \"non-dropping-particle\":value[\"non-dropping-particle\"],\n        \"dropping-particle\":value[\"dropping-particle\"],\n        \"static-ordering\":value[\"static-ordering\"],\n        \"static-particles\":value[\"static-particles\"],\n        \"reverse-ordering\":value[\"reverse-ordering\"],\n        \"full-form-always\": value[\"full-form-always\"],\n        \"parse-names\":value[\"parse-names\"],\n        \"comma-dropping-particle\": \"\",\n        block_initialize:value.block_initialize,\n        multi:value.multi\n    };\n    this._parseName(name);\n    return name;\n};\nCSL.NameOutput.prototype._stripPeriods = function (tokname, str) {\n    var decor_tok = this[tokname + \"_decor\"];\n    if (str) {\n        if (this.state.tmp.strip_periods) {\n            str = str.replace(/\\./g, \"\");\n        } else  if (decor_tok) {\n            for (var i = 0, ilen = decor_tok.decorations.length; i < ilen; i += 1) {\n                if (\"@strip-periods\" === decor_tok.decorations[i][0] && \"true\" === decor_tok.decorations[i][1]) {\n                    str = str.replace(/\\./g, \"\");\n                    break;\n                }\n            }\n        }\n    }\n    return str;\n};\nCSL.NameOutput.prototype._nonDroppingParticle = function (name) {\n    var ndp = name[\"non-dropping-particle\"];\n    if (ndp && this.state.tmp.sort_key_flag) {\n        ndp = ndp.replace(/[\\'\\u2019]/, \"\");\n    }\n    var str = this._stripPeriods(\"family\", ndp);\n    if (this.state.output.append(str, this.family_decor, true)) {\n        return this.state.output.pop();\n    }\n    return false;\n};\nCSL.NameOutput.prototype._droppingParticle = function (name, pos, j) {\n    var dp = name[\"dropping-particle\"];\n    if (dp && this.state.tmp.sort_key_flag) {\n        dp = dp.replace(/[\\'\\u2019]/, \"\");\n    }\n    var str = this._stripPeriods(\"given\", dp);\n    if (name[\"dropping-particle\"] && name[\"dropping-particle\"].match(/^et.?al[^a-z]$/)) {\n        if (this.state.inheritOpt(this.name, \"et-al-use-last\")) {\n            if (\"undefined\" === typeof j) { \n                this.etal_spec[pos].freeters = 2;\n            } else {\n                this.etal_spec[pos].persons = 2;\n            }\n        } else {\n            if (\"undefined\" === typeof j) { \n                this.etal_spec[pos].freeters = 1;\n            } else {\n                this.etal_spec[pos].persons = 1;\n            }\n        }\n        name[\"comma-dropping-particle\"] = \"\";\n    } else if (this.state.output.append(str, this.given_decor, true)) {\n        return this.state.output.pop();\n    }\n    return false;\n};\nCSL.NameOutput.prototype._familyName = function (name) {\n    var str = this._stripPeriods(\"family\", name.family);\n    if (this.state.output.append(str, this.family_decor, true)) {\n        return this.state.output.pop();\n    }\n    return false;\n};\nCSL.NameOutput.prototype._givenName = function (name, pos, i) {\n    if (this.state.inheritOpt(this.name, \"initialize\") === false) {\n        if (name.family && name.given && this.state.inheritOpt(this.name, \"initialize\") === false) {\n            name.given = CSL.Util.Names.initializeWith(this.state, name.given, this.state.inheritOpt(this.name, \"initialize-with\"), true);\n        }\n        name.given = CSL.Util.Names.unInitialize(this.state, name.given);\n    } else {\n        if (name.family && 1 === this.state.tmp.disambig_settings.givens[pos][i] && !name.block_initialize) {\n            var initialize_with = this.state.inheritOpt(this.name, \"initialize-with\");\n            name.given = CSL.Util.Names.initializeWith(this.state, name.given, initialize_with);\n        } else {\n            name.given = CSL.Util.Names.unInitialize(this.state, name.given);\n        }\n    }\n    var str = this._stripPeriods(\"given\", name.given);\n    var rendered = this.state.output.append(str, this.given_decor, true);\n    if (rendered) {\n        ret = this.state.output.pop();\n\t    return ret;\n    }\n    return false;\n};\nCSL.NameOutput.prototype._nameSuffix = function (name) {\n    var str = name.suffix;\n    if (\"string\" === typeof this.state.inheritOpt(this.name, \"initialize-with\")) {\n        str = CSL.Util.Names.initializeWith(this.state, name.suffix, this.state.inheritOpt(this.name, \"initialize-with\"), true);\n    }\n    str = this._stripPeriods(\"family\", str);\n    var toSuffix = '';\n    if (str && str.slice(-1) === '.') {\n\tstr = str.slice(0, -1);\n\ttoSuffix = '.';\n    }\n    var rendered = this.state.output.append(str, \"empty\", true);\n    if (rendered) {\n        ret = this.state.output.pop();\n\tret.strings.suffix = toSuffix + ret.strings.suffix;\n\treturn ret;\n    }\n    return false;\n};\nCSL.NameOutput.prototype._getLongStyle = function (name, v, i) {\n    var long_style, short_style;\n    if (name[\"short\"].length) {\n        if (this.institutionpart[\"long-with-short\"]) {\n            long_style = this.institutionpart[\"long-with-short\"];\n        } else {\n            long_style = this.institutionpart[\"long\"];\n        }\n    } else {\n        long_style = this.institutionpart[\"long\"];\n    }\n    if (!long_style) {\n        long_style = new CSL.Token();\n    }\n    return long_style;\n};\nCSL.NameOutput.prototype._getShortStyle = function () {\n    var short_style;\n    if (this.institutionpart[\"short\"]) {\n        short_style = this.institutionpart[\"short\"];\n    } else {\n        short_style = new CSL.Token();\n    }\n    return short_style;\n};\nCSL.NameOutput.prototype._parseName = function (name) {\n    var m, idx;\n    if (!name[\"parse-names\"] && \"undefined\" !== typeof name[\"parse-names\"]) {\n        return name;\n    }\n    if (name.family && !name.given && name.isInstitution) {\n        name.literal = name.family;\n        name.family = undefined;\n        name.isInstitution = undefined;\n    }\n    var noparse;\n    if (name.family \n        && (name.family.slice(0, 1) === '\"' && name.family.slice(-1) === '\"')\n        || (!name[\"parse-names\"] && \"undefined\" !== typeof name[\"parse-names\"])) {\n        name.family = name.family.slice(1, -1);\n        noparse = true;\n        name[\"parse-names\"] = 0;\n    } else {\n        noparse = false;\n    }\n    if (this.state.opt.development_extensions.parse_names) {\n        if (!name[\"non-dropping-particle\"] && name.family && !noparse && name.given) {\n            if (!name[\"static-particles\"]) {\n                CSL.parseParticles(name, true);\n            }\n        }\n    }\n};\nCSL.NameOutput.prototype.getName = function (name, slotLocaleset, fallback, stopOrig) {\n    if (stopOrig && slotLocaleset === 'locale-orig') {\n        return {name:false,usedOrig:stopOrig};\n    }\n    if (!name.family) {\n        name.family = \"\";\n    }\n    if (!name.given) {\n        name.given = \"\";\n    }\n    var name_params = {};\n    name_params[\"static-ordering\"] = this.getStaticOrder(name);\n    var foundTag = true;\n    if (slotLocaleset !== 'locale-orig') {\n        foundTag = false;\n        if (name.multi) {\n            var langTags = this.state.opt[slotLocaleset]\n            for (i = 0, ilen = langTags.length; i < ilen; i += 1) {\n                langTag = langTags[i];\n                if (name.multi._key[langTag]) {\n                    foundTag = true;\n                    var isInstitution = name.isInstitution;\n                    name = name.multi._key[langTag];\n                    name.isInstitution = isInstitution;\n                    name_params = this.getNameParams(langTag);\n                    name_params.transliterated = true;\n                    break;\n                }\n            }\n        }\n    }\n    if (!foundTag) {\n        var langTag = false;\n        if (name.multi && name.multi.main) {\n            langTag = name.multi.main;\n        } else if (this.Item.language) {\n            langTag = this.Item.language;\n        }\n        if (langTag) {\n            name_params = this.getNameParams(langTag);\n        }\n    }\n    if (!fallback && !foundTag) {\n        return {name:false,usedOrig:stopOrig};\n    }\n    if (!name.family) {\n        name.family = \"\";\n    }\n    if (!name.given) {\n        name.given = \"\";\n    }\n    name = {\n        family:name.family,\n        given:name.given,\n        \"non-dropping-particle\":name[\"non-dropping-particle\"],\n        \"dropping-particle\":name[\"dropping-particle\"],\n        suffix:name.suffix,\n        \"static-ordering\":name_params[\"static-ordering\"],\n        \"static-particles\":name[\"static-particles\"],\n        \"reverse-ordering\":name_params[\"reverse-ordering\"],\n        \"full-form-always\": name_params[\"full-form-always\"],\n        \"parse-names\":name[\"parse-names\"],\n        \"comma-suffix\":name[\"comma-suffix\"],\n        \"comma-dropping-particle\":name[\"comma-dropping-particle\"],\n        transliterated: name_params.transliterated,\n        block_initialize: name_params[\"block-initialize\"],\n        literal:name.literal,\n        isInstitution:name.isInstitution,\n        multi:name.multi\n    };\n    if (!name.literal && (!name.given && name.family && name.isInstitution)) {\n        name.literal = name.family;\n    }\n    if (name.literal) {\n        delete name.family;\n        delete name.given;\n    }\n    name = this._normalizeNameInput(name);\n    var usedOrig;\n    if (stopOrig) {\n        usedOrig = stopOrig;\n    } else {\n        usedOrig = !foundTag;\n    }\n    return {name:name,usedOrig:usedOrig};\n}\nCSL.NameOutput.prototype.getNameParams = function (langTag) {\n    var ret = {};\n    var langspec = CSL.localeResolve(this.Item.language, this.state.opt[\"default-locale\"][0]);\n    var try_locale = this.state.locale[langspec.best] ? langspec.best : this.state.opt[\"default-locale\"][0];\n    var name_as_sort_order = this.state.locale[try_locale].opts[\"name-as-sort-order\"]\n    var name_as_reverse_order = this.state.locale[try_locale].opts[\"name-as-reverse-order\"]\n    var name_never_short = this.state.locale[try_locale].opts[\"name-never-short\"]\n    var field_lang_bare = langTag.split(\"-\")[0];\n    if (name_as_sort_order && name_as_sort_order[field_lang_bare]) {\n        ret[\"static-ordering\"] = true;\n        ret[\"reverse-ordering\"] = false;\n    }\n    if (name_as_reverse_order && name_as_reverse_order[field_lang_bare]) {\n        ret[\"reverse-ordering\"] = true;\n        ret[\"static-ordering\"] = false;\n    }\n    if (name_never_short && name_never_short[field_lang_bare]) {\n        ret[\"full-form-always\"] = true;\n    }\n    if (ret[\"static-ordering\"]) {\n        ret[\"block-initialize\"] = true;\n    }\n    return ret;\n}\nCSL.NameOutput.prototype.setRenderedName = function (name) {\n    if (this.state.tmp.area === \"bibliography\") {\n        var strname = \"\";\n        for (var j=0,jlen=CSL.NAME_PARTS.length;j<jlen;j+=1) {\n            if (name[CSL.NAME_PARTS[j]]) {\n                strname += name[CSL.NAME_PARTS[j]];\n            }\n        }\n        this.state.tmp.rendered_name.push(strname);\n    }\n}\nCSL.NameOutput.prototype.fixupInstitution = function (name, varname, listpos) {\n    if (this.state.sys.getHumanForm && \"legal_case\" === this.Item.type && \"authority\" === varname) {\n        name.literal = this.state.sys.getHumanForm(this.Item.jurisdiction, name.literal);\n    }\n    name = this._splitInstitution(name, varname, listpos);\n    if (this.institution.strings[\"reverse-order\"]) {\n        name[\"long\"].reverse();\n    }\n    var long_form = name[\"long\"];\n    var short_form = name[\"long\"].slice();\n    var use_short_form = false;\n    if (this.state.sys.getAbbreviation) {\n        var jurisdiction = this.Item.jurisdiction;\n        for (var j = 0, jlen = long_form.length; j < jlen; j += 1) {\n            jurisdiction = this.state.transform.loadAbbreviation(jurisdiction, \"institution-part\", long_form[j]);\n            if (this.state.transform.abbrevs[jurisdiction][\"institution-part\"][long_form[j]]) {\n                short_form[j] = this.state.transform.abbrevs[jurisdiction][\"institution-part\"][long_form[j]];\n                use_short_form = true;\n            }\n        }\n    }\n    if (use_short_form) {\n        name[\"short\"] = short_form;\n    } else {\n        name[\"short\"] = [];\n    }\n    return name;\n}\nCSL.NameOutput.prototype.getStaticOrder = function (name, refresh) {\n    var static_ordering_val = false;\n    if (!refresh && name[\"static-ordering\"]) {\n        static_ordering_val = true;\n    } else if (this._isRomanesque(name) === 0) {\n        static_ordering_val = true;\n    } else if ((!name.multi || !name.multi.main) && this.Item.language && ['vi', 'hu'].indexOf(this.Item.language) > -1) {\n        static_ordering_val = true;\n    } else if (name.multi && name.multi.main && ['vi', 'hu'].indexOf(name.multi.main.slice(0,2)) > -1) {\n        static_ordering_val = true;\n    } else {\n        if (this.state.opt['auto-vietnamese-names']\n            && (CSL.VIETNAMESE_NAMES.exec(name.family + \" \" + name.given)\n                && CSL.VIETNAMESE_SPECIALS.exec(name.family + name.given))) {\n            static_ordering_val = true;\n        }\n    }\n    return static_ordering_val;\n}\nCSL.NameOutput.prototype._splitInstitution = function (value, v, i) {\n    var ret = {};\n    if (!value.literal && value.family) {\n        value.literal = value.family;\n        delete value.family;\n    }\n    var splitInstitution = value.literal.replace(/\\s*\\|\\s*/g, \"|\");\n    splitInstitution = splitInstitution.split(\"|\");\n    if (this.institution.strings.form === \"short\" && this.state.sys.getAbbreviation) {\n        var jurisdiction = this.Item.jurisdiction;\n        for (var j = splitInstitution.length; j > 0; j += -1) {\n            var str = splitInstitution.slice(0, j).join(\"|\");\n            jurisdiction = this.state.transform.loadAbbreviation(jurisdiction, \"institution-entire\", str);\n            if (this.state.transform.abbrevs[jurisdiction][\"institution-entire\"][str]) {\n                var splitLst = this.state.transform.abbrevs[jurisdiction][\"institution-entire\"][str];\n                splitLst = this.state.transform.quashCheck(splitLst);\n                var splitSplitLst = splitLst.split(/>>[0-9]{4}>>/);\n                var m = splitLst.match(/>>([0-9]{4})>>/);\n                splitLst = splitSplitLst.pop();\n                if (splitSplitLst.length > 0 && this.Item[\"original-date\"] && this.Item[\"original-date\"].year) {\n                    for (var k=m.length - 1; k > 0; k += -1) {\n                        if (parseInt(this.Item[\"original-date\"].year, 10) >= parseInt(m[k], 10)) {\n                            break;\n                        }\n                        splitLst = splitSplitLst.pop();\n                    }\n                }\n                splitLst = splitLst.replace(/\\s*\\|\\s*/g, \"|\");\n                splitInstitution = [splitLst];\n                break;\n            }\n        }\n    }\n    splitInstitution.reverse();\n    ret[\"long\"] = this._trimInstitution(splitInstitution, v, i);\n    return ret;\n};\nCSL.NameOutput.prototype._trimInstitution = function (subunits, v, i) {\n    var use_first = false;\n    var append_last = false;\n    var s = subunits.slice();\n    var stop_last = false;\n    if (this.institution) {\n        if (\"undefined\" !== typeof this.institution.strings[\"use-first\"]) {\n            use_first = this.institution.strings[\"use-first\"];\n        }\n        if (\"undefined\" !== typeof this.institution.strings[\"stop-last\"]) {\n            stop_last = this.institution.strings[\"stop-last\"];\n        } else if (\"authority\" === v && this.state.tmp.authority_stop_last) {\n            stop_last = this.state.tmp.authority_stop_last;\n        }\n        if (stop_last) {\n            s = s.slice(0, stop_last);\n            subunits = subunits.slice(0, stop_last);\n        }\n        if (\"undefined\" !== typeof this.institution.strings[\"use-last\"]) {\n            append_last = this.institution.strings[\"use-last\"];\n        }\n        if (\"authority\" === v) {\n            if (stop_last) {\n                this.state.tmp.authority_stop_last = stop_last;\n            }\n            if (append_last)  {\n                this.state.tmp.authority_stop_last += (append_last * -1);\n            }\n        }\n    }\n    if (false === use_first) {\n        if (this.persons[v].length === 0) {\n            use_first = this.institution.strings[\"substitute-use-first\"];\n        }\n        if (!use_first) {\n            use_first = 0;\n        }\n    }\n    if (false === append_last) {\n        if (!use_first) {\n            append_last = subunits.length;\n        } else {\n            append_last = 0;\n        }\n    }\n    if (use_first > subunits.length - append_last) {\n        use_first = subunits.length - append_last;\n    }\n    subunits = subunits.slice(0, use_first);\n    s = s.slice(use_first);\n    if (append_last) {\n        if (append_last > s.length) {\n            append_last = s.length;\n        }\n        if (append_last) {\n            subunits = subunits.concat(s.slice((s.length - append_last)));\n        }\n    }\n    return subunits;\n};\nCSL.PublisherOutput = function (state, group_tok) {\n    this.state = state;\n    this.group_tok = group_tok;\n    this.varlist = [];\n};\nCSL.PublisherOutput.prototype.render = function () {\n    this.clearVars();\n    this.composeAndBlob();\n    this.composeElements();\n    this.composePublishers();\n    this.joinPublishers();\n};\nCSL.PublisherOutput.prototype.composeAndBlob = function () {\n    this.and_blob = {};\n    var and_term = false;\n    if (this.group_tok.strings.and === \"text\") {\n        and_term = this.state.getTerm(\"and\");\n    } else if (this.group_tok.strings.and === \"symbol\") {\n        and_term = \"&\";\n    }\n    var tok = new CSL.Token();\n    tok.strings.suffix = \" \";\n    tok.strings.prefix = \" \";\n    this.state.output.append(and_term, tok, true);\n    var no_delim = this.state.output.pop();\n    tok.strings.prefix = this.group_tok.strings[\"subgroup-delimiter\"];\n    this.state.output.append(and_term, tok, true);\n    var with_delim = this.state.output.pop();\n    this.and_blob.single = false;\n    this.and_blob.multiple = false;\n    if (and_term) {\n        if (this.group_tok.strings[\"subgroup-delimiter-precedes-last\"] === \"always\") {\n            this.and_blob.single = with_delim;\n        } else if (this.group_tok.strings[\"subgroup-delimiter-precedes-last\"] === \"never\") {\n            this.and_blob.single = no_delim;\n            this.and_blob.multiple = no_delim;\n        } else {\n            this.and_blob.single = no_delim;\n            this.and_blob.multiple = with_delim;\n        }\n    }\n};\nCSL.PublisherOutput.prototype.composeElements = function () {\n    for (var i = 0, ilen = 2; i < ilen; i += 1) {\n        var varname = [\"publisher\", \"publisher-place\"][i];\n        for (var j = 0, jlen = this[\"publisher-list\"].length; j < jlen; j += 1) {\n            var str = this[varname + \"-list\"][j];\n            var tok = this[varname + \"-token\"];\n            this.state.output.append(str, tok, true);\n            this[varname + \"-list\"][j] = this.state.output.pop();\n        }\n    }\n};\nCSL.PublisherOutput.prototype.composePublishers = function () {\n    var blobs;\n    for (var i = 0, ilen = this[\"publisher-list\"].length; i < ilen; i += 1) {\n        var ordered_list = [];\n        blobs = [this[this.varlist[0] + \"-list\"][i], this[this.varlist[1] + \"-list\"][i]];\n        this[\"publisher-list\"][i] = this._join(blobs, this.group_tok.strings.delimiter);\n    }\n};\nCSL.PublisherOutput.prototype.joinPublishers = function () {\n    var blobs = this[\"publisher-list\"];\n    var delim = this.name_delimiter;\n    var publishers = this._join(blobs, this.group_tok.strings[\"subgroup-delimiter\"], this.and_blob.single, this.and_blob.multiple, this.group_tok);\n    this.state.output.append(publishers, \"literal\");\n};\nCSL.PublisherOutput.prototype._join = CSL.NameOutput.prototype._join;\nCSL.PublisherOutput.prototype._getToken = CSL.NameOutput.prototype._getToken;\nCSL.PublisherOutput.prototype.clearVars = function () {\n    this.state.tmp[\"publisher-list\"] = false;\n    this.state.tmp[\"publisher-place-list\"] = false;\n    this.state.tmp[\"publisher-group-token\"] = false;\n    this.state.tmp[\"publisher-token\"] = false;\n    this.state.tmp[\"publisher-place-token\"] = false;\n};\nCSL.evaluateLabel = function (node, state, Item, item) {\n    var myterm;\n    if (\"locator\" === node.strings.term) {\n        if (item && item.label) {\n            if (item.label === \"sub verbo\") {\n                myterm = \"sub-verbo\";\n            } else {\n                myterm = item.label;\n            }\n        }\n        if (!myterm) {\n            myterm = \"page\";\n        }\n    } else {\n        myterm = node.strings.term;\n    }\n    var plural = node.strings.plural;\n    if (\"number\" !== typeof plural) {\n        var theItem = node.strings.term === \"locator\" ? item : Item;\n        state.processNumber(false, theItem, node.strings.term, Item.type);\n        plural = state.tmp.shadow_numbers[node.strings.term].plural;\n        if (!state.tmp.shadow_numbers[node.strings.term].labelForm\n           && !state.tmp.shadow_numbers[node.strings.term].labelDecorations) {\n            state.tmp.shadow_numbers[node.strings.term].labelForm = node.strings.form;\n            state.tmp.shadow_numbers[node.strings.term].labelDecorations = node.decorations.slice();\n        }\n        if ([\"locator\", \"number\", \"page\"].indexOf(node.strings.term) > -1 && state.tmp.shadow_numbers[node.strings.term].label) {\n            myterm = state.tmp.shadow_numbers[node.strings.term].label;\n        }\n        if (node.decorations && (state.opt.development_extensions.csl_reverse_lookup_support || state.sys.csl_reverse_lookup_support)) {\n            node.decorations.reverse();\n            node.decorations.push([\"@showid\",\"true\", node.cslid]);\n            node.decorations.reverse();\n        }\n    }\n    return CSL.castLabel(state, node, myterm, plural, CSL.TOLERANT);\n};\nCSL.castLabel = function (state, node, term, plural, mode) {\n    var label_form = node.strings.form;\n    if (state.tmp.group_context.tip.label_form && label_form !== \"static\") {\n        label_form = state.tmp.group_context.tip.label_form;\n    }\n    var ret = state.getTerm(term, label_form, plural, false, mode, node.default_locale);\n    if (state.tmp.strip_periods) {\n        ret = ret.replace(/\\./g, \"\");\n    } else {\n        for (var i = 0, ilen = node.decorations.length; i < ilen; i += 1) {\n            if (\"@strip-periods\" === node.decorations[i][0] && \"true\" === node.decorations[i][1]) {\n                ret = ret.replace(/\\./g, \"\");\n                break;\n            }\n        }\n    }\n    return ret;\n};\nCSL.Node.name = {\n    build: function (state, target) {\n        var func, pos, len, attrname;\n        if ([CSL.SINGLETON, CSL.START].indexOf(this.tokentype) > -1) {\n            if (\"undefined\" === typeof state.tmp.root) {\n                var oldTmpRoot = undefined;\n                state.tmp.root = \"citation\";\n            } else {\n                var oldTmpRoot = state.tmp.root;\n            }\n            if (state.inheritOpt(this, \"et-al-subsequent-min\")\n                && (state.inheritOpt(this, \"et-al-subsequent-min\") !== state.inheritOpt(this, \"et-al-min\"))) {\n                state.opt.update_mode = CSL.POSITION;\n            }\n            if (state.inheritOpt(this, \"et-al-subsequent-use-first\")\n                && (state.inheritOpt(this, \"et-al-subsequent-use-first\") !== state.inheritOpt(this, \"et-al-use-first\"))) {\n                state.opt.update_mode = CSL.POSITION;\n            }\n            state.tmp.root = oldTmpRoot;\n            func = function (state, Item) {\n                state.tmp.etal_term = \"et-al\";\n                state.tmp.name_delimiter = state.inheritOpt(this, \"delimiter\", \"name-delimiter\", \", \");\n                state.tmp[\"delimiter-precedes-et-al\"] = state.inheritOpt(this, \"delimiter-precedes-et-al\");\n                if (\"text\" === state.inheritOpt(this, \"and\")) {\n                    this.and_term = state.getTerm(\"and\", \"long\", 0);\n                } else if (\"symbol\" === state.inheritOpt(this, \"and\")) {\n                    if (state.opt.development_extensions.expect_and_symbol_form) {\n                        this.and_term = state.getTerm(\"and\", \"symbol\", 0);\n                    } else {\n                        this.and_term = \"&\";\n                    }\n                }\n                state.tmp.and_term = this.and_term;\n                if (CSL.STARTSWITH_ROMANESQUE_REGEXP.test(this.and_term)) {\n                    this.and_prefix_single = \" \";\n                    this.and_prefix_multiple = \", \";\n                    if (\"string\" === typeof state.tmp.name_delimiter) {\n                        this.and_prefix_multiple = state.tmp.name_delimiter;\n                    }\n                    this.and_suffix = \" \";\n                } else {\n                    this.and_prefix_single = \"\";\n                    this.and_prefix_multiple = \"\";\n                    this.and_suffix = \"\";\n                }\n                if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"always\") {\n                    this.and_prefix_single = state.tmp.name_delimiter;\n                } else if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"never\") {\n                    if (this.and_prefix_multiple) {\n                        this.and_prefix_multiple = \" \";\n                    }\n                } else if (state.inheritOpt(this, \"delimiter-precedes-last\") === \"after-inverted-name\") {\n                    if (this.and_prefix_single) {\n                        this.and_prefix_single = state.tmp.name_delimiter;\n                    }\n                    if (this.and_prefix_multiple) {\n                        this.and_prefix_multiple = \" \";\n                    }\n                }\n                this.and = {};\n                if (state.inheritOpt(this, \"and\")) {\n                    state.output.append(this.and_term, \"empty\", true);\n                    this.and.single = state.output.pop();\n                    this.and.single.strings.prefix = this.and_prefix_single;\n                    this.and.single.strings.suffix = this.and_suffix;\n                    state.output.append(this.and_term, \"empty\", true);\n                    this.and.multiple = state.output.pop();\n                    this.and.multiple.strings.prefix = this.and_prefix_multiple;\n                    this.and.multiple.strings.suffix = this.and_suffix;\n                } else if (state.tmp.name_delimiter) {\n                    this.and.single = new CSL.Blob(state.tmp.name_delimiter);\n                    this.and.single.strings.prefix = \"\";\n                    this.and.single.strings.suffix = \"\";\n                    this.and.multiple = new CSL.Blob(state.tmp.name_delimiter);\n                    this.and.multiple.strings.prefix = \"\";\n                    this.and.multiple.strings.suffix = \"\";\n                }\n                this.ellipsis = {};\n                if (state.inheritOpt(this, \"et-al-use-last\")) {\n                    this.ellipsis_term = \"\\u2026\";\n                    this.ellipsis_prefix_single = \" \";\n                    this.ellipsis_prefix_multiple =  state.inheritOpt(this, \"delimiter\", \"name-delimiter\", \", \");\n                    this.ellipsis_suffix = \" \";\n                    this.ellipsis.single = new CSL.Blob(this.ellipsis_term);\n                    this.ellipsis.single.strings.prefix = this.ellipsis_prefix_single;\n                    this.ellipsis.single.strings.suffix = this.ellipsis_suffix;\n                    this.ellipsis.multiple = new CSL.Blob(this.ellipsis_term);\n                    this.ellipsis.multiple.strings.prefix = this.ellipsis_prefix_multiple;\n                    this.ellipsis.multiple.strings.suffix = this.ellipsis_suffix;\n                }\n                if (\"undefined\" === typeof state.tmp[\"et-al-min\"]) {\n                    state.tmp[\"et-al-min\"] = state.inheritOpt(this, \"et-al-min\");\n                }\n                if (\"undefined\" === typeof state.tmp[\"et-al-use-first\"]) {\n                    state.tmp[\"et-al-use-first\"] = state.inheritOpt(this, \"et-al-use-first\");\n                }\n                if (\"undefined\" === typeof state.tmp[\"et-al-use-last\"]) {\n                    state.tmp[\"et-al-use-last\"] = state.inheritOpt(this, \"et-al-use-last\");\n                }\n                state.nameOutput.name = this;\n            };\n            state.build.name_flag = true;\n            this.execs.push(func);\n        }\n        target.push(this);\n    }\n};\nCSL.Node[\"name-part\"] = {\n    build: function (state, target) {\n        state.build[this.strings.name] = this;\n    }\n};\nCSL.Node.names = {\n    build: function (state, target) {\n        var func, len, pos, attrname;\n        var debug = false;\n        if (this.tokentype === CSL.START || this.tokentype === CSL.SINGLETON) {\n            CSL.Util.substituteStart.call(this, state, target);\n            state.build.substitute_level.push(1);\n        }\n        if (this.tokentype === CSL.SINGLETON) {\n            state.build.names_variables.push(this.variables);\n            func = function (state, Item, item) {\n                var labelVariable = state.nameOutput.labelVariable;\n                state.nameOutput.reinit(this, labelVariable);\n            };\n            this.execs.push(func);\n        }\n        if (this.tokentype === CSL.START) {\n            state.build.names_flag = true;\n            state.build.names_level += 1;\n            if (state.build.names_level === 1) {\n                state.build.names_variables = [];\n                state.build.name_label = {};\n            }\n            state.build.names_variables.push(this.variables);\n            func = function (state, Item, item) {\n                state.tmp.can_substitute.push(true);\n                state.parallel.StartVariable(\"names\",this.variables[0]);\n                state.nameOutput.init(this);\n            };\n            this.execs.push(func);\n        }\n        if (this.tokentype === CSL.END) {\n            for (var i = 0, ilen = 3; i < ilen; i += 1) {\n                var key = [\"family\", \"given\", \"et-al\"][i];\n                this[key] = state.build[key];\n                if (state.build.names_level === 1) {\n                    state.build[key] = undefined;\n                }\n            }\n            this.label = state.build.name_label;\n            if (state.build.names_level === 1) {\n                state.build.name_label = {};\n            }\n            state.build.names_level += -1;\n            state.build.names_variables.pop();\n            func = function (state, Item, item) {\n                if (state.tmp.etal_node) {\n                    this.etal_style = state.tmp.etal_node;\n                } else {\n                    this.etal_style = \"empty\";\n                }\n                this.etal_term = state.getTerm(state.tmp.etal_term, \"long\", 0);\n                if (CSL.STARTSWITH_ROMANESQUE_REGEXP.test(this.etal_term)) {\n                    this.etal_prefix_single = \" \";\n                    this.etal_prefix_multiple = state.tmp.name_delimiter;\n                    if (state.tmp[\"delimiter-precedes-et-al\"] === \"always\") {\n                        this.etal_prefix_single = state.tmp.name_delimiter;\n                    } else if (state.tmp[\"delimiter-precedes-et-al\"] === \"never\") {\n                        this.etal_prefix_multiple = \" \";\n                    } else if (state.tmp[\"delimiter-precedes-et-al\"] === \"after-inverted-name\") {\n                        this.etal_prefix_single = state.tmp.name_delimiter;\n                        this.etal_prefix_multiple = \" \";\n                    }\n                    this.etal_suffix = \"\";\n                } else {\n                    this.etal_prefix_single = \"\";\n                    this.etal_prefix_multiple = \"\";\n                    this.etal_suffix = \"\";\n                }\n                for (var i = 0, ilen = 3; i < ilen; i += 1) {\n                    var key = [\"family\", \"given\"][i];\n                    state.nameOutput[key] = this[key];\n                }\n                state.nameOutput[\"with\"] = this[\"with\"];\n                var mywith = \"with\";\n                var with_default_prefix = \"\";\n                var with_suffix = \"\";\n                if (CSL.STARTSWITH_ROMANESQUE_REGEXP.test(mywith)) {\n                    with_default_prefix = \" \";\n                    with_suffix = \" \";\n                }\n                var thewith = {};\n                thewith.single = new CSL.Blob(mywith);\n                thewith.single.strings.suffix = with_suffix;\n                thewith.multiple = new CSL.Blob(mywith);\n                thewith.multiple.strings.suffix = with_suffix;\n                if (state.inheritOpt(state.nameOutput.name, \"delimiter-precedes-last\") === \"always\") {\n                    thewith.single.strings.prefix = state.inheritOpt(this, \"delimiter\", \"names-delimiter\");\n                    thewith.multiple.strings.prefix = state.inheritOpt(this, \"delimiter\", \"names-delimiter\");\n                } else if (state.inheritOpt(state.nameOutput.name, \"delimiter-precedes-last\") === \"contextual\") {\n                    thewith.single.strings.prefix = with_default_prefix;\n                    thewith.multiple.strings.prefix = state.inheritOpt(this, \"delimiter\", \"names-delimiter\");\n                } else if (state.inheritOpt(state.nameOutput.name, \"delimiter-precedes-last\") === \"after-inverted-name\") {\n                    thewith.single.strings.prefix = state.inheritOpt(this, \"delimiter\", \"names-delimiter\");\n                    thewith.multiple.strings.prefix = with_default_prefix;\n                } else {\n                    thewith.single.strings.prefix = with_default_prefix;\n                    thewith.multiple.strings.prefix = with_default_prefix;\n                }\n                state.nameOutput[\"with\"] = thewith;\n                state.nameOutput.label = this.label;\n                state.nameOutput.etal_style = this.etal_style;\n                state.nameOutput.etal_term = this.etal_term;\n                state.nameOutput.etal_prefix_single = this.etal_prefix_single;\n                state.nameOutput.etal_prefix_multiple = this.etal_prefix_multiple;\n                state.nameOutput.etal_suffix = this.etal_suffix;\n                state.nameOutput.outputNames();\n                state.tmp[\"et-al-use-first\"] = undefined;\n                state.tmp[\"et-al-min\"] = undefined;\n                state.tmp[\"et-al-use-last\"] = undefined;\n            };\n            this.execs.push(func);\n            func = function (state, Item) {\n                if (!state.tmp.can_substitute.pop()) {\n                    state.tmp.can_substitute.replace(false, CSL.LITERAL);\n                }\n                state.parallel.CloseVariable(\"names\");\n                if (state.tmp.can_substitute.mystack.length === 1) {\n                    state.tmp.can_block_substitute = false;\n                }\n            };\n            this.execs.push(func);\n            state.build.name_flag = false;\n        }\n        target.push(this);\n        if (this.tokentype === CSL.END || this.tokentype === CSL.SINGLETON) {\n            state.build.substitute_level.pop();\n            CSL.Util.substituteEnd.call(this, state, target);\n        }\n    }\n};\nCSL.Node.number = {\n    build: function (state, target) {\n        var func;\n        CSL.Util.substituteStart.call(this, state, target);\n        if (this.strings.form === \"roman\") {\n            this.formatter = state.fun.romanizer;\n        } else if (this.strings.form === \"ordinal\") {\n            this.formatter = state.fun.ordinalizer;\n        } else if (this.strings.form === \"long-ordinal\") {\n            this.formatter = state.fun.long_ordinalizer;\n        }\n        if (\"undefined\" === typeof this.successor_prefix) {\n            this.successor_prefix = state[state.build.area].opt.layout_delimiter;\n        }\n        if (\"undefined\" === typeof this.splice_prefix) {\n            this.splice_prefix = state[state.build.area].opt.layout_delimiter;\n        }\n        func = function (state, Item, item) {\n            var i, ilen, newlst, lst;\n            if (this.variables.length === 0) {\n                return;\n            }\n            if (\"undefined\" === typeof item) {\n                var item = {};\n            }\n            var varname, num, number, m, j, jlen;\n            varname = this.variables[0];\n            if (varname === \"locator\" && state.tmp.just_looking) {\n                return;\n            }\n            state.parallel.StartVariable(this.variables[0]);\n            if (this.variables[0] === \"locator\") {\n                state.parallel.AppendToVariable(Item.section);\n            } else {\n                state.parallel.AppendToVariable(Item[this.variables[0]]);\n            }\n            var rex = new RegExp(\"(?:&|, | and |\" + state.getTerm(\"page-range-delimiter\") + \")\");\n            if (varname === 'collection-number' && Item.type === 'legal_case') {\n                state.tmp.renders_collection_number = true;\n            }\n            var value = Item[this.variables[0]];\n            var form = \"long\";\n            if (this.strings.label_form_override) {\n                form = this.strings.label_form_override;\n            }\n            var node = this;\n            if (state.tmp.group_context.tip.force_suppress) {\n                return false;\n            }\n            if (varname === \"locator\") {\n                state.processNumber(node, item, varname, Item.type);\n            } else {\n                if (!state.tmp.group_context.tip.condition && Item[varname]) {\n                    state.tmp.just_did_number = true;\n                }\n                state.processNumber(node, Item, varname, Item.type);\n            }\n            CSL.Util.outputNumericField(state, varname, Item.id);\n            state.parallel.CloseVariable(\"number\");\n            if ([\"locator\", \"locator-extra\"].indexOf(this.variables_real[0]) > -1\n               && !state.tmp.just_looking) {\n                state.tmp.done_vars.push(this.variables_real[0]);\n                state.tmp.group_context.tip.done_vars.push(this.variables_real[0]);\n            }\n        };\n        this.execs.push(func);\n        target.push(this);\n        CSL.Util.substituteEnd.call(this, state, target);\n    }\n};\nCSL.Node.sort = {\n    build: function (state, target) {\n        target = state[state.build.root + \"_sort\"].tokens;\n        if (this.tokentype === CSL.START) {\n            if (state.build.area === \"citation\") {\n                state.parallel.use_parallels = false;\n                state.opt.sort_citations = true;\n            }\n            state.build.area = state.build.root + \"_sort\";\n            state.build.extension = \"_sort\";\n            var func = function (state, Item) {\n                if (state.opt.has_layout_locale) {\n                    var langspec = CSL.localeResolve(Item.language, state.opt[\"default-locale\"][0]);\n                    var sort_locales = state[state.tmp.area.slice(0,-5)].opt.sort_locales;\n                    var langForItem;\n                    for (var i=0,ilen=sort_locales.length;i<ilen;i+=1) {\n                        langForItem = sort_locales[i][langspec.bare];\n                        if (!langForItem) {\n                            langForItem = sort_locales[i][langspec.best];\n                        }\n                        if (langForItem) {\n                            break;\n                        }\n                    }\n                    if (!langForItem) {\n                        langForItem = state.opt[\"default-locale\"][0];\n                    }\n                    state.tmp.lang_sort_hold = state.opt.lang;\n                    state.opt.lang = langForItem;\n                }\n            }\n            this.execs.push(func);\n        }\n        if (this.tokentype === CSL.END) {\n            state.build.area = state.build.root;\n            state.build.extension = \"\";\n            var func = function (state, Item) {\n                if (state.opt.has_layout_locale) {\n                    state.opt.lang = state.tmp.lang_sort_hold;\n                    delete state.tmp.lang_sort_hold;\n                }\n            }\n            this.execs.push(func);\n        }\n        target.push(this);\n    }\n};\nCSL.Node.substitute = {\n    build: function (state, target) {\n        var func;\n        if (this.tokentype === CSL.START) {\n            func = function (state, Item) {\n                state.tmp.can_block_substitute = true;\n                if (state.tmp.value.length) {\n                    state.tmp.can_substitute.replace(false, CSL.LITERAL);\n                }\n            };\n            this.execs.push(func);\n        }\n        target.push(this);\n    }\n};\nCSL.Node.text = {\n    build: function (state, target) {\n        var variable, func, form, plural, id, num, number, formatter, firstoutput, specialdelimiter, label, myname, names, name, year, suffix, term, dp, len, pos, n, m, value, flag;\n        if (this.postponed_macro) {\n            var group_start = CSL.Util.cloneToken(this);\n            group_start.name = \"group\";\n            group_start.tokentype = CSL.START;\n            CSL.Node.group.build.call(group_start, state, target);\n            CSL.expandMacro.call(state, this, target);\n            var group_end = CSL.Util.cloneToken(this);\n            group_end.name = \"group\";\n            group_end.tokentype = CSL.END;\n            if (this.postponed_macro === 'juris-locator-label') {\n                group_end.isJurisLocatorLabel = true;\n            }\n            CSL.Node.group.build.call(group_end, state, target);\n        } else {\n            CSL.Util.substituteStart.call(this, state, target);\n            if (!this.variables_real) {\n                this.variables_real = [];\n            }\n            if (!this.variables) {\n                this.variables = [];\n            }\n            form = \"long\";\n            plural = 0;\n            if (this.strings.form) {\n                form = this.strings.form;\n            }\n            if (this.strings.plural) {\n                plural = this.strings.plural;\n            }\n            if (\"citation-number\" === this.variables_real[0] || \"year-suffix\" === this.variables_real[0] || \"citation-label\" === this.variables_real[0]) {\n                if (this.variables_real[0] === \"citation-number\") {\n                    if (state.build.root === \"citation\") {\n                        state.opt.update_mode = CSL.NUMERIC;\n                    }\n                    if (state.build.root === \"bibliography\") {\n                        state.opt.bib_mode = CSL.NUMERIC;\n                    }\n                    if (state.build.area === \"bibliography_sort\") {\n                        state.opt.citation_number_sort_used = true;\n                    }\n                    if (\"citation-number\" === state[state.tmp.area].opt.collapse) {\n                        this.range_prefix = state.getTerm(\"citation-range-delimiter\");\n                    }\n                    this.successor_prefix = state[state.build.area].opt.layout_delimiter;\n                    this.splice_prefix = state[state.build.area].opt.layout_delimiter;\n                    func = function (state, Item, item) {\n                        id = \"\" + Item.id;\n                        if (!state.tmp.just_looking) {\n                            if (item && item[\"author-only\"]) {\n                                state.tmp.element_trace.replace(\"do-not-suppress-me\");\n                                var reference_term = state.getTerm(\"reference\", \"long\", \"singular\");\n                                if (\"undefined\" === typeof reference_term) {\n                                    reference_term = \"reference\";\n                                }\n                                term = CSL.Output.Formatters[\"capitalize-first\"](state, reference_term);\n                                state.output.append(term + \" \");\n                                state.tmp.last_element_trace = true;\n                            }\n                            if (item && item[\"suppress-author\"]) {\n                                if (state.tmp.last_element_trace) {\n                                    state.tmp.element_trace.replace(\"suppress-me\");\n                                }\n                                state.tmp.last_element_trace = false;\n                            }\n                            num = state.registry.registry[id].seq;\n                            if (state.opt.citation_number_slug) {\n                                state.output.append(state.opt.citation_number_slug, this);\n                            } else {\n                                number = new CSL.NumericBlob(false, num, this, Item.id);\n                                if (state.tmp.in_cite_predecessor) {\n                                    if (!state.tmp.just_looking) {\n                                    }\n                                    number.suppress_splice_prefix = true;\n                                }\n                                state.output.append(number, \"literal\");\n                            }\n                        }\n                    };\n                    this.execs.push(func);\n                } else if (this.variables_real[0] === \"year-suffix\") {\n                    state.opt.has_year_suffix = true;\n                    if (state[state.tmp.area].opt.collapse === \"year-suffix-ranged\") {\n                        this.range_prefix = state.getTerm(\"citation-range-delimiter\");\n                    }\n                    this.successor_prefix = state[state.build.area].opt.layout_delimiter;\n                    if (state[state.tmp.area].opt[\"year-suffix-delimiter\"]) {\n                        this.successor_prefix = state[state.build.area].opt[\"year-suffix-delimiter\"];\n                    }\n                    func = function (state, Item) {\n                        if (state.registry.registry[Item.id] && state.registry.registry[Item.id].disambig.year_suffix !== false && !state.tmp.just_looking) {\n                            num = parseInt(state.registry.registry[Item.id].disambig.year_suffix, 10);\n                            if (state[state.tmp.area].opt.cite_group_delimiter) {\n                                this.successor_prefix = state[state.tmp.area].opt.cite_group_delimiter;\n                            }\n                            number = new CSL.NumericBlob(false, num, this, Item.id);\n                            formatter = new CSL.Util.Suffixator(CSL.SUFFIX_CHARS);\n                            number.setFormatter(formatter);\n                            state.output.append(number, \"literal\");\n                            firstoutput = false;\n                            for (var i=0,ilen=state.tmp.group_context.mystack.length; i<ilen; i++) {\n                                flags = state.tmp.group_context.mystack[i];\n                                if (!flags.variable_success && (flags.variable_attempt || (!flags.variable_attempt && !flags.term_intended))) {\n                                    firstoutput = true;\n                                    break;\n                                }\n                            }\n                            specialdelimiter = state[state.tmp.area].opt[\"year-suffix-delimiter\"];\n                            if (firstoutput && specialdelimiter && !state.tmp.sort_key_flag) {\n                                state.tmp.splice_delimiter = state[state.tmp.area].opt[\"year-suffix-delimiter\"];\n                            }\n                        }\n                    };\n                    this.execs.push(func);\n                } else if (this.variables_real[0] === \"citation-label\") {\n                    state.opt.has_year_suffix = true;\n                    func = function (state, Item) {\n                        label = Item[\"citation-label\"];\n                        if (!label) {\n                            label = state.getCitationLabel(Item);\n                        }\n                        if (!state.tmp.just_looking) {\n                            suffix = \"\";\n                            if (state.registry.registry[Item.id] && state.registry.registry[Item.id].disambig.year_suffix !== false) {\n                                num = parseInt(state.registry.registry[Item.id].disambig.year_suffix, 10);\n                                suffix = state.fun.suffixator.format(num);\n                            }\n                            label += suffix;\n                        }\n                        state.output.append(label, this);\n                    };\n                    this.execs.push(func);\n                }\n            } else {\n                if (this.strings.term) {\n                    func = function (state, Item, item) {\n                        var gender = state.opt.gender[Item.type];\n                        var term = this.strings.term;\n                        term = state.getTerm(term, form, plural, gender, CSL.TOLERANT, this.default_locale);\n                        var myterm;\n                        if (term !== \"\") {\n                            state.tmp.group_context.tip.term_intended = true;\n                        }\n                        CSL.UPDATE_GROUP_CONTEXT_CONDITION(state, term);\n                        if (!state.tmp.term_predecessor && !(state.opt[\"class\"] === \"in-text\" && state.tmp.area === \"citation\")) {\n                            myterm = CSL.Output.Formatters[\"capitalize-first\"](state, term);\n                        } else {\n                            myterm = term;\n                        }\n                        if (state.tmp.strip_periods) {\n                            myterm = myterm.replace(/\\./g, \"\");\n                        } else {\n                            for (var i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n                                if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n                                    myterm = myterm.replace(/\\./g, \"\");\n                                    break;\n                                }\n                            }\n                        }\n                        state.output.append(myterm, this);\n                    };\n                    this.execs.push(func);\n                    state.build.term = false;\n                    state.build.form = false;\n                    state.build.plural = false;\n                } else if (this.variables_real.length) {\n                    func = function (state, Item, item) {\n                        if (this.variables_real[0] !== \"locator\") {\n                            state.tmp.have_collapsed = false;\n                        }\n                        var parallel_variable = this.variables[0];\n                        if (parallel_variable === \"title\" \n                            && (form === \"short\" || Item[\"title-short\"])) { \n                            parallel_variable = \"title-short\";\n                        }\n                        state.parallel.StartVariable(parallel_variable);\n                        state.parallel.AppendToVariable(Item[parallel_variable],parallel_variable);\n                        if (!state.tmp.group_context.tip.condition && Item[this.variables[0]]) {\n                            state.tmp.just_did_number = false;\n                        }\n                    };\n                    this.execs.push(func);\n                    if (CSL.MULTI_FIELDS.indexOf(this.variables_real[0]) > -1\n                        || [\"language-name\", \"language-name-original\"].indexOf(this.variables_real[0]) > -1) {\n                        var abbrevfam = this.variables[0];\n                        var abbrfall = false;\n                        var altvar = false;\n                        var transfall = false;\n                        if (form === \"short\") {\n                            if (this.variables_real[0] === \"container-title\") {\n                                altvar = \"journalAbbreviation\";\n                            } else if (this.variables_real[0] === \"title\") {\n                                altvar = \"title-short\";\n                            }\n                        } else {\n                            abbrevfam = false;\n                        }\n                        if (state.build.extension) {\n                            transfall = true;\n                        } else {\n                            transfall = true;\n                            abbrfall = true;\n\t\t\t\t\t\t}\n                        func = state.transform.getOutputFunction(this.variables, abbrevfam, abbrfall, altvar, transfall);\n                    } else {\n                        if (CSL.CITE_FIELDS.indexOf(this.variables_real[0]) > -1) {\n                            func = function (state, Item, item) {\n                                if (item && item[this.variables[0]]) {\n                                    state.processNumber(this, item, this.variables[0], Item.type);\n                                    CSL.Util.outputNumericField(state, this.variables[0], Item.id);\n                                    state.output.append(value, this, false, false, true);\n                                    if ([\"locator\", \"locator-extra\"].indexOf(this.variables_real[0]) > -1\n                                       && !state.tmp.just_looking) { \n                                        state.tmp.done_vars.push(this.variables_real[0]);\n                                    }\n                                }\n                            };\n                        } else  if ([\"page\", \"page-first\", \"chapter-number\", \"collection-number\", \"edition\", \"issue\", \"number\", \"number-of-pages\", \"number-of-volumes\", \"volume\"].indexOf(this.variables_real[0]) > -1) {\n                            func = function(state, Item) {\n                                state.processNumber(this, Item, this.variables[0], Item.type);\n                                CSL.Util.outputNumericField(state, this.variables[0], Item.id);\n                            }\n                        } else if ([\"URL\", \"DOI\"].indexOf(this.variables_real[0]) > -1) {\n                            func = function (state, Item) {\n                                var value;\n                                if (this.variables[0]) {\n                                    value = state.getVariable(Item, this.variables[0], form);\n                                    if (value) {\n                                        if (state.opt.development_extensions.wrap_url_and_doi) {\n                                            if (!this.decorations.length || this.decorations[0][0] !== \"@\" + this.variables[0]) {\n                                                this.decorations = [[\"@\" + this.variables[0], \"true\"]].concat(this.decorations);\n                                            }\n                                        } else {\n                                            if (this.decorations.length && this.decorations[0][0] === \"@\" + this.variables[0]) {\n                                                this.decorations = this.decorations.slice(1);\n                                            }\n                                        }\n                                        state.output.append(value, this, false, false, true);\n                                    }\n                                }\n                            };\n                        } else if (this.variables_real[0] === \"section\") {\n                            func = function (state, Item) {\n                                var value;\n                                value = state.getVariable(Item, this.variables[0], form);\n                                if (value) {\n                                    state.output.append(value, this);\n                                }\n                            };\n                        } else if (this.variables_real[0] === \"hereinafter\") {\n                            func = function (state, Item) {\n                                var value = state.transform.abbrevs[\"default\"][\"hereinafter\"][Item.id];\n                                if (value) {\n                                    state.output.append(value, this);\n                                    state.tmp.group_context.tip.variable_success = true;\n                                }\n                            }\n                        } else {\n                            func = function (state, Item) {\n                                var value;\n                                if (this.variables[0]) {\n                                    value = state.getVariable(Item, this.variables[0], form);\n                                    if (value) {\n                                        value = \"\" + value;\n                                        value = value.split(\"\\\\\").join(\"\");\n                                        state.output.append(value, this);\n                                    }\n                                }\n                            };\n                        }\n                    }\n                    this.execs.push(func);\n                    func = function (state, Item) {\n                        state.parallel.CloseVariable(\"text\");\n                    };\n                    this.execs.push(func);\n                } else if (this.strings.value) {\n                    func = function (state, Item) {\n                        state.tmp.group_context.tip.term_intended = true;\n                        CSL.UPDATE_GROUP_CONTEXT_CONDITION(state, this.strings.value, true);\n                        state.output.append(this.strings.value, this);\n                    };\n                    this.execs.push(func);\n                }\n            }\n            target.push(this);\n            CSL.Util.substituteEnd.call(this, state, target);\n        }\n    }\n};\nCSL.Attributes = {};\nCSL.Attributes[\"@genre\"] = function (state, arg) {\n    arg = arg.replace(\"-\", \" \");\n    var func = function (Item, item) {\n        var ret;\n        if (arg === Item.genre) {\n            return true;\n        }\n        return false;\n    }\n    this.tests.push(func);\n}\nCSL.Attributes[\"@disambiguate\"] = function (state, arg) {\n    if (arg === \"true\") {\n        state.opt.has_disambiguate = true;\n        var func = function (Item, item) {\n            state.tmp.disambiguate_maxMax += 1;\n            if (state.tmp.disambig_settings.disambiguate\n                && state.tmp.disambiguate_count < state.tmp.disambig_settings.disambiguate) {\n                state.tmp.disambiguate_count += 1;\n                return true;\n            }\n            return false;\n        };\n        this.tests.push(func);\n    } else if (arg === \"check-ambiguity-and-backreference\") {\n        var func = function (Item, item) {\n            if (state.registry.registry[Item.id].disambig.disambiguate && state.registry.registry[Item.id][\"citation-count\"] > 1) {\n                return true;\n            }\n            return false;\n        };\n        this.tests.push(func);\n    }\n};\nCSL.Attributes[\"@is-numeric\"] = function (state, arg, joiner) {\n    var variables = arg.split(/\\s+/);\n    var maketest = function(variable) {\n        return function (Item, item) {\n            var myitem = Item;\n            if ([\"locator\",\"locator-extra\"].indexOf(variable) > -1) {\n                myitem = item;\n            }\n            if (\"undefined\" === typeof myitem) {\n                return false;\n            }\n            if (CSL.NUMERIC_VARIABLES.indexOf(variable) > -1) {\n                if (!state.tmp.shadow_numbers[variable]) {\n                    state.processNumber(false, myitem, variable, Item.type);\n                }\n                if (myitem[variable] && state.tmp.shadow_numbers[variable].numeric) {\n                    return true;\n                }\n            } else if ([\"title\", \"locator-extra\",\"version\"].indexOf(variable) > -1) {\n                if (myitem[variable]) {\n                    if (myitem[variable].slice(-1) === \"\" + parseInt(myitem[variable].slice(-1), 10)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n    for (var i=0; i<variables.length; i+=1) {\n        this.tests.push(maketest(variables[i]));\n    }\n};\nCSL.Attributes[\"@is-uncertain-date\"] = function (state, arg) {\n    var variables = arg.split(/\\s+/);\n    var maketest = function (myvariable) {\n        return function(Item, item) {\n            if (Item[myvariable] && Item[myvariable].circa) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n    for (var i=0,ilen=variables.length;i<ilen;i+=1) {\n        this.tests.push(maketest(variables[i]));\n    };\n};\nCSL.Attributes[\"@locator\"] = function (state, arg) {\n    var trylabels = arg.replace(\"sub verbo\", \"sub-verbo\");\n    trylabels = trylabels.split(/\\s+/);\n    var maketest = function (trylabel) {\n        return function(Item, item) {\n            var label;\n            state.processNumber(false, item, \"locator\");\n            label = state.tmp.shadow_numbers.locator.label;\n            if (trylabel === label) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n    for (var i=0,ilen=trylabels.length;i<ilen;i+=1) {\n        this.tests.push(maketest(trylabels[i]));\n    }\n};\nCSL.Attributes[\"@position\"] = function (state, arg) {\n    var tryposition;\n    state.opt.update_mode = CSL.POSITION;\n    state.parallel.use_parallels = null;\n    var trypositions = arg.split(/\\s+/);\n    var maketest = function(tryposition) {\n        return function (Item, item) {\n            if (state.tmp.area === \"bibliography\") {\n                return false;\n            }\n            if (item && \"undefined\" === typeof item.position) {\n                item.position = 0;\n            }\n            if (item && typeof item.position === \"number\") {\n                if (item.position === 0 && tryposition === 0) {\n                    return true;\n                } else if (tryposition > 0 && item.position >= tryposition) {\n                    return true;\n                }\n            } else if (tryposition === 0) {\n                return true;\n            }\n            return false;\n        }\n    }\n    for (var i=0,ilen=trypositions.length;i<ilen;i+=1) {\n        var tryposition = trypositions[i];\n        if (tryposition === \"first\") {\n            tryposition = CSL.POSITION_FIRST;\n        } else if (tryposition === \"subsequent\") {\n            tryposition = CSL.POSITION_SUBSEQUENT;\n        } else if (tryposition === \"ibid\") {\n            tryposition = CSL.POSITION_IBID;\n        } else if (tryposition === \"ibid-with-locator\") {\n            tryposition = CSL.POSITION_IBID_WITH_LOCATOR;\n        }\n        if (\"near-note\" === tryposition) {\n            this.tests.push(function (Item, item) {\n                if (item && item.position >= CSL.POSITION_SUBSEQUENT && item[\"near-note\"]) {\n                    return true;\n                }\n                return false;\n            });\n        } else if (\"far-note\" === tryposition) {\n            this.tests.push(function (Item, item) {\n                if (item && item.position == CSL.POSITION_SUBSEQUENT && !item[\"near-note\"]) {\n                    return true;\n                }\n                return false;\n            });\n        } else {\n            this.tests.push(maketest(tryposition));\n        }\n    }\n};\nCSL.Attributes[\"@type\"] = function (state, arg) {\n    var types = arg.split(/\\s+/);\n    var maketest = function (mytype) {\n        return function(Item,item) {\n            var ret = (Item.type === mytype);\n            if (ret) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n    var tests = [];\n    for (var i=0,ilen=types.length;i<ilen;i+=1) {\n        tests.push(maketest(types[i]));\n    }\n    this.tests.push(state.fun.match.any(this, state, tests));\n};\nCSL.Attributes[\"@variable\"] = function (state, arg) {\n    var func;\n    this.variables = arg.split(/\\s+/);\n    this.variables_real = this.variables.slice();\n    if (\"label\" === this.name && this.variables[0]) {\n        this.strings.term = this.variables[0];\n    } else if ([\"names\", \"date\", \"text\", \"number\"].indexOf(this.name) > -1) {\n        func = function (state, Item, item) {\n            for (var i = this.variables.length - 1; i > -1; i += -1) {\n                this.variables.pop();\n            }\n            for (var i=0,ilen=this.variables_real.length;i<ilen;i++) {\n                if (state.tmp.done_vars.indexOf(this.variables_real[i]) === -1 \n                    && !(item && Item.type === \"legal_case\" && item[\"suppress-author\"] && this.variables_real[i] === \"title\")\n                   ) {\n                    this.variables.push(this.variables_real[i]);\n                }\n                if (state.tmp.can_block_substitute) {\n                    state.tmp.done_vars.push(this.variables_real[i]);\n                }\n            }\n        };\n        this.execs.push(func);\n        func = function (state, Item, item) {\n            var mydate;\n            output = false;\n            for (var i=0,ilen=this.variables.length;i<ilen;i++) {\n                var variable = this.variables[i];\n                if ([\"authority\", \"committee\"].indexOf(variable) > -1\n                    && \"string\" === typeof Item[variable]\n                    && \"names\" === this.name) {\n                    var creatorParents = [];\n                    var isValid = true;\n                    var rawNames = Item[variable].split(/\\s*;\\s*/);\n                    var rawMultiNames = {};\n                    if (Item.multi && Item.multi._keys[variable]) {\n                        for (var langTag in Item.multi._keys[variable]) {\n                            rawMultiNames[langTag] = Item.multi._keys[variable][langTag].split(/\\s*;\\s*/);\n                            if (rawMultiNames[langTag].length !== rawNames.length) {\n                                isValid = false;\n                                break;\n                            }\n                        }\n                    }\n                    if (!isValid) {\n                        rawNames = [Item[variable]];\n                        rawMultiNames = Item.multi._keys[variable];\n                    }\n                    for (var j = 0, jlen = rawNames.length; j < jlen; j++) {\n                        var creatorParent = {\n                            literal:rawNames[j],\n                            multi:{\n                                _key:{}\n                            }\n                        };\n                        for (var langTag in rawMultiNames) {\n                            var creatorChild = {\n                                literal:rawMultiNames[langTag][j]\n                            }\n                            creatorParent.multi._key[langTag] = creatorChild;\n                        }\n                        rawNames[j] = creatorParent;\n                    }\n                    Item[variable] = rawNames;\n                }\n                if (this.strings.form === \"short\" && !Item[variable]) {\n                    if (variable === \"title\") {\n                        variable = \"title-short\";\n                    } else if (variable === \"container-title\") {\n                        variable = \"journalAbbreviation\";\n                    }\n                }\n                if (variable === \"year-suffix\") {\n                    output = true;\n                    break;\n                } else if (CSL.DATE_VARIABLES.indexOf(variable) > -1) {\n                    if (state.opt.development_extensions.locator_date_and_revision && \"locator-date\" === variable) {\n                        output = true;\n                        break;\n                    }\n                    if (Item[variable]) {\n                        for (var key in Item[variable]) {\n                            if (this.dateparts.indexOf(key) === -1 && \"literal\" !== key) {\n                                continue;\n                            }\n                            if (Item[variable][key]) {\n                                output = true;\n                                break;\n                            }\n                        }\n                        if (output) {\n                            break;\n                        }\n                    }\n                } else if (\"locator\" === variable) {\n                    if (item && item.locator) {\n                        output = true;\n                    }\n                    break;\n                } else if (\"locator-extra\" === variable) {\n                    if (item && item[\"locator-extra\"]) {\n                        output = true;\n                    }\n                    break;\n                } else if ([\"citation-number\",\"citation-label\"].indexOf(variable) > -1) {\n                    output = true;\n                    break;\n                } else if (\"first-reference-note-number\" === variable) {\n                    if (item && item[\"first-reference-note-number\"]) {\n                        output = true;\n                    }\n                    break;\n                } else if (\"hereinafter\" === variable) {\n                    if (state.transform.abbrevs[\"default\"].hereinafter[Item.id]\n                        && state.sys.getAbbreviation\n                        && Item.id) {\n                        output = true;\n                    }\n                    break;\n                } else if (\"object\" === typeof Item[variable]) {\n                    if (Item[variable].length) {\n                    }\n                    break;\n                } else if (\"string\" === typeof Item[variable] && Item[variable]) {\n                    output = true;\n                    break;\n                } else if (\"number\" === typeof Item[variable]) {\n                    output = true;\n                    break;\n                }\n                if (output) {\n                    break;\n                }\n            }\n            if (output) {\n                for (var i=0,ilen=this.variables_real.length;i<ilen;i++) {\n                    var variable = this.variables_real[i];\n                    if (variable !== \"citation-number\" || state.tmp.area !== \"bibliography\") {\n                        state.tmp.cite_renders_content = true;\n                    }\n                    state.tmp.group_context.tip.variable_success = true;\n                    if (state.tmp.can_substitute.value() \n                        && state.tmp.area === \"bibliography\"\n                        && \"string\" === typeof Item[variable]) {\n                        state.tmp.name_node.top = state.output.current.value();\n                        state.tmp.rendered_name.push(Item[variable]);\n                    }\n                }\n                state.tmp.can_substitute.replace(false,  CSL.LITERAL);\n            } else {\n                state.tmp.group_context.tip.variable_attempt = true;\n            }\n        };\n        this.execs.push(func);\n    } else if ([\"if\",  \"else-if\", \"condition\"].indexOf(this.name) > -1) {\n        var maketest = function (variable) {\n            return function(Item,item){\n                var myitem = Item;\n                if (item && [\"locator\", \"locator-extra\", \"first-reference-note-number\", \"locator-date\"].indexOf(variable) > -1) {\n                    myitem = item;\n                }\n                if (variable === \"hereinafter\" && state.sys.getAbbreviation && myitem.id) {\n                    if (state.transform.abbrevs[\"default\"].hereinafter[myitem.id]) {\n                        return true;\n                    }\n                } else if (myitem[variable]) {\n                    if (\"number\" === typeof myitem[variable] || \"string\" === typeof myitem[variable]) {\n                        return true;\n                    } else if (\"object\" === typeof myitem[variable]) {\n                        for (key in myitem[variable]) {\n                            if (myitem[variable][key]) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }\n        }\n        for (var i=0,ilen=this.variables.length;i<ilen;i+=1) {\n            this.tests.push(maketest(this.variables[i]));\n        }\n    }\n};\nCSL.Attributes[\"@page\"] = function (state, arg) {\n    var trylabels = arg.replace(\"sub verbo\", \"sub-verbo\");\n    trylabels = trylabels.split(/\\s+/);\n    var maketest = function (trylabel) {\n        return function(Item, item) {\n            var label;\n            state.processNumber(false, Item, \"page\", Item.type);\n            if (!state.tmp.shadow_numbers.page.label) {\n                label = \"page\";\n            } else if (state.tmp.shadow_numbers.page.label === \"sub verbo\") {\n                label = \"sub-verbo\";\n            } else {\n                label = state.tmp.shadow_numbers.page.label;\n            }\n            if (trylabel === label) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n    for (var i=0,ilen=trylabels.length;i<ilen;i+=1) {\n        this.tests.push(maketest(trylabels[i]));\n    }\n};\nCSL.Attributes[\"@number\"] = function (state, arg) {\n    var trylabels = arg.replace(\"sub verbo\", \"sub-verbo\");\n    trylabels = trylabels.split(/\\s+/);\n    var maketest = function(trylabel) {\n        return function (Item, item) {\n            var label;\n            state.processNumber(false, Item, \"number\", Item.type);\n            if (!state.tmp.shadow_numbers.number.label) {\n                label = \"number\";\n            } else if (state.tmp.shadow_numbers.number.label === \"sub verbo\") {\n                label = \"sub-verbo\";\n            } else {\n                label = state.tmp.shadow_numbers.number.label;\n            }\n            if (trylabel === label) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n    for (var i=0,ilen=trylabels.length;i<ilen;i+=1) {\n        this.tests.push(maketest(trylabels[i]));\n    }\n};\nCSL.Attributes[\"@jurisdiction\"] = function (state, arg) {\n    var tryjurisdictions = arg.split(/\\s+/);\n    for (var i=0,ilen=tryjurisdictions.length;i<ilen;i+=1) {\n        tryjurisdictions[i] = tryjurisdictions[i].split(\":\");\n    }\n    var maketests = function (tryjurisdiction) {\n        return function(Item,item){\n            if (!Item.jurisdiction) {\n                return false;\n            }\n            var jurisdictions = Item.jurisdiction.split(\":\");\n            for (var i=0,ilen=jurisdictions.length;i<ilen;i+=1) {\n                jurisdictions[i] = jurisdictions[i].split(\":\");\n            }\n            for (i=tryjurisdiction.length;i>0;i+=-1) {\n                var tryjurisdictionStr = tryjurisdiction.slice(0,i).join(\":\");\n                var jurisdiction = jurisdictions.slice(0,i).join(\":\");\n                if (tryjurisdictionStr !== jurisdiction) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    for (var i=0,ilen=tryjurisdictions.length;i<ilen;i+=1) {\n        var tryjurisdictionSlice = tryjurisdictions[i].slice();\n        this.tests.push(maketests(tryjurisdictionSlice));\n    }\n};\nCSL.Attributes[\"@context\"] = function (state, arg) {\n    var func = function (Item, item) {\n\t\tvar area = state.tmp.area.slice(0, arg.length);\n\t\tif (area === arg) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n    };\n    this.tests.push(func);\n};\nCSL.Attributes[\"@has-year-only\"] = function (state, arg) {\n    var trydates = arg.split(/\\s+/);\n    var maketest = function (trydate) {\n        return function(Item,item){\n            var date = Item[trydate];\n            if (!date || date.month || date.season) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }\n    for (var i=0,ilen=trydates.length;i<ilen;i+=1) {\n        this.tests.push(maketest(trydates[i]));\n    }\n};\nCSL.Attributes[\"@has-to-month-or-season\"] = function (state, arg) {\n    var trydates = arg.split(/\\s+/);\n    var maketest = function (trydate) {\n        return function(Item,item){\n            var date = Item[trydate];\n            if (!date || (!date.month && !date.season) || date.day) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }\n    for (var i=0,ilen=trydates.length;i<ilen;i+=1) {\n        this.tests.push(maketest(trydates[i]));\n    }\n};\nCSL.Attributes[\"@has-day\"] = function (state, arg) {\n    var trydates = arg.split(/\\s+/);\n    var maketest = function (trydate) {\n        return function(Item,item){\n            var date = Item[trydate];\n            if (!date || !date.day) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }\n    for (var i=0,ilen=trydates.length;i<ilen;i+=1) {\n        this.tests.push(maketest(trydates[i]));\n    };\n};\nCSL.Attributes[\"@subjurisdictions\"] = function (state, arg) {\n    var trysubjurisdictions = parseInt(arg, 10);\n    var func = function (Item, item) {\n        var subjurisdictions = 0;\n        if (Item.jurisdiction) {\n            subjurisdictions = Item.jurisdiction.split(\":\").length;\n        }\n        if (subjurisdictions) {\n            subjurisdictions += -1;\n        }\n        if (subjurisdictions >= trysubjurisdictions) {\n            return true;\n        }\n        return false;\n    };\n    this.tests.push(func);\n};\nCSL.Attributes[\"@is-plural\"] = function (state, arg) {\n    var func = function (Item, item) {\n        var nameList = Item[arg];\n        if (nameList && nameList.length) {\n            var persons = 0;\n            var institutions = 0;\n            var last_is_person = false;\n            for (var i = 0, ilen = nameList.length; i < ilen; i += 1) {\n                if (state.opt.development_extensions.spoof_institutional_affiliations\n                    && (nameList[i].literal || (nameList[i].isInstitution && nameList[i].family && !nameList[i].given))) {\n                    institutions += 1;\n                    last_is_person = false;\n                } else {\n                    persons += 1;\n                    last_is_person = true;\n                }\n            }\n            if (persons > 1) {\n                return true;\n            } else if (institutions > 1) {\n                return true;\n            } else if (institutions && last_is_person) {\n                return true;\n            }\n        }\n        return false;\n    };\n    this.tests.push(func);\n};\nCSL.Attributes[\"@locale\"] = function (state, arg) {\n    var func, ret, len, pos, variable, myitem, langspec, lang, lst, i, ilen, fallback;\n    var locale_default = state.opt[\"default-locale\"][0];\n    if (this.name === \"layout\") {\n        this.locale_raw = arg;\n        if (this.tokentype === CSL.START) {\n            var locales = arg.split(/\\s+/);\n            var sort_locale = {};\n            var localeMaster = CSL.localeResolve(locales[0], locale_default);\n            if (localeMaster.generic) {\n                sort_locale[localeMaster.generic] = localeMaster.best;\n            } else {\n                sort_locale[localeMaster.best] = localeMaster.best;\n            }\n            for (var i=1,ilen=locales.length;i<ilen;i+=1) {\n                var localeServant = CSL.localeResolve(locales[i], locale_default);\n                if (localeServant.generic) {\n                    sort_locale[localeServant.generic] = localeMaster.best;\n                } else {\n                    sort_locale[localeServant.best] = localeMaster.best;\n                }\n            }\n            state[state.build.area].opt.sort_locales.push(sort_locale);\n        }\n        state.opt.has_layout_locale = true;\n    } else {\n        lst = arg.split(/\\s+/);\n        var locale_bares = [];\n        for (i = 0, ilen = lst.length; i < ilen; i += 1) {\n            lang = lst[i];\n            langspec = CSL.localeResolve(lang, locale_default);\n            if (lst[i].length === 2) {\n                locale_bares.push(langspec.bare);\n            }\n            state.localeConfigure(langspec, true);\n            lst[i] = langspec;\n        }\n        var locale_list = lst.slice();\n        var maketest = function (locale_list, locale_default,locale_bares) {\n            return function (Item, item) {\n                var key, res;\n                ret = [];\n                res = false;\n                var langspec = false;\n                var lang;\n                if (!Item.language) {\n                    lang = locale_default;\n                } else {\n                    lang = Item.language;\n                }\n                langspec = CSL.localeResolve(lang, locale_default);\n                for (i = 0, ilen = locale_list.length; i < ilen; i += 1) {\n                    if (langspec.best === locale_list[i].best) {\n                        res = true;\n                        break;\n                    }\n                }\n                if (!res && locale_bares.indexOf(langspec.bare) > -1) {\n                    res = true;\n                }\n                return res;\n            }\n        }\n        this.tests.push(maketest(locale_list,locale_default,locale_bares));\n    }\n};\nCSL.Attributes[\"@authority-residue\"] = function (state, arg) {\n    var maketest = function () {\n        var succeed = (arg === \"true\") ? true : false;\n        return function(Item, item) {\n            if (!Item.authority || !Item.authority[0] || !Item.authority[0].family) return !succeed;\n            var varLen = Item.authority[0].family.split(\"|\").length;\n            var stopLast = state.tmp.authority_stop_last;\n            if ((varLen + stopLast) > 0) {\n                return succeed;\n            } else {\n                return !succeed;\n            }\n        }\n    }\n    this.tests.push(maketest());\n}\nCSL.Attributes[\"@locale-internal\"] = function (state, arg) {\n    var func, ret, len, pos, variable, myitem, langspec, lang, lst, i, ilen, fallback;\n        lst = arg.split(/\\s+/);\n        this.locale_bares = [];\n        for (i = 0, ilen = lst.length; i < ilen; i += 1) {\n            lang = lst[i];\n            langspec = CSL.localeResolve(lang, state.opt[\"default-locale\"][0]);\n            if (lst[i].length === 2) {\n                this.locale_bares.push(langspec.bare);\n            }\n            state.localeConfigure(langspec);\n            lst[i] = langspec;\n        }\n        this.locale_default = state.opt[\"default-locale\"][0];\n        this.locale = lst[0].best;\n        this.locale_list = lst.slice();\n        var maketest = function (me) {\n            return function (Item, item) {\n                var key, res;\n                ret = [];\n                res = false;\n                var langspec = false;\n                if (Item.language) {\n                    lang = Item.language;\n                    langspec = CSL.localeResolve(lang, state.opt[\"default-locale\"][0]);\n                    if (langspec.best === state.opt[\"default-locale\"][0]) {\n                        langspec = false;\n                    }\n                }\n                if (langspec) {\n                    for (i = 0, ilen = me.locale_list.length; i < ilen; i += 1) {\n                        if (langspec.best === me.locale_list[i].best) {\n                            state.opt.lang = me.locale;\n                            state.tmp.last_cite_locale = me.locale;\n                            state.output.openLevel(\"empty\");\n                            state.output.current.value().new_locale = me.locale;\n                            res = true;\n                            break;\n                        }\n                    }\n                    if (!res && me.locale_bares.indexOf(langspec.bare) > -1) {\n                        state.opt.lang = me.locale;\n                        state.tmp.last_cite_locale = me.locale;\n                        state.output.openLevel(\"empty\");\n                        state.output.current.value().new_locale = me.locale;\n                        res = true;\n                    }\n                }\n                return res;\n            }\n        }\n        var me = this;\n        this.tests.push(maketest(me));\n}\nCSL.Attributes[\"@is-parallel\"] = function (state, arg) {\n    var values = arg.split(\" \");\n    for (var i = 0, ilen = values.length; i < ilen; i += 1) {\n        if (values[i] === \"true\") {\n            values[i] = true;\n        } else if (values[i] === \"false\") {\n            values[i] = false;\n        }\n    }\n    this.strings.set_parallel_condition = values;\n};\nCSL.Attributes[\"@require\"] = function (state, arg) {\n    this.strings.require = arg;\n}\nCSL.Attributes[\"@reject\"] = function (state, arg) {\n    this.strings.reject = arg;\n}\nCSL.Attributes[\"@gender\"] = function (state, arg) {\n    this.gender = arg;\n}\nCSL.Attributes[\"@cslid\"] = function (state, arg) {\n    this.cslid = parseInt(arg, 10);\n};\nCSL.Attributes[\"@label-form\"] = function (state, arg) {\n    this.strings.label_form_override = arg;\n};\nCSL.Attributes[\"@part-separator\"] = function (state, arg) {\n    this.strings[\"part-separator\"] = arg;\n};\nCSL.Attributes[\"@leading-noise-words\"] = function (state, arg) {\n    this[\"leading-noise-words\"] = arg;\n};\nCSL.Attributes[\"@name-never-short\"] = function (state, arg) {\n    this[\"name-never-short\"] = arg;\n};\nCSL.Attributes[\"@class\"] = function (state, arg) {\n    state.opt[\"class\"] = arg;\n};\nCSL.Attributes[\"@version\"] = function (state, arg) {\n    state.opt.version = arg;\n};\nCSL.Attributes[\"@value\"] = function (state, arg) {\n    this.strings.value = arg;\n};\nCSL.Attributes[\"@name\"] = function (state, arg) {\n    this.strings.name = arg;\n};\nCSL.Attributes[\"@form\"] = function (state, arg) {\n    this.strings.form = arg;\n};\nCSL.Attributes[\"@date-parts\"] = function (state, arg) {\n    this.strings[\"date-parts\"] = arg;\n};\nCSL.Attributes[\"@range-delimiter\"] = function (state, arg) {\n    this.strings[\"range-delimiter\"] = arg;\n};\nCSL.Attributes[\"@macro\"] = function (state, arg) {\n    this.postponed_macro = arg;\n};\nCSL.Attributes[\"@term\"] = function (state, arg) {\n    if (arg === \"sub verbo\") {\n        this.strings.term = \"sub-verbo\";\n    } else {\n        this.strings.term = arg;\n    }\n};\nCSL.Attributes[\"@xmlns\"] = function (state, arg) {};\nCSL.Attributes[\"@lang\"] = function (state, arg) {\n    if (arg) {\n        state.build.lang = arg;\n    }\n};\nCSL.Attributes[\"@lingo\"] = function (state, arg) {\n};\nCSL.Attributes[\"@macro-has-date\"] = function (state, arg) {\n    this[\"macro-has-date\"] = true;\n};\nCSL.Attributes[\"@suffix\"] = function (state, arg) {\n    this.strings.suffix = arg;\n};\nCSL.Attributes[\"@prefix\"] = function (state, arg) {\n    this.strings.prefix = arg;\n};\nCSL.Attributes[\"@delimiter\"] = function (state, arg) {\n    this.strings.delimiter = arg;\n};\nCSL.Attributes[\"@match\"] = function (state, arg) {\n    this.match = arg;\n};\nCSL.Attributes[\"@names-min\"] = function (state, arg) {\n    var val = parseInt(arg, 10);\n    if (state[state.build.area].opt.max_number_of_names < val) {\n        state[state.build.area].opt.max_number_of_names = val;\n    }\n    this.strings[\"et-al-min\"] = val;\n};\nCSL.Attributes[\"@names-use-first\"] = function (state, arg) {\n    this.strings[\"et-al-use-first\"] = parseInt(arg, 10);\n};\nCSL.Attributes[\"@names-use-last\"] = function (state, arg) {\n    if (arg === \"true\") {\n        this.strings[\"et-al-use-last\"] = true;\n    } else {\n        this.strings[\"et-al-use-last\"] = false;\n    }\n};\nCSL.Attributes[\"@sort\"] = function (state, arg) {\n    if (arg === \"descending\") {\n        this.strings.sort_direction = CSL.DESCENDING;\n    }\n};\nCSL.Attributes[\"@plural\"] = function (state, arg) {\n    if (\"always\" === arg || \"true\" === arg) {\n        this.strings.plural = 1;\n    } else if (\"never\" === arg || \"false\" === arg) {\n        this.strings.plural = 0;\n    } else if (\"contextual\" === arg) {\n        this.strings.plural = false;\n    }\n};\nCSL.Attributes[\"@has-publisher-and-publisher-place\"] = function (state, arg) {\n    this.strings[\"has-publisher-and-publisher-place\"] = true;\n};\nCSL.Attributes[\"@publisher-delimiter-precedes-last\"] = function (state, arg) {\n    this.strings[\"publisher-delimiter-precedes-last\"] = arg;\n};\nCSL.Attributes[\"@publisher-delimiter\"] = function (state, arg) {\n    this.strings[\"publisher-delimiter\"] = arg;\n};\nCSL.Attributes[\"@publisher-and\"] = function (state, arg) {\n    this.strings[\"publisher-and\"] = arg;\n};\nCSL.Attributes[\"@newdate\"] = function (state, arg) {\n};\nCSL.Attributes[\"@givenname-disambiguation-rule\"] = function (state, arg) {\n    if (CSL.GIVENNAME_DISAMBIGUATION_RULES.indexOf(arg) > -1) {\n        state.citation.opt[\"givenname-disambiguation-rule\"] = arg;\n    }\n};\nCSL.Attributes[\"@collapse\"] = function (state, arg) {\n    if (arg) {\n        state[this.name].opt.collapse = arg;\n    }\n};\nCSL.Attributes[\"@cite-group-delimiter\"] = function (state, arg) {\n    if (arg) {\n        state[state.tmp.area].opt.cite_group_delimiter = arg;\n    }\n};\nCSL.Attributes[\"@names-delimiter\"] = function (state, arg) {\n    state.setOpt(this, \"names-delimiter\", arg);\n};\nCSL.Attributes[\"@name-form\"] = function (state, arg) {\n    state.setOpt(this, \"name-form\", arg);\n};\nCSL.Attributes[\"@subgroup-delimiter\"] = function (state, arg) {\n    this.strings[\"subgroup-delimiter\"] = arg;\n};\nCSL.Attributes[\"@subgroup-delimiter-precedes-last\"] = function (state, arg) {\n    this.strings[\"subgroup-delimiter-precedes-last\"] = arg;\n};\nCSL.Attributes[\"@name-delimiter\"] = function (state, arg) {\n    state.setOpt(this, \"name-delimiter\", arg);\n};\nCSL.Attributes[\"@et-al-min\"] = function (state, arg) {\n    var val = parseInt(arg, 10);\n    if (state[state.build.area].opt.max_number_of_names < val) {\n        state[state.build.area].opt.max_number_of_names = val;\n    }\n    state.setOpt(this, \"et-al-min\", val);\n};\nCSL.Attributes[\"@et-al-use-first\"] = function (state, arg) {\n    state.setOpt(this, \"et-al-use-first\", parseInt(arg, 10));\n};\nCSL.Attributes[\"@et-al-use-last\"] = function (state, arg) {\n    if (arg === \"true\") {\n        state.setOpt(this, \"et-al-use-last\", true);\n    } else {\n        state.setOpt(this, \"et-al-use-last\", false);\n    }\n};\nCSL.Attributes[\"@et-al-subsequent-min\"] = function (state, arg) {\n    var val = parseInt(arg, 10);\n    if (state[state.build.area].opt.max_number_of_names < val) {\n        state[state.build.area].opt.max_number_of_names = val;\n    }\n    state.setOpt(this, \"et-al-subsequent-min\", val);\n};\nCSL.Attributes[\"@et-al-subsequent-use-first\"] = function (state, arg) {\n    state.setOpt(this, \"et-al-subsequent-use-first\", parseInt(arg, 10));\n};\nCSL.Attributes[\"@suppress-min\"] = function (state, arg) {\n    this.strings[\"suppress-min\"] = parseInt(arg, 10);\n};\nCSL.Attributes[\"@suppress-max\"] = function (state, arg) {\n    this.strings[\"suppress-max\"] = parseInt(arg, 10);\n};\nCSL.Attributes[\"@and\"] = function (state, arg) {\n    state.setOpt(this, \"and\", arg);\n};\nCSL.Attributes[\"@delimiter-precedes-last\"] = function (state, arg) {\n    state.setOpt(this, \"delimiter-precedes-last\", arg);\n};\nCSL.Attributes[\"@delimiter-precedes-et-al\"] = function (state, arg) {\n    state.setOpt(this, \"delimiter-precedes-et-al\", arg);\n};\nCSL.Attributes[\"@initialize-with\"] = function (state, arg) {\n    state.setOpt(this, \"initialize-with\", arg);\n};\nCSL.Attributes[\"@initialize\"] = function (state, arg) {\n    if (arg === \"false\") {\n        state.setOpt(this, \"initialize\", false);\n    }\n};\nCSL.Attributes[\"@name-as-reverse-order\"] = function (state, arg) {\n    this[\"name-as-reverse-order\"] = arg;\n};\nCSL.Attributes[\"@name-as-sort-order\"] = function (state, arg) {\n    if (this.name === \"style-options\") {\n        this[\"name-as-sort-order\"] = arg;\n    } else {\n        state.setOpt(this, \"name-as-sort-order\", arg);\n    }\n};\nCSL.Attributes[\"@sort-separator\"] = function (state, arg) {\n    state.setOpt(this, \"sort-separator\", arg);\n};\nCSL.Attributes[\"@year-suffix-delimiter\"] = function (state, arg) {\n    state[this.name].opt[\"year-suffix-delimiter\"] = arg;\n};\nCSL.Attributes[\"@after-collapse-delimiter\"] = function (state, arg) {\n    state[this.name].opt[\"after-collapse-delimiter\"] = arg;\n};\nCSL.Attributes[\"@subsequent-author-substitute\"] = function (state, arg) {\n    state[this.name].opt[\"subsequent-author-substitute\"] = arg;\n};\nCSL.Attributes[\"@subsequent-author-substitute-rule\"] = function (state, arg) {\n    state[this.name].opt[\"subsequent-author-substitute-rule\"] = arg;\n};\nCSL.Attributes[\"@disambiguate-add-names\"] = function (state, arg) {\n    if (arg === \"true\") {\n        state.opt[\"disambiguate-add-names\"] = true;\n    }\n};\nCSL.Attributes[\"@disambiguate-add-givenname\"] = function (state, arg) {\n    if (arg === \"true\") {\n        state.opt[\"disambiguate-add-givenname\"] = true;\n    }\n};\nCSL.Attributes[\"@disambiguate-add-year-suffix\"] = function (state, arg) {\n    if (arg === \"true\" && state.opt.xclass !== \"numeric\") {\n        state.opt[\"disambiguate-add-year-suffix\"] = true;\n    }\n};\nCSL.Attributes[\"@second-field-align\"] = function (state, arg) {\n    if (arg === \"flush\" || arg === \"margin\") {\n        state[this.name].opt[\"second-field-align\"] = arg;\n    }\n};\nCSL.Attributes[\"@hanging-indent\"] = function (state, arg) {\n    if (arg === \"true\") {\n        state[this.name].opt.hangingindent = true;\n    }\n};\nCSL.Attributes[\"@line-spacing\"] = function (state, arg) {\n    if (arg && arg.match(/^[.0-9]+$/)) {\n        state[this.name].opt[\"line-spacing\"] = parseFloat(arg, 10);\n    }\n};\nCSL.Attributes[\"@entry-spacing\"] = function (state, arg) {\n    if (arg && arg.match(/^[.0-9]+$/)) {\n        state[this.name].opt[\"entry-spacing\"] = parseFloat(arg, 10);\n    }\n};\nCSL.Attributes[\"@near-note-distance\"] = function (state, arg) {\n    state[this.name].opt[\"near-note-distance\"] = parseInt(arg, 10);\n};\nCSL.Attributes[\"@text-case\"] = function (state, arg) {\n    var func = function (state, Item) {\n        if (arg === \"normal\") {\n            this.text_case_normal = true;\n        } else {\n            this.strings[\"text-case\"] = arg;\n            if (arg === \"title\") {\n                var m = false;\n                var default_locale = state.opt[\"default-locale\"][0].slice(0, 2);\n                if (Item.jurisdiction) {\n                    this.strings[\"text-case\"] = \"passthrough\";\n                }\n            }\n        }\n    };\n    this.execs.push(func);\n};\nCSL.Attributes[\"@page-range-format\"] = function (state, arg) {\n    state.opt[\"page-range-format\"] = arg;\n};\nCSL.Attributes[\"@year-range-format\"] = function (state, arg) {\n    state.opt[\"year-range-format\"] = arg;\n};\nCSL.Attributes[\"@default-locale\"] = function (state, arg) {\n    if (this.name === 'style') {\n        var lst, len, pos, m, ret;\n        m = arg.match(/-x-(sort|translit|translat)-/g);\n        if (m) {\n            for (pos = 0, len = m.length; pos < len; pos += 1) {\n                m[pos] = m[pos].replace(/^-x-/, \"\").replace(/-$/, \"\");\n            }\n        }\n        lst = arg.split(/-x-(?:sort|translit|translat)-/);\n        ret = [lst[0]];\n        for (pos = 1, len = lst.length; pos < len; pos += 1) {\n            ret.push(m[pos - 1]);\n            ret.push(lst[pos]);\n        }\n        lst = ret.slice();\n        len = lst.length;\n        for (pos = 1; pos < len; pos += 2) {\n            state.opt[(\"locale-\" + lst[pos])].push(lst[(pos + 1)].replace(/^\\s*/g, \"\").replace(/\\s*$/g, \"\"));\n        }\n        if (lst.length) {\n            state.opt[\"default-locale\"] = lst.slice(0, 1);\n        } else {\n            state.opt[\"default-locale\"] = [\"en\"];\n        }\n    } else if (arg === \"true\") {\n        this.default_locale = true;\n    }\n};\nCSL.Attributes[\"@default-locale-sort\"] = function (state, arg) {\n    var lst, len, pos, m, ret;\n    state.opt[\"default-locale-sort\"] = arg;\n};\nCSL.Attributes[\"@demote-non-dropping-particle\"] = function (state, arg) {\n    state.opt[\"demote-non-dropping-particle\"] = arg;\n};\nCSL.Attributes[\"@initialize-with-hyphen\"] = function (state, arg) {\n    if (arg === \"false\") {\n        state.opt[\"initialize-with-hyphen\"] = false;\n    }\n};\nCSL.Attributes[\"@institution-parts\"] = function (state, arg) {\n    this.strings[\"institution-parts\"] = arg;\n};\nCSL.Attributes[\"@if-short\"] = function (state, arg) {\n    if (arg === \"true\") {\n        this.strings[\"if-short\"] = true;\n    }\n};\nCSL.Attributes[\"@substitute-use-first\"] = function (state, arg) {\n    this.strings[\"substitute-use-first\"] = parseInt(arg, 10);\n};\nCSL.Attributes[\"@use-first\"] = function (state, arg) {\n    this.strings[\"use-first\"] = parseInt(arg, 10);\n};\nCSL.Attributes[\"@stop-last\"] = function (state, arg) {\n    this.strings[\"stop-last\"] = parseInt(arg, 10) * -1;\n};\nCSL.Attributes[\"@use-last\"] = function (state, arg) {\n    this.strings[\"use-last\"] = parseInt(arg, 10);\n};\nCSL.Attributes[\"@reverse-order\"] = function (state, arg) {\n    if (\"true\" === arg) {\n        this.strings[\"reverse-order\"] = true;\n    }\n};\nCSL.Attributes[\"@display\"] = function (state, arg) {\n    if (state.bibliography.tokens.length === 2) {\n        state.opt.using_display = true;\n    }\n    this.strings.cls = arg;\n};\nCSL.Stack = function (val, literal) {\n    this.mystack = [];\n    if (literal || val) {\n        this.mystack.push(val);\n    }\n    this.tip = this.mystack[0];\n};\nCSL.Stack.prototype.push = function (val, literal) {\n    if (literal || val) {\n        this.mystack.push(val);\n    } else {\n        this.mystack.push(\"\");\n    }\n    this.tip = this.mystack[this.mystack.length - 1];\n};\nCSL.Stack.prototype.clear = function () {\n    this.mystack = [];\n    this.tip = {};\n};\nCSL.Stack.prototype.replace = function (val, literal) {\n    if (this.mystack.length === 0) {\n        throw \"Internal CSL processor error: attempt to replace nonexistent stack item with \" + val;\n    }\n    if (literal || val) {\n        this.mystack[(this.mystack.length - 1)] = val;\n    } else {\n        this.mystack[(this.mystack.length - 1)] = \"\";\n    }\n    this.tip = this.mystack[this.mystack.length - 1];\n};\nCSL.Stack.prototype.pop = function () {\n    var ret = this.mystack.pop();\n    if (this.mystack.length) {\n        this.tip = this.mystack[this.mystack.length - 1];\n    } else {\n        this.tip = {};\n    }\n    return ret;\n};\nCSL.Stack.prototype.value = function () {\n    return this.mystack.slice(-1)[0];\n};\nCSL.Stack.prototype.length = function () {\n    return this.mystack.length;\n};\nCSL.Parallel = function (state) {\n    this.state = state;\n    this.sets = new CSL.Stack([]);\n    this.try_cite = true;\n    this.use_parallels = false;\n    this.midVars = [\"section\", \"volume\", \"container-title\", \"collection-number\", \"issue\", \"page-first\", \"page\", \"number\"];\n    this.ignoreVarsLawGeneral = [\"first-reference-note-number\", \"locator\", \"label\",\"page-first\",\"page\",\"genre\"];\n    this.ignoreVarsLawProceduralHistory = [\"issued\", \"first-reference-note-number\", \"locator\", \"label\",\"page-first\",\"page\",\"genre\",\"jurisdiction\"];\n    this.ignoreVarsOrders = [\"first-reference-note-number\"];\n    this.ignoreVarsOther = [\"first-reference-note-number\", \"locator\", \"label\",\"section\",\"page-first\",\"page\"];\n};\nCSL.Parallel.prototype.isMid = function (variable) {\n    return (this.midVars.indexOf(variable) > -1);\n};\nCSL.Parallel.prototype.StartCitation = function (sortedItems, out) {\n    this.parallel_conditional_blobs_list = [];\n    if (this.use_parallels) {\n        this.sortedItems = sortedItems;\n        this.sortedItemsPos = -1;\n        this.sets.clear();\n        this.sets.push([]);\n        this.in_series = true;\n        this.delim_counter = 0;\n        this.delim_pointers = [];\n        if (out) {\n            this.out = out;\n        } else {\n            this.out = this.state.output.queue;\n        }\n        this.master_was_neutral_cite = true;\n    }\n};\nCSL.Parallel.prototype.StartCite = function (Item, item, prevItemID) {\n    var position, len, pos, x, curr, master, last_id, prev_locator, curr_locator, is_master, parallel;\n    if (this.use_parallels) {\n        if (this.sets.value().length && this.sets.value()[0].itemId == Item.id) {\n            this.ComposeSet();\n        }\n        this.sortedItemsPos += 1;\n        if (item) {\n            position = item.position;\n        }\n        this.try_cite = true;\n        var has_required_var = false;\n        for (var i = 0, ilen = CSL.PARALLEL_MATCH_VARS.length; i < ilen; i += 1) {\n            if (Item[CSL.PARALLEL_MATCH_VARS[i]]) {\n                has_required_var = true;\n                break;\n            }\n        }\n        var basics_ok = true;\n        var last_cite = this.sets.value().slice(-1)[0];\n        if (last_cite && last_cite.Item) {\n            var lastJuris = last_cite.Item.jurisdiction ? last_cite.Item.jurisdiction.split(\":\")[0] : \"\";\n            var thisJuris = Item.jurisdiction ? Item.jurisdiction.split(\":\")[0] : \"\";\n            if (last_cite.Item.title !== Item.title) {\n                basics_ok = false;\n            } else if (lastJuris !== thisJuris) {\n                basics_ok = false;\n            } else if (last_cite.Item.type !== Item.type) {\n                basics_ok = false;\n            } else if ([\"article-journal\",\"article-magazine\"].indexOf(Item.type) > -1) {\n                if (!this.state.opt.development_extensions.handle_parallel_articles\n                   || last_cite.Item[\"container-title\"] !== Item[\"container-title\"]) {\n                    basics_ok = false;\n                }\n            }\n        }\n        if (!basics_ok || !has_required_var || CSL.PARALLEL_TYPES.indexOf(Item.type) === -1) {\n            this.try_cite = true;\n            if (this.in_series) {\n                this.in_series = false;\n            }\n        }\n        this.cite = {};\n        this.cite.front = [];\n        this.cite.mid = [];\n        this.cite.back = [];\n        this.cite.front_collapse = {};\n        this.cite.back_forceme = [];\n        this.cite.position = position;\n        this.cite.Item = Item;\n        this.cite.itemId = \"\" + Item.id;\n        this.cite.prevItemID = \"\" + prevItemID;\n        this.target = \"front\";\n        if ([\"treaty\"].indexOf(Item.type) > -1) {\n            this.ignoreVars = this.ignoreVarsOrders;\n        } else if ([\"article-journal\",\"article-magazine\"].indexOf(Item.type) > -1) {\n            this.ignoreVars = this.ignoreVarsOther;\n        } else if (item && item.prefix) {\n            this.ignoreVars = this.ignoreVarsLawProceduralHistory;\n            this.cite.useProceduralHistory = true;\n            var prev = this.sets.value()[(this.sets.value().length - 1)];\n            if (prev && prev.back) {\n                for (var i=prev.back.length-1;i>-1;i+=-1) {\n                    if (prev.back[i] && prev[prev.back[i]]) {\n                        delete prev[prev.back[i]];\n                    }\n                }\n            }\n        } else {\n            this.ignoreVars = this.ignoreVarsLawGeneral;\n        }\n        if (this.sortedItems && this.sortedItemsPos > 0 && this.sortedItemsPos < this.sortedItems.length) {\n            curr = this.sortedItems[this.sortedItemsPos][1];\n            last_id = \"\" + this.sortedItems[(this.sortedItemsPos - 1)][1].id;\n            master = this.state.registry.registry[last_id].parallel;\n            prev_locator = false;\n            if (master == curr.id) {\n                len = this.sortedItemsPos - 1;\n                for (pos = len; pos > -1; pos += -1) {\n                    if (this.sortedItems[pos][1].id == Item.id) {\n                        prev_locator = this.sortedItems[pos][1].locator;\n                        break;\n                    }\n                }\n                curr_locator = this.sortedItems[this.sortedItemsPos][1].locator;\n                if (!prev_locator && curr_locator) {\n                    curr.position = CSL.POSITION_IBID_WITH_LOCATOR;\n                } else if (curr_locator === prev_locator) {\n                    curr.position = CSL.POSITION_IBID;\n                } else {\n                    curr.position = CSL.POSITION_IBID_WITH_LOCATOR;\n                }\n            }\n        } else if (this.state.registry.registry[Item.id]) {\n            this.state.registry.registry[Item.id].parallel = false;\n        } else {\n            this.try_cite = false;\n            this.force_collapse = false;\n            return;\n        }\n        this.force_collapse = false;\n        if (this.state.registry.registry[Item.id].parallel) {\n            this.force_collapse = true;\n        }\n    }\n};\nCSL.Parallel.prototype.StartVariable = function (variable, real_variable) {\n    if (this.use_parallels && (this.try_cite || this.force_collapse)) {\n        if (variable === \"names\") {\n            this.variable = variable + \":\" + this.target;\n        } else {\n            this.variable = variable;\n        }\n        if (this.ignoreVars.indexOf(variable) > -1) {\n            return;\n        }\n        if (variable === \"container-title\" && this.sets.value().length === 0) {\n            this.master_was_neutral_cite = false;\n        }\n        this.data = {};\n        this.data.value = \"\";\n        this.data.blobs = [];\n        var is_mid = this.isMid(variable);\n        if (real_variable === \"authority\" && this.variable === \"names:front\" && this.sets.value().length) {\n            var prev = this.sets.value()[(this.sets.value().length - 1)].Item;\n            var thisAuthority = false;\n            if (this.cite.Item.authority && this.cite.Item.authority.length) {\n                thisAuthority = this.cite.Item.authority[0].literal;\n            }\n            var thatAuthority = false;\n            if (prev.authority && prev.authority.length) {\n                thatAuthority = prev.authority[0].literal;\n            }\n            if (thisAuthority !== thatAuthority) {\n                this.try_cite = true;\n                this.in_series = false;\n            }\n         } else if (this.target === \"front\" && is_mid) {\n            this.target = \"mid\";\n        } else if (this.target === \"mid\" && !is_mid && this.cite.Item.title && variable !== \"names\") {\n            this.target = \"back\";\n        } else if (this.target === \"back\" && is_mid) {\n            this.try_cite = true;\n            this.in_series = false;\n        }\n        if (variable === \"number\") {\n            this.cite.front.push(this.variable);\n        } else if (CSL.PARALLEL_COLLAPSING_MID_VARSET.indexOf(variable) > -1) {\n            if ([\"article-journal\",\"article-magazine\"].indexOf(this.cite.Item.type) > -1) {\n                this.cite.mid.push(this.variable);\n            } else {\n                this.cite.front.push(this.variable);\n            }\n        } else {\n            this.cite[this.target].push(this.variable);\n        }\n   }\n};\nCSL.Parallel.prototype.AppendBlobPointer = function (blob) {\n    if (this.use_parallels) {\n        if (this.ignoreVars.indexOf(this.variable) > -1) {\n            return;\n        }\n        if (this.use_parallels && (this.force_collapse || this.try_cite)) {\n            if ([\"article-journal\", \"article-magazine\"].indexOf(this.cite.Item.type) > -1) {\n                if ([\"volume\",\"page\",\"page-first\",\"issue\"].indexOf(this.variable) > -1) {\n                    return;\n                }\n                if (\"container-title\" === this.variable && this.cite.mid.length > 1) {\n                    return;\n                }\n            }\n            if (this.variable && (this.try_cite || this.force_collapse) && blob && blob.blobs) {\n                if (!(this.cite.useProceduralHistory && this.target === \"back\")) {\n                    this.data.blobs.push([blob, blob.blobs.length]);\n                }\n            }\n        }\n    }\n};\nCSL.Parallel.prototype.AppendToVariable = function (str, varname) {\n    if (this.use_parallels) {\n        if (this.ignoreVars.indexOf(this.variable) > -1) {\n            return;\n        }\n        if (this.try_cite || this.force_collapse) {\n            if (this.target !== \"back\" || true) {\n                this.data.value += \"::\" + str;\n            } else {\n                var prev = this.sets.value()[(this.sets.value().length - 1)];\n                if (prev) {\n                    if (prev[this.variable]) {\n                        if (prev[this.variable].value) {\n                            this.data.value += \"::\" + str;\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nCSL.Parallel.prototype.CloseVariable = function () {\n    if (this.use_parallels) {\n        if (this.ignoreVars.indexOf(this.variable) > -1) {\n            return;\n        }\n        if (this.try_cite || this.force_collapse) {\n            this.cite[this.variable] = this.data;\n            if (this.sets.value().length > 0) {\n                var prev = this.sets.value()[(this.sets.value().length - 1)];\n                if (this.target === \"front\" && this.variable === \"issued\") {\n                    if (this.data.value && this.master_was_neutral_cite) {\n                        this.target = \"mid\";\n                    }\n                }\n                if (this.target === \"front\") {\n                    if ((prev[this.variable] || this.data.value) && (!prev[this.variable] || this.data.value !== prev[this.variable].value)) {\n                        if (\"issued\" !== this.variable) {\n                            this.in_series = false;\n                        }\n                    }\n                } else if (this.target === \"mid\") {\n                    if (CSL.PARALLEL_COLLAPSING_MID_VARSET.indexOf(this.variable) > -1) {\n                        if (prev[this.variable]) {\n                            if (prev[this.variable].value === this.data.value) {\n                                this.cite.front_collapse[this.variable] = true;\n                            } else {\n                                this.cite.front_collapse[this.variable] = false;\n                            }\n                        } else {\n                            this.cite.front_collapse[this.variable] = false;\n                        }\n                    }\n                } else if (this.target === \"back\") {\n                    if (prev[this.variable]) {\n                        if (this.data.value !== prev[this.variable].value \n                            && this.sets.value().slice(-1)[0].back_forceme.indexOf(this.variable) === -1) {\n                            this.in_series = false;\n                        }\n                    }\n                }\n            }\n        }\n        this.variable = false;\n    }\n};\nCSL.Parallel.prototype.CloseCite = function () {\n    var x, pos, len, has_issued, use_journal_info, volume_pos, container_title_pos, section_pos;\n    if (this.use_parallels && (this.force_collapse || this.try_cite)) {\n        use_journal_info = false;\n        if (!this.cite.front_collapse[\"container-title\"]) {\n            use_journal_info = true;\n        }\n        if (this.cite.front_collapse.volume === false) {\n            use_journal_info = true;\n        }\n        if (this.cite.front_collapse[\"collection-number\"] === false) {\n            use_journal_info = true;\n        }\n        if (this.cite.front_collapse.section === false) {\n            use_journal_info = true;\n        }\n        if (use_journal_info) {\n            this.cite.use_journal_info = true;\n            section_pos = this.cite.front.indexOf(\"section\");\n            if (section_pos > -1) {\n                this.cite.front = this.cite.front.slice(0,section_pos).concat(this.cite.front.slice(section_pos + 1));\n            }\n            volume_pos = this.cite.front.indexOf(\"volume\");\n            if (volume_pos > -1) {\n                this.cite.front = this.cite.front.slice(0,volume_pos).concat(this.cite.front.slice(volume_pos + 1));\n            }\n            container_title_pos = this.cite.front.indexOf(\"container-title\");\n            if (container_title_pos > -1) {\n                this.cite.front = this.cite.front.slice(0,container_title_pos).concat(this.cite.front.slice(container_title_pos + 1));\n            }\n            collection_number_pos = this.cite.front.indexOf(\"collection-number\");\n            if (collection_number_pos > -1) {\n                this.cite.front = this.cite.front.slice(0,collection_number_pos).concat(this.cite.front.slice(collection_number_pos + 1));\n            }\n        }\n        if (!this.in_series && !this.force_collapse) {\n            this.ComposeSet(true);\n        }\n        if (this.sets.value().length === 0) {\n            has_date = false;\n            for (pos = 0, len = this.cite.back.length; pos < len; pos += 1) {\n                x = this.cite.back[pos];\n                if (x === \"issued\" && this.cite[\"issued\"] && this.cite[\"issued\"].value) {\n                    has_date = true;\n                    break;\n                }\n            }\n            if (!has_date) {\n                this.cite.back_forceme.push(\"issued\");\n            }\n        } else {\n            var idx = this.cite.front.indexOf(\"issued\");\n            if (idx === -1 || this.master_was_neutral_cite) {\n                this.cite.back_forceme = this.sets.value().slice(-1)[0].back_forceme;\n            }\n            if (idx > -1) {\n                var prev = this.sets.value()[this.sets.value().length - 1];\n                if (!prev[\"issued\"]) {\n                    this.cite.front = this.cite.front.slice(0, idx).concat(this.cite.front.slice(idx + 1));\n                }\n            }\n            if (this.master_was_neutral_cite && this.cite.mid.indexOf(\"names:mid\") > -1) {\n                this.cite.front.push(\"names:mid\");\n            }\n        }\n        this.sets.value().push(this.cite);\n    }\n};\nCSL.Parallel.prototype.ComposeSet = function (next_output_in_progress) {\n    var cite, pos, master, len;\n    if (this.use_parallels && (this.force_collapse || this.try_cite)) {\n        var lengthCheck = this.sets.value().length;\n        if (this.sets.value().length === 1) {\n            if (!this.in_series) {\n                this.sets.value().pop();\n                this.delim_counter += 1;\n            }\n        } else {\n            len = this.sets.value().length;\n            for (pos = 0; pos < len; pos += 1) {\n                cite = this.sets.value()[pos];\n                if (pos === 0) {\n                    this.delim_counter += 1;\n                } else {\n                    if (!cite.Item.title && cite.use_journal_info) {\n                        this.delim_pointers.push(false);\n                    } else {\n                        this.delim_pointers.push(this.delim_counter);\n                    }\n                    this.delim_counter += 1;\n                }\n                if (CSL.POSITION_FIRST === cite.position) {\n                    if (pos === 0) {\n                        this.state.registry.registry[cite.itemId].master = true;\n                        this.state.registry.registry[cite.itemId].siblings = [];\n                        this.state.registry.registry[cite.itemId].parallel = false;\n                    } else {\n                        if (cite.prevItemID) {\n                            if (!this.state.registry.registry[cite.prevItemID].parallel) {\n                                this.state.registry.registry[cite.itemId].parallel = cite.prevItemID;\n                            } else {\n                                this.state.registry.registry[cite.itemId].parallel = this.state.registry.registry[cite.prevItemID].parallel;\n                            }\n                            this.state.registry.registry[cite.itemId].siblings = this.state.registry.registry[cite.prevItemID].siblings;\n                            if (!this.state.registry.registry[cite.itemId].siblings) {\n                                this.state.registry.registry[cite.itemId].siblings = [];\n                                CSL.debug(\"WARNING: adding missing siblings array to registry object\");\n                            }\n                            this.state.registry.registry[cite.itemId].siblings.push(cite.itemId);\n                        }\n                    }\n                }\n            }\n            this.sets.push([]);\n        }\n        if (lengthCheck < 2) {\n            this.purgeGroupsIfParallel(false);\n        } else {\n            this.purgeGroupsIfParallel(true);\n        }\n        this.in_series = true;\n    }\n};\nCSL.Parallel.prototype.PruneOutputQueue = function () {\n    var len, pos, series, ppos, llen, cite;\n    if (this.use_parallels) {\n        len = this.sets.mystack.length;\n        for (pos = 0; pos < len; pos += 1) {\n            series = this.sets.mystack[pos];\n            if (series.length > 1) {\n                llen = series.length;\n                for (ppos = 0; ppos < llen; ppos += 1) {\n                    cite = series[ppos];\n                    if (ppos === 0) {\n                        this.purgeVariableBlobs(cite, cite.back);\n                    } else if (ppos === (series.length - 1)) {\n                        this.purgeVariableBlobs(cite, cite.front.concat(cite.back_forceme));\n                    } else {\n                        this.purgeVariableBlobs(cite, cite.front.concat(cite.back));\n                    }\n                }\n            }\n        }\n    }\n};\nCSL.Parallel.prototype.purgeVariableBlobs = function (cite, varnames) {\n    var len, pos, varname, b, llen, ppos, out;\n    if (this.use_parallels) {\n        out = this.state.output.current.value();\n        if (\"undefined\" === typeof out.length) {\n            out = out.blobs;\n        }\n        for (pos = 0, len = this.delim_pointers.length; pos < len; pos += 1) {\n            ppos = this.delim_pointers[pos];\n            if (ppos !== false) {\n                out[ppos].parallel_delimiter = \", \";\n            }\n        }\n        len = varnames.length - 1;\n        for (pos = len; pos > -1; pos += -1) {\n            varname = varnames[pos];\n            if (cite[varname]) {\n                llen = cite[varname].blobs.length - 1;\n                for (ppos = llen; ppos > -1; ppos += -1) {\n                    b = cite[varname].blobs[ppos];\n                    b[0].blobs = b[0].blobs.slice(0, b[1]).concat(b[0].blobs.slice((b[1] + 1)));\n                    this.state.tmp.has_purged_parallel = true;\n                    if (b[0] && b[0].strings && \"string\" == typeof b[0].strings.oops\n                        && b[0].parent && b[0].parent) {\n                        b[0].parent.parent.strings.delimiter = b[0].strings.oops;\n                    }\n                }\n            }\n        }\n    }\n};\nCSL.Parallel.prototype.purgeGroupsIfParallel = function (original_condition) {\n    for (var i = this.parallel_conditional_blobs_list.length - 1; i > -1; i += -1) {\n        var obj = this.parallel_conditional_blobs_list[i];\n        var purgeme = true;\n        for (var j = 0, jlen = obj.conditions.length; j < jlen; j += 1) {\n            if (!(!obj.conditions[j] === !!original_condition\n                || (\"master\" === obj.conditions[j]\n                    && !this.state.registry.registry[obj.id].master)\n                || (\"servant\" === obj.conditions[j]\n                    && !this.state.registry.registry[obj.id].parallel))) {\n                var purgeme = false;\n                break;\n            }\n        }\n        if (purgeme) {\n            var buffer = [];\n            while (obj.blobs.length > obj.pos) {\n                buffer.push(obj.blobs.pop());\n            }\n            if (buffer.length) {\n                buffer.pop();\n            }\n            while (buffer.length) {\n                obj.blobs.push(buffer.pop());\n            }\n        }\n        this.parallel_conditional_blobs_list.pop();\n    }\n}\nCSL.Util = {};\nCSL.Util.Match = function () {\n    this.any = function (token, state, tests) {\n        return function (Item, item) {\n            for (var i=0, ilen=tests.length; i < ilen; i += 1) {\n                result = tests[i](Item, item);\n                if (result) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    this.none = function (token, state, tests) {\n        return function (Item, item) {\n            for (var i=0,ilen=tests.length;i<ilen;i+=1) {\n                result = tests[i](Item,item);\n                if (result) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    };\n    this.all = function (token, state, tests) {\n        return function (Item, item) {\n            for (var i=0,ilen=tests.length;i<ilen;i+=1) {\n                result = tests[i](Item,item);\n                if (!result) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    };\n    this[undefined] = this.all;\n    this.nand = function (token, state, tests) {\n        return function (Item, item) {\n            for (var i=0,ilen=tests.length;i<ilen;i+=1) {\n                result = tests[i](Item,item);\n                if (!result) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n};\nCSL.Transform = function (state) {\n    var debug = false, abbreviations, token, fieldname, abbrev_family, opt;\n    this.abbrevs = {};\n    this.abbrevs[\"default\"] = new state.sys.AbbreviationSegments();\n    this.getTextSubField = getTextSubField;\n    function abbreviate(state, Item, altvar, basevalue, myabbrev_family, use_field) {\n        var value;\n        myabbrev_family = CSL.FIELD_CATEGORY_REMAP[myabbrev_family];\n        if (!myabbrev_family) {\n            return basevalue;\n        }\n        var variable = myabbrev_family;\n        value = \"\";\n        if (state.sys.getAbbreviation) {\n            var jurisdiction = state.transform.loadAbbreviation(Item.jurisdiction, myabbrev_family, basevalue, Item.type, true);\n            if (state.transform.abbrevs[jurisdiction][myabbrev_family] && basevalue && state.sys.getAbbreviation) {\n                if (state.transform.abbrevs[jurisdiction][myabbrev_family][basevalue]) {\n                    value = state.transform.abbrevs[jurisdiction][myabbrev_family][basevalue].replace(\"{stet}\",basevalue);\n                }\n            }\n        }\n        if (!value \n            && (!state.opt.development_extensions.require_explicit_legal_case_title_short || Item.type !== 'legal_case') \n            && altvar && Item[altvar] && use_field) {\n            value = Item[altvar];\n        }\n        if (!value) {\n            value = basevalue;\n        }\n        if (value && value.match(/^\\!(?:[^>]+,)*here(?:,[^>]+)*>>>/)) {\n            if (variable === \"jurisdiction\" && [\"treaty\", \"patent\"].indexOf(Item.type) > -1) {\n                value = value.replace(/^\\![^>]*>>>\\s*/, \"\");\n            } else {\n                value = false;\n            }\n        } \n        return value;\n    }\n    function getFieldLocale(Item,field) {\n        var ret = state.opt[\"default-locale\"][0].slice(0, 2)\n        var localeRex;\n        if (state.opt.development_extensions.strict_text_case_locales) {\n            localeRex = new RegExp(\"^([a-zA-Z]{2})(?:$|-.*| .*)\");\n        } else {\n            localeRex = new RegExp(\"^([a-zA-Z]{2})(?:$|-.*|.*)\");\n        }\n        if (Item.language) {\n            m = (\"\" + Item.language).match(localeRex);\n            if (m) {\n                ret = m[1];\n            } else {\n                ret = \"tlh\";\n            }\n        }\n        if (Item.multi && Item.multi && Item.multi.main && Item.multi.main[field]) {\n            ret = Item.multi.main[field];\n        }\n        if (!state.opt.development_extensions.strict_text_case_locales\n           || state.opt.development_extensions.normalize_lang_keys_to_lowercase) {\n            ret = ret.toLowerCase();\n        }\n        return ret;\n    };\n    function getTextSubField (Item, field, locale_type, use_default, stopOrig) {\n        var m, lst, opt, o, oo, pos, key, ret, len, myret, opts;\n        var usedOrig = stopOrig;\n        var usingOrig = false;\n        if (!Item[field]) {\n            return {\n                name:\"\",\n                usedOrig:stopOrig,\n                token: CSL.Util.cloneToken(this)\n            };\n        }\n        ret = {name:\"\", usedOrig:stopOrig,locale:getFieldLocale(Item,field)};\n        opts = state.opt[locale_type];\n        var hasVal = false;\n        var jurisdictionName = false;\n        if (locale_type === 'locale-orig') {\n            if (stopOrig) {\n                ret = {name:\"\", usedOrig:stopOrig};\n            } else {\n                ret = {name:Item[field], usedOrig:false, locale:getFieldLocale(Item,field)};\n            }\n            hasVal = true;\n            usingOrig = true;\n        } else if (use_default && (\"undefined\" === typeof opts || opts.length === 0)) {\n            var ret = {name:Item[field], usedOrig:true, locale:getFieldLocale(Item,field)};\n            hasVal = true;\n            usingOrig = true;\n        }\n        if (!hasVal) {\n            for (var i = 0, ilen = opts.length; i < ilen; i += 1) {\n                opt = opts[i];\n                o = opt.split(/[\\-_]/)[0];\n                if (opt && Item.multi && Item.multi._keys[field] && Item.multi._keys[field][opt]) {\n                    ret.name = Item.multi._keys[field][opt];\n                    ret.locale = opt;\n                    if (field === 'jurisdiction') jurisdictionName = ret.name;\n                    break;\n                } else if (o && Item.multi && Item.multi._keys[field] && Item.multi._keys[field][o]) {\n                    ret.name = Item.multi._keys[field][o];\n                    ret.locale = o;\n                    if (field === 'jurisdiction') jurisdictionName = ret.name;\n                    break;\n                }\n            }\n            if (!ret.name && use_default) {\n                ret = {name:Item[field], usedOrig:true, locale:getFieldLocale(Item,field)};\n                usingOrig = true;\n            }\n        }\n        ret.token = CSL.Util.cloneToken(this);\n        if (state.sys.getHumanForm && field === 'jurisdiction' && ret.name) {\n            ret.name = CSL.getJurisdictionNameAndSuppress(state, Item[field], jurisdictionName);\n        } else if ([\"title\", \"container-title\"].indexOf(field) > -1) {\n            if (!usedOrig\n                && (!ret.token.strings[\"text-case\"]\n                    || ret.token.strings[\"text-case\"] === \"sentence\"\n                    || ret.token.strings[\"text-case\"] === \"normal\")) {\n                var locale = usingOrig ? false : ret.locale;\n                var seg = field.slice(0,-5);\n                var sentenceCase = ret.token.strings[\"text-case\"] === \"sentence\" ? true : false;\n                ret.name = CSL.titlecaseSentenceOrNormal(state, Item, seg, locale, sentenceCase);\n                delete ret.token.strings[\"text-case\"];\n            }\n        }\n        return ret;\n    }\n    function loadAbbreviation(jurisdiction, category, orig, itemType) {\n        var pos, len;\n        if (!jurisdiction) {\n            jurisdiction = \"default\";\n        }\n        if (!orig) {\n            if (!state.transform.abbrevs[jurisdiction]) {\n                state.transform.abbrevs[jurisdiction] = new state.sys.AbbreviationSegments();\n            }\n            if (!state.transform.abbrevs[jurisdiction][category]) {\n                state.transform.abbrevs[jurisdiction][category] = {};\n            }\n            return jurisdiction;\n        }\n        if (state.sys.getAbbreviation) {\n            jurisdiction = state.sys.getAbbreviation(state.opt.styleID, state.transform.abbrevs, jurisdiction, category, orig, itemType, true);\n            if (!jurisdiction) {\n                jurisdiction = \"default\";\n            }\n        }\n        return jurisdiction;\n    }\n    this.loadAbbreviation = loadAbbreviation;\n    function publisherCheck (tok, Item, primary, myabbrev_family) {\n        var varname = tok.variables[0];\n        if (state.publisherOutput && primary) {\n            if ([\"publisher\",\"publisher-place\"].indexOf(varname) === -1) {\n                return false;\n            } else {\n                state.publisherOutput[varname + \"-token\"] = tok;\n                state.publisherOutput.varlist.push(varname);\n                var lst = primary.split(/;\\s*/);\n                if (lst.length === state.publisherOutput[varname + \"-list\"].length) {\n                    state.publisherOutput[varname + \"-list\"] = lst;\n                }\n                for (var i = 0, ilen = lst.length; i < ilen; i += 1) {\n                    lst[i] = abbreviate(state, Item, false, lst[i], myabbrev_family, true);\n                }\n                state.tmp[varname + \"-token\"] = tok;\n                return true;\n            }\n        }\n        return false;\n    }\n    function getOutputFunction(variables, myabbrev_family, abbreviation_fallback, alternative_varname, transform_fallback) {\n        var localesets;\n        var langPrefs = CSL.LangPrefsMap[variables[0]];\n        if (!langPrefs) {\n            localesets = false;\n        } else {\n            localesets = state.opt['cite-lang-prefs'][langPrefs];\n        }\n        return function (state, Item, item, usedOrig) {\n            var primary, primary_locale, secondary, secondary_locale, tertiary, tertiary_locale, primary_tok, group_tok, key;\n            if (!variables[0] || (!Item[variables[0]] && !Item[alternative_varname])) {\n                return null;\n            }\n            var slot = {primary:false, secondary:false, tertiary:false};\n            if (state.tmp.area.slice(-5) === \"_sort\") {\n                slot.primary = 'locale-sort';\n            } else {\n                if (localesets) {\n                    var slotnames = [\"primary\", \"secondary\", \"tertiary\"];\n                    for (var i = 0, ilen = slotnames.length; i < ilen; i += 1) {\n                        if (localesets.length - 1 <  i) {\n                            break;\n                        }\n                        if (localesets[i]) {\n                            slot[slotnames[i]] = 'locale-' + localesets[i];\n                        }\n                    }\n                } else {\n                    slot.primary = 'locale-orig';\n                }\n            }\n            if (variables[0] === \"title-short\" \n                || (state.tmp.area !== \"bibliography\"\n                    && !(state.tmp.area === \"citation\"\n                         && state.opt.xclass === \"note\"\n                         && item && !item.position))) {\n                slot.secondary = false;\n                slot.tertiary = false;\n            }\n            if (state.tmp[\"publisher-list\"]) {\n                if (variables[0] === \"publisher\") {\n                    state.tmp[\"publisher-token\"] = this;\n                } else if (variables[0] === \"publisher-place\") {\n                    state.tmp[\"publisher-place-token\"] = this;\n                }\n                return null;\n            }\n            var res = getTextSubField.call(this, Item, variables[0], slot.primary, true);\n            primary = res.name;\n            primary_locale = res.locale;\n            var primary_tok = res.token;\n            var primaryUsedOrig = res.usedOrig;\n            if (publisherCheck(this, Item, primary, myabbrev_family)) {\n                return null;\n            }\n            secondary = false;\n            tertiary = false;\n            if (slot.secondary) {\n                res = getTextSubField.call(this, Item, variables[0], slot.secondary, false, res.usedOrig);\n                secondary = res.name;\n                secondary_locale = res.locale;\n                var secondary_tok = res.token;\n            }\n            if (slot.tertiary) {\n                res = getTextSubField.call(this, Item, variables[0], slot.tertiary, false, res.usedOrig);\n                tertiary = res.name;\n                tertiary_locale = res.locale;\n                var tertiary_tok = res.token;\n            }\n            if (myabbrev_family) {\n                primary = abbreviate(state, Item, alternative_varname, primary, myabbrev_family, true);\n                if (primary) {\n                    primary = quashCheck(primary);\n                }\n                secondary = abbreviate(state, Item, false, secondary, myabbrev_family, true);\n                tertiary = abbreviate(state, Item, false, tertiary, myabbrev_family, true);\n            }\n            var primaryPrefix;\n            if (slot.primary === \"locale-translit\") {\n                primaryPrefix = state.opt.citeAffixes[langPrefs][slot.primary].prefix;\n            }                \n            if (primaryPrefix === \"<i>\" && variables[0] === 'title' && !primaryUsedOrig) {\n                var hasItalic = false;\n                for (var i = 0, ilen = primary_tok.decorations.length; i < ilen; i += 1) {\n                    if (primary_tok.decorations[i][0] === \"@font-style\"\n                        && primary_tok.decorations[i][1] === \"italic\") {\n                        hasItalic = true;\n                    }\n                }\n                if (!hasItalic) {\n                    primary_tok.decorations.push([\"@font-style\", \"italic\"])\n                }\n            }\n            if (primary_locale !== \"en\" && primary_tok.strings[\"text-case\"] === \"title\") {\n                primary_tok.strings[\"text-case\"] = \"passthrough\";\n            }\n            if (\"title\" === variables[0]) {\n                primary = CSL.demoteNoiseWords(state, primary, this[\"leading-noise-words\"]);\n            }\n            if (secondary || tertiary) {\n                state.output.openLevel(\"empty\");\n                primary_tok.strings.suffix = primary_tok.strings.suffix.replace(/[ .,]+$/,\"\");\n                state.output.append(primary, primary_tok);\n                if (secondary) {\n                    secondary_tok.strings.prefix = state.opt.citeAffixes[langPrefs][slot.secondary].prefix;\n                    secondary_tok.strings.suffix = state.opt.citeAffixes[langPrefs][slot.secondary].suffix;\n                    if (!secondary_tok.strings.prefix) {\n                        secondary_tok.strings.prefix = \" \";\n                    }\n                    for (var i = secondary_tok.decorations.length - 1; i > -1; i += -1) {\n                        if (['@quotes/true', '@font-style/italic', '@font-style/oblique', '@font-weight/bold'].indexOf(secondary_tok.decorations[i].join('/')) > -1) {\n                            secondary_tok.decorations = secondary_tok.decorations.slice(0, i).concat(secondary_tok.decorations.slice(i + 1))\n                        }\n                    }\n                    if (secondary_locale !== \"en\" && secondary_tok.strings[\"text-case\"] === \"title\") {\n                        secondary_tok.strings[\"text-case\"] = \"passthrough\";\n                    }\n                    var secondary_outer = new CSL.Token();\n                    secondary_outer.decorations.push([\"@font-style\", \"normal\"]);\n                    secondary_outer.decorations.push([\"@font-weight\", \"normal\"]);\n                    state.output.openLevel(secondary_outer);\n                    state.output.append(secondary, secondary_tok);\n                    state.output.closeLevel();\n                    var blob_obj = state.output.current.value();\n                    var blobs_pos = state.output.current.value().blobs.length - 1;\n                    if (state.parallel.use_parallels) {\n                        state.parallel.cite.front.push(variables[0] + \":secondary\");\n                        state.parallel.cite[variables[0] + \":secondary\"] = {blobs:[[blob_obj, blobs_pos]]};\n                    }\n                }\n                if (tertiary) {\n                    tertiary_tok.strings.prefix = state.opt.citeAffixes[langPrefs][slot.tertiary].prefix;\n                    tertiary_tok.strings.suffix = state.opt.citeAffixes[langPrefs][slot.tertiary].suffix;\n                    if (!tertiary_tok.strings.prefix) {\n                        tertiary_tok.strings.prefix = \" \";\n                    }\n                    for (var i = tertiary_tok.decorations.length - 1; i > -1; i += -1) {\n                        if (['@quotes/true', '@font-style/italic', '@font-style/oblique', '@font-weight/bold'].indexOf(tertiary_tok.decorations[i].join('/')) > -1) {\n                            tertiary_tok.decorations = tertiary_tok.decorations.slice(0, i).concat(tertiary_tok.decorations.slice(i + 1))\n                        }\n                    }\n                    if (tertiary_locale !== \"en\" && tertiary_tok.strings[\"text-case\"] === \"title\") {\n                        tertiary_tok.strings[\"text-case\"] = \"passthrough\";\n                    }\n                    var tertiary_outer = new CSL.Token();\n                    tertiary_outer.decorations.push([\"@font-style\", \"normal\"]);\n                    tertiary_outer.decorations.push([\"@font-weight\", \"normal\"]);\n                    state.output.openLevel(tertiary_outer);\n                    state.output.append(tertiary, tertiary_tok);\n                    state.output.closeLevel();\n                    var blob_obj = state.output.current.value();\n                    var blobs_pos = state.output.current.value().blobs.length - 1;\n                    if (state.parallel.use_parallels) {\n                        state.parallel.cite.front.push(variables[0] + \":tertiary\");\n                        state.parallel.cite[variables[0] + \":tertiary\"] = {blobs:[[blob_obj, blobs_pos]]};\n                    }\n                }\n                state.output.closeLevel();\n            } else {\n                state.output.append(primary, primary_tok);\n            }\n            return null;\n        };\n    }\n    this.getOutputFunction = getOutputFunction;\n    function quashCheck(value) {\n        var m = value.match(/^!([-,_a-z]+)>>>/);\n        if (m) {\n            var fields = m[1].split(\",\");\n            value = value.slice(m[0].length);\n            for (var i = 0, ilen = fields.length; i < ilen; i += 1) {\n                if (state.tmp.done_vars.indexOf(fields[i]) === -1) {\n                    state.tmp.done_vars.push(fields[i]);\n                }\n            }\n        }\n        return value;\n    }\n    this.quashCheck = quashCheck;\n};\nCSL.Token = function (name, tokentype) {\n    this.name = name;\n    this.strings = {};\n    this.strings.delimiter = undefined;\n    this.strings.prefix = \"\";\n    this.strings.suffix = \"\";\n    this.decorations = [];\n    this.variables = [];\n    this.execs = [];\n    this.tokentype = tokentype;\n    this.evaluator = false;\n    this.tests = [];\n    this.rawtests = [];\n    this.succeed = false;\n    this.fail = false;\n    this.next = false;\n};\nCSL.Util.cloneToken = function (token) {\n    var newtok, key, pos, len;\n    if (\"string\" === typeof token) {\n        return token;\n    }\n    newtok = new CSL.Token(token.name, token.tokentype);\n    for (key in token.strings) {\n        if (token.strings.hasOwnProperty(key)) {\n            newtok.strings[key] = token.strings[key];\n        }\n    }\n    if (token.decorations) {\n        newtok.decorations = [];\n        for (pos = 0, len = token.decorations.length; pos < len; pos += 1) {\n            newtok.decorations.push(token.decorations[pos].slice());\n        }\n    }\n    if (token.variables) {\n        newtok.variables = token.variables.slice();\n    }\n    if (token.execs) {\n        newtok.execs = token.execs.slice();\n        newtok.tests = token.tests.slice();\n        newtok.rawtests = token.tests.slice();\n    }\n    return newtok;\n};\nCSL.AmbigConfig = function () {\n    this.maxvals = [];\n    this.minval = 1;\n    this.names = [];\n    this.givens = [];\n    this.year_suffix = false;\n    this.disambiguate = 0;\n};\nCSL.Blob = function (str, token, levelname) {\n    var len, pos, key;\n    this.levelname = levelname;\n    if (token) {\n        this.strings = {\"prefix\":\"\",\"suffix\":\"\"};\n        for (key in token.strings) {\n            if (token.strings.hasOwnProperty(key)) {\n                this.strings[key] = token.strings[key];\n            }\n        }\n        this.decorations = [];\n        if (token.decorations === undefined) {\n            len = 0;\n        } else {\n            len = token.decorations.length;\n        }\n        for (pos = 0; pos < len; pos += 1) {\n            this.decorations.push(token.decorations[pos].slice());\n        }\n    } else {\n        this.strings = {};\n        this.strings.prefix = \"\";\n        this.strings.suffix = \"\";\n        this.strings.delimiter = \"\";\n        this.decorations = [];\n    }\n    if (\"string\" === typeof str) {\n        this.blobs = str;\n    } else if (str) {\n        this.blobs = [str];\n    } else {\n        this.blobs = [];\n    }\n    this.alldecor = [this.decorations];\n};\nCSL.Blob.prototype.push = function (blob) {\n    if (\"string\" === typeof this.blobs) {\n        throw \"Attempt to push blob onto string object\";\n    } else if (false !== blob) {\n        blob.alldecor = blob.alldecor.concat(this.alldecor);\n        this.blobs.push(blob);\n    }\n};\nCSL.NumericBlob = function (particle, num, mother_token, id) {\n    this.id = id;\n    this.alldecor = [];\n    this.num = num;\n    this.particle = particle;\n    this.blobs = num.toString();\n    this.status = CSL.START;\n    this.strings = {};\n    if (mother_token) {\n        this.gender = mother_token.gender;\n        this.decorations = mother_token.decorations;\n        this.strings.prefix = mother_token.strings.prefix;\n        this.strings.suffix = mother_token.strings.suffix;\n        this.strings[\"text-case\"] = mother_token.strings[\"text-case\"];\n        this.successor_prefix = mother_token.successor_prefix;\n        this.range_prefix = mother_token.range_prefix;\n        this.splice_prefix = mother_token.splice_prefix;\n        this.formatter = mother_token.formatter;\n        if (!this.formatter) {\n            this.formatter =  new CSL.Output.DefaultFormatter();\n        }\n        if (this.formatter) {\n            this.type = this.formatter.format(1);\n        }\n    } else {\n        this.decorations = [];\n        this.strings.prefix = \"\";\n        this.strings.suffix = \"\";\n        this.successor_prefix = \"\";\n        this.range_prefix = \"\";\n        this.splice_prefix = \"\";\n        this.formatter = new CSL.Output.DefaultFormatter();\n    }\n};\nCSL.NumericBlob.prototype.setFormatter = function (formatter) {\n    this.formatter = formatter;\n    this.type = this.formatter.format(1);\n};\nCSL.Output.DefaultFormatter = function () {};\nCSL.Output.DefaultFormatter.prototype.format = function (num) {\n    return num.toString();\n};\nCSL.NumericBlob.prototype.checkNext = function (next,start) {\n    if (start) {\n        this.status = CSL.START;\n        if (\"object\" === typeof next) {\n            if (next.num === (this.num + 1)) {\n                next.status = CSL.SUCCESSOR;\n            } else {\n                next.status = CSL.SEEN;\n            }\n        }\n    } else if (! next || !next.num || this.type !== next.type || next.num !== (this.num + 1)) {\n        if (this.status === CSL.SUCCESSOR_OF_SUCCESSOR) {\n            this.status = CSL.END;\n        }\n        if (\"object\" === typeof next) { \n           next.status = CSL.SEEN;\n        }\n    } else { // next number is in the sequence\n        if (this.status === CSL.START || this.status === CSL.SEEN) {\n            next.status = CSL.SUCCESSOR;\n        } else if (this.status === CSL.SUCCESSOR || this.status === CSL.SUCCESSOR_OF_SUCCESSOR) {\n            if (this.range_prefix) {\n                next.status = CSL.SUCCESSOR_OF_SUCCESSOR;\n                this.status = CSL.SUPPRESS;\n            } else {\n                next.status = CSL.SUCCESSOR;\n            }\n        }\n    }\n};\nCSL.NumericBlob.prototype.checkLast = function (last) {\n    if (this.status === CSL.SEEN \n    || (last.num !== (this.num - 1) && this.status === CSL.SUCCESSOR)) {\n        this.status = CSL.SUCCESSOR;\n        return true;\n    }\n    return false;\n};\nCSL.Util.fixDateNode = function (parent, pos, node) {\n    var form, variable, datexml, subnode, partname, attr, val, prefix, suffix, children, key, subchildren, kkey, display, cslid;\n    var lingo = this.cslXml.getAttributeValue(node, \"lingo\");\n    var default_locale = this.cslXml.getAttributeValue(node, \"default-locale\");\n    this.build.date_key = true;\n    form = this.cslXml.getAttributeValue(node, \"form\");\n    var lingo;\n    if (default_locale) {\n        lingo = this.opt[\"default-locale\"][0];\n    } else {\n        lingo = this.cslXml.getAttributeValue(node, \"lingo\");\n    }\n    if (!this.getDate(form, default_locale)) {\n        return parent;\n    }\n    var dateparts = this.cslXml.getAttributeValue(node, \"date-parts\");\n    variable = this.cslXml.getAttributeValue(node, \"variable\");\n    prefix = this.cslXml.getAttributeValue(node, \"prefix\");\n    suffix = this.cslXml.getAttributeValue(node, \"suffix\");\n    display = this.cslXml.getAttributeValue(node, \"display\");\n    cslid = this.cslXml.getAttributeValue(node, \"cslid\");\n    datexml = this.cslXml.nodeCopy(this.getDate(form, default_locale));\n    this.cslXml.setAttribute(datexml, 'lingo', this.opt.lang);\n    this.cslXml.setAttribute(datexml, 'form', form);\n    this.cslXml.setAttribute(datexml, 'date-parts', dateparts);\n    this.cslXml.setAttribute(datexml, \"cslid\", cslid);\n    this.cslXml.setAttribute(datexml, 'variable', variable);\n    this.cslXml.setAttribute(datexml, 'default-locale', default_locale);\n    if (prefix) {\n        this.cslXml.setAttribute(datexml, \"prefix\", prefix);\n    }\n    if (suffix) {\n        this.cslXml.setAttribute(datexml, \"suffix\", suffix);\n    }\n    if (display) {\n        this.cslXml.setAttribute(datexml, \"display\", display);\n    }\n    children = this.cslXml.children(datexml);\n    for (key in children) {\n        subnode = children[key];\n        if (\"date-part\" === this.cslXml.nodename(subnode)) {\n            partname = this.cslXml.getAttributeValue(subnode, \"name\");\n            if (default_locale) {\n                this.cslXml.setAttributeOnNodeIdentifiedByNameAttribute(datexml, \"date-part\", partname, \"@default-locale\", \"true\");\n            }\n        }\n    }\n    children = this.cslXml.children(node);\n    for (key in children) {\n        subnode = children[key];\n        if (\"date-part\" === this.cslXml.nodename(subnode)) {\n            partname = this.cslXml.getAttributeValue(subnode, \"name\");\n            subchildren = this.cslXml.attributes(subnode);\n            for (attr in subchildren) {\n                if (\"@name\" === attr) {\n                    continue;\n                }\n                if (lingo && lingo !== this.opt.lang) {\n                    if ([\"@suffix\", \"@prefix\", \"@form\"].indexOf(attr) > -1) {\n                        continue;\n                    }\n                }\n                val = subchildren[attr];\n                this.cslXml.setAttributeOnNodeIdentifiedByNameAttribute(datexml, \"date-part\", partname, attr, val);\n            }\n        }\n    }\n    if (\"year\" === this.cslXml.getAttributeValue(node, \"date-parts\")) {\n        this.cslXml.deleteNodeByNameAttribute(datexml, 'month');\n        this.cslXml.deleteNodeByNameAttribute(datexml, 'day');\n    } else if (\"year-month\" === this.cslXml.getAttributeValue(node, \"date-parts\")) {\n        this.cslXml.deleteNodeByNameAttribute(datexml, 'day');\n    } else if (\"month-day\" === this.cslXml.getAttributeValue(node, \"date-parts\")) {\n        var childNodes = this.cslXml.children(datexml);\n        for (var i=1,ilen=this.cslXml.numberofnodes(childNodes);i<ilen;i++) {\n            if (this.cslXml.getAttributeValue(childNodes[i], 'name') === \"year\") {\n                this.cslXml.setAttribute(childNodes[i-1], \"suffix\", \"\");\n                break;\n            }\n        }\n        this.cslXml.deleteNodeByNameAttribute(datexml, 'year');\n    }\n    return this.cslXml.insertChildNodeAfter(parent, node, pos, datexml);\n};\nCSL.dateMacroAsSortKey = function (state, Item) {\n    CSL.dateAsSortKey.call(this, state, Item, true);\n};\nCSL.dateAsSortKey = function (state, Item, isMacro) {\n    var dp, elem, value, e, yr, prefix, i, ilen, num;\n    var variable = this.variables[0];\n    var macroFlag = \"empty\";\n    if (isMacro && state.tmp.extension) {\n        macroFlag = \"macro-with-date\";\n    }\n    dp = Item[variable];\n    if (\"undefined\" === typeof dp) {\n        dp = {\"date-parts\": [[0]] };\n        if (!dp.year) {\n            state.tmp.empty_date = true;\n        }\n    }\n    if (\"undefined\" === typeof this.dateparts) {\n        this.dateparts = [\"year\", \"month\", \"day\"];\n    }\n    if (dp.raw) {\n        dp = state.fun.dateparser.parseDateToArray(dp.raw);\n    } else if (dp[\"date-parts\"]) {\n        dp = state.dateParseArray(dp);\n    }\n    if (\"undefined\" === typeof dp) {\n        dp = {};\n    }\n    for (i = 0, ilen = CSL.DATE_PARTS_INTERNAL.length; i < ilen; i += 1) {\n        elem = CSL.DATE_PARTS_INTERNAL[i];\n        value = 0;\n        e = elem;\n        if (e.slice(-4) === \"_end\") {\n            e = e.slice(0, -4);\n        }\n        if (dp[elem] && this.dateparts.indexOf(e) > -1) {\n            value = dp[elem];\n        }\n        if (elem.slice(0, 4) === \"year\") {\n            yr = CSL.Util.Dates[e].numeric(state, value);\n            prefix = \"Y\";\n            if (yr[0] === \"-\") {\n                prefix = \"X\";\n                yr = yr.slice(1);\n                yr = 9999 - parseInt(yr, 10);\n            }\n            state.output.append(CSL.Util.Dates[elem.slice(0, 4)].numeric(state, (prefix + yr)), macroFlag);\n        } else {\n            value = CSL.Util.Dates[e][\"numeric-leading-zeros\"](state, value);\n            if (!value) {\n                value = \"00\";\n            }\n            state.output.append(value, macroFlag);\n        }\n    }\n};\nCSL.Engine.prototype.dateParseArray = function (date_obj) {\n    var ret, field, dpos, ppos, dp, exts, llen, pos, len, pppos, lllen;\n    ret = {};\n    for (field in date_obj) {\n        if (field === \"date-parts\") {\n            dp = date_obj[\"date-parts\"];\n            if (dp.length > 1) {\n                if (dp[0].length !== dp[1].length) {\n                    CSL.error(\"CSL data error: element mismatch in date range input.\");\n                }\n            }\n            exts = [\"\", \"_end\"];\n            for (var i = 0, ilen = dp.length; i < ilen; i += 1) {\n                for (var j = 0, jlen = CSL.DATE_PARTS.length; j < jlen; j += 1) {\n                    if (\"undefined\" === typeof dp[i][j]) {\n                        ret[(CSL.DATE_PARTS[j] + exts[i])] = dp[i][j];\n                    } else {\n                        ret[(CSL.DATE_PARTS[j] + exts[i])] = parseInt(dp[i][j], 10);\n                    }\n                }\n            }\n        } else if (date_obj.hasOwnProperty(field)) {\n            if (field === \"literal\" && \"object\" === typeof date_obj.literal && \"string\" === typeof date_obj.literal.part) {\n                CSL.debug(\"Warning: fixing up weird literal date value\");\n                ret.literal = date_obj.literal.part;\n            } else {\n                ret[field] = date_obj[field];\n            }\n        }\n    }\n    return ret;\n};\nCSL.Util.Names = {};\nCSL.Util.Names.compareNamesets = CSL.NameOutput.prototype._compareNamesets;\nCSL.Util.Names.unInitialize = function (state, name) {\n    var i, ilen, namelist, punctlist, ret;\n    if (!name) {\n        return \"\";\n    }\n    namelist = name.split(/(?:\\-|\\s+)/);\n    punctlist = name.match(/(\\-|\\s+)/g);\n    ret = \"\";\n    for (i = 0, ilen = namelist.length; i < ilen; i += 1) {\n        if (CSL.ALL_ROMANESQUE_REGEXP.exec(namelist[i].slice(0,-1)) \n            && namelist[i] \n            && namelist[i] !== namelist[i].toUpperCase()) {\n            namelist[i] = namelist[i].slice(0, 1) + namelist[i].slice(1, 2).toLowerCase() + namelist[i].slice(2);\n        }\n        ret += namelist[i];\n        if (i < ilen - 1) {\n            ret += punctlist[i];\n        }\n    }\n    return ret;\n};\nCSL.Util.Names.initializeWith = function (state, name, terminator, normalizeOnly) {\n    var i, ilen, j, jlen, n, m, mm, str, lst, ret;\n    if (!name) {\n        return \"\";\n    }\n    if (!terminator) {\n        terminator = \"\";\n    }\n    if ([\"Lord\", \"Lady\"].indexOf(name) > -1\n        || (!name.match(CSL.STARTSWITH_ROMANESQUE_REGEXP)\n            && !terminator.match(\"%s\"))) {\n        return name;\n    }\n    var namelist = name;\n    if (state.opt[\"initialize-with-hyphen\"] === false) {\n        namelist = namelist.replace(/\\-/g, \" \");\n    }\n    namelist = namelist.replace(/\\s*\\-\\s*/g, \"-\").replace(/\\s+/g, \" \");\n    namelist = namelist.replace(/-([a-z])/g, \"\\u2013$1\");\n    mm = namelist.match(/[\\-\\s]+/g);\n    lst = namelist.split(/[\\-\\s]+/);\n    if (lst.length === 0) {\n        namelist = mm;\n    } else {\n        namelist = [lst[0]];\n        for (i = 1, ilen = lst.length; i < ilen; i += 1) {\n            namelist.push(mm[i - 1]);\n            namelist.push(lst[i]);\n        }\n    }\n    lst = namelist;\n    for (i = lst.length -1; i > -1; i += -1) {\n        if (lst[i] && lst[i].slice(0, -1).indexOf(\".\") > -1) {\n            var lstend = lst.slice(i + 1);\n            var lstmid = lst[i].slice(0, -1).split(\".\");\n            lst = lst.slice(0, i);\n            for (j = 0, jlen = lstmid.length; j < jlen; j += 1) {\n                lst.push(lstmid[j] + \".\");\n                if (j < lstmid.length - 1) {\n                    lst.push(\" \");\n                }\n            }\n            lst = lst.concat(lstend);\n        }\n    }\n    if (normalizeOnly) {\n        ret = CSL.Util.Names.doNormalize(state, lst, terminator);\n    } else {\n        ret = CSL.Util.Names.doInitialize(state, lst, terminator);\n    }\n    ret = ret.replace(/\\u2013([a-z])/g, \"-$1\");\n    return ret;\n};\nCSL.Util.Names.doNormalize = function (state, namelist, terminator, mode) {\n    var i, ilen;\n    terminator = terminator ? terminator : \"\";\n    var isAbbrev = [];\n    for (i = 0, ilen = namelist.length; i < ilen; i += 1) {\n        if (namelist[i].length > 1 && namelist[i].slice(-1) === \".\") {\n            namelist[i] = namelist[i].slice(0, -1);\n            isAbbrev.push(true);\n        } else if (namelist[i].length === 1 && namelist[i].toUpperCase() === namelist[i]) {\n            isAbbrev.push(true);\n        } else {\n            isAbbrev.push(false);\n        }\n    }\n    var ret = [];\n    for (i = 0, ilen = namelist.length; i < ilen; i += 2) {\n        if (isAbbrev[i]) {\n            if (i < namelist.length - 2) {\n                namelist[i + 1] = \"\";\n                if ((!terminator || terminator.slice(-1) && terminator.slice(-1) !== \" \")\n                    && namelist[i].length && namelist[i].match(CSL.ALL_ROMANESQUE_REGEXP)\n                    && (namelist[i].length > 1 || namelist[i + 2].length > 1)) {\n                    namelist[i + 1] = \" \";\n                }\n                if (namelist[i + 2].length > 1) {\n                    namelist[i] = namelist[i] + terminator.replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020\\ufeff\\u00a0]+$/, \"\");\n                } else {\n                    namelist[i] = namelist[i] + terminator;\n                }\n            }\n            if (i === namelist.length - 1) {\n                namelist[i] = namelist[i] + terminator;\n            }\n        }\n    }\n    return namelist.join(\"\").replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020\\ufeff\\u00a0]+$/,\"\").replace(/\\s*\\-\\s*/g, \"-\").replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020]+/g, \" \");\n};\nCSL.Util.Names.doInitialize = function (state, namelist, terminator, mode) {\n    var i, ilen, m, j, jlen, lst, n;\n    for (i = 0, ilen = namelist.length; i < ilen; i += 2) {\n        n = namelist[i];\n        if (!n) {\n            continue;\n        }\n        m = n.match(CSL.NAME_INITIAL_REGEXP);\n        if (!m && (!n.match(CSL.STARTSWITH_ROMANESQUE_REGEXP) && n.length > 1 && terminator.match(\"%s\"))) {\n            m = n.match(/(.)(.*)/);\n        }\n        if (m && m[1] === m[1].toUpperCase()) {\n            var extra = \"\";\n            if (m[2]) {\n                var s = \"\";\n                lst = m[2].split(\"\");\n                for (j = 0, jlen = lst.length; j < jlen; j += 1) {\n                    var c = lst[j];\n                    if (c === c.toUpperCase()) {\n                        s += c;\n                    } else {\n                        break;\n                    }\n                }\n                if (s.length < m[2].length) {\n                    extra = s.toLocaleLowerCase();\n                }\n            }\n            namelist[i] = m[1].toLocaleUpperCase() + extra;\n            if (i < (ilen - 1)) {\n                if (terminator.match(\"%s\")) {\n                    namelist[i] = terminator.replace(\"%s\", namelist[i]);\n                } else {\n                    if (namelist[i + 1].indexOf(\"-\") > -1) {\n                        namelist[i + 1] = terminator + namelist[i + 1];\n                    } else {\n                        namelist[i + 1] = terminator;\n                    }\n                }\n            } else {\n                if (terminator.match(\"%s\")) {\n                    namelist[i] = terminator.replace(\"%s\", namelist[i]);\n                } else {\n                    namelist.push(terminator);\n                }\n            }\n        } else if (n.match(CSL.ROMANESQUE_REGEXP)) {\n            namelist[i] = \" \" + n;\n        }\n    }\n    var ret = namelist.join(\"\");\n    ret = ret.replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020\\ufeff\\u00a0]+$/,\"\").replace(/\\s*\\-\\s*/g, \"-\").replace(/[\\u0009\\u000a\\u000b\\u000c\\u000d\\u0020]+/g, \" \");\n    return ret;\n};\nCSL.Util.Names.getRawName = function (name) {\n    var ret = [];\n    if (name.given) {\n        ret.push(name.given);\n    }\n    if (name.family) {\n        ret.push(name.family);\n    }\n    return ret.join(\" \");\n};\nCSL.Util.Dates = {};\nCSL.Util.Dates.year = {};\nCSL.Util.Dates.year[\"long\"] = function (state, num) {\n    if (!num) {\n        if (\"boolean\" === typeof num) {\n            num = \"\";\n        } else {\n            num = 0;\n        }\n    }\n    return num.toString();\n};\nCSL.Util.Dates.year.imperial = function (state, num, end, makeShort) {\n    if (!num) {\n        if (\"boolean\" === typeof num) {\n            num = \"\";\n        } else {\n            num = 0;\n        }\n    }\n    end = end ? \"_end\" : \"\";\n    var month = state.tmp.date_object[\"month\" + end];\n    month = month ? \"\"+month : \"1\";\n    while (month.length < 2) {\n        month = \"0\" + month;\n    }\n    var day = state.tmp.date_object[\"day\" + end];\n    day = day ? \"\"+day : \"1\";\n    while (day.length < 2) {\n        day = \"0\" + day;\n    }\n    var date = parseInt(num + month + day, 10);\n    var label;\n    var offset;\n    if (date >= 18680908 && date < 19120730) {\n        label = '\\u660e\\u6cbb';\n        offset = 1867;\n    } else if (date >= 19120730 && date < 19261225) {\n        label = '\\u5927\\u6b63';\n        offset = 1911;\n    } else if (date >= 19261225 && date < 19890108) {\n        label = '\\u662d\\u548c';\n        offset = 1925;\n    } else if (date >= 19890108) {\n        label = '\\u5e73\\u6210';\n        offset = 1988;\n    }\n    if (label && offset) {\n        if (!state.transform.abbrevs['default']['number'][label]) {\n            state.transform.loadAbbreviation('default', \"number\", label);\n        }\n        if (state.transform.abbrevs['default']['number'][label]) {\n            label = state.transform.abbrevs['default']['number'][label];\n        };\n        year = label + (num - offset);\n    }\n    return year;\n};\nCSL.Util.Dates.year[\"short\"] = function (state, num) {\n    num = num.toString();\n    if (num && num.length === 4) {\n        return num.substr(2);\n    }\n};\nCSL.Util.Dates.year.numeric = function (state, num) {\n    var m, pre;\n    num = \"\" + num;\n    m = num.match(/([0-9]*)$/);\n    if (m) {\n        pre = num.slice(0, m[1].length * -1);\n        num = m[1];\n    } else {\n        pre = num;\n        num = \"\";\n    }\n    while (num.length < 4) {\n        num = \"0\" + num;\n    }\n    return (pre + num);\n};\nCSL.Util.Dates.normalizeMonth = function (num, useSeason) {\n    var ret;\n    if (!num) {\n        num = 0;\n    }\n    num = \"\" + num;\n    if (!num.match(/^[0-9]+$/)) {\n        num = 0;\n    }\n    num = parseInt(num, 10);\n    if (useSeason) {\n        var res = {stub: \"month-\", num: num};\n        if (res.num < 1 || res.num > 20) {\n            res.num = 0;\n        } else if (res.num > 16) {\n            res.stub = \"season-\";\n            res.num = res.num - 16;\n        } else if (res.num > 12) {\n            res.stub = \"season-\";\n            res.num = res.num - 12;\n        }\n        ret = res;\n    } else {\n        if (num < 1 || num > 12) {\n            num = 0;\n        }\n        ret = num;\n    }\n    return ret;\n}\nCSL.Util.Dates.month = {};\nCSL.Util.Dates.month.numeric = function (state, num) {\n    var num = CSL.Util.Dates.normalizeMonth(num);\n    if (!num) {\n        num = \"\";\n    }\n    return num;\n};\nCSL.Util.Dates.month[\"numeric-leading-zeros\"] = function (state, num) {\n    var num = CSL.Util.Dates.normalizeMonth(num);\n    if (!num) {\n        num = \"\";\n    } else {\n        num = \"\" + num;\n        while (num.length < 2) {\n            num = \"0\" + num;\n        }\n    }\n    return num;\n};\nCSL.Util.Dates.month[\"long\"] = function (state, num, gender, forceDefaultLocale) {\n    var res = CSL.Util.Dates.normalizeMonth(num, true);\n    var num = res.num;\n    if (!num) {\n        num = \"\";\n    } else {\n        num = \"\" + num;\n        while (num.length < 2) {\n            num = \"0\" + num;\n        }\n        num = state.getTerm(res.stub + num, \"long\", 0, 0, false, forceDefaultLocale);\n    }\n    return num;\n};\nCSL.Util.Dates.month[\"short\"] = function (state, num, gender, forceDefaultLocale) {\n    var res = CSL.Util.Dates.normalizeMonth(num, true);\n    var num = res.num;\n    if (!num) {\n        num = \"\";\n    } else {\n        num = \"\" + num;\n        while (num.length < 2) {\n            num = \"0\" + num;\n        }\n        num = state.getTerm(res.stub + num, \"short\", 0, 0, false, forceDefaultLocale);\n    }\n    return num;\n};\nCSL.Util.Dates.day = {};\nCSL.Util.Dates.day.numeric = function (state, num) {\n    return num.toString();\n};\nCSL.Util.Dates.day[\"long\"] = CSL.Util.Dates.day.numeric;\nCSL.Util.Dates.day[\"numeric-leading-zeros\"] = function (state, num) {\n    if (!num) {\n        num = 0;\n    }\n    num = num.toString();\n    while (num.length < 2) {\n        num = \"0\" + num;\n    }\n    return num.toString();\n};\nCSL.Util.Dates.day.ordinal = function (state, num, gender) {\n    return state.fun.ordinalizer.format(num, gender);\n};\nCSL.Util.Sort = {};\nCSL.Util.Sort.strip_prepositions = function (str) {\n    var m;\n    if (\"string\" === typeof str) {\n        m = str.toLocaleLowerCase();\n        m = str.match(/^((a|an|the)\\s+)/);\n    }\n    if (m) {\n        str = str.substr(m[1].length);\n    }\n    return str;\n};\nCSL.Util.substituteStart = function (state, target) {\n    var element_trace, display, bib_first, func, choose_start, if_start, nodetypes;\n    func = function (state, Item) {\n        for (var i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n            if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n                state.tmp.strip_periods += 1;\n                break;\n            }\n        }\n    };\n    this.execs.push(func);\n    if (this.decorations && (state.opt.development_extensions.csl_reverse_lookup_support || state.sys.csl_reverse_lookup_support)) {\n        this.decorations.reverse();\n        this.decorations.push([\"@showid\",\"true\", this.cslid]);\n        this.decorations.reverse();\n    }\n    nodetypes = [\"number\", \"date\", \"names\"];\n    if ((\"text\" === this.name && !this.postponed_macro) || nodetypes.indexOf(this.name) > -1) {\n        element_trace = function (state, Item, item) {\n            if (state.tmp.element_trace.value() === \"author\" || \"names\" === this.name) {\n                if (item && item[\"author-only\"]) {\n                    state.tmp.element_trace.push(\"do-not-suppress-me\");\n                } else if (item && item[\"suppress-author\"]) {\n                }\n            } else {\n                if (item && item[\"author-only\"]) {\n                    state.tmp.element_trace.push(\"suppress-me\");\n                } else if (item && item[\"suppress-author\"]) {\n                    state.tmp.element_trace.push(\"do-not-suppress-me\");\n                }\n            }\n        };\n        this.execs.push(element_trace);\n    }\n    display = this.strings.cls;\n    this.strings.cls = false;\n    if (state.build.render_nesting_level === 0) {\n        if (state.build.area === \"bibliography\" && state.bibliography.opt[\"second-field-align\"]) {\n            bib_first = new CSL.Token(\"group\", CSL.START);\n            bib_first.decorations = [[\"@display\", \"left-margin\"]];\n            func = function (state, Item) {\n                if (!state.tmp.render_seen) {\n                    bib_first.strings.first_blob = Item.id;\n                    state.output.startTag(\"bib_first\", bib_first);\n                }\n            };\n            bib_first.execs.push(func);\n            target.push(bib_first);\n        } else if (CSL.DISPLAY_CLASSES.indexOf(display) > -1) {\n            bib_first = new CSL.Token(\"group\", CSL.START);\n            bib_first.decorations = [[\"@display\", display]];\n            func = function (state, Item) {\n                bib_first.strings.first_blob = Item.id;\n                state.output.startTag(\"bib_first\", bib_first);\n            };\n            bib_first.execs.push(func);\n            target.push(bib_first);\n        }\n        state.build.cls = display;\n    }\n    state.build.render_nesting_level += 1;\n    if (state.build.substitute_level.value() === 1) {\n        choose_start = new CSL.Token(\"choose\", CSL.START);\n        CSL.Node.choose.build.call(choose_start, state, target);\n        if_start = new CSL.Token(\"if\", CSL.START);\n        func = function (Item,item) {\n            if (state.tmp.can_substitute.value()) {\n                return true;\n            }\n            return false;\n        };\n        if_start.tests.push(func);\n        if_start.test = state.fun.match.any(this, state, if_start.tests);\n        target.push(if_start);\n    }\n    if (state.sys.variableWrapper\n        && this.variables_real\n        && this.variables_real.length) {\n        func = function (state, Item, item) {\n            if (!state.tmp.just_looking && !state.tmp.suppress_decorations) {\n                variable_entry = new CSL.Token(\"text\", CSL.START);\n                variable_entry.decorations = [[\"@showid\", \"true\"]];\n                state.output.startTag(\"variable_entry\", variable_entry);\n                var position = null;\n                if (item) {\n                    position = item.position;\n                }\n                if (!position) position = 0;\n                var positionMap = [\n                    \"first\",\n                    \"subsequent\",\n                    \"ibid\",\n                    \"ibid-with-locator\"\n                ]\n                var noteNumber = 0;\n                if (item && item.noteIndex) {\n                    noteNumber = item.noteIndex;\n                }\n                var firstReferenceNoteNumber = 0;\n                if (item && item['first-reference-note-number']) {\n                    firstReferenceNoteNumber = item['first-reference-note-number'];\n                }\n                var citationNumber = 0;\n                if (item && item['citation-number']) {\n                    citationNumber = item['citation-number'];\n                }\n                var index = 0;\n                if (item && item.index) {\n                    index = item.index;\n                }\n                var params = {\n                    itemData: Item,\n                    variableNames: this.variables,\n                    context: state.tmp.area,\n                    xclass: state.opt.xclass,\n                    position: positionMap[position],\n                    \"note-number\": noteNumber,\n                    \"first-reference-note-number\": firstReferenceNoteNumber,\n                    \"citation-number\": citationNumber,\n                    \"index\": index,\n                    \"mode\": state.opt.mode\n                };\n                state.output.current.value().params = params;\n            }\n        }\n        this.execs.push(func);\n    }\n};\nCSL.Util.substituteEnd = function (state, target) {\n    var func, bib_first_end, bib_other, if_end, choose_end, toplevel, hasval, author_substitute, str;\n    if (state.sys.variableWrapper\n        && (this.hasVariable || (this.variables_real && this.variables_real.length))) {\n        func = function (state,Item) {\n            if (!state.tmp.just_looking && !state.tmp.suppress_decorations) {\n                state.output.endTag(\"variable_entry\");\n            }\n        }\n        this.execs.push(func);\n    }\n    func = function (state, Item) {\n        for (var i = 0, ilen = this.decorations.length; i < ilen; i += 1) {\n            if (\"@strip-periods\" === this.decorations[i][0] && \"true\" === this.decorations[i][1]) {\n                state.tmp.strip_periods += -1;\n                break;\n            }\n        }\n    };\n    this.execs.push(func);\n    state.build.render_nesting_level += -1;\n    if (state.build.render_nesting_level === 0) {\n        if (state.build.cls) {\n            func = function (state, Item) {\n                state.output.endTag(\"bib_first\");\n            };\n            this.execs.push(func);\n            state.build.cls = false;\n        } else if (state.build.area === \"bibliography\" && state.bibliography.opt[\"second-field-align\"]) {\n            bib_first_end = new CSL.Token(\"group\", CSL.END);\n            func = function (state, Item) {\n                if (!state.tmp.render_seen) {\n                    state.output.endTag(\"bib_first\"); // closes bib_first\n                }\n            };\n            bib_first_end.execs.push(func);\n            target.push(bib_first_end);\n            bib_other = new CSL.Token(\"group\", CSL.START);\n            bib_other.decorations = [[\"@display\", \"right-inline\"]];\n            func = function (state, Item) {\n                if (!state.tmp.render_seen) {\n                    state.tmp.render_seen = true;\n                    state.output.startTag(\"bib_other\", bib_other);\n                }\n            };\n            bib_other.execs.push(func);\n            target.push(bib_other);\n        }\n    }\n    if (state.build.substitute_level.value() === 1) {\n        if_end = new CSL.Token(\"if\", CSL.END);\n        target.push(if_end);\n        choose_end = new CSL.Token(\"choose\", CSL.END);\n        CSL.Node.choose.build.call(choose_end, state, target);\n    }\n    if (\"names\" === this.name || (\"text\" === this.name && this.variables_real !== \"title\")) {\n        author_substitute = new CSL.Token(\"text\", CSL.SINGLETON);\n        func = function (state, Item) {\n            if (state.tmp.area !== \"bibliography\") return;\n            if (\"string\" !== typeof state.bibliography.opt[\"subsequent-author-substitute\"]) return;\n            if (this.variables_real && !Item[this.variables_real]) return;\n            if (state.tmp.substituted_variable !== this.variables_real) {\n                return;\n            }\n            var subrule = state.bibliography.opt[\"subsequent-author-substitute-rule\"];\n            var i, ilen;\n            var printing = !state.tmp.suppress_decorations;\n            if (printing && state.tmp.subsequent_author_substitute_ok) {\n                if (state.tmp.rendered_name) {\n                    if (\"partial-each\" === subrule || \"partial-first\" === subrule) {\n                        var dosub = true;\n                        var rendered_name = [];\n                        for (i = 0, ilen = state.tmp.name_node.children.length; i < ilen; i += 1) {\n                            var name = state.tmp.rendered_name[i];\n                            if (dosub\n                                && state.tmp.last_rendered_name && state.tmp.last_rendered_name.length > (i - 1)\n                                && name && !name.localeCompare(state.tmp.last_rendered_name[i])) {\n                                str = new CSL.Blob(state[state.tmp.area].opt[\"subsequent-author-substitute\"]);\n                                state.tmp.name_node.children[i].blobs = [str];\n                                if (\"partial-first\" === subrule) {\n                                    dosub = false;\n                                }\n                            } else {\n                                dosub = false;\n                            }\n                            rendered_name.push(name);\n                        }\n                        state.tmp.last_rendered_name = rendered_name;\n                    } else if (\"complete-each\" === subrule) {\n                        var rendered_name = state.tmp.rendered_name.join(\",\");\n                        if (rendered_name) {\n                            if (state.tmp.last_rendered_name && !rendered_name.localeCompare(state.tmp.last_rendered_name)) {\n                                for (i = 0, ilen = state.tmp.name_node.children.length; i < ilen; i += 1) {\n                                    str = new CSL.Blob(state[state.tmp.area].opt[\"subsequent-author-substitute\"]);\n                                    state.tmp.name_node.children[i].blobs = [str];\n                                }\n                            }\n                            state.tmp.last_rendered_name = rendered_name;\n                        }\n                    } else {\n                        var rendered_name = state.tmp.rendered_name.join(\",\");\n                        if (rendered_name) {\n                            if (state.tmp.last_rendered_name && !rendered_name.localeCompare(state.tmp.last_rendered_name)) {\n                                str = new CSL.Blob(state[state.tmp.area].opt[\"subsequent-author-substitute\"]);\n                                if (state.tmp.label_blob) {\n                                    state.tmp.name_node.top.blobs = [str,state.tmp.label_blob];\n                                } else if (state.tmp.name_node.top.blobs.length) {\n                                    state.tmp.name_node.top.blobs[0].blobs = [str];\n                                } else {\n                                    state.tmp.name_node.top.blobs = [str];\n                                }\n                                state.tmp.substituted_variable = this.variables_real;\n                            }\n                            state.tmp.last_rendered_name = rendered_name;\n                        }\n                    }\n                    state.tmp.subsequent_author_substitute_ok = false;\n                }\n            }\n        };\n        this.execs.push(func);\n    }\n    if ((\"text\" === this.name && !this.postponed_macro) || [\"number\", \"date\", \"names\"].indexOf(this.name) > -1) {\n        func = function (state, Item) {\n            state.tmp.element_trace.pop();\n        };\n        this.execs.push(func);\n    }\n};\nCSL.Util.padding = function (num) {\n    var m = num.match(/\\s*(-{0,1}[0-9]+)/);\n    if (m) {\n        num = parseInt(m[1], 10);\n        if (num < 0) {\n            num = 99999999999999999999 + num;\n        }\n        num = \"\" + num;\n        while (num.length < 20) {\n            num = \"0\" + num;\n        }\n    }\n    return num;\n};\nCSL.Util.LongOrdinalizer = function () {};\nCSL.Util.LongOrdinalizer.prototype.init = function (state) {\n    this.state = state;\n};\nCSL.Util.LongOrdinalizer.prototype.format = function (num, gender) {\n    if (num < 10) {\n        num = \"0\" + num;\n    }\n    var ret = CSL.Engine.getField(\n        CSL.LOOSE, \n        this.state.locale[this.state.opt.lang].terms,\n        \"long-ordinal-\" + num,\n        \"long\", \n        0, \n        gender\n    );\n    if (!ret) {\n        ret = this.state.fun.ordinalizer.format(num, gender);\n    }\n    this.state.tmp.cite_renders_content = true;\n    return ret;\n};\nCSL.Util.Ordinalizer = function (state) {\n    this.state = state;\n    this.suffixes = {};\n};\nCSL.Util.Ordinalizer.prototype.init = function () {\n    if (!this.suffixes[this.state.opt.lang]) {\n        this.suffixes[this.state.opt.lang] = {};\n        for (var i = 0, ilen = 3; i < ilen; i += 1) {\n            var gender = [undefined, \"masculine\", \"feminine\"][i];\n            this.suffixes[this.state.opt.lang][gender] = [];\n            for (var j = 1; j < 5; j += 1) {\n                var ordinal = this.state.getTerm(\"ordinal-0\" + j, \"long\", false, gender);\n                if (\"undefined\" === typeof ordinal) {\n                    delete this.suffixes[this.state.opt.lang][gender];\n                    break;\n                }\n                this.suffixes[this.state.opt.lang][gender].push(ordinal);\n            }\n        }\n    }\n};\nCSL.Util.Ordinalizer.prototype.format = function (num, gender) {\n    var str;\n    num = parseInt(num, 10);\n    str = \"\" + num;\n    var suffix = \"\";\n    var trygenders = [];\n    if (gender) {\n        trygenders.push(gender);\n    }\n    trygenders.push(\"neuter\");\n    if (this.state.locale[this.state.opt.lang].ord[\"1.0.1\"]) {\n        suffix = this.state.getTerm(\"ordinal\",false,0,gender);\n        var trygender;\n        for (var i = 0, ilen = trygenders.length; i < ilen; i += 1) {\n            trygender = trygenders[i];\n            var ordinfo = this.state.locale[this.state.opt.lang].ord[\"1.0.1\"];\n            if (ordinfo[\"whole-number\"][str] && ordinfo[\"whole-number\"][str][trygender]) {\n                suffix = this.state.getTerm(this.state.locale[this.state.opt.lang].ord[\"1.0.1\"][\"whole-number\"][str][trygender],false,0,gender);\n            } else if (ordinfo[\"last-two-digits\"][str.slice(str.length - 2)] && ordinfo[\"last-two-digits\"][str.slice(str.length - 2)][trygender]) {\n                suffix = this.state.getTerm(this.state.locale[this.state.opt.lang].ord[\"1.0.1\"][\"last-two-digits\"][str.slice(str.length - 2)][trygender],false,0,gender);\n            } else if (ordinfo[\"last-digit\"][str.slice(str.length - 1)] && ordinfo[\"last-digit\"][str.slice(str.length - 1)][trygender]) {\n                suffix = this.state.getTerm(this.state.locale[this.state.opt.lang].ord[\"1.0.1\"][\"last-digit\"][str.slice(str.length - 1)][trygender],false,0,gender);\n            }\n            if (suffix) {\n                break;\n            }\n        }\n    } else {\n        if (!gender) {\n            gender = undefined;\n        }\n        this.state.fun.ordinalizer.init();\n        if ((num / 10) % 10 === 1 || (num > 10 && num < 20)) {\n            suffix = this.suffixes[this.state.opt.lang][gender][3];\n        } else if (num % 10 === 1 && num % 100 !== 11) {\n            suffix = this.suffixes[this.state.opt.lang][gender][0];\n        } else if (num % 10 === 2 && num % 100 !== 12) {\n            suffix = this.suffixes[this.state.opt.lang][gender][1];\n        } else if (num % 10 === 3 && num % 100 !== 13) {\n            suffix = this.suffixes[this.state.opt.lang][gender][2];\n        } else {\n            suffix = this.suffixes[this.state.opt.lang][gender][3];\n        }\n    }\n    str = str += suffix;\n    return str;\n};\nCSL.Util.Romanizer = function () {};\nCSL.Util.Romanizer.prototype.format = function (num) {\n    var ret, pos, n, numstr, len;\n    ret = \"\";\n    if (num < 6000) {\n        numstr = num.toString().split(\"\");\n        numstr.reverse();\n        pos = 0;\n        n = 0;\n        len = numstr.length;\n        for (pos = 0; pos < len; pos += 1) {\n            n = parseInt(numstr[pos], 10);\n            ret = CSL.ROMAN_NUMERALS[pos][n] + ret;\n        }\n    }\n    return ret;\n};\nCSL.Util.Suffixator = function (slist) {\n    if (!slist) {\n        slist = CSL.SUFFIX_CHARS;\n    }\n    this.slist = slist.split(\",\");\n};\nCSL.Util.Suffixator.prototype.format = function (N) {\n    var X;\n    N += 1;\n    var key = \"\";\n    do {\n        X = ((N % 26) === 0) ? 26 : (N % 26);\n        key = this.slist[X-1] + key;\n        N = (N - X) / 26;\n    } while ( N !== 0 );\n    return key;\n};\nCSL.Engine.prototype.processNumber = function (node, ItemObject, variable, type) {\n    var val, m, i, ilen, j, jlen;\n    var debug = false;\n    var me = this;\n    function normalizeFieldValue(str, defaultLabel) {\n        str = str.trim();\n        var m = str.match(/^([^ ]+)/);\n        if (m && !CSL.STATUTE_SUBDIV_STRINGS[m[1]]) {\n            var embeddedLabel = null;\n            if (variable === \"locator\" ) {\n                if (ItemObject.label) {\n                    embeddedLabel = CSL.STATUTE_SUBDIV_STRINGS_REVERSE[ItemObject.label];\n                } else {\n                    embeddedLabel = \"p.\";\n                }\n            } else {\n                embeddedLabel = CSL.STATUTE_SUBDIV_STRINGS_REVERSE[variable];\n            }\n            if (embeddedLabel) {\n                str = embeddedLabel + \" \" + str;\n            }\n        }\n        return str;\n    }\n    function composeNumberInfo(origLabel, label, val, joiningSuffix) {\n        joiningSuffix = joiningSuffix ? joiningSuffix : \"\";\n        var info = {};\n        if (!label && !CSL.STATUTE_SUBDIV_STRINGS_REVERSE[variable]) {\n                label = \"var:\"+variable;\n        }\n        if (label) {\n            var m = label.match(/(\\s*)([^\\s]*)(\\s*)/);\n            info.label = m[2];\n            info.origLabel = origLabel;\n            info.labelSuffix = m[3] ? m[3] : \"\";\n            info.plural = 0;\n            info.labelVisibility = false;\n        }\n        var m = val.match(/^([a-zA-Z0]*)([0-9]+(?:[a-zA-Z]*|[-,a-zA-Z]+))$/);\n        if (m) {\n            info.particle = m[1];\n            info.value = m[2];\n        } else {\n            info.particle = \"\";\n            info.value = val;\n        }\n        info.joiningSuffix = joiningSuffix.replace(/\\s*-\\s*/, \"-\");\n        return info;\n    };\n    function fixupSubsections(elems) {\n        for (var i=elems.length-2;i>-1;i-=2) {\n            if (elems[i] === \"-\"\n               && elems[i-1].match(/^(?:(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z])\\.  *)*[0-9]+[,a-zA-Z]+$/)\n               && elems[i+1].match(/^[,a-zA-Z]+$/)) {\n                elems[i-1] = elems.slice(i-1,i+2).join(\"\");\n                elems = elems.slice(0,i).concat(elems.slice(i+2));\n            }\n        }\n        return elems;\n    }\n    function parseString(str, defaultLabel) {\n        defaultLabel = defaultLabel ? defaultLabel : \"\";\n        str = normalizeFieldValue(str, defaultLabel);\n        var elems = [];\n        var m = str.match(/(,\\s+|\\s*\\\\*[\\-\\u2013]+\\s*|\\s*&\\s*)/g);\n        if (m) {\n            var lst = str.split(/(?:,\\s+|\\s*\\\\*[\\-\\u2013]+\\s*|\\s*&\\s*)/);\n            for (var i=0,ilen=lst.length-1; i<ilen; i++) {\n                elems.push(lst[i]);\n                elems.push(m[i]);\n            }\n            elems.push(lst[lst.length-1]);\n            elems = fixupSubsections(elems);\n        } else {\n            var elems = [str];\n        }\n        var values = [];\n        var label = defaultLabel;\n        var origLabel = \"\";\n        for (var i=0,ilen=elems.length;i<ilen;i += 2) {\n            var m = elems[i].match(/((?:^| )(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z])\\. *)/g);\n            if (m) {\n                var lst = elems[i].split(/(?:(?:^| )(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z])\\. *)/);\n                for (var j=lst.length-1;j>0;j--) {\n                    if (lst[j-1] && (!lst[j].match(/^[0-9]+([-,:a-zA-Z]*)$/) || !lst[j-1].match(/^[0-9]+([-,:a-zA-Z]*)$/))) {\n                        lst[j-1] = lst[j-1] + m[j-1] + lst[j];\n                        lst = lst.slice(0,j).concat(lst.slice(j+1))\n                        m = m.slice(0,j-1).concat(m.slice(j))\n                    }\n                }\n                if (m.length > 0 && i === 0) {\n                    var slug = m[0].trim();\n                    if (!CSL.STATUTE_SUBDIV_STRINGS[slug]\n                        || !me.getTerm(CSL.STATUTE_SUBDIV_STRINGS[slug])\n                        || ([\"locator\", \"number\"].indexOf(variable) === -1 && CSL.STATUTE_SUBDIV_STRINGS[slug] !== variable)) {\n                        m = m.slice(1);\n                        lst[0] = lst[0] + \" \" + slug + \" \" + lst[1];\n                        lst = lst.slice(0,1).concat(lst.slice(2))\n                    }\n                }\n                for (var j=0,jlen=lst.length; j<jlen; j++) {\n                    if (lst[j] || j === (lst.length-1)) {\n                        label = m[j-1] ? m[j-1] : label;\n                        var origLabel = j > 1 ? m[j-1] : \"\";\n                        var str = lst[j] ? lst[j].trim() : \"\";\n                        if (j === (lst.length-1)) {\n                            values.push(composeNumberInfo(origLabel, label, str, elems[i+1]));\n                        } else {\n                            values.push(composeNumberInfo(origLabel, label, str));\n                        }\n                    }\n                }\n            } else {\n                values.push(composeNumberInfo(origLabel, label, elems[i], elems[i+1]));\n            }\n        }\n        return values;\n    }\n    function setSpaces(values) {\n        for (var i=0,ilen=values.length-1;i<ilen;i++) {\n            if (!values[i].joiningSuffix && values[i+1].label) {\n                values[i].joiningSuffix = \" \";\n            }\n        }\n    }\n    function fixNumericAndCount(values, i, currentLabelInfo) {\n        var master = values[currentLabelInfo.pos];\n        var val = values[i].value;\n        var isEscapedHyphen = master.joiningSuffix === \"\\\\-\";\n        if (val.particle && val.particle !== master.particle) {\n            currentLabelInfo.collapsible = false;\n        }\n        var mVal = val.match(/^[0-9]+([-,:a-zA-Z]*)$/);\n        var mCurrentLabel = master.value.match(/^[0-9]+([-,:a-zA-Z]*)$/);\n        if (!val || !mVal || !mCurrentLabel || isEscapedHyphen) {\n            currentLabelInfo.collapsible = false;\n            if (!val || !mCurrentLabel) {\n                currentLabelInfo.numeric = false;\n            }\n            if (isEscapedHyphen) {\n                currentLabelInfo.count--;\n            }\n        }\n        if ((mVal && mVal[1]) || (mCurrentLabel && mCurrentLabel[1])) {\n            currentLabelInfo.collapsible = false;\n        }\n        var isCollapsible = currentLabelInfo.collapsible;\n        if (!isCollapsible && i>0 && val.match(/^[ivxlcmIVXLCM]+$/) && values[i-1].value.match(/^[ivxlcmIVXLCM]+$/)) {\n            isCollapsible = true;\n        }\n        for (var j=currentLabelInfo.pos,jlen=values.length; j<jlen; j++) {\n            if (currentLabelInfo.label === values[j].label && currentLabelInfo.count > 1 && isCollapsible) {\n                values[j].plural = 1;\n            }\n            values[j].numeric = currentLabelInfo.numeric;\n            values[j].collapsible = currentLabelInfo.collapsible;\n        }\n        currentLabelInfo.label = values[i].label;\n        currentLabelInfo.count = 1;\n        currentLabelInfo.pos = i;\n        currentLabelInfo.numeric = true;\n        currentLabelInfo.collapsible = true;\n    }\n    function setPluralsAndNumerics(values) {\n        var currentLabelInfo = {\n            label: null,\n            count: 1,\n            numeric: true,\n            collapsible: true,\n            pos: 0\n        }\n        var masterLabel = values.length ? values[0].label : null;\n        for (var i=0,ilen=values.length;i<ilen;i++) {\n            if (values[i].label) {\n                if (values[i].label === currentLabelInfo.label) {\n                    currentLabelInfo.count++;\n                } else {\n                    fixNumericAndCount(values, i, currentLabelInfo);\n                    if (currentLabelInfo.pos === 0) {\n                        if (variable === \"locator\" || variable === \"number\") {\n                            if (!me.getTerm(CSL.STATUTE_SUBDIV_STRINGS[currentLabelInfo.label]) && currentLabelInfo.label.slice(0, 4) !== \"var:\") {\n                                values[currentLabelInfo.pos].labelVisibility = true;\n                            }\n                        }\n                        if ([\"locator\", \"number\"].indexOf(variable) === -1) {\n                            if (CSL.STATUTE_SUBDIV_STRINGS[currentLabelInfo.label] !== variable && currentLabelInfo.label.slice(0, 4) !== \"var:\") {\n                                values[0].labelVisibility = true;\n                            }\n                        }\n                    } else {\n                        if (values[i-1].label !== values[i].label && currentLabelInfo.label.slice(0, 4) !== \"var:\") {\n                            values[currentLabelInfo.pos].labelVisibility = true;\n                        }\n                    }\n                }\n            }\n        }\n        fixNumericAndCount(values, values.length-1, currentLabelInfo);\n        if (values.length && values[0].numeric && variable.slice(0, 10) === \"number-of-\") {\n            if (parseInt(ItemObject[variable], 10) > 1) {\n                values[0].plural = 1;\n            }\n        }\n        for (var i=0,ilen=values.length;i<ilen;i++) {\n            if (!values[i].numeric) {\n                var origLabel = values[i].origLabel ? values[i].origLabel : \"\";\n                values[i].value = (origLabel + values[i].value).trim();\n                if (values[i].label !== values[0].label) {\n                    values[i].label = \"\";\n                }\n            }\n        }\n    }        \n    function setStyling(values) {\n        var masterNode = CSL.Util.cloneToken(node);\n        var masterStyling = new CSL.Token();\n        if (!me.tmp.just_looking) {\n            for (var j=masterNode.decorations.length-1;j>-1;j--) {\n                if (masterNode.decorations[j][0] === \"@quotes\") {\n                    masterStyling.decorations = masterStyling.decorations.concat(masterNode.decorations.slice(j, j+1));\n                    masterNode.decorations = masterNode.decorations.slice(0, j).concat(masterNode.decorations.slice(j+1))\n                }\n            }\n            masterStyling.strings.prefix = masterNode.strings.prefix;\n            masterNode.strings.prefix = \"\";\n            masterStyling.strings.suffix = masterNode.strings.suffix;\n            masterNode.strings.suffix = \"\";\n        }\n        var masterLabel = values.length ? values[0].label : null;\n        if (values.length) {\n            for (var i=0,ilen=values.length; i<ilen; i++) {\n                var val = values[i];\n                var newnode = CSL.Util.cloneToken(masterNode);\n                newnode.gender = node.gender;\n                if (masterLabel === val.label) {\n                    newnode.formatter = node.formatter;\n                }\n                if (val.numeric) {\n                    newnode.successor_prefix = val.successor_prefix;\n                }\n                newnode.strings.suffix = newnode.strings.suffix + stripHyphenBackslash(val.joiningSuffix);\n                val.styling = newnode;\n            }\n            if (!me.tmp.just_looking) {\n                if (values[0].value.slice(0,1) === \"\\\"\" && values[values.length-1].value.slice(-1) === \"\\\"\") {\n                    values[0].value = values[0].value.slice(1);\n                    values[values.length-1].value = values[values.length-1].value.slice(0,-1);\n                    masterStyling.decorations.push([\"@quotes\", true]);\n                }\n            }\n        }\n        return masterStyling;\n    }\n    function stripHyphenBackslash(joiningSuffix) {\n        return joiningSuffix.replace(\"\\\\-\", \"-\");\n    }\n    function fixupRangeDelimiter(variable, val, rangeDelimiter, isNumeric) {\n        var isPage = checkPage(variable, val);\n        var hasTerm = checkTerm(variable, val);\n        if (hasTerm && rangeDelimiter === \"-\") {\n            if (isNumeric) {\n                if (isPage || [\"locator\", \"issue\", \"volume\", \"edition\", \"number\"].indexOf(variable) > -1) {\n                    rangeDelimiter = me.getTerm(\"page-range-delimiter\")\n                    if (!rangeDelimiter) {\n                        rangeDelimiter = \"\\u2013\";\n                    }\n                }\n                if (variable === \"collection-number\") {\n                    rangeDelimiter = me.getTerm(\"year-range-delimiter\");\n                    if (!rangeDelimiter) {\n                        rangeDelimiter = \"\\u2013\";\n                    }\n                }\n            }\n        }\n        return rangeDelimiter;\n    }\n    function checkPage(variable, val) {\n        return variable === \"page\" \n            || (variable === \"locator\" && ([\"p.\"].indexOf(val.label) > -1));\n    }\n    function checkTerm(variable, val) {\n        var ret = true;\n        if (variable === \"locator\") {\n            ret = !!me.getTerm(CSL.STATUTE_SUBDIV_STRINGS[val.label]);\n        }\n        return ret;\n    }\n    function manglePageNumbers(values, i, currentInfo) {\n        if (i<1) return;\n        if (currentInfo.count !== 2) {\n            return;\n        }\n        if (values[i-1].particle !== values[i].particle) {\n            return;\n        }\n        if (values[i-1].joiningSuffix !== \"-\") {\n            currentInfo.count = 1;\n            return;\n        }\n        if (!me.opt[\"page-range-format\"] && parseInt(values[i-1].value, 10) > parseInt(values[i].value, 10)) {\n            values[i-1].joiningSuffix = fixupRangeDelimiter(variable, values[i], values[i-1].joiningSuffix, true);\n            return;\n        }\n        var val = values[i];\n        var isPage = checkPage(variable, val);\n        if (isPage) {\n            var str = values[i-1].particle + values[i-1].value + \" - \" + values[i].particle + values[i].value;\n            str = me.fun.page_mangler(str);\n        } else {\n            str = values[i-1].value + stripHyphenBackslash(values[i-1].joiningSuffix) + values[i].value;\n        }\n        var m = str.match(/^([a-zA-Z]?0*)([0-9]+)(\\s*[^0-9]+\\s*)([-,a-zA-Z]?0*)([0-9]+)$/);\n        if (m) {\n            var rangeDelimiter = m[3];\n            rangeDelimiter = fixupRangeDelimiter(variable, val, rangeDelimiter, values[i].numeric);\n            values[i-1].particle = m[1];\n            values[i-1].value = m[2];\n            values[i-1].joiningSuffix = rangeDelimiter;\n            values[i].particle = m[4];\n            values[i].value = m[5];\n        }\n        currentInfo.count = 0;\n    }\n    function fixRanges(values) {\n        if (!node) return;\n        if ([\"page\", \"page-first\", \"chapter-number\", \"collection-number\", \"edition\", \"issue\", \"number\", \"number-of-pages\", \"number-of-volumes\", \"volume\", \"locator\"].indexOf(variable) === -1) return;\n        var currentInfo = {\n            count: 0,\n            label: null,\n            lastHadRangeDelimiter: false\n        }\n        for (var i=0,ilen=values.length; i<ilen; i++) {\n            var val = values[i];\n            if (!val.collapsible) {\n                currentInfo.count = 0;\n                currentInfo.label = null;\n                var isNumeric = val.numeric;\n                if (i<(values.length-1) && !isNumeric && val.value.match(/^[ivxlcmIVXLCM]+$/) && values[i+1].value.match(/^[ivxlcmIVXLCM]+$/)) {\n                    isNumeric = true;\n                }\n                val.joiningSuffix = fixupRangeDelimiter(variable, val, val.joiningSuffix, isNumeric);\n            } else if (currentInfo.label === val.label && val.joiningSuffix === \"-\") {\n                currentInfo.count = 1;\n            } else if (currentInfo.label === val.label && val.joiningSuffix !== \"-\") {\n                currentInfo.count++;\n                if (currentInfo.count === 2) {\n                    manglePageNumbers(values, i, currentInfo);\n                }\n            } else if (currentInfo.label !== val.label) {\n                currentInfo.label = val.label;\n                currentInfo.count = 1;\n            } else {\n                currentInfo.count = 1;\n                currentInfo.label = val.label;\n            }\n        }\n        if (currentInfo.count === 2) {\n            manglePageNumbers(values, values.length-1, currentInfo);\n        }\n    }\n    function setVariableParams(shadow_numbers, variable, values) {\n        var obj = shadow_numbers[variable];\n        if (values.length) {\n            obj.numeric = values[0].numeric;\n            obj.collapsible = values[0].collapsible;\n            obj.plural = values[0].plural;\n            obj.label = CSL.STATUTE_SUBDIV_STRINGS[values[0].label];\n            if (variable === \"number\" && obj.label === \"issue\" && me.getTerm(\"number\")) {\n                obj.label = \"number\";\n            }\n        }\n    }\n    if (node && this.tmp.shadow_numbers[variable] && this.tmp.shadow_numbers[variable].values.length) {\n        var values = this.tmp.shadow_numbers[variable].values;\n        fixRanges(values);\n            this.tmp.shadow_numbers[variable].masterStyling = setStyling(values);\n        return;\n    }\n    if (!this.tmp.shadow_numbers[variable]) {\n        this.tmp.shadow_numbers[variable] = {\n            values:[]\n        };\n    }\n    if (!ItemObject) {\n        return;\n    }\n    var languageRole = CSL.LangPrefsMap[variable];\n    if (languageRole) {\n        var localeType = this.opt[\"cite-lang-prefs\"][languageRole][0];\n        val = this.transform.getTextSubField(ItemObject, variable, \"locale-\"+localeType, true);\n        val = val.name;\n    } else {\n        val = ItemObject[variable];\n    }\n    if (val && this.sys.getAbbreviation) {\n        var jurisdiction = this.transform.loadAbbreviation(ItemObject.jurisdiction, \"number\", val);\n        if (this.transform.abbrevs[jurisdiction].number) {\n            if (this.transform.abbrevs[jurisdiction].number[val]) {\n                val = this.transform.abbrevs[jurisdiction].number[val];\n            } else {\n                if (\"undefined\" !== typeof this.transform.abbrevs[jurisdiction].number[val]) {\n                    delete this.transform.abbrevs[jurisdiction].number[val];\n                }\n            }\n        }\n    }\n    if (\"undefined\" !== typeof val && (\"string\" === typeof val || \"number\" === typeof val)) {\n        if (\"number\" === typeof val) {\n            val = \"\" + val;\n        }\n        var defaultLabel = CSL.STATUTE_SUBDIV_STRINGS_REVERSE[variable];\n        if (!this.tmp.shadow_numbers.values) {\n            var values = parseString(val, defaultLabel);\n            setSpaces(values);\n            setPluralsAndNumerics(values);\n            this.tmp.shadow_numbers[variable].values = values;\n        }\n        if (node) {\n            fixRanges(values);\n            this.tmp.shadow_numbers[variable].masterStyling = setStyling(values)\n        }\n        setVariableParams(this.tmp.shadow_numbers, variable, values);\n    }\n};\nCSL.Util.outputNumericField = function(state, varname, itemID) {\n    state.output.openLevel(state.tmp.shadow_numbers[varname].masterStyling);\n    var nums = state.tmp.shadow_numbers[varname].values;\n    var masterLabel = nums.length ? nums[0].label : null;\n    var labelForm = state.tmp.shadow_numbers[varname].labelForm;\n    var embeddedLabelForm;\n    if (labelForm) {\n        embeddedLabelForm = labelForm\n    } else {\n        embeddedLabelForm = \"short\";\n    }\n    var labelDecorations = state.tmp.shadow_numbers[varname].labelDecorations;\n    var lastLabelName = null;\n    for (var i=0,ilen=nums.length;i<ilen;i++) {\n        var num = nums[i];\n        var label = \"\";\n        if (num.label) {\n            var labelName;\n            if ('var:' === num.label.slice(0,4)) {\n                labelName = num.label.slice(4);\n            } else {\n                labelName = CSL.STATUTE_SUBDIV_STRINGS[num.label];\n            }\n            if (labelName) {\n                if (num.label === masterLabel) {\n                    label = state.getTerm(labelName, labelForm, num.plural);\n                } else {\n                    label = state.getTerm(labelName, embeddedLabelForm, num.plural);\n                }\n            }\n        }\n        var labelPlaceholderPos = -1;\n        if (label) {\n            labelPlaceholderPos = label.indexOf(\"%s\");\n        }\n        var numStyling = CSL.Util.cloneToken(num.styling);\n        numStyling.formatter = num.styling.formatter;\n        numStyling.type = num.styling.type;\n        numStyling.num = num.styling.num;\n        numStyling.gender = num.styling.gender;\n        if (labelPlaceholderPos > 0 && labelPlaceholderPos < (label.length-2)) {\n            numStyling.strings.prefix += label.slice(0,labelPlaceholderPos);\n            numStyling.strings.suffix = label.slice(labelPlaceholderPos+2) + numStyling.strings.suffix;\n        } else if (num.labelVisibility) {\n            if (!label) {\n                label = num.label;\n                labelName = num.label;\n            }\n            if (labelPlaceholderPos > 0) {\n                var prefixLabelStyling = new CSL.Token();\n                prefixLabelStyling.decorations = labelDecorations;\n                state.output.append(label.slice(0,labelPlaceholderPos), prefixLabelStyling);\n            } else if (labelPlaceholderPos === (label.length-2) || labelPlaceholderPos === -1) {\n                state.output.append(label+num.labelSuffix, \"empty\");\n            }\n        }\n        if (num.collapsible) {\n            if (num.value.match(/^[0-9]+$/)) {\n                var blob = new CSL.NumericBlob(num.particle, parseInt(num.value, 10), numStyling, itemID);\n            } else {\n                var blob = new CSL.NumericBlob(num.particle, num.value, numStyling, itemID);\n            }\n            if (\"undefined\" === typeof blob.gender) {\n                blob.gender = state.locale[state.opt.lang][\"noun-genders\"][varname];\n            }\n            state.output.append(blob, \"literal\");\n        } else {\n            state.output.append(num.particle + num.value, numStyling)\n        }\n        if (labelPlaceholderPos === 0 && labelPlaceholderPos < (label.length-2)) {\n            if (lastLabelName === null) {\n                lastLabelName = labelName;\n            }\n            if (labelName !== lastLabelName || i === (nums.length-1)) {\n                var suffixLabelStyling = new CSL.Token();\n                suffixLabelStyling.decorations = labelDecorations;\n                state.output.append(label.slice(labelPlaceholderPos+2), suffixLabelStyling);\n            }\n        }\n        lastLabelName === labelName;\n    }\n    state.output.closeLevel();\n}\nCSL.Util.PageRangeMangler = {};\nCSL.Util.PageRangeMangler.getFunction = function (state, rangeType) {\n    var rangerex, pos, len, stringify, listify, expand, minimize, minimize_internal, chicago, lst, m, b, e, ret, begin, end, ret_func, ppos, llen;\n    var range_delimiter = state.getTerm(rangeType + \"-range-delimiter\");\n    rangerex = /([a-zA-Z]*)([0-9]+)\\s*(?:\\u2013|-)\\s*([a-zA-Z]*)([0-9]+)/;\n    stringify = function (lst) {\n        len = lst.length;\n        for (pos = 1; pos < len; pos += 2) {\n            if (\"object\" === typeof lst[pos]) {\n                lst[pos] = lst[pos].join(\"\");\n            }\n        }\n        var ret = lst.join(\"\");\n        ret = ret.replace(/([^\\\\])\\-/g, \"$1\"+state.getTerm(rangeType + \"-range-delimiter\"));\n        return ret;\n    };\n    listify = function (str) {\n        var m, lst, ret;\n        var hyphens = \"\\\\s+\\\\-\\\\s+\";\n        var this_range_delimiter = range_delimiter === \"-\" ? \"\" : range_delimiter;\n        var delimRex = new RegExp(\"([^\\\\\\\\])[-\" + this_range_delimiter + \"\\\\u2013]\", \"g\");\n        str = str.replace(delimRex, \"$1 - \").replace(/\\s+-\\s+/g, \" - \");\n        var rexm = new RegExp(\"([a-zA-Z]*[0-9]+\" + hyphens + \"[a-zA-Z]*[0-9]+)\", \"g\");\n        var rexlst = new RegExp(\"[a-zA-Z]*[0-9]+\" + hyphens + \"[a-zA-Z]*[0-9]+\");\n        m = str.match(rexm);\n        lst = str.split(rexlst);\n        if (lst.length === 0) {\n            ret = m;\n        } else {\n            ret = [lst[0]];\n            for (pos = 1, len = lst.length; pos < len; pos += 1) {\n                ret.push(m[pos - 1].replace(/\\s*\\-\\s*/g, \"-\"));\n                ret.push(lst[pos]);\n            }\n        }\n        return ret;\n    };\n    expand = function (str) {\n        str = \"\" + str;\n        lst = listify(str);\n        len = lst.length;\n        for (pos = 1; pos < len; pos += 2) {\n            m = lst[pos].match(rangerex);\n            if (m) {\n                if (!m[3] || m[1] === m[3]) {\n                    if (m[4].length < m[2].length) {\n                        m[4] = m[2].slice(0, (m[2].length - m[4].length)) + m[4];\n                    }\n                    if (parseInt(m[2], 10) < parseInt(m[4], 10)) {\n                        m[3] = range_delimiter + m[1];\n                        lst[pos] = m.slice(1);\n                    }\n                }\n            }\n            if (\"string\" === typeof lst[pos]) {\n                lst[pos] = lst[pos].replace(/\\-/g, range_delimiter);\n            }\n        }\n        return lst;\n    };\n    minimize = function (lst, minchars, isyear) {\n        len = lst.length;\n        for (var i = 1, ilen = lst.length; i < ilen; i += 2) {\n            lst[i][3] = minimize_internal(lst[i][1], lst[i][3], minchars, isyear);\n            if (lst[i][2].slice(1) === lst[i][0]) {\n                lst[i][2] = range_delimiter;\n            }\n        }\n        return stringify(lst);\n    };\n    minimize_internal = function (begin, end, minchars, isyear) {\n        if (!minchars) {\n            minchars = 0;\n        }\n        b = (\"\" + begin).split(\"\");\n        e = (\"\" + end).split(\"\");\n        ret = e.slice();\n        ret.reverse();\n        if (b.length === e.length) {\n            for (var i = 0, ilen = b.length; i < ilen; i += 1) {\n                if (b[i] === e[i] && ret.length > minchars) {\n                    ret.pop();\n                } else {\n                    if (minchars && isyear && ret.length === 3) {\n                        var front = b.slice(0, i);\n                        front.reverse();\n                        ret = ret.concat(front);\n                    }\n                    break;\n                }\n            }\n        }\n        ret.reverse();\n        return ret.join(\"\");\n    };\n    chicago = function (lst) {\n        len = lst.length;\n        for (pos = 1; pos < len; pos += 2) {\n            if (\"object\" === typeof lst[pos]) {\n                m = lst[pos];\n                begin = parseInt(m[1], 10);\n                end = parseInt(m[3], 10);\n                if (begin > 100 && begin % 100 && parseInt((begin / 100), 10) === parseInt((end / 100), 10)) {\n                    m[3] = \"\" + (end % 100);\n                } else if (begin >= 10000) {\n                    m[3] = \"\" + (end % 1000);\n                }\n            }\n            if (m[2].slice(1) === m[0]) {\n                m[2] = range_delimiter;\n            }\n        }\n        return stringify(lst);\n    };\n    var sniff = function (str, func, minchars, isyear) {\n        var ret;\n\t\tstr = \"\" + str;\n\t\tvar lst = expand(str);\n        var ret = func(lst, minchars, isyear);\n        return ret;\n    }\n    if (!state.opt[rangeType + \"-range-format\"]) {\n        ret_func = function (str) {\n            return sniff(str, stringify);\n        };\n    } else if (state.opt[rangeType + \"-range-format\"] === \"expanded\") {\n        ret_func = function (str) {\n            return sniff(str, stringify);\n        };\n    } else if (state.opt[rangeType + \"-range-format\"] === \"minimal\") {\n        ret_func = function (str) {\n            return sniff(str, minimize);\n        };\n    } else if (state.opt[rangeType + \"-range-format\"] === \"minimal-two\") {\n        ret_func = function (str, isyear) {\n            return sniff(str, minimize, 2, isyear);\n        };\n    } else if (state.opt[rangeType + \"-range-format\"] === \"chicago\") {\n        ret_func = function (str) {\n            return sniff(str, chicago);\n        };\n    }\n    return ret_func;\n};\nCSL.Util.FlipFlopper = function(state) {\n    this.processTags = processTags;\n    var _nestingState = [];\n    var _nestingData = {\n        \"<span class=\\\"nocase\\\">\": {\n            type: \"nocase\",\n            opener: \"<span class=\\\"nocase\\\">\",\n            closer: \"</span>\",\n            attr: null,\n            outer: null,\n            flipflop: null\n        },\n        \"<span class=\\\"nodecor\\\">\": {\n            type: \"nodecor\",\n            opener: \"<span class=\\\"nodecor\\\">\",\n            closer: \"</span>\",\n            attr: \"@class\",\n            outer: \"nodecor\",\n            flipflop: {\n                \"nodecor\": \"nodecor\"\n            }\n        },\n        \"<span style=\\\"font-variant:small-caps;\\\">\": {\n            type: \"tag\",\n            opener: \"<span style=\\\"font-variant:small-caps;\\\">\",\n            closer: \"</span>\",\n            attr: \"@font-variant\",\n            outer: \"small-caps\",\n            flipflop: {\n                \"small-caps\": \"normal\",\n                \"normal\": \"small-caps\"\n            }\n        },\n        \"<sc>\": {\n            type: \"tag\",\n            opener: \"<sc>\",\n            closer: \"</sc>\",\n            attr: \"@font-variant\",\n            outer: \"small-caps\",\n            flipflop: {\n                \"small-caps\": \"normal\",\n                \"normal\": \"small-caps\"\n            }\n        },\n        \"<i>\": {\n            type: \"tag\",\n            opener: \"<i>\",\n            closer: \"</i>\",\n            attr: \"@font-style\",\n            outer: \"italic\",\n            flipflop: {\n                \"italic\": \"normal\",\n                \"normal\": \"italic\"\n            }\n        },\n        \"<b>\": {\n            type: \"tag\",\n            opener: \"<b>\",\n            closer: \"</b>\",\n            attr: \"@font-weight\",\n            outer: \"bold\",\n            flipflop: {\n                \"bold\": \"normal\",\n                \"normal\": \"bold\"\n            }\n        },\n        \"<sup>\": {\n            type: \"tag\",\n            opener: \"<sup>\",\n            closer: \"</sup>\",\n            attr: \"@vertical-align\",\n            outer: \"sup\",\n            flipflop: {\n                \"sub\": \"sup\",\n                \"sup\": \"sup\"\n            }\n        },\n        \"<sub>\": {\n            type: \"tag\",\n            opener: \"<sub>\",\n            closer: \"</sub>\",\n            attr: \"@vertical-align\",\n            outer: \"sub\",\n            flipflop: {\n                \"sup\": \"sub\",\n                \"sub\": \"sub\"\n            }\n        },\n        \" \\\"\": {\n            type: \"quote\",\n            opener: \" \\\"\",\n            closer: \"\\\"\",\n            attr: \"@quotes\",\n            outer: \"true\",\n            flipflop: {\n                \"true\": \"inner\",\n                \"inner\": \"true\",\n                \"false\": \"true\"\n            }\n        },\n        \" \\'\": {\n            type: \"quote\",\n            opener: \" \\'\",\n            closer: \"\\'\",\n            attr: \"@quotes\",\n            outer: \"inner\",\n            flipflop: {\n                \"true\": \"inner\",\n                \"inner\": \"true\",\n                \"false\": \"true\"\n            }\n        }\n    }\n    _nestingData[\"(\\\"\"] = _nestingData[\" \\\"\"]\n    _nestingData[\"(\\'\"] = _nestingData[\" \\'\"]\n    var localeOpenQuote = state.getTerm(\"open-quote\");\n    var localeCloseQuote = state.getTerm(\"close-quote\");\n    var localeOpenInnerQuote = state.getTerm(\"open-inner-quote\");\n    var localeCloseInnerQuote = state.getTerm(\"close-inner-quote\");\n    if (localeOpenQuote && localeCloseQuote && [\" \\\"\",\" \\'\",\"\\\"\",\"\\'\"].indexOf(localeOpenQuote) === -1) {\n        _nestingData[localeOpenQuote] = JSON.parse(JSON.stringify(_nestingData[\" \\\"\"]));\n        _nestingData[localeOpenQuote].opener = localeOpenQuote;\n        _nestingData[localeOpenQuote].closer = localeCloseQuote;\n    }\n    if (localeOpenInnerQuote && localeCloseInnerQuote && [\" \\\"\",\" \\'\",\"\\\"\",\"\\'\"].indexOf(localeOpenInnerQuote) === -1) {\n        _nestingData[localeOpenInnerQuote] = JSON.parse(JSON.stringify(_nestingData[\" \\'\"]));\n        _nestingData[localeOpenInnerQuote].opener = localeOpenInnerQuote;\n        _nestingData[localeOpenInnerQuote].closer = localeCloseInnerQuote;\n    }\n    var _nestingQuoteReverse = function() {\n        var ret = {};\n        for (var key of Object.keys(_nestingData)) {\n            if (_nestingData[key].type === \"quote\") {\n                ret[_nestingData[key].closer] = _nestingData[key];\n            }\n        }\n        return ret;\n    }();\n    var _nestingDataAttr = function() {\n        var ret = {};\n        for (var key of Object.keys(_nestingData)) {\n            if (_nestingData[key].type === \"nocase\") continue;\n            var attr = _nestingData[key].attr;\n            var outer = _nestingData[key].outer;\n            var inner = _nestingData[key].flipflop[_nestingData[key].outer];\n            ret[attr + \"/\" + outer] = _nestingData[key];\n            ret[attr + \"/\" + inner] = _nestingData[key];\n        }\n        return ret;\n    }();\n    function _setOuterQuoteForm(quot) {\n        var flip = {\n            \" \\'\": \" \\\"\",\n            \" \\\"\": \" \\'\",\n            \"(\\\"\": \"(\\'\",\n            \"(\\'\": \"(\\\"\"\n        }\n        _nestingData[quot].outer = \"true\";\n        _nestingData[flip[quot]].outer = \"inner\";\n    }\n    function _getNestingOpenerParams(opener) {\n        var openers = [];\n        var closer;\n        for (var key of Object.keys(_nestingData)) {\n            if (_nestingData[opener].type !== \"quote\" || !_nestingData[opener]) {\n                openers.push(key);\n            }\n        }\n        var ret = _nestingData[opener];\n        ret.opener = new RegExp(\"^(?:\" + openers.map(function(str){return str.replace(\"(\", \"\\\\(\")}).join(\"|\") + \")\"); \n        return ret;\n    }\n    var _nestingParams = function() {\n        var ret = {};\n        for (var key of Object.keys(_nestingData)) {\n            ret[key] = _getNestingOpenerParams(key);\n        }\n        return ret;\n    }()\n    var _tagRex = function() {\n        var openers = [];\n        var closers = [];\n        var vals = {};\n        for (var opener in _nestingParams) {\n            openers.push(opener);\n            vals[_nestingParams[opener].closer] = true;\n        }\n        for (var closer of Object.keys(vals)) {\n            closers.push(closer);\n        }\n        var all = openers.concat(closers).map(function(str){return str.replace(\"(\", \"\\\\(\")}).join(\"|\");\n        return {\n            matchAll: new RegExp(\"((?:\" + all + \"))\", \"g\"),\n            splitAll: new RegExp(\"(?:\" + all + \")\", \"g\"),\n            open: new RegExp(\"(^(?:\" + openers.map(function(str){return str.replace(\"(\", \"\\\\(\")}).join(\"|\") + \")$)\"),\n            close: new RegExp(\"(^(?:\" + closers.join(\"|\") + \")$)\"),\n        }\n    }();\n    function _nestingFix (tag, pos) {\n        return _pushNestingState(tag, pos);\n    }\n    function _pushNestingState(tag, pos) {\n        if (tag.match(_tagRex.open)) {\n            return _tryOpen(tag, pos);\n        } else {\n            return _tryClose(tag, pos);\n        }\n    }\n    function _tryOpen(tag, pos) {\n        var params = _nestingState[_nestingState.length - 1];\n        if (!params || tag.match(params.opener)) {\n            _nestingState.push({\n                type: _nestingParams[tag].type,\n                opener: _nestingParams[tag].opener,\n                closer: _nestingParams[tag].closer,\n                pos: pos\n            });\n            return false;\n        } else {\n            _nestingState.pop()\n            _nestingState.push({\n                type: _nestingParams[tag].type,\n                opener: _nestingParams[tag].opener,\n                closer: _nestingParams[tag].closer,\n                pos: pos\n            });\n            return {\n                fixtag: params.pos\n            };\n        }\n    }\n    function _tryClose(tag, pos) {\n        var params = _nestingState[_nestingState.length - 1];\n        if (params && tag === params.closer) {\n            _nestingState.pop()\n            if (params.type === \"nocase\") {\n                return {\n                    nocase: {\n                        open: params.pos,\n                        close: pos\n                    }\n                }\n            } else {\n                return false;\n            }\n        } else {\n            if (params) {\n                return {\n                    fixtag: params.pos\n                };\n            } else {\n                return {\n                    fixtag: pos\n                };\n            }\n        }\n    }\n    function _doppelString(str) {\n        var forcedSpaces = [];\n        str = str.replace(/(<span)\\s+(style=\\\"font-variant:)\\s*(small-caps);?\\\"[^>]*(>)/g, \"$1 $2$3;\\\"$4\");\n        str = str.replace(/(<span)\\s+(class=\\\"no(?:case|decor)\\\")[^>]*(>)/g, \"$1 $2$3\");\n        var match = str.match(_tagRex.matchAll);\n        if (!match) {\n            return {\n                tags: [],\n                strings: [str],\n                forcedSpaces: []\n            };\n        }\n        var split = str.split(_tagRex.splitAll);\n        for (var i=0,ilen=match.length-1;i<ilen;i++) {\n            if (_nestingData[match[i]]) {\n                if (split[i+1] === \"\" && [\"\\\"\", \"'\"].indexOf(match[i+1]) > -1) {\n                    match[i+1] = \" \" + match[i+1]\n                    forcedSpaces.push(true);\n                } else {\n                    forcedSpaces.push(false);\n                }\n            }\n        }\n        return {\n            tags: match,\n            strings: split,\n            forcedSpaces: forcedSpaces\n        }\n    }\n    function _undoppelString(obj) {\n        var lst = obj.strings.slice(-1);\n        for (var i=obj.tags.length-1; i>-1; i+=-1) {\n            lst.push(obj.tags[i]);\n            lst.push(obj.strings[i]);\n        }\n        lst.reverse();\n        return lst.join(\"|\");\n    }\n    var _TagReg = function(blob) {\n        this.set = set;\n        this.pair = pair;\n        this.pop = pop;\n        _stack = [];\n        function set(tag) {\n            var attr = _nestingData[tag].attr;\n            var decor = null;\n            for (var i=_stack.length-1;i>-1;i--) {\n                var _decor = _stack[i];\n                if (_decor[0] === attr) {\n                    decor = _decor;\n                    break;\n                }\n            }\n            if (!decor) {\n                var allTheDecor = [state[state.tmp.area].opt.layout_decorations].concat(blob.alldecor)\n                outer:\n                for (var i=allTheDecor.length-1;i>-1;i--) {\n                    var decorset = allTheDecor[i];\n                    if (!decorset) continue;\n                    for (var j=decorset.length-1;j>-1;j--) {\n                        var _decor = decorset[j];\n                        if (_decor[0] === attr) {\n                            decor = _decor;\n                            break outer;\n                        }\n                    }\n                }\n            }\n            if (!decor) {\n                decor = [attr, _nestingData[tag].outer];\n            } else {\n                decor = [attr, _nestingData[tag].flipflop[decor[1]]];\n            }\n            _stack.push(decor);\n        }\n        function pair() {\n            return _stack[_stack.length-1];\n        }\n        function pop() {\n            _stack.pop();\n        }\n    }\n    function _apostropheForce(tag, str) {\n        if (tag === \"\\'\") {\n            if (str && str.match(/^[^\\.\\?\\:\\;\\ ]/)) {\n                return true;\n            }\n        } else if (tag === \" \\'\" && str && str.match(/^[\\ ]/)) {\n            return true;\n        }\n        return false;\n    }\n    function _undoppelToQueue(blob, doppel, leadingSpace) {\n        var TOP = blob;\n        var firstString = true;\n        var tagReg = new _TagReg(blob);\n        blob.blobs = [];\n        function Stack (blob) {\n            this.stack = [blob];\n            this.latest = blob;\n            this.addStyling = function(str, decor, forcedSpace) {\n                if (firstString) {\n                    if (str.slice(0, 1) === \" \") {\n                        str = str.slice(1);\n                    }\n                    if (str.slice(0, 1) === \" \") {\n                        str = str.slice(1);\n                    }\n                    firstString = false;\n                }\n                this.latest = this.stack[this.stack.length-1];\n                if (decor) {\n                    if (\"string\" === typeof this.latest.blobs) {\n                        var child = new CSL.Blob();\n                        child.blobs = this.latest.blobs;\n                        child.alldecor = this.latest.alldecor.slice();\n                        this.latest.blobs = [child];\n                    }\n                    var tok = new CSL.Token();\n                    var newblob = new CSL.Blob(null, tok);\n                    newblob.alldecor = this.latest.alldecor.slice();\n                    if (decor[0] === \"@class\" && decor[1] === \"nodecor\") {\n                        var newdecorset = [];\n                        var seen = {};\n                        var allTheDecor = [state[state.tmp.area].opt.layout_decorations].concat(newblob.alldecor)\n                        for (var i=allTheDecor.length-1;i>-1;i--) {\n                            var _decorset = allTheDecor[i];\n                            if (!_decorset) continue;\n                            for (var j=_decorset.length-1;j>-1;j--) {\n                                var _olddecor = _decorset[j];\n                                if ([\"@font-weight\", \"@font-style\", \"@font-variant\"].indexOf(_olddecor[0]) > -1\n                                    && !seen[_olddecor[0]]) {\n                                    if (decor[1] !== \"normal\") {\n                                        newblob.decorations.push([_olddecor[0], \"normal\"]);\n                                        newdecorset.push([_olddecor[0], \"normal\"])\n                                    }\n                                    seen[_olddecor[0]] = true;\n                                }\n                            }\n                        }\n                        newblob.alldecor.push(newdecorset);\n                    } else {\n                        newblob.decorations.push(decor);\n                        newblob.alldecor.push([decor]);\n                    }\n                    this.latest.blobs.push(newblob);\n                    this.stack.push(newblob);\n                    this.latest = newblob;\n                    if (str) {\n                        var tok = new CSL.Token();\n                        var newblob = new CSL.Blob(null, tok);\n                        newblob.blobs = str;\n                        newblob.alldecor = this.latest.alldecor.slice();\n                        this.latest.blobs.push(newblob);\n                    }\n                } else {\n                    if (str) {\n                        var child = new CSL.Blob();\n                        child.blobs = str;\n                        child.alldecor = this.latest.alldecor.slice();\n                        this.latest.blobs.push(child);\n                    }\n                }\n            }\n            this.popStyling = function() {\n                this.stack.pop();\n            }\n        };\n        var stack = new Stack(blob);\n        if (doppel.strings.length) {\n            var str = doppel.strings[0];\n            if (leadingSpace) {\n                str = \" \" + str;\n            }\n            stack.addStyling(str);\n        }\n        for (var i=0,ilen=doppel.tags.length;i<ilen;i++) {\n            var tag = doppel.tags[i];\n            var str = doppel.strings[i+1];\n            if (tag.match(_tagRex.open)) {\n                tagReg.set(tag);\n                stack.addStyling(str, tagReg.pair());\n            } else {\n                tagReg.pop();\n                stack.popStyling();\n                stack.addStyling(str);\n            }\n        }\n    }\n    function processTags(blob) {\n        var str = blob.blobs;\n        var leadingSpace = false;\n        if (str.slice(0, 1) === \" \" && !str.match(/^\\s+[\\'\\\"]/)) {\n            leadingSpace = true;\n        }\n        var str = \" \" + str;\n        var doppel = _doppelString(str);\n        if (doppel.tags.length === 0) return;\n        var quoteFormSeen = false;\n    \tfor (var i=0,ilen=doppel.tags.length;i<ilen;i++) {\n            var tag = doppel.tags[i];\n            var str = doppel.strings[i+1];\n            if (_apostropheForce(tag, str)) {\n                if (tag === \" \\'\") {\n                    doppel.strings[i+1] = \" \\u2019\" + doppel.strings[i+1];\n                } else {\n                    doppel.strings[i+1] = \"\\u2019\" + doppel.strings[i+1];\n                }\n                doppel.tags[i] = \"\";\n            } else {\n                var tagInfo;\n                while (true) {\n                    tagInfo = _nestingFix(tag, i);\n                    if (tagInfo) {\n                        if (Object.keys(tagInfo).indexOf(\"fixtag\") > -1) {\n                            if (tag.match(_tagRex.close)\n                                && tag === \"\\'\") {\n                                doppel.strings[i+1] = \"\\u2019\" + doppel.strings[i+1];\n                                doppel.tags[i] = \"\";\n                            } else {\n                                var failedTag = doppel.tags[tagInfo.fixtag];\n                                if (doppel.forcedSpaces[tagInfo.fixtag-1]) {\n                                    failedTag = failedTag.slice(1);\n                                }\n                                doppel.strings[tagInfo.fixtag+1] = failedTag + doppel.strings[tagInfo.fixtag+1];\n                                doppel.tags[tagInfo.fixtag] = \"\";\n                            }\n                            if (_nestingState.length > 0) {\n                                _nestingState.pop();\n                            } else {\n                                break;\n                            }\n                        } else if (tagInfo.nocase) {\n                            doppel.tags[tagInfo.nocase.open] = \"\";\n                            doppel.tags[tagInfo.nocase.close] = \"\";\n                            break;\n                        } else {\n                            break;\n                        }\n                    } else {\n                        break;\n                    }\n                }\n                if (tagInfo && (tagInfo.fixtag|| tagInfo.fixtag === 0)) {\n                    doppel.strings[i+1] = doppel.tags[i] + doppel.strings[i+1];\n                    doppel.tags[i] = \"\";\n                }\n            }\n        }\n        for (var i=_nestingState.length-1;i>-1;i--) {\n            var tagPos = _nestingState[i].pos\n            var tag = doppel.tags[tagPos];\n            if (tag === \" \\'\" || tag === \"\\'\") {\n                doppel.strings[tagPos+1] = \" \\u2019\" + doppel.strings[tagPos+1];\n            } else {\n                doppel.strings[tagPos+1] = doppel.tags[tagPos] + doppel.strings[tagPos+1];\n            }\n            doppel.tags[tagPos] = \"\";\n            _nestingState.pop();\n        }\n        for (var i=doppel.tags.length-1;i>-1;i--) {\n            if (!doppel.tags[i]) {\n                doppel.tags = doppel.tags.slice(0,i).concat(doppel.tags.slice(i+1));\n                doppel.strings[i] = doppel.strings[i] + doppel.strings[i+1];\n                doppel.strings = doppel.strings.slice(0,i+1).concat(doppel.strings.slice(i+2));\n            }\n        }\n        for (var i=0,ilen=doppel.tags.length;i<ilen;i++) {\n            var tag = doppel.tags[i];\n            var forcedSpace = doppel.forcedSpaces[i-1];\n            if ([\" \\\"\", \" \\'\", \"(\\\"\", \"(\\'\"].indexOf(tag) > -1) {\n                if (!quoteFormSeen) {\n                    _setOuterQuoteForm(tag);\n                    quoteFormSeen = true;\n                }\n                if (!forcedSpace) {\n                    doppel.strings[i] += tag.slice(0, 1);\n                }\n            }\n        }\n        _undoppelToQueue(blob, doppel, leadingSpace);\n    }\n}\nCSL.Output.Formatters = new function () {\n    this.passthrough = passthrough;\n    this.lowercase = lowercase;\n    this.uppercase = uppercase;\n    this.sentence = sentence;\n    this.title = title;\n    this[\"capitalize-first\"] = capitalizeFirst;\n    this[\"capitalize-all\"] = capitalizeAll;\n    var rexStr = \"(?:\\u2018|\\u2019|\\u201C|\\u201D| \\\"| \\'|\\\"|\\'|[-\\–\\—\\/.,;?!:]|\\\\[|\\\\]|\\\\(|\\\\)|<span style=\\\"font-variant: small-caps;\\\">|<span class=\\\"no(?:case|decor)\\\">|<\\/span>|<\\/?(?:i|sc|b|sub|sup)>)\";\n    tagDoppel = new CSL.Doppeler(rexStr, function(str) {\n        return str.replace(/(<span)\\s+(class=\\\"no(?:case|decor)\\\")[^>]*(>)/g, \"$1 $2$3\").replace(/(<span)\\s+(style=\\\"font-variant:)\\s*(small-caps);?(\\\")[^>]*(>)/g, \"$1 $2 $3;$4$5\");\n    });\n    wordDoppel = new CSL.Doppeler(\"(?:[\\u0020\\u00A0\\u2000-\\u200B\\u205F\\u3000]+)\");\n    var _tagParams = {\n        \"<span style=\\\"font-variant: small-caps;\\\">\": \"</span>\",\n        \"<span class=\\\"nocase\\\">\": \"</span>\",\n        \"<span class=\\\"nodecor\\\">\": \"</span>\"\n    }\n    function _capitalise (word, force) {\n        var m = word.match(/(^\\s*)((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))(.*)/);\n        if (m && !(m[2].match(/^[\\u0370-\\u03FF]$/) && !m[3])) {\n            return m[1] + m[2].toUpperCase() + m[3];\n        }\n        return word;\n    }\n    function _textcaseEngine(config, string) {\n        if (!string) {\n            return \"\";\n        }\n        config.doppel = tagDoppel.split(string);\n        var quoteParams = {\n            \" \\\"\": {\n                opener: \" \\'\",\n                closer: \"\\\"\"\n            },\n            \" \\'\": {\n                opener: \" \\\"\",\n                closer: \"\\'\"\n            },\n            \"\\u2018\": {\n                opener: \"\\u2018\",\n                closer: \"\\u2019\"\n            },\n            \"\\u201C\": {\n                opener: \"\\u201C\",\n                closer: \"\\u201D\"\n            },\n        }\n        function quoteFix (tag, positions) {\n            var m = tag.match(/(^(?:\\u2018|\\u2019|\\u201C|\\u201D|\\\"|\\')|(?: \\\"| \\')$)/);\n            if (m) {\n                return pushQuoteState(m[1], positions);\n            }\n        }\n        function pushQuoteState(tag, pos) {\n            var isOpener = [\"\\u201C\", \"\\u2018\", \" \\\"\", \" \\'\"].indexOf(tag) > -1 ? true : false;\n            if (isOpener) {\n                return tryOpen(tag, pos);\n            } else {\n                return tryClose(tag, pos);\n            }\n        }\n        function tryOpen(tag, pos) {\n            if (config.quoteState.length === 0 || tag === config.quoteState[config.quoteState.length - 1].opener) {\n                config.quoteState.push({\n                    opener: quoteParams[tag].opener,\n                    closer: quoteParams[tag].closer,\n                    pos: pos\n                });\n                return false;\n            } else {\n                var prevPos = config.quoteState[config.quoteState.length-1].pos;\n                config.quoteState.pop()\n                config.quoteState.push({\n                    opener: quoteParams[tag].opener,\n                    closer: quoteParams[tag].closer,\n                    positions: pos\n                });\n                return prevPos;\n            }\n        }\n        function tryClose(tag, pos) {\n            if (config.quoteState.length > 0 && tag === config.quoteState[config.quoteState.length - 1].closer) {\n                config.quoteState.pop()\n            } else {\n                return pos;\n            }\n        }\n        if (config.doppel.strings.length && config.doppel.strings[0].trim()) {\n            config.doppel.strings[0] = config.capitaliseWords(config.doppel.strings[0], 0, config.doppel.tags[0]);\n        }\n    \tfor (var i=0,ilen=config.doppel.tags.length;i<ilen;i++) {\n            var tag = config.doppel.tags[i];\n            var str = config.doppel.strings[i+1];\n            if (config.tagState !== null) {\n                if (_tagParams[tag]) {\n                    config.tagState.push(_tagParams[tag]);\n                } else if (config.tagState.length && tag === config.tagState[config.tagState.length - 1]) {\n                    config.tagState.pop();\n                }\n            }\n            if (config.afterPunct !== null) {\n                if (tag.match(/[\\!\\?\\:]$/)) {\n                    config.afterPunct = true;\n                }\n            }\n            if (config.tagState.length === 0) {\n                config.doppel.strings[i+1] = config.capitaliseWords(str, i+1, config.doppel,config.doppel.tags[i+1]);\n            } else if (config.doppel.strings[i+1].trim()) {\n                config.lastWordPos = null;\n            }\n            if (config.quoteState !== null) {\n                var quotePos = quoteFix(tag, i);\n                if (quotePos || quotePos === 0) {\n                    var origChar = config.doppel.origStrings[quotePos+1].slice(0, 1);\n                    config.doppel.strings[quotePos+1] = origChar + config.doppel.strings[quotePos+1].slice(1);\n                    config.lastWordPos = null;\n                }\n            }\n            if (config.isFirst) {\n                if (str.trim()) {\n                    config.isFirst = false;\n                }\n            }\n            if (config.afterPunct) {\n                if (str.trim()) {\n                    config.afterPunct = false;\n                }\n            }\n        }\n        if (config.quoteState) {\n            for (var i=0,ilen=config.quoteState.length;i<ilen;i++) {\n                var quotePos = config.quoteState[i].pos;\n                if (typeof quotePos !== 'undefined') {\n                    var origChar = config.doppel.origStrings[quotePos+1].slice(0, 1);\n                    config.doppel.strings[quotePos+1] = origChar + config.doppel.strings[quotePos+1].slice(1);\n                }\n            }\n        }\n        if (config.lastWordPos) {\n            var lastWords = wordDoppel.split(config.doppel.strings[config.lastWordPos.strings]);\n            var lastWord = _capitalise(lastWords.strings[config.lastWordPos.words]);\n            lastWords.strings[config.lastWordPos.words] = lastWord;\n            config.doppel.strings[config.lastWordPos.strings] = wordDoppel.join(lastWords);\n        }\n        return tagDoppel.join(config.doppel);\n    }\n    function passthrough (state, str) {\n        return str;\n    }\n    function lowercase(state, string) {\n        var config = {\n            quoteState: null,\n            capitaliseWords: function(str) {\n                var words = str.split(\" \");\n                for (var i=0,ilen=words.length;i<ilen;i++) {\n                    var word = words[i];\n                    if (word) {\n                        words[i] = word.toLowerCase();\n                    }\n                }\n                return words.join(\" \");\n            },\n            skipWordsRex: null,\n            tagState: [],\n            afterPunct: null,\n            isFirst: null\n        }\n        return _textcaseEngine(config, string);\n    }\n    function uppercase(state, string) {\n        var config = {\n            quoteState: null,\n            capitaliseWords: function(str) {\n                var words = str.split(\" \");\n                for (var i=0,ilen=words.length;i<ilen;i++) {\n                    var word = words[i];\n                    if (word) {\n                        words[i] = word.toUpperCase();\n                    }\n                }\n                return words.join(\" \");\n            },\n            skipWordsRex: null,\n            tagState: [],\n            afterPunct: null,\n            isFirst: null\n        }\n        return _textcaseEngine(config, string);\n    }\n    function sentence(state, string) {\n        var config = {\n            quoteState: [],\n            capitaliseWords: function(str) {\n                var words = str.split(\" \");\n                for (var i=0,ilen=words.length;i<ilen;i++) {\n                    var word = words[i];\n                    if (word) {\n                        if (config.isFirst) {\n                            words[i] = _capitalise(word);\n                            config.isFirst = false;\n                        } else {\n                            words[i] = word.toLowerCase();\n                        }\n                    }\n                }\n                return words.join(\" \");\n            },\n            skipWordsRex: null,\n            tagState: [],\n            afterPunct: null,\n            isFirst: true\n        }\n        return _textcaseEngine(config, string);\n    }\n    function title(state, string) {\n        var config = {\n            quoteState: [],\n            capitaliseWords: function(str, i, followingTag) {\n                if (str.trim()) {\n                    var words = str.split(/[ \\u00A0]+/);\n                    var wordle = wordDoppel.split(str);\n                    var words = wordle.strings;\n                    for (var j=0,jlen=words.length;j<jlen;j++) {\n                        var word = words[j];\n                        if (!word) continue;\n                        if (word.length > 1 && !word.toLowerCase().match(config.skipWordsRex)) {\n                            words[j] = _capitalise(words[j]);\n                        } else if (j === (words.length - 1) && followingTag === \"-\") {\n                            words[j] = _capitalise(words[j]);\n                        } else if (config.isFirst) {\n                            words[j] = _capitalise(words[j]);\n                        } else if (config.afterPunct) {\n                            words[j] = _capitalise(words[j]);\n                        }\n                        config.afterPunct = false;\n                        config.isFirst = false;\n                        config.lastWordPos = {\n                            strings: i,\n                            words: j\n                        }\n                    }\n                    str = wordDoppel.join(wordle);\n                }\n                return str;\n            },\n            skipWordsRex: state.locale[state.opt.lang].opts[\"skip-words-regexp\"],\n            tagState: [],\n            afterPunct: false,\n            isFirst: true\n        }\n        return _textcaseEngine(config, string);\n    }\n    function capitalizeFirst(state, string) {\n        var config = {\n            quoteState: [],\n            capitaliseWords: function(str) {\n                var words = str.split(\" \");\n                for (var i=0,ilen=words.length;i<ilen;i++) {\n                    var word = words[i];\n                    if (word) {\n                        if (config.isFirst) {\n                            words[i] = _capitalise(word);\n                            config.isFirst = false;\n                            break;\n                        }\n                    }\n                }\n                return words.join(\" \");\n            },\n            skipWordsRex: null,\n            tagState: [],\n            afterPunct: null,\n            isFirst: true\n        }\n        return _textcaseEngine(config, string);\n    }\n    function capitalizeAll (state, string) {\n        var config = {\n            quoteState: [],\n            capitaliseWords: function(str) {\n                var words = str.split(\" \");\n                for (var i=0,ilen=words.length;i<ilen;i++) {\n                    var word = words[i];\n                    if (word) {\n                        words[i] = _capitalise(word);\n                    }\n                }\n                return words.join(\" \");\n            },\n            skipWordsRex: null,\n            tagState: [],\n            afterPunct: null,\n            isFirst: null\n        }\n        return _textcaseEngine(config, string);\n    }\n}\nCSL.Output.Formats = function () {};\nCSL.Output.Formats.prototype.html = {\n    \"text_escape\": function (text) {\n        if (!text) {\n            text = \"\";\n        }\n        return text.replace(/&/g, \"&#38;\")\n            .replace(/</g, \"&#60;\")\n            .replace(/>/g, \"&#62;\")\n            .replace(/\\s\\s/g, \"\\u00A0 \")\n            .replace(CSL.SUPERSCRIPTS_REGEXP,\n                     function(aChar) {\n                         return \"<sup>\" + CSL.SUPERSCRIPTS[aChar] + \"</sup>\";\n                     });\n    },\n    \"bibstart\": \"<div class=\\\"csl-bib-body\\\">\\n\",\n    \"bibend\": \"</div>\",\n    \"@font-style/italic\": \"<i>%%STRING%%</i>\",\n    \"@font-style/oblique\": \"<em>%%STRING%%</em>\",\n    \"@font-style/normal\": \"<span style=\\\"font-style:normal;\\\">%%STRING%%</span>\",\n    \"@font-variant/small-caps\": \"<span style=\\\"font-variant:small-caps;\\\">%%STRING%%</span>\",\n    \"@passthrough/true\": CSL.Output.Formatters.passthrough,\n    \"@font-variant/normal\": \"<span style=\\\"font-variant:normal;\\\">%%STRING%%</span>\",\n    \"@font-weight/bold\": \"<b>%%STRING%%</b>\",\n    \"@font-weight/normal\": \"<span style=\\\"font-weight:normal;\\\">%%STRING%%</span>\",\n    \"@font-weight/light\": false,\n    \"@text-decoration/none\": \"<span style=\\\"text-decoration:none;\\\">%%STRING%%</span>\",\n    \"@text-decoration/underline\": \"<span style=\\\"text-decoration:underline;\\\">%%STRING%%</span>\",\n    \"@vertical-align/sup\": \"<sup>%%STRING%%</sup>\",\n    \"@vertical-align/sub\": \"<sub>%%STRING%%</sub>\",\n    \"@vertical-align/baseline\": \"<span style=\\\"baseline\\\">%%STRING%%</span>\",\n    \"@strip-periods/true\": CSL.Output.Formatters.passthrough,\n    \"@strip-periods/false\": CSL.Output.Formatters.passthrough,\n    \"@quotes/true\": function (state, str) {\n        if (\"undefined\" === typeof str) {\n            return state.getTerm(\"open-quote\");\n        }\n        return state.getTerm(\"open-quote\") + str + state.getTerm(\"close-quote\");\n    },\n    \"@quotes/inner\": function (state, str) {\n        if (\"undefined\" === typeof str) {\n            return \"\\u2019\";\n        }\n        return state.getTerm(\"open-inner-quote\") + str + state.getTerm(\"close-inner-quote\");\n    },\n    \"@quotes/false\": false,\n    \"@cite/entry\": function (state, str) {\n        return state.sys.wrapCitationEntry(str, this.item_id, this.locator_txt, this.suffix_txt);\n\t},\n    \"@bibliography/entry\": function (state, str) {\n        var insert = \"\";\n        if (state.sys.embedBibliographyEntry) {\n            insert = state.sys.embedBibliographyEntry(this.item_id) + \"\\n\";\n        }\n        return \"  <div class=\\\"csl-entry\\\">\" + str + \"</div>\\n\" + insert;\n    },\n    \"@display/block\": function (state, str) {\n        return \"\\n\\n    <div class=\\\"csl-block\\\">\" + str + \"</div>\\n\";\n    },\n    \"@display/left-margin\": function (state, str) {\n        return \"\\n    <div class=\\\"csl-left-margin\\\">\" + str + \"</div>\";\n    },\n    \"@display/right-inline\": function (state, str) {\n        return \"<div class=\\\"csl-right-inline\\\">\" + str + \"</div>\\n  \";\n    },\n    \"@display/indent\": function (state, str) {\n        return \"<div class=\\\"csl-indent\\\">\" + str + \"</div>\\n  \";\n    },\n    \"@showid/true\": function (state, str, cslid) {\n        if (!state.tmp.just_looking && ! state.tmp.suppress_decorations) {\n            if (cslid) {\n                return \"<span class=\\\"\" + state.opt.nodenames[cslid] + \"\\\" cslid=\\\"\" + cslid + \"\\\">\" + str + \"</span>\";\n            } else if (this.params && \"string\" === typeof str) {\n                var prePunct = \"\";\n                if (str) {\n                    var m = str.match(CSL.VARIABLE_WRAPPER_PREPUNCT_REX);\n                    prePunct = m[1];\n                    str = m[2];\n                }\n                var postPunct = \"\";\n                if (str && CSL.SWAPPING_PUNCTUATION.indexOf(str.slice(-1)) > -1) {\n                    postPunct = str.slice(-1);\n                    str = str.slice(0,-1);\n                }\n                return state.sys.variableWrapper(this.params, prePunct, str, postPunct);\n            } else {\n                return str;\n            }\n        } else {\n            return str;\n        }\n    },\n    \"@URL/true\": function (state, str) {\n        return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n    },\n    \"@DOI/true\": function (state, str) {\n        return \"<a href=\\\"http://dx.doi.org/\" + str + \"\\\">\" + str + \"</a>\";\n    }\n};\nCSL.Output.Formats.prototype.text = {\n    \"text_escape\": function (text) {\n        if (!text) {\n            text = \"\";\n        }\n        return text;\n    },\n    \"bibstart\": \"\",\n    \"bibend\": \"\",\n    \"@font-style/italic\": false,\n    \"@font-style/oblique\": false,\n    \"@font-style/normal\": false,\n    \"@font-variant/small-caps\": false,\n    \"@passthrough/true\": CSL.Output.Formatters.passthrough,\n    \"@font-variant/normal\": false,\n    \"@font-weight/bold\": false,\n    \"@font-weight/normal\": false,\n    \"@font-weight/light\": false,\n    \"@text-decoration/none\": false,\n    \"@text-decoration/underline\": false,\n    \"@vertical-align/baseline\": false,\n    \"@vertical-align/sup\": false,\n    \"@vertical-align/sub\": false,\n    \"@strip-periods/true\": CSL.Output.Formatters.passthrough,\n    \"@strip-periods/false\": CSL.Output.Formatters.passthrough,\n    \"@quotes/true\": function (state, str) {\n        if (\"undefined\" === typeof str) {\n            return state.getTerm(\"open-quote\");\n        }\n        return state.getTerm(\"open-quote\") + str + state.getTerm(\"close-quote\");\n    },\n    \"@quotes/inner\": function (state, str) {\n        if (\"undefined\" === typeof str) {\n            return \"\\u2019\";\n        }\n        return state.getTerm(\"open-inner-quote\") + str + state.getTerm(\"close-inner-quote\");\n    },\n    \"@quotes/false\": false,\n    \"@cite/entry\": function (state, str) {\n\t\treturn state.sys.wrapCitationEntry(str, this.item_id, this.locator_txt, this.suffix_txt);\n\t},\n    \"@bibliography/entry\": function (state, str) {\n        return str+\"\\n\";\n    },\n    \"@display/block\": function (state, str) {\n        return \"\\n\"+str;\n    },\n    \"@display/left-margin\": function (state, str) {\n        return str;\n    },\n    \"@display/right-inline\": function (state, str) {\n        return str;\n    },\n    \"@display/indent\": function (state, str) {\n        return \"\\n    \"+str;\n    },\n    \"@showid/true\": function (state, str, cslid) {\n        return str;\n    },\n    \"@URL/true\": function (state, str) {\n        return str;\n    },\n    \"@DOI/true\": function (state, str) {\n        return str;\n    }\n};\nCSL.Output.Formats.prototype.rtf = {\n    \"text_escape\": function (text) {\n        if (!text) {\n            text = \"\";\n        }\n        return text\n        .replace(/([\\\\{}])/g, \"\\\\$1\")\n        .replace(CSL.SUPERSCRIPTS_REGEXP,\n                 function(aChar) {\n                     return \"\\\\super \" + CSL.SUPERSCRIPTS[aChar] + \"\\\\nosupersub{}\";\n                 })\n        .replace(/[\\u007F-\\uFFFF]/g,\n                 function(aChar) { return \"\\\\uc0\\\\u\"+aChar.charCodeAt(0).toString()+\"{}\"; })\n        .split(\"\\t\").join(\"\\\\tab{}\");\n    },\n    \"@passthrough/true\": CSL.Output.Formatters.passthrough,\n    \"@font-style/italic\":\"{\\\\i{}%%STRING%%}\",\n    \"@font-style/normal\":\"{\\\\i0{}%%STRING%%}\",\n    \"@font-style/oblique\":\"{\\\\i{}%%STRING%%}\",\n    \"@font-variant/small-caps\":\"{\\\\scaps %%STRING%%}\",\n    \"@font-variant/normal\":\"{\\\\scaps0{}%%STRING%%}\",\n    \"@font-weight/bold\":\"{\\\\b{}%%STRING%%}\",\n    \"@font-weight/normal\":\"{\\\\b0{}%%STRING%%}\",\n    \"@font-weight/light\":false,\n    \"@text-decoration/none\":false,\n    \"@text-decoration/underline\":\"{\\\\ul{}%%STRING%%}\",\n    \"@vertical-align/baseline\":false,\n    \"@vertical-align/sup\":\"\\\\super %%STRING%%\\\\nosupersub{}\",\n    \"@vertical-align/sub\":\"\\\\sub %%STRING%%\\\\nosupersub{}\",\n    \"@strip-periods/true\": CSL.Output.Formatters.passthrough,\n    \"@strip-periods/false\": CSL.Output.Formatters.passthrough,\n    \"@quotes/true\": function (state, str) {\n        if (\"undefined\" === typeof str) {\n            return CSL.Output.Formats.rtf.text_escape(state.getTerm(\"open-quote\"));\n        }\n        return CSL.Output.Formats.rtf.text_escape(state.getTerm(\"open-quote\")) + str + CSL.Output.Formats.rtf.text_escape(state.getTerm(\"close-quote\"));\n    },\n    \"@quotes/inner\": function (state, str) {\n        if (\"undefined\" === typeof str) {\n            return CSL.Output.Formats.rtf.text_escape(\"\\u2019\");\n        }\n        return CSL.Output.Formats.rtf.text_escape(state.getTerm(\"open-inner-quote\")) + str + CSL.Output.Formats.rtf.text_escape(state.getTerm(\"close-inner-quote\"));\n    },\n    \"@quotes/false\": false,\n    \"bibstart\":\"{\\\\rtf \",\n    \"bibend\":\"}\",\n    \"@display/block\": \"\\\\line{}%%STRING%%\\\\line\\r\\n\",\n    \"@cite/entry\": function (state, str) {\n        return str;\n\t},\n    \"@cite/entry\": function (state, str) {\n\t\treturn state.sys.wrapCitationEntry(str, this.item_id, this.locator_txt, this.suffix_txt);\n\t},\n    \"@bibliography/entry\": function(state,str){\n        return str;\n    },\n    \"@display/left-margin\": function(state,str){\n        return str+\"\\\\tab \";\n    },\n    \"@display/right-inline\": function (state, str) {\n        return str+\"\\r\\n\";\n    },\n    \"@display/indent\": function (state, str) {\n        return \"\\n\\\\tab \"+str+\"\\\\line\\r\\n\";\n    },\n    \"@showid/true\": function (state, str, cslid) {\n        if (!state.tmp.just_looking && ! state.tmp.suppress_decorations) {\n            var prePunct = \"\";\n            if (str) {\n                var m = str.match(CSL.VARIABLE_WRAPPER_PREPUNCT_REX);\n                prePunct = m[1];\n                str = m[2];\n            }\n            var postPunct = \"\";\n            if (str && CSL.SWAPPING_PUNCTUATION.indexOf(str.slice(-1)) > -1) {\n                postPunct = str.slice(-1);\n                str = str.slice(0,-1);\n            }\n            return state.sys.variableWrapper(this.params, prePunct, str, postPunct);\n        } else {\n            return str;\n        }\n    },\n    \"@URL/true\": function (state, str) {\n        return str;\n    },\n    \"@DOI/true\": function (state, str) {\n        return str;\n    }\n};\nCSL.Output.Formats = new CSL.Output.Formats();\nCSL.Registry = function (state) {\n    var pos, len, ret, i, ilen;\n    this.debug = false;\n    this.state = state;\n    this.registry = {};\n    this.reflist = [];\n    this.refhash = {};\n    this.namereg = new CSL.Registry.NameReg(state);\n    this.citationreg = new CSL.Registry.CitationReg(state);\n    this.authorstrings = {};\n    this.mylist = [];\n    this.myhash = {};\n    this.deletes = [];\n    this.inserts = [];\n    this.uncited = {};\n    this.refreshes = {};\n    this.akeys = {};\n    this.oldseq = {};\n    this.return_data = {};\n    this.ambigcites = {};\n    this.ambigresets = {};\n    this.sorter = new CSL.Registry.Comparifier(state, \"bibliography_sort\");\n    this.getSortedIds = function () {\n        ret = [];\n        for (i = 0, ilen = this.reflist.length; i < ilen; i += 1) {\n            ret.push(\"\" + this.reflist[i].id);\n        }\n        return ret;\n    };\n    this.getSortedRegistryItems = function () {\n        ret = [];\n        for (i = 0, ilen = this.reflist.length; i < ilen; i += 1) {\n            ret.push(this.reflist[i]);\n        }\n        return ret;\n    };\n};\nCSL.Registry.prototype.init = function (itemIDs, uncited_flag) {\n    var i, ilen;\n    this.oldseq = {};\n    if (uncited_flag) {\n        this.uncited = {};\n        for (var i=0,ilen=itemIDs.length;i<ilen; i += 1) {\n            if (!this.myhash[itemIDs[i]]) {\n                this.mylist.push(\"\" + itemIDs[i]);\n            }\n            this.uncited[itemIDs[i]] = true;\n            this.myhash[itemIDs[i]] = true;\n        }\n    } else {\n        for (var key in this.uncited) {\n            itemIDs.push(key);\n        }\n        var myhash = {};\n        for (i=itemIDs.length-1;i>-1; i += -1) {\n            if (myhash[itemIDs[i]]) {\n                itemIDs = itemIDs.slice(0, i).concat(itemIDs.slice(i + 1));\n            } else {\n                myhash[itemIDs[i]] = true;\n            }\n        }\n        this.mylist = [];\n        for (var i=0,ilen=itemIDs.length;i<ilen;i+=1) {\n            this.mylist.push(\"\" + itemIDs[i]);\n        }\n        this.myhash = myhash;\n    }\n    this.refreshes = {};\n    this.touched = {};\n    this.ambigsTouched = {};\n    this.ambigresets = {};\n};\nCSL.Registry.prototype.dopurge = function (myhash) {\n    for (var i=this.mylist.length-1;i>-1;i+=-1) {\n        if (this.citationreg.citationsByItemId) {\n            if (!this.citationreg.citationsByItemId[this.mylist[i]] && !myhash[this.mylist[i]]) {\n                delete this.myhash[this.mylist[i]];\n                this.mylist = this.mylist.slice(0,i).concat(this.mylist.slice(i+1));\n            }\n        }\n    }\n    this.dodeletes(this.myhash);\n};\nCSL.Registry.prototype.dodeletes = function (myhash) {\n    var otheritems, key, ambig, pos, len, items, kkey, mypos, id;\n    if (\"string\" === typeof myhash) {\n        myhash = {};\n        myhash[myhash] = true;\n    }\n    for (key in this.registry) {\n        if (!myhash[key]) {\n            if (this.uncited[key]) {\n                continue;\n            }\n            otheritems = this.namereg.delitems(key);\n            for (kkey in otheritems) {\n                this.refreshes[kkey] = true;\n            }\n            ambig = this.registry[key].ambig;\n            mypos = this.ambigcites[ambig].indexOf(key);\n            if (mypos > -1) {\n                items = this.ambigcites[ambig].slice();\n                this.ambigcites[ambig] = items.slice(0, mypos).concat(items.slice(mypos+1, items.length));\n                this.ambigresets[ambig] = this.ambigcites[ambig].length;\n            }\n            len = this.ambigcites[ambig].length;\n            for (pos = 0; pos < len; pos += 1) {\n                id = \"\" + this.ambigcites[ambig][pos];\n                this.refreshes[id] = true;\n            }\n            if (this.registry[key].siblings) {\n                if (this.registry[key].siblings.length == 1) {\n                    var loneSiblingID = this.registry[key].siblings[0];\n                    this.registry[loneSiblingID].master = true;\n                    this.registry[loneSiblingID].siblings.pop();\n                    this.registry[loneSiblingID].parallel = false;\n                } else if (this.registry[key].siblings.length > 1) {\n                    var removeIDs = [key];\n                    if (this.registry[key].master) {\n                        var newmasterID = this.registry[key].siblings[0];\n                        var newmaster = this.registry[newmasterID];\n                        newmaster.master = true;\n                        newmaster.parallel = false;\n                        removeIDs.push(newmasterID);\n                        for (var k = 0, klen = this.registry[key].siblings.length; k < klen; k += 1) {\n                            this.registry[this.registry[key].siblings[k]].parallel = newmasterID;\n                        }\n                    }\n                    var buffer = [];\n                    for (var k = this.registry[key].siblings.length - 1; k > -1; k += -1) {\n                        var siblingID = this.registry[key].siblings.pop();\n                        if (removeIDs.indexOf(siblingID) === -1) {\n                            buffer.push(siblingID)\n                        }\n                    }\n                    for (var k = buffer.length - 1; k > -1; k += -1) {\n                        this.registry[key].siblings.push(buffer[k]);\n                    }\n                }\n            }\n            delete this.registry[key];\n            delete this.refhash[key];\n            this.return_data.bibchange = true;\n        }\n    }\n};\nCSL.Registry.prototype.doinserts = function (mylist) {\n    var len, pos, item, Item, akey, newitem, abase, j, jlen, k, klen, i, ilen;\n    if (\"string\" === typeof mylist) {\n        mylist = [mylist];\n    }\n    for (i = 0, ilen = mylist.length; i < ilen; i += 1) {\n        item = mylist[i];\n        if (!this.registry[item]) {\n            Item = this.state.retrieveItem(item);\n            akey = CSL.getAmbiguousCite.call(this.state, Item);\n            this.ambigsTouched[akey] = true;\n            if (!Item.legislation_id) {\n                this.akeys[akey] = true;\n            }\n            newitem = {\n                \"id\": \"\" + item,\n                \"seq\": 0,\n                \"offset\": 0,\n                \"sortkeys\": false,\n                \"ambig\": false,\n                \"rendered\": false,\n                \"disambig\": false,\n                \"ref\": Item\n            };\n            this.registry[item] = newitem;\n            if (this.citationreg.citationsByItemId && this.citationreg.citationsByItemId[item]) {\n                this.registry[item][\"first-reference-note-number\"] = this.citationreg.citationsByItemId[item][0].properties.noteIndex;\n            }\n            abase = CSL.getAmbigConfig.call(this.state);\n            this.registerAmbigToken(akey, item, abase);\n            this.touched[item] = true;\n            this.return_data.bibchange = true;\n        }\n    }\n};\nCSL.Registry.prototype.rebuildlist = function () {\n    var count, len, pos, item;\n    this.reflist = [];\n    if (this.state.opt.citation_number_sort_direction === CSL.DESCENDING\n       && this.state.opt.citation_number_sort_used) {\n    }\n    len = this.mylist.length;\n    for (pos = 0; pos < len; pos += 1) {\n        item = this.mylist[pos];\n        this.reflist.push(this.registry[item]);\n        this.oldseq[item] = this.registry[item].seq;\n        this.registry[item].seq = (pos + 1);\n    }\n    if (this.state.opt.citation_number_sort_direction === CSL.DESCENDING\n       && this.state.opt.citation_number_sort_used) {\n    }\n};\nCSL.Registry.prototype.dorefreshes = function () {\n    var key, regtoken, Item, old_akey, akey, abase;\n    for (key in this.refreshes) {\n        regtoken = this.registry[key];\n        if (!regtoken) {\n            continue;\n        }\n        regtoken.sortkeys = undefined;\n        Item = this.state.retrieveItem(key);\n        var akey = regtoken.ambig;\n        if (\"undefined\" === typeof akey) {\n            this.state.tmp.disambig_settings = false;\n            akey = CSL.getAmbiguousCite.call(this.state, Item);\n            abase = CSL.getAmbigConfig.call(this.state);\n            this.registerAmbigToken(akey, key, abase);\n        }\n        for (var akkey in this.ambigresets) {\n            if (this.ambigresets[akkey] === 1) {\n                var loneKey = this.ambigcites[akey][0];\n                var Item = this.state.retrieveItem(loneKey);\n                this.registry[loneKey].disambig = new CSL.AmbigConfig;\n                this.state.tmp.disambig_settings = false;\n                var akey = CSL.getAmbiguousCite.call(this.state, Item);\n                var abase = CSL.getAmbigConfig.call(this.state);\n                this.registerAmbigToken(akey, loneKey, abase);\n            }\n        }\n        this.state.tmp.taintedItemIDs[key] = true;\n        this.ambigsTouched[akey] = true;\n        if (!Item.legislation_id) {\n            this.akeys[akey] = true;\n        }\n        this.touched[key] = true;\n    }\n};\nCSL.Registry.prototype.setdisambigs = function () {\n    var akey, leftovers, key, pos, len, id;\n    this.leftovers = [];\n    for (akey in this.ambigsTouched) {\n        this.state.disambiguate.run(akey);\n    }\n    this.ambigsTouched = {};\n    this.akeys = {};\n};\nCSL.Registry.prototype.renumber = function () {\n    var len, pos, item;\n    if (this.state.opt.citation_number_sort_direction === CSL.DESCENDING\n       && this.state.opt.citation_number_sort_used) {\n    }\n    len = this.reflist.length;\n    for (pos = 0; pos < len; pos += 1) {\n        item = this.reflist[pos];\n        item.seq = (pos + 1);\n        if (this.state.opt.update_mode === CSL.NUMERIC && item.seq != this.oldseq[item.id]) {\n            this.state.tmp.taintedItemIDs[item.id] = true;\n        }\n        if (this.state.opt.bib_mode === CSL.NUMERIC && item.seq != this.oldseq[item.id]) {\n            this.return_data.bibchange = true;\n        }\n    }\n    if (this.state.opt.citation_number_sort_direction === CSL.DESCENDING\n       && this.state.opt.citation_number_sort_used) {\n        this.reflist.reverse();\n    }\n};\nCSL.Registry.prototype.setsortkeys = function () {\n    var key;\n    for (var i = 0, ilen = this.mylist.length; i < ilen; i += 1) {\n        var key = this.mylist[i];\n        if (this.touched[key] || this.state.tmp.taintedItemIDs[key] || !this.registry[key].sortkeys) {\n            this.registry[key].sortkeys = CSL.getSortKeys.call(this.state, this.state.retrieveItem(key), \"bibliography_sort\");\n        }\n    }\n};\nCSL.Registry.prototype.sorttokens = function () {\n    this.reflist.sort(this.sorter.compareKeys);\n};\nCSL.Registry.Comparifier = function (state, keyset) {\n    var sort_directions, len, pos, compareKeys;\n    var sortCompare = CSL.getSortCompare(state.opt[\"default-locale-sort\"]);\n    sort_directions = state[keyset].opt.sort_directions;\n    this.compareKeys = function (a, b) {\n        len = a.sortkeys ? a.sortkeys.length : 0;\n        for (pos = 0; pos < len; pos += 1) {\n            var cmp = 0;\n            if (a.sortkeys[pos] === b.sortkeys[pos]) {\n                cmp = 0;\n            } else if (\"undefined\" === typeof a.sortkeys[pos]) {\n                cmp = sort_directions[pos][1];\n            } else if (\"undefined\" === typeof b.sortkeys[pos]) {\n                cmp = sort_directions[pos][0];\n            } else {\n                cmp = sortCompare(a.sortkeys[pos], b.sortkeys[pos]);\n            }\n            if (0 < cmp) {\n                return sort_directions[pos][1];\n            } else if (0 > cmp) {\n                return sort_directions[pos][0];\n            }\n        }\n        if (a.seq > b.seq) {\n            return 1;\n        } else if (a.seq < b.seq) {\n            return -1;\n        }\n        return 0;\n    };\n    compareKeys = this.compareKeys;\n    this.compareCompositeKeys = function (a, b) {\n        return compareKeys(a[1], b[1]);\n    };\n};\nCSL.Registry.prototype.compareRegistryTokens = function (a, b) {\n    if (a.seq > b.seq) {\n        return 1;\n    } else if (a.seq < b.seq) {\n        return -1;\n    }\n    return 0;\n};\nCSL.Registry.prototype.registerAmbigToken = function (akey, id, ambig_config) {\n    if (this.registry[id] && this.registry[id].disambig && this.registry[id].disambig.names) {\n        for (var i = 0, ilen = ambig_config.names.length; i < ilen; i += 1) {\n            var new_names_params = ambig_config.names[i];\n            var old_names_params = this.registry[id].disambig.names[i];\n            if (new_names_params !== old_names_params) {\n                this.state.tmp.taintedItemIDs[id] = true;\n            } else if (ambig_config.givens[i]) {\n                for (var j=0,jlen=ambig_config.givens[i].length;j<jlen;j+=1) {\n                    var new_gnames_params = ambig_config.givens[i][j];\n                    var old_gnames_params = this.registry[id].disambig.givens[i][j];\n                    if (new_gnames_params !== old_gnames_params) {\n                        this.state.tmp.taintedItemIDs[id] = true;\n                    }\n                }\n            }\n        }\n    }\n    if (!this.ambigcites[akey]) {\n        this.ambigcites[akey] = [];\n    }\n    if (this.ambigcites[akey].indexOf(\"\" + id) === -1) {\n        this.ambigcites[akey].push(\"\" + id);\n    }\n    this.registry[id].ambig = akey;\n    var dome = false;\n    this.registry[id].disambig = CSL.cloneAmbigConfig(ambig_config);\n};\nCSL.getSortKeys = function (Item, key_type) {\n    var area, root, extension, strip_prepositions, use_parallels, len, pos;\n    area = this.tmp.area;\n    root = this.tmp.root;\n    extension = this.tmp.extension;\n    strip_prepositions = CSL.Util.Sort.strip_prepositions;\n    this.tmp.area = key_type;\n    this.tmp.root = key_type.indexOf(\"_\") > -1 ? key_type.slice(0,-5) : key_type;\n    this.tmp.extension = \"_sort\";\n    this.tmp.disambig_override = true;\n    this.tmp.disambig_request = false;\n    this.parallel.use_parallels = (this.parallel.use_parallels === true || this.parallel.use_parallels === null) ? null : false;\n    this.tmp.suppress_decorations = true;\n    CSL.getCite.call(this, Item);\n    this.tmp.suppress_decorations = false;\n    this.parallel.use_parallels = this.parallel.use_parallels === null ? true : false;\n    this.tmp.disambig_override = false;\n    len = this[key_type].keys.length;\n    for (pos = 0; pos < len; pos += 1) {\n        this[key_type].keys[pos] = strip_prepositions(this[key_type].keys[pos]);\n    }\n    this.tmp.area = area;\n    this.tmp.root = root;\n    this.tmp.extension = extension;\n    return this[key_type].keys;\n};\nCSL.Registry.NameReg = function (state) {\n    var pkey, ikey, skey, floor, ceiling, dagopt, gdropt, ret, pos, items, strip_periods, set_keys, evalname, delitems, addname, key, myitems, i, ilen;\n    this.state = state;\n    this.namereg = {};\n    this.nameind = {};\n    this.nameindpkeys = {};\n    this.itemkeyreg = {};\n    strip_periods = function (str) {\n        if (!str) {\n            str = \"\";\n        }\n        return str.replace(/\\./g, \" \").replace(/\\s+/g, \" \").replace(/\\s+$/,\"\");\n    };\n    set_keys = function (state, itemid, nameobj) {\n        pkey = strip_periods(nameobj.family);\n        skey = strip_periods(nameobj.given);\n        var m = skey.match(/[,\\!]* ([^,]+)$/);\n        if (m && m[1] === m[1].toLowerCase()) {\n            skey = skey.replace(/[,\\!]* [^,]+$/, \"\");\n        }\n        ikey = CSL.Util.Names.initializeWith(state, skey, \"%s\");\n        if (state.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\") {\n            pkey = \"\" + itemid + pkey;\n        }\n    };\n    evalname = function (item_id, nameobj, namenum, request_base, form, initials) {\n        var pos, len, items, param;\n        if (state.tmp.area.slice(0, 12) === \"bibliography\" && !form) {\n            if (\"string\" === typeof initials) {\n                return 1;\n            } else {\n                return 2;\n            }\n        }\n        var res = state.nameOutput.getName(nameobj, \"locale-translit\", true);\n        nameobj = res.name;\n        set_keys(this.state, \"\" + item_id, nameobj);\n        param = 2;\n        dagopt = state.opt[\"disambiguate-add-givenname\"];\n        gdropt = state.citation.opt[\"givenname-disambiguation-rule\"];\n        var gdropt_orig = gdropt;\n        if (gdropt === \"by-cite\") {\n            gdropt = \"all-names\";\n        }\n        if (\"short\" === form) {\n            param = 0;\n        } else if (\"string\" === typeof initials) {\n            param = 1;\n        }\n        if (\"undefined\" === typeof this.namereg[pkey] || \"undefined\" === typeof this.namereg[pkey].ikey[ikey]) {\n            return param;\n        }\n        if (gdropt_orig === \"by-cite\" && param <= request_base) {\n            return request_base;\n        }\n        if (!dagopt) {\n            return param;\n        }\n        if (\"string\" === typeof gdropt && gdropt.slice(0, 12) === \"primary-name\" && namenum > 0) {\n            return param;\n        }\n        if (!gdropt || gdropt === \"all-names\" || gdropt === \"primary-name\") {\n            if (this.namereg[pkey].count > 1) {\n                param = 1;\n            }\n            if ((this.namereg[pkey].ikey \n                 && this.namereg[pkey].ikey[ikey].count > 1)\n                || (this.namereg[pkey].count > 1 \n                    && \"string\" !== typeof initials)) {\n                param = 2;\n            }\n        } else if (gdropt === \"all-names-with-initials\" || gdropt === \"primary-name-with-initials\") {\n            if (this.namereg[pkey].count > 1) {\n                param = 1;\n            } else {\n                param = 0;\n            }\n        }\n        if (!state.registry.registry[item_id]) {\n            if (form == \"short\") {\n                return 0;\n            } else if (\"string\" == typeof initials) {\n                return 1;\n            }\n        } else {\n            return param;\n        }\n    };\n    delitems = function (ids) {\n        var item, pos, len, posA, posB, id, fullkey, llen, ppos, otherid;\n        if (\"string\" === typeof ids || \"number\" === typeof ids) {\n            ids = [\"\" + ids];\n        }\n        ret = {};\n        len = ids.length;\n        for (pos = 0; pos < len; pos += 1) {\n            id = \"\" + ids[pos];\n            if (!this.nameind[id]) {\n                continue;\n            }\n            for (fullkey in this.nameind[id]) {\n                if (this.nameind[id].hasOwnProperty(fullkey)) {\n                    key = fullkey.split(\"::\");\n                    pkey = key[0];\n                    ikey = key[1];\n                    skey = key[2];\n                    if (\"undefined\" === typeof this.namereg[pkey]) {\n                        continue;\n                    }\n                    items = this.namereg[pkey].items;\n                    if (skey && this.namereg[pkey].ikey[ikey] && this.namereg[pkey].ikey[ikey].skey[skey]) {\n                        myitems = this.namereg[pkey].ikey[ikey].skey[skey].items;\n                        posB = myitems.indexOf(\"\" + id);\n                        if (posB > -1) {\n                            this.namereg[pkey].ikey[ikey].skey[skey].items = myitems.slice(0, posB).concat(myitems.slice([(posB + 1)]));\n                        }\n                        if (this.namereg[pkey].ikey[ikey].skey[skey].items.length === 0) {\n                            delete this.namereg[pkey].ikey[ikey].skey[skey];\n                            this.namereg[pkey].ikey[ikey].count += -1;\n                            if (this.namereg[pkey].ikey[ikey].count < 2) {\n                                for (i = 0, ilen = this.namereg[pkey].ikey[ikey].items.length; i < ilen; i += 1) {\n                                    state.tmp.taintedItemIDs[this.namereg[pkey].ikey[ikey].items[i]] = true;\n                                }\n                            }\n                        }\n                    }\n                    if (ikey && this.namereg[pkey].ikey[ikey]) {\n                        posB = this.namereg[pkey].ikey[ikey].items.indexOf(\"\" + id);\n                        if (posB > -1) {\n                            items = this.namereg[pkey].ikey[ikey].items.slice();\n                            this.namereg[pkey].ikey[ikey].items = items.slice(0, posB).concat(items.slice([posB + 1]));\n                        }\n                        if (this.namereg[pkey].ikey[ikey].items.length === 0) {\n                            delete this.namereg[pkey].ikey[ikey];\n                            this.namereg[pkey].count += -1;\n                            if (this.namereg[pkey].count < 2) {\n                                for (i = 0, ilen = this.namereg[pkey].items.length; i < ilen; i += 1) {\n                                    state.tmp.taintedItemIDs[this.namereg[pkey].items[i]] = true;\n                                }\n                            }\n                        }\n                    }\n                    if (pkey) {\n                        posB = this.namereg[pkey].items.indexOf(\"\" + id);\n                        if (posB > -1) {\n                            items = this.namereg[pkey].items.slice();\n                            this.namereg[pkey].items = items.slice(0, posB).concat(items.slice([posB + 1], items.length));\n                        }\n                        if (this.namereg[pkey].items.length < 2) {\n                            delete this.namereg[pkey];\n                        }\n                    }\n                    delete this.nameind[id][fullkey];\n                }\n            }\n            delete this.nameind[id];\n            delete this.nameindpkeys[id];\n        }\n        return ret;\n    };\n    addname = function (item_id, nameobj, pos) {\n        var i, ilen;\n        var res = state.nameOutput.getName(nameobj, \"locale-translit\", true);\n        nameobj = res.name;\n        if (state.citation.opt[\"givenname-disambiguation-rule\"]\n            && state.citation.opt[\"givenname-disambiguation-rule\"].slice(0, 8) === \"primary-\"\n            && pos !== 0) {\n                return;\n        }\n        set_keys(this.state, \"\" + item_id, nameobj);\n        if (pkey) {\n            if (\"undefined\" === typeof this.namereg[pkey]) {\n                this.namereg[pkey] = {};\n                this.namereg[pkey].count = 0;\n                this.namereg[pkey].ikey = {};\n                this.namereg[pkey].items = [item_id];\n            } else if (this.namereg[pkey].items.indexOf(item_id) === -1) {\n                this.namereg[pkey].items.push(item_id);\n            }\n        }\n        if (pkey && ikey) {\n            if (\"undefined\" === typeof this.namereg[pkey].ikey[ikey]) {\n                this.namereg[pkey].ikey[ikey] = {};\n                this.namereg[pkey].ikey[ikey].count = 0;\n                this.namereg[pkey].ikey[ikey].skey = {};\n                this.namereg[pkey].ikey[ikey].items = [item_id];\n                this.namereg[pkey].count += 1;\n                if (this.namereg[pkey].count === 2) {\n                    for (i = 0, ilen = this.namereg[pkey].items.length; i < ilen; i += 1) {\n                        state.tmp.taintedItemIDs[this.namereg[pkey].items[i]] = true;\n                    }\n                }\n            } else if (this.namereg[pkey].ikey[ikey].items.indexOf(item_id) === -1) {\n                this.namereg[pkey].ikey[ikey].items.push(item_id);\n            }\n        }\n        if (pkey && ikey && skey) {\n            if (\"undefined\" === typeof this.namereg[pkey].ikey[ikey].skey[skey]) {\n                this.namereg[pkey].ikey[ikey].skey[skey] = {};\n                this.namereg[pkey].ikey[ikey].skey[skey].items = [item_id];\n                this.namereg[pkey].ikey[ikey].count += 1;\n                if (this.namereg[pkey].ikey[ikey].count === 2) {\n                    for (i = 0, ilen = this.namereg[pkey].ikey[ikey].items.length; i < ilen; i += 1) {\n                        state.tmp.taintedItemIDs[this.namereg[pkey].ikey[ikey].items[i]] = true;\n                    }\n                }\n            } else if (this.namereg[pkey].ikey[ikey].skey[skey].items.indexOf(item_id) === -1) {\n                this.namereg[pkey].ikey[ikey].skey[skey].items.push(item_id);\n            }\n        }\n        if (\"undefined\" === typeof this.nameind[item_id]) {\n            this.nameind[item_id] = {};\n            this.nameindpkeys[item_id] = {};\n        }\n        if (pkey) {\n            this.nameind[item_id][pkey + \"::\" + ikey + \"::\" + skey] = true;\n            this.nameindpkeys[item_id][pkey] = this.namereg[pkey];\n        }\n    };\n    this.addname = addname;\n    this.delitems = delitems;\n    this.evalname = evalname;\n};\nCSL.Registry.CitationReg = function (state) {\n    this.citationById = {};\n    this.citationByIndex = [];\n};\nCSL.Disambiguation = function (state) {\n    this.state = state;\n    this.sys = this.state.sys;\n    this.registry = state.registry.registry;\n    this.ambigcites = state.registry.ambigcites;\n    this.configModes();\n    this.debug = false;\n};\nCSL.Disambiguation.prototype.run = function(akey) {\n    if (!this.modes.length) {\n        return;\n    }\n    this.akey = akey;\n    if (this.initVars(akey)) {\n        this.runDisambig();\n    }\n};\nCSL.Disambiguation.prototype.runDisambig = function () {\n    var pos, len, ppos, llen, pppos, lllen, ismax;\n    this.initGivens = true;\n    while (this.lists.length) {\n        this.gnameset = 0;\n        this.gname = 0;\n        this.clashes = [1, 0];\n        while(this.lists[0][1].length) {\n            this.listpos = 0;\n            if (!this.base) {\n                this.base = this.lists[0][0];\n            }\n            var names_used = [];\n            ismax = this.incrementDisambig();\n            this.scanItems(this.lists[0]);\n            this.evalScan(ismax);\n        }\n        this.lists = this.lists.slice(1);\n    }\n};\nCSL.Disambiguation.prototype.scanItems = function (list) {\n    var pos, len, Item, otherItem, ItemCite, ignore, base;\n    this.Item = list[1][0];\n    this.ItemCite = CSL.getAmbiguousCite.call(this.state, this.Item, this.base, true);\n    this.scanlist = list[1];\n    this.partners = [];\n    this.partners.push(this.Item);\n    this.nonpartners = [];\n    var clashes = 0;\n    for (var pos = 1, len = list[1].length; pos < len; pos += 1) {\n        otherItem = list[1][pos];\n        var otherItemCite = CSL.getAmbiguousCite.call(this.state, otherItem, this.base, true);\n        if (this.ItemCite === otherItemCite) {\n            clashes += 1;\n            this.partners.push(otherItem);\n        } else {\n            this.nonpartners.push(otherItem);\n        }\n    }\n    this.clashes[0] = this.clashes[1];\n    this.clashes[1] = clashes;\n};\nCSL.Disambiguation.prototype.evalScan = function (maxed) {\n    this[this.modes[this.modeindex]](maxed);\n    if (maxed) {\n        if (this.modeindex < this.modes.length - 1) {\n            this.modeindex += 1;\n        } else {\n            this.lists[this.listpos + 1] = [this.base, []];\n        }\n    }\n};\nCSL.Disambiguation.prototype.disNames = function (ismax) {\n    var pos, len, mybase, i, ilen;\n    if (this.clashes[1] === 0 && this.nonpartners.length === 1) {\n        this.captureStepToBase();\n        this.state.registry.registerAmbigToken(this.akey, \"\" + this.nonpartners[0].id, this.betterbase);\n        this.state.registry.registerAmbigToken(this.akey, \"\" + this.partners[0].id, this.betterbase);\n        this.lists[this.listpos] = [this.betterbase, []];\n    } else if (this.clashes[1] === 0) {\n        this.captureStepToBase();\n        this.state.registry.registerAmbigToken(this.akey, \"\" + this.partners[0].id, this.betterbase);\n        this.lists[this.listpos] = [this.betterbase, this.nonpartners];\n        if (this.nonpartners.length) {\n            this.initGivens = true;\n        }\n    } else if (this.nonpartners.length === 1) {\n        this.captureStepToBase();\n        this.state.registry.registerAmbigToken(this.akey, \"\" + this.nonpartners[0].id, this.betterbase);\n        this.lists[this.listpos] = [this.betterbase, this.partners];\n    } else if (this.clashes[1] < this.clashes[0]) {\n        this.captureStepToBase();\n        this.lists[this.listpos] = [this.betterbase, this.partners];\n        this.lists.push([this.betterbase, this.nonpartners]);\n    } else {\n        if (ismax) {\n            this.lists[this.listpos] = [this.betterbase, this.nonpartners];\n            this.lists.push([this.betterbase, this.partners]);\n            if (this.modeindex === this.modes.length - 1) {\n                for (var i = 0, ilen = this.partners.length; i < ilen; i += 1) {\n                    this.state.registry.registerAmbigToken(this.akey, \"\" + this.partners[i].id, this.betterbase);\n                }\n                this.lists[this.listpos] = [this.betterbase, []];\n            }\n        }\n    }\n};\nCSL.Disambiguation.prototype.disExtraText = function () {\n    var pos, len, mybase;\n    var done = false;\n    if (this.clashes[1] === 0 && this.nonpartners.length < 2) {\n        done = true;\n    }\n    if (!done && (!this.base.disambiguate || this.state.tmp.disambiguate_count !== this.state.tmp.disambiguate_maxMax)) {\n        this.modeindex = 0;\n        this.base.disambiguate = this.state.tmp.disambiguate_count;\n        this.betterbase.disambiguate = this.state.tmp.disambiguate_count;\n        if (!this.base.disambiguate) {\n            this.initGivens = true;\n            this.base.disambiguate = 1;\n            for (var i = 0, ilen = this.lists[this.listpos][1].length; i < ilen; i += 1) {\n                this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][i].id] = true;\n            }\n        } else {\n            this.disNames();\n        }\n    } else if (done || this.state.tmp.disambiguate_count === this.state.tmp.disambiguate_maxMax) {\n        if (done || this.modeindex === this.modes.length - 1) {\n            var base = this.lists[this.listpos][0];\n            for (var i = 0, ilen = this.lists[this.listpos][1].length; i < ilen; i += 1) {\n                this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][i].id] = true;\n                this.state.registry.registerAmbigToken(this.akey, \"\" + this.lists[this.listpos][1][i].id, base);\n            }\n            this.lists[this.listpos] = [this.betterbase, []];\n        } else {\n            this.modeindex = this.modes.length - 1;\n            var base = this.lists[this.listpos][0];\n            base.disambiguate = true;\n            for (var i = 0, ilen = this.lists[this.listpos][1].length; i < ilen; i += 1) {\n                this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][i].id] = true;\n                this.state.registry.registerAmbigToken(this.akey, \"\" + this.lists[this.listpos][1][i].id, base);\n            }\n        }\n    }\n};\nCSL.Disambiguation.prototype.disYears = function () {\n    var pos, len, tokens, token, item;\n    tokens = [];\n    var base = this.lists[this.listpos][0];\n    if (this.clashes[1]) {\n\t\tfor (var i = 0, ilen = this.state.registry.mylist.length; i < ilen; i += 1) {\n\t\t\tvar origid = this.state.registry.mylist[i];\n\t\t\tfor (var j = 0, jlen = this.lists[this.listpos][1].length; j < jlen; j += 1) {\n\t\t\t\tvar token = this.lists[this.listpos][1][j];\n\t\t\t\tif (token.id == origid) {\n\t\t\t\t\ttokens.push(this.registry[token.id]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n    tokens.sort(this.state.registry.sorter.compareKeys);\n    for (var pos = 0, len = tokens.length; pos < len; pos += 1) {\n        base.year_suffix = \"\"+pos;\n        var oldBase = this.state.registry.registry[tokens[pos].id].disambig;\n        this.state.registry.registerAmbigToken(this.akey, \"\" + tokens[pos].id, base);\n        if (CSL.ambigConfigDiff(oldBase,base)) {\n            this.state.tmp.taintedItemIDs[tokens[pos].id] = true;\n        }\n    }\n    this.lists[this.listpos] = [this.betterbase, []];\n};\nCSL.Disambiguation.prototype.incrementDisambig = function () {\n    var val;\n    if (this.initGivens) {\n        this.initGivens = false;\n        return false;\n    }\n    var maxed = false;\n    var increment_names = true;\n    var increment_givens = true;\n    if (\"disNames\" === this.modes[this.modeindex]) {\n        increment_names = false;\n        if (\"number\" !== typeof this.givensMax) {\n            increment_names = true;\n        }\n        var increment_namesets = false;\n        if (\"number\" !== typeof this.namesMax) {\n            increment_namesets = true;\n        }\n        if (\"number\" === typeof this.givensMax) {\n            if (this.base.givens.length && this.base.givens[this.gnameset][this.gname] < this.givensMax) {\n                this.base.givens[this.gnameset][this.gname] += 1;\n            } else {\n                increment_names = true;\n            }\n        }\n        if (\"number\" === typeof this.namesMax \n            && increment_names) {\n            if (this.state.opt[\"disambiguate-add-names\"]) {\n                increment_namesets = false;\n                if (this.gname < this.namesMax) {\n                    this.base.names[this.gnameset] += 1;\n                    this.gname += 1;\n                } else {\n                    increment_namesets = true;\n                }\n            } else {\n                increment_namesets = true;\n            }\n        }\n        if (\"number\" === typeof this.namesetsMax && increment_namesets) {\n            if (this.gnameset < this.namesetsMax) {\n                this.gnameset += 1;\n                this.base.names[this.gnameset] = 1;\n                this.gname = 0;\n            } else {\n                var increment_mode = true;\n            }\n        }\n        if ((\"number\" !== typeof this.namesetsMax || this.namesetsMax === -1 || this.gnameset === this.namesetsMax)\n            && (!this.state.opt[\"disambiguate-add-names\"] || \"number\" !== typeof this.namesMax || this.gname === this.namesMax)\n            && (\"number\" != typeof this.givensMax || \"undefined\" === typeof this.base.givens[this.gnameset] || \"undefined\" === typeof this.base.givens[this.gnameset][this.gname] || this.base.givens[this.gnameset][this.gname] === this.givensMax)) {\n            maxed = true;\n        }\n    } else if (\"disExtraText\" === this.modes[this.modeindex]) {\n        this.base.disambiguate += 1;\n        this.betterbase.disambiguate += 1;\n    }\n    return maxed;\n};\nCSL.Disambiguation.prototype.initVars = function (akey) {\n    var i, ilen, myIds, myItemBundles, myItems;\n    this.lists = [];\n    this.base = false;\n    this.betterbase = false;\n    this.akey = akey;\n    this.maxNamesByItemId = {};\n    myItemBundles = [];\n    myIds = this.ambigcites[akey];\n    if (!myIds || !myIds.length) {\n        return false;\n    }\n    var Item = false;\n    var myItem = this.state.retrieveItem(\"\" + myIds[0]);\n    this.getCiteData(myItem);\n    this.base = CSL.getAmbigConfig.call(this.state);\n    if (myIds && myIds.length > 1) {\n        myItemBundles.push([this.maxNamesByItemId[myItem.id], myItem]);\n        for (var i = 1, ilen = myIds.length; i < ilen; i += 1) {\n            myItem = this.state.retrieveItem(\"\" + myIds[i]);\n            this.getCiteData(myItem, this.base);\n            myItemBundles.push([this.maxNamesByItemId[myItem.id], myItem]);\n        }\n        myItemBundles.sort(\n            function (a, b) {\n                if (a[0] > b[0]) {\n                    return 1;\n                } else if (a[0] < b[0]) {\n                    return -1;\n                } else {\n                    if (a[1].id > b[1].id) {\n                        return 1;\n                    } else if (a[1].id < b[1].id) {\n                        return -1;\n                    } else {\n                        return 0;\n                    }\n                }\n            }\n        );\n        myItems = [];\n        for (var i = 0, ilen = myItemBundles.length; i < ilen; i += 1) {\n            myItems.push(myItemBundles[i][1]);\n        }\n        this.lists.push([this.base, myItems]);\n        this.Item = this.lists[0][1][0];\n    } else {\n        this.Item = this.state.retrieveItem(\"\" + myIds[0]);\n    }\n    this.modeindex = 0;\n    if (this.state.citation.opt[\"disambiguate-add-names\"] || true) {\n        this.namesMax = this.maxNamesByItemId[this.Item.id][0];\n    } else {\n        var namesMax = this.base.names[0];\n        for (var i=1,ilen=this.base.names.length;i<ilen;i+=1){\n            namesMax = Math.max(namesMax,this.base.names.names[i]);\n        }\n    }\n    this.padBase(this.base);\n    this.padBase(this.betterbase);\n    this.base.year_suffix = false;\n    this.base.disambiguate = false;\n    this.betterbase.year_suffix = false;\n    this.betterbase.disambiguate = false;\n    if (this.state.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\"\n       && this.state.opt[\"disambiguate-add-givenname\"]) {\n        this.givensMax = 2;\n    }\n    return true;\n};\nCSL.Disambiguation.prototype.padBase = function (base) {\n    for (var i = 0, ilen = base.names.length; i < ilen; i += 1) {\n        if (!base.givens[i]) {\n            base.givens[i] = [];\n        }\n        for (var j=0,jlen=base.names[i];j<jlen;j+=1) {\n            if (!base.givens[i][j]) {\n                base.givens[i][j] = 0;\n            }\n        }\n    }\n}\nCSL.Disambiguation.prototype.configModes = function () {\n    var dagopt, gdropt;\n    this.modes = [];\n    dagopt = this.state.opt[\"disambiguate-add-givenname\"];\n    gdropt = this.state.citation.opt[\"givenname-disambiguation-rule\"];\n    if (this.state.opt['disambiguate-add-names'] || (dagopt && gdropt === \"by-cite\")) {\n        this.modes.push(\"disNames\");\n    }\n    if (this.state.opt.has_disambiguate) {\n        this.modes.push(\"disExtraText\");\n    }\n    if (this.state.opt[\"disambiguate-add-year-suffix\"]) {\n        this.modes.push(\"disYears\");\n    }\n};\nCSL.Disambiguation.prototype.getCiteData = function(Item, base) {\n    if (!this.maxNamesByItemId[Item.id]) {\n        CSL.getAmbiguousCite.call(this.state, Item, base);\n        base = CSL.getAmbigConfig.call(this.state);\n        this.maxNamesByItemId[Item.id] = CSL.getMaxVals.call(this.state);\n        this.state.registry.registry[Item.id].disambig.givens = this.state.tmp.disambig_settings.givens.slice();\n        for (var i=0,ilen=this.state.registry.registry[Item.id].disambig.givens.length;i<ilen;i+=1) {\n            this.state.registry.registry[Item.id].disambig.givens[i] = this.state.tmp.disambig_settings.givens[i].slice();\n        }\n        this.namesetsMax = this.state.registry.registry[Item.id].disambig.names.length - 1;\n        if (!this.base) {\n            this.base = base;\n            this.betterbase = CSL.cloneAmbigConfig(base);\n        }\n        if (base.names.length < this.base.names.length) {\n            this.base = base;\n        }\n        var update = false;\n        for (var i = 0, ilen = base.names.length; i < ilen; i += 1) {\n            if (base.names[i] > this.base.names[i]) {\n                this.base.givens[i] = base.givens[i].slice();\n                this.base.names[i] = base.names[i];\n                this.betterbase.names = this.base.names.slice();\n                this.betterbase.givens = this.base.givens.slice();\n                this.padBase(this.base);\n                this.padBase(this.betterbase);\n            }\n        }\n        this.betterbase.givens = this.base.givens.slice();\n        for (var j = 0, jlen = this.base.givens.length; j < jlen; j += 1) {\n            this.betterbase.givens[j] = this.base.givens[j].slice();\n        }\n    }\n};\nCSL.Disambiguation.prototype.captureStepToBase = function() {\n    if (this.state.citation.opt[\"givenname-disambiguation-rule\"] === \"by-cite\"\n        && this.base.givens && this.base.givens.length) {\n        if (\"undefined\" !== typeof this.base.givens[this.gnameset][this.gname]) {\n            this.betterbase.givens[this.gnameset][this.gname] = this.base.givens[this.gnameset][this.gname];\n        }\n    }\n    this.betterbase.names[this.gnameset] = this.base.names[this.gnameset];\n};\nCSL.Engine.prototype.getJurisdictionList = function (jurisdiction) {\n    var jurisdictionList = [];\n    var jurisdictionElems = jurisdiction.split(\":\");\n    for (var j=jurisdictionElems.length;j>0;j--) {\n        jurisdictionList.push(jurisdictionElems.slice(0,j).join(\":\"));\n    }\n    if (jurisdictionList.indexOf(\"us\") === -1) {\n        jurisdictionList.push(\"us\");\n    }\n    return jurisdictionList;\n}\nCSL.Engine.prototype.retrieveAllStyleModules = function (jurisdictionList) {\n    var ret = {};\n    var preferences = this.locale[this.opt.lang].opts[\"jurisdiction-preference\"];\n    preferences = preferences ? preferences : [];\n    preferences = [\"\"].concat(preferences);\n    for (var i=preferences.length-1;i>-1;i--) {\n        var preference = preferences[i];\n        for (var j=0,jlen=jurisdictionList.length;j<jlen;j++) {\n            var jurisdiction = jurisdictionList[j];\n            if (this.opt.jurisdictions_seen[jurisdiction]) continue;\n            var res = this.sys.retrieveStyleModule(jurisdiction, preference);\n            if ((!res && !preference) || res) {\n                this.opt.jurisdictions_seen[jurisdiction] = true;\n            }\n            if (!res) continue;\n            ret[jurisdiction] = res;\n        }\n    }\n    return ret;\n}\nCSL.ParticleList = function() {\n\tvar always_dropping_1 = [[[0,1], null]];\n\tvar always_dropping_2 = [[[0,2], null]];\n\tvar always_dropping_3 = [[[0,3], null]]\n\tvar always_non_dropping_1 = [[null, [0,1]]];\n\tvar always_non_dropping_2 = [[null, [0,2]]];\n\tvar always_non_dropping_3 = [[null, [0,3]]];\n\tvar either_1 = [[null, [0,1]],[[0,1],null]];\n\tvar either_2 = [[null, [0,2]],[[0,2],null]];\n\tvar either_1_dropping_best = [[[0,1],null],[null, [0,1]]];\n\tvar either_2_dropping_best = [[[0,2],null],[null, [0,2]]];\n\tvar either_3_dropping_best = [[[0,3],null],[null, [0,3]]];\n\tvar non_dropping_2_alt_dropping_1_non_dropping_1 = [[null, [0,2]], [[0,1], [1,2]]];\n\treturn  PARTICLES = [\n\t\t[\"'s\", always_non_dropping_1],\n\t\t[\"'s-\", always_non_dropping_1],\n\t\t[\"'t\", always_non_dropping_1],\n\t\t[\"a\", \talways_non_dropping_1],\n\t\t[\"aan 't\", always_non_dropping_2],\n\t\t[\"aan de\", always_non_dropping_2],\n\t\t[\"aan den\", always_non_dropping_2],\n\t\t[\"aan der\", always_non_dropping_2],\n\t\t[\"aan het\", always_non_dropping_2],\n\t\t[\"aan t\", always_non_dropping_2],\n\t\t[\"aan\", always_non_dropping_1],\n\t\t[\"ad-\", either_1],\n\t\t[\"adh-\", either_1],\n\t\t[\"af\", either_1],\n\t\t[\"al\", either_1],\n\t\t[\"al-\", either_1],\n\t\t[\"am de\", always_non_dropping_2],\n\t\t[\"am\", always_non_dropping_1],\n\t\t[\"an-\", either_1],\n\t\t[\"ar-\", either_1],\n\t\t[\"as-\", either_1],\n\t\t[\"ash-\", either_1],\n\t\t[\"at-\", either_1],\n\t\t[\"ath-\", either_1],\n\t\t[\"auf dem\", either_2_dropping_best],\n\t\t[\"auf den\", either_2_dropping_best],\n\t\t[\"auf der\", either_2_dropping_best],\n\t\t[\"auf ter\", always_non_dropping_2],\n\t\t[\"auf\", either_1_dropping_best],\n\t\t[\"aus 'm\", either_2_dropping_best],\n\t\t[\"aus dem\", either_2_dropping_best],\n\t\t[\"aus den\", either_2_dropping_best],\n\t\t[\"aus der\", either_2_dropping_best],\n\t\t[\"aus m\", either_2_dropping_best],\n\t\t[\"aus\", either_1_dropping_best],\n\t\t[\"aus'm\", either_2_dropping_best],\n\t\t[\"az-\", either_1],\n\t\t[\"aš-\", either_1],\n\t\t[\"aḍ-\", either_1],\n\t\t[\"aḏ-\", either_1],\n\t\t[\"aṣ-\", either_1],\n\t\t[\"aṭ-\", either_1],\n\t\t[\"aṯ-\", either_1],\n\t\t[\"aẓ-\", either_1],\n\t\t[\"ben\", always_non_dropping_1],\n\t\t[\"bij 't\", always_non_dropping_2],\n\t\t[\"bij de\", always_non_dropping_2],\n\t\t[\"bij den\", always_non_dropping_2],\n\t\t[\"bij het\", always_non_dropping_2],\n\t\t[\"bij t\", always_non_dropping_2],\n\t\t[\"bij\", always_non_dropping_1],\n\t\t[\"bin\", always_non_dropping_1],\n\t\t[\"boven d\", always_non_dropping_2],\n\t\t[\"boven d'\", always_non_dropping_2],\n\t\t[\"d\", always_non_dropping_1],\n\t\t[\"d'\", either_1],\n\t\t[\"da\", either_1],\n\t\t[\"dal\", always_non_dropping_1],\n\t\t[\"dal'\", always_non_dropping_1],\n\t\t[\"dall'\", always_non_dropping_1],\n\t\t[\"dalla\", always_non_dropping_1],\n\t\t[\"das\", either_1],\n\t\t[\"de die le\", always_non_dropping_3],\n\t\t[\"de die\", always_non_dropping_2],\n\t\t[\"de l\", always_non_dropping_2],\n\t\t[\"de l'\", always_non_dropping_2],\n\t\t[\"de la\", non_dropping_2_alt_dropping_1_non_dropping_1],\n\t\t[\"de las\", non_dropping_2_alt_dropping_1_non_dropping_1],\n\t\t[\"de le\", always_non_dropping_2],\n\t\t[\"de li\", either_2],\n\t\t[\"de van der\", always_non_dropping_3],\n\t\t[\"de\", either_1],\n\t\t[\"de'\", either_1],\n\t\t[\"deca\", always_non_dropping_1],\n\t\t[\"degli\", either_1],\n\t\t[\"dei\", either_1],\n\t\t[\"del\", either_1],\n\t\t[\"dela\", always_dropping_1],\n\t\t[\"dell'\", either_1],\n\t\t[\"della\", either_1],\n\t\t[\"delle\", either_1],\n\t\t[\"dello\", either_1],\n\t\t[\"den\", either_1],\n\t\t[\"der\", either_1],\n\t\t[\"des\", either_1],\n\t\t[\"di\", either_1],\n\t\t[\"die le\", always_non_dropping_2],\n\t\t[\"do\", always_non_dropping_1],\n\t\t[\"don\", always_non_dropping_1],\n\t\t[\"dos\", either_1],\n\t\t[\"du\", either_1],\n\t\t[\"ed-\", either_1],\n\t\t[\"edh-\", either_1],\n\t\t[\"el\", either_1],\n\t\t[\"el-\", either_1],\n\t\t[\"en-\", either_1],\n\t\t[\"er-\", either_1],\n\t\t[\"es-\", either_1],\n\t\t[\"esh-\", either_1],\n\t\t[\"et-\", either_1],\n\t\t[\"eth-\", either_1],\n\t\t[\"ez-\", either_1],\n\t\t[\"eš-\", either_1],\n\t\t[\"eḍ-\", either_1],\n\t\t[\"eḏ-\", either_1],\n\t\t[\"eṣ-\", either_1],\n\t\t[\"eṭ-\", either_1],\n\t\t[\"eṯ-\", either_1],\n\t\t[\"eẓ-\", either_1],\n\t\t[\"het\", always_non_dropping_1],\n\t\t[\"i\", always_non_dropping_1],\n\t\t[\"il\", always_dropping_1],\n\t\t[\"im\", always_non_dropping_1],\n\t\t[\"in 't\", always_non_dropping_2],\n\t\t[\"in de\", always_non_dropping_2],\n\t\t[\"in den\", always_non_dropping_2],\n\t\t[\"in der\", either_2],\n\t\t[\"in het\", always_non_dropping_2],\n\t\t[\"in t\", always_non_dropping_2],\n\t\t[\"in\", always_non_dropping_1],\n\t\t[\"l\", always_non_dropping_1],\n\t\t[\"l'\", always_non_dropping_1],\n\t\t[\"la\", always_non_dropping_1],\n\t\t[\"las\", always_non_dropping_1],\n\t\t[\"le\", always_non_dropping_1],\n\t\t[\"les\", either_1],\n\t\t[\"lo\", either_1],\n\t\t[\"los\", always_non_dropping_1],\n\t\t[\"lou\", always_non_dropping_1],\n\t\t[\"of\", always_non_dropping_1],\n\t\t[\"onder 't\", always_non_dropping_2],\n\t\t[\"onder de\", always_non_dropping_2],\n\t\t[\"onder den\", always_non_dropping_2],\n\t\t[\"onder het\", always_non_dropping_2],\n\t\t[\"onder t\", always_non_dropping_2],\n\t\t[\"onder\", always_non_dropping_1],\n\t\t[\"op 't\", always_non_dropping_2],\n\t\t[\"op de\", either_2],\n\t\t[\"op den\", always_non_dropping_2],\n\t\t[\"op der\", always_non_dropping_2],\n\t\t[\"op gen\", always_non_dropping_2],\n\t\t[\"op het\", always_non_dropping_2],\n\t\t[\"op t\", always_non_dropping_2],\n\t\t[\"op ten\", always_non_dropping_2],\n\t\t[\"op\", always_non_dropping_1],\n\t\t[\"over 't\", always_non_dropping_2],\n\t\t[\"over de\", always_non_dropping_2],\n\t\t[\"over den\", always_non_dropping_2],\n\t\t[\"over het\", always_non_dropping_2],\n\t\t[\"over t\", always_non_dropping_2],\n\t\t[\"over\", always_non_dropping_1],\n\t\t[\"s\", always_non_dropping_1],\n\t\t[\"s'\", always_non_dropping_1],\n\t\t[\"sen\", always_dropping_1],\n\t\t[\"t\", always_non_dropping_1],\n\t\t[\"te\", always_non_dropping_1],\n\t\t[\"ten\", always_non_dropping_1],\n\t\t[\"ter\", always_non_dropping_1],\n\t\t[\"tho\", always_non_dropping_1],\n\t\t[\"thoe\", always_non_dropping_1],\n\t\t[\"thor\", always_non_dropping_1],\n\t\t[\"to\", always_non_dropping_1],\n\t\t[\"toe\", always_non_dropping_1],\n\t\t[\"tot\", always_non_dropping_1],\n\t\t[\"uijt 't\", always_non_dropping_2],\n\t\t[\"uijt de\", always_non_dropping_2],\n\t\t[\"uijt den\", always_non_dropping_2],\n\t\t[\"uijt te de\", always_non_dropping_3],\n\t\t[\"uijt ten\", always_non_dropping_2],\n\t\t[\"uijt\", always_non_dropping_1],\n\t\t[\"uit 't\", always_non_dropping_2],\n\t\t[\"uit de\", always_non_dropping_2],\n\t\t[\"uit den\", always_non_dropping_2],\n\t\t[\"uit het\", always_non_dropping_2],\n\t\t[\"uit t\", always_non_dropping_2],\n\t\t[\"uit te de\", always_non_dropping_3],\n\t\t[\"uit ten\", always_non_dropping_2],\n\t\t[\"uit\", always_non_dropping_1],\n\t\t[\"unter\", always_non_dropping_1],\n\t\t[\"v\", always_non_dropping_1],\n\t\t[\"v.\", always_non_dropping_1],\n\t\t[\"v.d.\", always_non_dropping_1],\n\t\t[\"van 't\", always_non_dropping_2],\n\t\t[\"van de l\", always_non_dropping_3],\n\t\t[\"van de l'\", always_non_dropping_3],\n\t\t[\"van de\", always_non_dropping_2],\n\t\t[\"van de\", always_non_dropping_2],\n\t\t[\"van den\", always_non_dropping_2],\n\t\t[\"van der\", always_non_dropping_2],\n\t\t[\"van gen\", always_non_dropping_2],\n\t\t[\"van het\", always_non_dropping_2],\n\t\t[\"van la\", always_non_dropping_2],\n\t\t[\"van t\", always_non_dropping_2],\n\t\t[\"van ter\", always_non_dropping_2],\n\t\t[\"van van de\", always_non_dropping_3],\n\t\t[\"van\", either_1],\n\t\t[\"vander\", always_non_dropping_1],\n\t\t[\"vd\", always_non_dropping_1],\n\t\t[\"ver\", always_non_dropping_1],\n\t\t[\"vom und zum\", always_dropping_3],\n\t\t[\"vom\", either_1],\n\t\t[\"von 't\", always_non_dropping_2],\n\t\t[\"von dem\", either_2_dropping_best],\n\t\t[\"von den\", either_2_dropping_best],\n\t\t[\"von der\", either_2_dropping_best],\n\t\t[\"von t\", always_non_dropping_2],\n\t\t[\"von und zu\", either_3_dropping_best],\n\t\t[\"von zu\", either_2_dropping_best],\n\t\t[\"von\", either_1_dropping_best],\n\t\t[\"voor 't\", always_non_dropping_2],\n\t\t[\"voor de\", always_non_dropping_2],\n\t\t[\"voor den\", always_non_dropping_2],\n\t\t[\"voor in 't\", always_non_dropping_3],\n\t\t[\"voor in t\", always_non_dropping_3],\n\t\t[\"voor\", always_non_dropping_1],\n\t\t[\"vor der\", either_2_dropping_best],\n\t\t[\"vor\", either_1_dropping_best],\n\t\t[\"z\", always_dropping_1],\n\t\t[\"ze\", always_dropping_1],\n\t\t[\"zu\", either_1_dropping_best],\n\t\t[\"zum\", either_1],\n\t\t[\"zur\", either_1]\n\t];\n}();\nCSL.parseParticles = function(){\n    function splitParticles(nameValue, firstNameFlag, caseOverride) {\n\t\tvar origNameValue = nameValue;\n\t\tnameValue = caseOverride ? nameValue.toLowerCase() : nameValue;\n\t\tvar particleList = [];\n\t\tvar apostrophe;\n\t\tvar rex;\n\t\tif (firstNameFlag) {\n\t\t\tnameValue = nameValue.split(\"\").reverse().join(\"\");\n\t\t\trex = CSL.PARTICLE_GIVEN_REGEXP;\n\t\t} else {\n\t\t\trex = CSL.PARTICLE_FAMILY_REGEXP;\n\t\t}\n\t\tvar m = nameValue.match(rex);\n\t\twhile (m) {\n\t\t\tvar m1 = firstNameFlag ? m[1].split(\"\").reverse().join(\"\") : m[1];\n\t\t\tvar firstChar = m ? m1 : false;\n\t\t\tvar firstChar = firstChar ? m1.replace(/^[-\\'\\u02bb\\u2019\\s]*(.).*$/, \"$1\") : false;\n\t\t\tvar hasParticle = firstChar ? firstChar.toUpperCase() !== firstChar : false;\n\t\t\tif (!hasParticle) break;\n\t\t\tif (firstNameFlag) {\n\t\t\t\tparticleList.push(origNameValue.slice(m1.length * -1));\n\t\t\t\torigNameValue = origNameValue.slice(0,m1.length * -1);\n\t\t\t} else {\n\t\t\t\tparticleList.push(origNameValue.slice(0,m1.length));\n\t\t\t\torigNameValue = origNameValue.slice(m1.length);\n\t\t\t}\n\t\t\tnameValue = m[2];\n\t\t\tm = nameValue.match(rex);\n\t\t}\n\t\tif (firstNameFlag) {\n\t\t\tnameValue = nameValue.split(\"\").reverse().join(\"\");\n\t\t\tparticleList.reverse();\n\t\t\tfor (var i=1,ilen=particleList.length;i<ilen;i++) {\n\t\t\t\tif (particleList[i].slice(0, 1) == \" \") {\n\t\t\t\t\tparticleList[i-1] += \" \";\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i=0,ilen=particleList.length;i<ilen;i++) {\n\t\t\t\tif (particleList[i].slice(0, 1) == \" \") {\n\t\t\t\t\tparticleList[i] = particleList[i].slice(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnameValue = origNameValue.slice(0, nameValue.length);\n\t\t} else {\n\t\t\tnameValue = origNameValue.slice(nameValue.length * -1);\n\t\t}\n\t\treturn [hasParticle, nameValue, particleList];\n\t}\n    function trimLast(str) {\n        var lastChar = str.slice(-1);\n        str = str.trim();\n        if (lastChar === \" \" && [\"\\'\", \"\\u2019\"].indexOf(str.slice(-1)) > -1) {\n            str += \" \";\n        }\n        return str;\n    }\n    function parseSuffix(nameObj) {\n        if (!nameObj.suffix && nameObj.given) {\n            m = nameObj.given.match(/(\\s*,!*\\s*)/);\n            if (m) {\n                idx = nameObj.given.indexOf(m[1]);\n                var possible_suffix = nameObj.given.slice(idx + m[1].length);\n                var possible_comma = nameObj.given.slice(idx, idx + m[1].length).replace(/\\s*/g, \"\");\n                if (possible_suffix.replace(/\\./g, \"\") === 'et al' && !nameObj[\"dropping-particle\"]) {\n                    nameObj[\"dropping-particle\"] = possible_suffix;\n                    nameObj[\"comma-dropping-particle\"] = \",\";\n                } else {\n                    if (possible_comma.length === 2) {\n                        nameObj[\"comma-suffix\"] = true;\n                    }\n                    nameObj.suffix = possible_suffix;\n                }\n                nameObj.given = nameObj.given.slice(0, idx);\n            }\n        }\n    }\n    return function(nameObj) {\n        var res = splitParticles(nameObj.family);\n        var hasLastParticle = res[0];\n        var lastNameValue = res[1];\n        var lastParticleList = res[2];\n        nameObj.family = lastNameValue;\n        var nonDroppingParticle = trimLast(lastParticleList.join(\"\"));\n        if (nonDroppingParticle) {\n            nameObj['non-dropping-particle'] = nonDroppingParticle;\n        }\n        parseSuffix(nameObj);\n        var res = splitParticles(nameObj.given, true);\n        var hasFirstParticle = res[0];\n        var firstNameValue = res[1];\n        var firstParticleList = res[2];\n        nameObj.given = firstNameValue;\n        var droppingParticle = firstParticleList.join(\"\").trim();\n        if (droppingParticle) {\n            nameObj['dropping-particle'] = droppingParticle;\n        }\n    }\n}();\n\nif (typeof module != 'undefined') { module.exports = CSL }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/citeproc/citeproc-obj.js\n// module id = 18\n// module chunks = 0","// This object will be used as the prototype for Nodes when creating a\n// DOM-Level-1-compliant structure.\nvar NodePrototype = module.exports = {\n\tget firstChild() {\n\t\tvar children = this.children;\n\t\treturn children && children[0] || null;\n\t},\n\tget lastChild() {\n\t\tvar children = this.children;\n\t\treturn children && children[children.length - 1] || null;\n\t},\n\tget nodeType() {\n\t\treturn nodeTypes[this.type] || nodeTypes.element;\n\t}\n};\n\nvar domLvl1 = {\n\ttagName: \"name\",\n\tchildNodes: \"children\",\n\tparentNode: \"parent\",\n\tpreviousSibling: \"prev\",\n\tnextSibling: \"next\",\n\tnodeValue: \"data\"\n};\n\nvar nodeTypes = {\n\telement: 1,\n\ttext: 3,\n\tcdata: 4,\n\tcomment: 8\n};\n\nObject.keys(domLvl1).forEach(function(key) {\n\tvar shorthand = domLvl1[key];\n\tObject.defineProperty(NodePrototype, key, {\n\t\tget: function() {\n\t\t\treturn this[shorthand] || null;\n\t\t},\n\t\tset: function(val) {\n\t\t\tthis[shorthand] = val;\n\t\t\treturn val;\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domhandler/lib/node.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyObject.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nvar parser = require('./lib/parser');\nvar processingInstructions = require('./lib/processing-instructions');\nvar isValidNodeDefinitions = require('./lib/is-valid-node-definitions');\nvar processNodeDefinitions = require('./lib/process-node-definitions');\n\nmodule.exports = {\n  Parser: parser,\n  ProcessingInstructions: processingInstructions,\n  IsValidNodeDefinitions: isValidNodeDefinitions,\n  ProcessNodeDefinitions: processNodeDefinitions,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-to-react/index.js\n// module id = 21\n// module chunks = 0","'use strict';\nfunction alwaysValid() {\n  return true;\n}\n\nmodule.exports = {\n  alwaysValid: alwaysValid,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-to-react/lib/is-valid-node-definitions.js\n// module id = 22\n// module chunks = 0","'use strict';\nvar utils = require('./utils');\n\n// eslint-disable-next-line max-len\n// https://github.com/facebook/react/blob/15.0-stable/src/renderers/dom/shared/ReactDOMComponent.js#L457\nvar voidElementTags = [\n  'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param',\n  'source', 'track', 'wbr', 'menuitem', 'textarea',\n];\n\nfunction ProcessNodeDefinitions() {\n  function processDefaultNode(node, children, index) {\n    if (node.type === 'text') {\n      return node.data;\n    } else if (node.type === 'comment') {\n      // FIXME: The following doesn't work as the generated HTML results in\n      // \"&lt;!--  This is a comment  --&gt;\"\n      // return '<!-- ' + node.data + ' -->';\n      return false;\n    }\n\n    if (voidElementTags.indexOf(node.name) > -1) {\n      return utils.createElement(node, index);\n    } else {\n      return utils.createElement(node, index, node.data, children);\n    }\n  }\n\n  return {\n    processDefaultNode: processDefaultNode,\n  };\n}\n\nmodule.exports = ProcessNodeDefinitions;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-to-react/lib/process-node-definitions.js\n// module id = 23\n// module chunks = 0","'use strict';\nvar ShouldProcessNodeDefinitions = require('./should-process-node-definitions');\nvar ProcessNodeDefinitions = require('./process-node-definitions');\n\nfunction ProcessingInstructions() {\n  var processNodeDefinitions = new ProcessNodeDefinitions();\n\n  return {\n    defaultProcessingInstructions: [{\n      shouldProcessNode: ShouldProcessNodeDefinitions.shouldProcessEveryNode,\n      processNode: processNodeDefinitions.processDefaultNode,\n    },],\n  };\n};\n\nmodule.exports = ProcessingInstructions;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-to-react/lib/processing-instructions.js\n// module id = 24\n// module chunks = 0","'use strict';\nvar camelize = require('underscore.string.fp/camelize');\nvar toPairs = require('ramda/src/toPairs');\nvar reduce = require('ramda/src/reduce');\nvar React = require('react');\nvar camelCaseAttrMap = require('./camel-case-attribute-names');\n\nfunction createStyleJsonFromString(styleString) {\n  styleString = styleString || '';\n  var styles = styleString.split(/;(?!base64)/);\n  var singleStyle, key, value, jsonStyles = {};\n  for (var i = 0; i < styles.length; ++i) {\n    singleStyle = styles[i].split(':');\n    if (singleStyle.length > 2) {\n      singleStyle[1] = singleStyle.slice(1).join(':');\n    }\n    \n    key = camelize(singleStyle[0]);\n    value = singleStyle[1];\n    if (key.length > 0 && value.length > 0) {\n      jsonStyles[key] = value;\n    }\n  }\n  return jsonStyles;\n}\n\nfunction createElement(node, index, data, children) {\n  var elementProps = {\n    key: index,\n  };\n  if (node.attribs) {\n    elementProps = reduce(function(result, keyAndValue) {\n      var key = keyAndValue[0];\n      var value = keyAndValue[1];\n      key = camelCaseAttrMap[key.replace(/[-:]/, '')] || key;\n      if (key === 'style') {\n        value = createStyleJsonFromString(value);\n      } else if (key === 'class') {\n        key = 'className';\n      } else if (key === 'for') {\n        key = 'htmlFor';\n      }\n      if (typeof value === 'string') {\n        value = value;\n      }\n      result[key] = value || key;\n      return result;\n    }, elementProps, toPairs(node.attribs));\n  }\n\n  children = children || [];\n  var allChildren = data != null ? [data,].concat(children) : children;\n  return React.createElement.apply(\n    null, [node.name, elementProps,].concat(allChildren)\n  );\n}\n\nmodule.exports = {\n  createElement: createElement,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-to-react/lib/utils.js\n// module id = 25\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 27\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _curry2 = require('./internal/_curry2');\nvar _curryN = require('./internal/_curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/curryN.js\n// module id = 28\n// module chunks = 0","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isArray.js\n// module id = 29\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar _isArguments = require('./internal/_isArguments');\n\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nmodule.exports = (function() {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n  // Safari bug\n  var hasArgsEnumBug = (function() {\n    'use strict';\n    return arguments.propertyIsEnumerable('length');\n  }());\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n    _curry1(function keys(obj) {\n      return Object(obj) !== obj ? [] : Object.keys(obj);\n    }) :\n    _curry1(function keys(obj) {\n      if (Object(obj) !== obj) {\n        return [];\n      }\n      var prop, nIdx;\n      var ks = [];\n      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n      for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n          ks[ks.length] = prop;\n        }\n      }\n      if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n          prop = nonEnumerableProps[nIdx];\n          if (_has(prop, obj) && !contains(ks, prop)) {\n            ks[ks.length] = prop;\n          }\n          nIdx -= 1;\n        }\n      }\n      return ks;\n    });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/keys.js\n// module id = 30\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar lowPriorityWarning = require('./lowPriorityWarning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = {\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactBaseClasses.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactCurrentOwner.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nmodule.exports = REACT_ELEMENT_TYPE;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElementSymbol.js\n// module id = 33\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactNoopUpdateQueue.js\n// module id = 34\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    // $FlowFixMe https://github.com/facebook/flow/issues/285\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/canDefineProperty.js\n// module id = 35\n// module chunks = 0","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nconst CSL = require('citeproc');\nconst HtmlToReactParser = require('html-to-react').Parser;\nconst htmlToReactParser = new HtmlToReactParser();\n\nclass Bibliography extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bibliography: '',\n      sys: {\n        retrieveLocale: () => {\n          return this.props.locale;\n        },\n        retrieveItem: (id) => {\n          return this.props.items[id];\n        }\n      }\n    };\n\n\n    this.makeReactBibliography = (processor, items) => {\n      processor.updateItems(Object.keys(items));\n      const bibResults = processor.makeBibliography();\n      const biblioStr = bibResults[1].join('\\n');\n      return htmlToReactParser.parse(biblioStr);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.locale && this.props.style) {\n      const processor = new CSL.Engine(this.state.sys, this.props.style);\n      this.setState({\n        processor,\n        bibliography: this.props.items && this.makeReactBibliography(processor, this.props.items)\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.processor && this.props.locale && this.props.style) {\n      const processor = new CSL.Engine(this.state.sys, nextProps.style);\n      this.setState({\n        processor\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.processor && (this.props.items !== prevProps.items) || !this.state.bibliography) {\n      this.setState({\n        bibliography: this.makeReactBibliography(this.state.processor, this.props.items) // htmlToReactParser.parse(biblioStr)\n      });\n    }\n    // handle locale change\n    if (this.props.locale !== prevProps.locale) {\n      const sys = {\n        retrieveLocale: () => {\n          return this.props.locale;\n        },\n        retrieveItem: (id) => {\n          return this.props.items[id];\n        }\n      };\n      const processor = new CSL.Engine(sys, this.props.style);\n      this.setState({\n        processor,\n        bibliography: this.makeReactBibliography(processor, this.props.items),\n        sys\n      });\n    }\n    // handle style change\n    if (this.props.style !== prevProps.style) {\n      const processor = new CSL.Engine(this.state.sys, this.props.style);\n      this.setState({\n        processor,\n        bibliography: this.makeReactBibliography(processor, this.props.items),\n      });\n    }\n  }\n  render () {\n    const {\n      componentClass = 'Bibliography'\n    } = this.props;\n    const {\n      bibliography\n    } = this.state;\n\n    if (bibliography) {\n      return (<section className={componentClass}>{bibliography}</section>);\n    }\n    else {\n      return (<section className={componentClass + ' loading'}>{this.props.loadingContent || 'loading'}</section>);\n    }\n  }\n}\n\nBibliography.propTypes = {\n  /**\n   * The class to use for identifying the component\n   */\n  componentClass: PropTypes.string,\n  /**\n   * Serialized csl data to use for styling the bibliography\n   */\n  style: PropTypes.string,\n  /**\n   * Serialized csl data to use for localizing the terms\n   */\n  locale: PropTypes.string,\n  /**\n   * csl-json bibliographic items to represent - keys stand for items ids, values are js objects\n   */\n  items: PropTypes.object,\n};\n\nexport default Bibliography;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Bibliography.js","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nconst CSL = require('citeproc');\nconst HtmlToReactParser = require('html-to-react').Parser;\nconst htmlToReactParser = new HtmlToReactParser();\n\nclass ReferencesManager extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bibliography: undefined,\n      sys: {\n        retrieveLocale: () => {\n          return this.props.locale;\n        },\n        retrieveItem: (id) => {\n          return this.props.items[id];\n        }\n      }\n    };\n\n    this.makeReactBibliography = (processor, items) => {\n      processor.updateItems(Object.keys(items));\n      const bibResults = processor.makeBibliography();\n\n      const biblioStr = bibResults[1].join('\\n');\n      return htmlToReactParser.parse(biblioStr);\n    };\n\n    this.makeReactCitations = (processor, cits) => {\n      return cits.reduce((inputCitations, citationData) => {\n        const citations = {...inputCitations};\n        const citation = citationData[0];\n        const citationsPre = citationData[1];\n        const citationsPost = citationData[2];\n        let citationObjects = processor.processCitationCluster(citation, citationsPre, citationsPost);\n        citationObjects = citationObjects[1];\n        citationObjects.forEach(cit => {\n          const order = cit[0];\n          const html = cit[1];\n          const ThatComponent = htmlToReactParser.parse(cit[1]);\n          const citationId = cit[2];\n          citations[citationId] = {\n            order,\n            html,\n            Component: ThatComponent\n          };\n        });\n        return citations;\n      }, {});\n    };\n  }\n\n  getChildContext() {\n    return {\n      bibliography: this.state.bibliography,\n      citations: this.state.citations\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.locale && this.props.style) {\n      const processor = new CSL.Engine(this.state.sys, this.props.style);\n      this.setState({\n        processor,\n        citations: this.props.citations && this.props.citations.length ? this.makeReactCitations(processor, this.props.citations) : undefined,\n        bibliography: this.props.items && this.props.items.length ? this.makeReactBibliography(processor, this.props.items) : undefined,\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.processor && this.props.locale && this.props.style) {\n      const processor = new CSL.Engine(this.state.sys, nextProps.style);\n      this.setState({\n        processor\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.items || !Object.keys(this.props.items).length) {\n      return;\n    }\n    if (this.state.processor &&\n      (this.props.items !== prevProps.items) ||\n      (this.props.citations !== prevProps.citations) ||\n      !this.state.bibliography) {\n      this.setState({\n        citations: this.props.citations && this.makeReactCitations(this.state.processor, this.props.citations),\n        bibliography: this.makeReactBibliography(this.state.processor, this.props.items),\n      });\n    }\n    // handle locale change\n    if (this.props.locale !== prevProps.locale) {\n      const sys = {\n        retrieveLocale: () => {\n          return this.props.locale;\n        },\n        retrieveItem: (id) => {\n          return this.props.items[id];\n        }\n      };\n      const processor = new CSL.Engine(sys, this.props.style);\n      this.setState({\n        processor,\n        citations: this.props.citations && this.makeReactCitations(processor, this.props.citations),\n        bibliography: this.makeReactBibliography(processor, this.props.items),\n        sys\n      });\n    }\n    // handle style change\n    if (this.props.style !== prevProps.style) {\n      const processor = new CSL.Engine(this.state.sys, this.props.style);\n      this.setState({\n        processor,\n        citations: this.props.citations && this.makeReactCitations(processor, this.props.citations),\n        bibliography: this.makeReactBibliography(processor, this.props.items),\n      });\n    }\n  }\n\n  render () {\n    const {\n      componentClass,\n      children\n    } = this.props;\n\n    return (<section className={componentClass}>{children}</section>);\n\n  }\n}\n\nReferencesManager.propTypes = {\n  /**\n   * The class to use for identifying the component\n   */\n  componentClass: PropTypes.string,\n  /**\n   * Serialized csl data to use for styling the bibliography\n   */\n  style: PropTypes.string,\n  /**\n   * Serialized csl data to use for localizing the terms\n   */\n  locale: PropTypes.string,\n  /**\n   * csl-json bibliographic items to represent - keys stand for items ids, values are js objects\n   */\n  items: PropTypes.object,\n  /**\n   * array of citation arrays to use for building citations data\n   * Each citation array represents the citation content and context as follows :\n   * citation[0] : object containing the citations (with properties citationID (string), citationItems (array), and properties (object))\n   * citation[1] : array of citations preceding the given citation ([0]: citationId, [1]: citation index)\n   * citation[2] : array of citations following the given citation ([0]: citationId, [1]: citation index)\n   */\n  citations: PropTypes.array,\n};\n\nReferencesManager.childContextTypes = {\n  bibliography: PropTypes.array,\n  citations: PropTypes.object\n};\n\nexport default ReferencesManager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ReferencesManager.js","import bibliography from './components/Bibliography';\nimport referencesManager from './components/ReferencesManager';\n\nexport const Bibliography = bibliography;\nexport const ReferencesManager = referencesManager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","var merge = require('./lib/merge'),\n    countDefinedItems = require('./lib/countDefinedItems'),\n    slice = Array.prototype.slice,\n    __;\n\n\nfunction curry(fn, length, curryArgs) {\n  return function() {\n    var args = slice.call(arguments),\n      concatArgs = curryArgs.concat(args),\n      mergedArgs = [];\n\n    if (length <= countDefinedItems(concatArgs)) {\n      mergedArgs = merge(args, curryArgs);\n      return fn.apply(null, mergedArgs);\n    } else {\n      if (length >= concatArgs.length) {\n        return curry(fn, length, concatArgs);\n      } else {\n        return curry(fn, length, merge(args, curryArgs));\n      }\n    }\n  };\n}\n\nmodule.exports = function(fn) {\n  var args = slice.call(arguments, 1);\n\n  return curry(fn, fn.length, args);\n};\n\nmodule.exports.n = function(fn, length) {\n  var args = slice.call(arguments, 2);\n\n  return curry(fn, length, args);\n};\n\nmodule.exports.__ = __;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chickencurry/index.js\n// module id = 39\n// module chunks = 0","var forEach = require('./forEach');\n\nmodule.exports = function(args) {\n  var count = 0;\n\n  forEach(args, function(key, item) {\n    if (typeof item !== 'undefined') {\n      count = count + 1;\n    }\n  });\n\n  return count;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chickencurry/lib/countDefinedItems.js\n// module id = 40\n// module chunks = 0","var forEach = require('./forEach');\n\nmodule.exports = function map(arr, fn) {\n  var newArr = [];\n\n  forEach(arr, function(key, item) {\n    newArr.push(fn(key, item));\n  });\n\n  return newArr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chickencurry/lib/map.js\n// module id = 41\n// module chunks = 0","var map = require('./map');\n\nmodule.exports = function merge(args, curryArgs) {\n  var mergedArgs = [];\n\n  mergedArgs = map(curryArgs, function(key, item) {\n    if (typeof item === 'undefined') {\n      return args.shift();\n    } else {\n      return item;\n    }\n  });\n\n  return mergedArgs.concat(args);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chickencurry/lib/merge.js\n// module id = 42\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar _invariant = require('fbjs/lib/invariant');\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isInherited = name in Constructor;\n      _invariant(\n        !isInherited,\n        'ReactClass: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be ' +\n          'due to a mixin.',\n        name\n      );\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/create-react-class/factory.js\n// module id = 43\n// module chunks = 0","//Types of elements found in the DOM\nmodule.exports = {\n\tText: \"text\", //Text\n\tDirective: \"directive\", //<? ... ?>\n\tComment: \"comment\", //<!-- ... -->\n\tScript: \"script\", //<script> tags\n\tStyle: \"style\", //<style> tags\n\tTag: \"tag\", //Any tag\n\tCDATA: \"cdata\", //<![CDATA[ ... ]]>\n\tDoctype: \"doctype\",\n\n\tisTag: function(elem){\n\t\treturn elem.type === \"tag\" || elem.type === \"script\" || elem.type === \"style\";\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domelementtype/index.js\n// module id = 44\n// module chunks = 0","var ElementType = require(\"domelementtype\");\n\nvar re_whitespace = /\\s+/g;\nvar NodePrototype = require(\"./lib/node\");\nvar ElementPrototype = require(\"./lib/element\");\n\nfunction DomHandler(callback, options, elementCB){\n\tif(typeof callback === \"object\"){\n\t\telementCB = options;\n\t\toptions = callback;\n\t\tcallback = null;\n\t} else if(typeof options === \"function\"){\n\t\telementCB = options;\n\t\toptions = defaultOpts;\n\t}\n\tthis._callback = callback;\n\tthis._options = options || defaultOpts;\n\tthis._elementCB = elementCB;\n\tthis.dom = [];\n\tthis._done = false;\n\tthis._tagStack = [];\n\tthis._parser = this._parser || null;\n}\n\n//default options\nvar defaultOpts = {\n\tnormalizeWhitespace: false, //Replace all whitespace with single spaces\n\twithStartIndices: false, //Add startIndex properties to nodes\n\twithEndIndices: false, //Add endIndex properties to nodes\n};\n\nDomHandler.prototype.onparserinit = function(parser){\n\tthis._parser = parser;\n};\n\n//Resets the handler back to starting state\nDomHandler.prototype.onreset = function(){\n\tDomHandler.call(this, this._callback, this._options, this._elementCB);\n};\n\n//Signals the handler that parsing is done\nDomHandler.prototype.onend = function(){\n\tif(this._done) return;\n\tthis._done = true;\n\tthis._parser = null;\n\tthis._handleCallback(null);\n};\n\nDomHandler.prototype._handleCallback =\nDomHandler.prototype.onerror = function(error){\n\tif(typeof this._callback === \"function\"){\n\t\tthis._callback(error, this.dom);\n\t} else {\n\t\tif(error) throw error;\n\t}\n};\n\nDomHandler.prototype.onclosetag = function(){\n\t//if(this._tagStack.pop().name !== name) this._handleCallback(Error(\"Tagname didn't match!\"));\n\t\n\tvar elem = this._tagStack.pop();\n\n\tif(this._options.withEndIndices){\n\t\telem.endIndex = this._parser.endIndex;\n\t}\n\n\tif(this._elementCB) this._elementCB(elem);\n};\n\nDomHandler.prototype._createDomElement = function(properties){\n\tif (!this._options.withDomLvl1) return properties;\n\n\tvar element;\n\tif (properties.type === \"tag\") {\n\t\telement = Object.create(ElementPrototype);\n\t} else {\n\t\telement = Object.create(NodePrototype);\n\t}\n\n\tfor (var key in properties) {\n\t\tif (properties.hasOwnProperty(key)) {\n\t\t\telement[key] = properties[key];\n\t\t}\n\t}\n\n\treturn element;\n};\n\nDomHandler.prototype._addDomElement = function(element){\n\tvar parent = this._tagStack[this._tagStack.length - 1];\n\tvar siblings = parent ? parent.children : this.dom;\n\tvar previousSibling = siblings[siblings.length - 1];\n\n\telement.next = null;\n\n\tif(this._options.withStartIndices){\n\t\telement.startIndex = this._parser.startIndex;\n\t}\n\tif(this._options.withEndIndices){\n\t\telement.endIndex = this._parser.endIndex;\n\t}\n\n\tif(previousSibling){\n\t\telement.prev = previousSibling;\n\t\tpreviousSibling.next = element;\n\t} else {\n\t\telement.prev = null;\n\t}\n\n\tsiblings.push(element);\n\telement.parent = parent || null;\n};\n\nDomHandler.prototype.onopentag = function(name, attribs){\n\tvar properties = {\n\t\ttype: name === \"script\" ? ElementType.Script : name === \"style\" ? ElementType.Style : ElementType.Tag,\n\t\tname: name,\n\t\tattribs: attribs,\n\t\tchildren: []\n\t};\n\n\tvar element = this._createDomElement(properties);\n\n\tthis._addDomElement(element);\n\n\tthis._tagStack.push(element);\n};\n\nDomHandler.prototype.ontext = function(data){\n\t//the ignoreWhitespace is officially dropped, but for now,\n\t//it's an alias for normalizeWhitespace\n\tvar normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;\n\n\tvar lastTag;\n\n\tif(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){\n\t\tif(normalize){\n\t\t\tlastTag.data = (lastTag.data + data).replace(re_whitespace, \" \");\n\t\t} else {\n\t\t\tlastTag.data += data;\n\t\t}\n\t} else {\n\t\tif(\n\t\t\tthis._tagStack.length &&\n\t\t\t(lastTag = this._tagStack[this._tagStack.length - 1]) &&\n\t\t\t(lastTag = lastTag.children[lastTag.children.length - 1]) &&\n\t\t\tlastTag.type === ElementType.Text\n\t\t){\n\t\t\tif(normalize){\n\t\t\t\tlastTag.data = (lastTag.data + data).replace(re_whitespace, \" \");\n\t\t\t} else {\n\t\t\t\tlastTag.data += data;\n\t\t\t}\n\t\t} else {\n\t\t\tif(normalize){\n\t\t\t\tdata = data.replace(re_whitespace, \" \");\n\t\t\t}\n\n\t\t\tvar element = this._createDomElement({\n\t\t\t\tdata: data,\n\t\t\t\ttype: ElementType.Text\n\t\t\t});\n\n\t\t\tthis._addDomElement(element);\n\t\t}\n\t}\n};\n\nDomHandler.prototype.oncomment = function(data){\n\tvar lastTag = this._tagStack[this._tagStack.length - 1];\n\n\tif(lastTag && lastTag.type === ElementType.Comment){\n\t\tlastTag.data += data;\n\t\treturn;\n\t}\n\n\tvar properties = {\n\t\tdata: data,\n\t\ttype: ElementType.Comment\n\t};\n\n\tvar element = this._createDomElement(properties);\n\n\tthis._addDomElement(element);\n\tthis._tagStack.push(element);\n};\n\nDomHandler.prototype.oncdatastart = function(){\n\tvar properties = {\n\t\tchildren: [{\n\t\t\tdata: \"\",\n\t\t\ttype: ElementType.Text\n\t\t}],\n\t\ttype: ElementType.CDATA\n\t};\n\n\tvar element = this._createDomElement(properties);\n\n\tthis._addDomElement(element);\n\tthis._tagStack.push(element);\n};\n\nDomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){\n\tthis._tagStack.pop();\n};\n\nDomHandler.prototype.onprocessinginstruction = function(name, data){\n\tvar element = this._createDomElement({\n\t\tname: name,\n\t\tdata: data,\n\t\ttype: ElementType.Directive\n\t});\n\n\tthis._addDomElement(element);\n};\n\nmodule.exports = DomHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domhandler/index.js\n// module id = 45\n// module chunks = 0","// DOM-Level-1-compliant structure\nvar NodePrototype = require('./node');\nvar ElementPrototype = module.exports = Object.create(NodePrototype);\n\nvar domLvl1 = {\n\ttagName: \"name\"\n};\n\nObject.keys(domLvl1).forEach(function(key) {\n\tvar shorthand = domLvl1[key];\n\tObject.defineProperty(ElementPrototype, key, {\n\t\tget: function() {\n\t\t\treturn this[shorthand] || null;\n\t\t},\n\t\tset: function(val) {\n\t\t\tthis[shorthand] = val;\n\t\t\treturn val;\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domhandler/lib/element.js\n// module id = 46\n// module chunks = 0","var decodeMap = require(\"../maps/decode.json\");\n\nmodule.exports = decodeCodePoint;\n\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint){\n\n\tif((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){\n\t\treturn \"\\uFFFD\";\n\t}\n\n\tif(codePoint in decodeMap){\n\t\tcodePoint = decodeMap[codePoint];\n\t}\n\n\tvar output = \"\";\n\n\tif(codePoint > 0xFFFF){\n\t\tcodePoint -= 0x10000;\n\t\toutput += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t}\n\n\toutput += String.fromCharCode(codePoint);\n\treturn output;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/entities/lib/decode_codepoint.js\n// module id = 47\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 48\n// module chunks = 0","// These are all sourced from https://facebook.github.io/react/docs/tags-and-attributes.html -\n// all attributes regardless of whether they have a different case to their HTML equivalents are\n// listed to reduce the chance of human error and make it easier to just copy-paste the new list if\n// it changes.\n'use strict';\nvar HTML_ATTRIBUTES = [\n  'accept', 'acceptCharset', 'accessKey', 'action', 'allowFullScreen', 'allowTransparency',\n  'alt', 'async', 'autoComplete', 'autoFocus', 'autoPlay', 'capture', 'cellPadding',\n  'cellSpacing', 'challenge', 'charSet', 'checked', 'cite', 'classID', 'className',\n  'colSpan', 'cols', 'content', 'contentEditable', 'contextMenu', 'controls', 'coords',\n  'crossOrigin', 'data', 'dateTime', 'default', 'defer', 'dir', 'disabled', 'download',\n  'draggable', 'encType', 'form', 'formAction', 'formEncType', 'formMethod', 'formNoValidate',\n  'formTarget', 'frameBorder', 'headers', 'height', 'hidden', 'high', 'href', 'hrefLang',\n  'htmlFor', 'httpEquiv', 'icon', 'id', 'inputMode', 'integrity', 'is', 'keyParams', 'keyType',\n  'kind', 'label', 'lang', 'list', 'loop', 'low', 'manifest', 'marginHeight', 'marginWidth',\n  'max', 'maxLength', 'media', 'mediaGroup', 'method', 'min', 'minLength', 'multiple', 'muted',\n  'name', 'noValidate', 'nonce', 'open', 'optimum', 'pattern', 'placeholder', 'poster',\n  'preload', 'profile', 'radioGroup', 'readOnly', 'rel', 'required', 'reversed', 'role',\n  'rowSpan', 'rows', 'sandbox', 'scope', 'scoped', 'scrolling', 'seamless', 'selected',\n  'shape', 'size', 'sizes', 'span', 'spellCheck', 'src', 'srcDoc', 'srcLang', 'srcSet', 'start',\n  'step', 'style', 'summary', 'tabIndex', 'target', 'title', 'type', 'useMap', 'value', 'width',\n  'wmode', 'wrap',\n];\n\nvar NON_STANDARD_ATTRIBUTES = [\n  'autoCapitalize', 'autoCorrect', 'color', 'itemProp', 'itemScope', 'itemType', 'itemRef',\n  'itemID', 'security', 'unselectable', 'results', 'autoSave',\n];\n\nvar SVG_ATTRIBUTES = [\n  'accentHeight', 'accumulate', 'additive', 'alignmentBaseline', 'allowReorder', 'alphabetic',\n  'amplitude', 'arabicForm', 'ascent', 'attributeName', 'attributeType', 'autoReverse', 'azimuth',\n  'baseFrequency', 'baseProfile', 'baselineShift', 'bbox', 'begin', 'bias', 'by', 'calcMode',\n  'capHeight', 'clip', 'clipPath', 'clipPathUnits', 'clipRule', 'colorInterpolation',\n  'colorInterpolationFilters', 'colorProfile', 'colorRendering', 'contentScriptType',\n  'contentStyleType', 'cursor', 'cx', 'cy', 'd', 'decelerate', 'descent', 'diffuseConstant',\n  'direction', 'display', 'divisor', 'dominantBaseline', 'dur', 'dx', 'dy', 'edgeMode',\n  'elevation', 'enableBackground', 'end', 'exponent', 'externalResourcesRequired', 'fill',\n  'fillOpacity', 'fillRule', 'filter', 'filterRes', 'filterUnits', 'floodColor', 'floodOpacity',\n  'focusable', 'fontFamily', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle',\n  'fontVariant', 'fontWeight', 'format', 'from', 'fx', 'fy', 'g1', 'g2', 'glyphName',\n  'glyphOrientationHorizontal', 'glyphOrientationVertical', 'glyphRef',\n  'gradientTransform', 'gradientUnits', 'hanging', 'horizAdvX', 'horizOriginX', 'ideographic',\n  'imageRendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kernelMatrix',\n  'kernelUnitLength', 'kerning', 'keyPoints', 'keySplines', 'keyTimes', 'lengthAdjust',\n  'letterSpacing', 'lightingColor', 'limitingConeAngle', 'local', 'markerEnd', 'markerHeight',\n  'markerMid', 'markerStart', 'markerUnits', 'markerWidth', 'mask', 'maskContentUnits',\n  'maskUnits', 'mathematical', 'mode', 'numOctaves', 'offset', 'opacity', 'operator', 'order',\n  'orient', 'orientation', 'origin', 'overflow', 'overlinePosition', 'overlineThickness',\n  'paintOrder', 'panose1', 'pathLength', 'patternContentUnits', 'patternTransform',\n  'patternUnits', 'pointerEvents', 'points', 'pointsAtX', 'pointsAtY', 'pointsAtZ',\n  'preserveAlpha', 'preserveAspectRatio', 'primitiveUnits', 'r', 'radius', 'refX', 'refY',\n  'renderingIntent', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures',\n  'restart', 'result', 'rotate', 'rx', 'ry', 'scale', 'seed', 'shapeRendering', 'slope',\n  'spacing', 'specularConstant', 'specularExponent', 'speed', 'spreadMethod', 'startOffset',\n  'stdDeviation', 'stemh', 'stemv', 'stitchTiles', 'stopColor', 'stopOpacity',\n  'strikethroughPosition', 'strikethroughThickness', 'string', 'stroke', 'strokeDasharray',\n  'strokeDashoffset', 'strokeLinecap', 'strokeLinejoin', 'strokeMiterlimit', 'strokeOpacity',\n  'strokeWidth', 'surfaceScale', 'systemLanguage', 'tableValues', 'targetX', 'targetY',\n  'textAnchor', 'textDecoration', 'textLength', 'textRendering', 'to', 'transform', 'u1',\n  'u2', 'underlinePosition', 'underlineThickness', 'unicode', 'unicodeBidi', 'unicodeRange',\n  'unitsPerEm', 'vAlphabetic', 'vHanging', 'vIdeographic', 'vMathematical', 'values',\n  'vectorEffect', 'version', 'vertAdvY', 'vertOriginX', 'vertOriginY', 'viewBox',\n  'viewTarget', 'visibility', 'widths', 'wordSpacing', 'writingMode', 'x', 'x1', 'x2',\n  'xChannelSelector', 'xHeight', 'xlinkActuate', 'xlinkArcrole', 'xlinkHref', 'xlinkRole',\n  'xlinkShow', 'xlinkTitle', 'xlinkType', 'xmlns', 'xmlnsXlink', 'xmlBase', 'xmlLang',\n  'xmlSpace', 'y', 'y1', 'y2', 'yChannelSelector', 'z', 'zoomAndPan',\n];\n\nvar camelCaseMap = HTML_ATTRIBUTES\n  .concat(NON_STANDARD_ATTRIBUTES)\n  .concat(SVG_ATTRIBUTES)\n  .reduce(function (soFar, attr) {\n    var lower = attr.toLowerCase();\n    if (lower !== attr) {\n      soFar[lower] = attr;\n    }\n    return soFar;\n  }, {});\n\nmodule.exports = camelCaseMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-to-react/lib/camel-case-attribute-names.js\n// module id = 49\n// module chunks = 0","'use strict';\nvar find = require('ramda/src/find');\nvar reject = require('ramda/src/reject');\nvar addIndex = require('ramda/src/addIndex');\nvar map = require('ramda/src/map');\nvar HtmlParser = require('htmlparser2/lib/Parser');\nvar DomHandler = require('domhandler');\nvar ProcessingInstructions = require('./processing-instructions');\nvar IsValidNodeDefinitions = require('./is-valid-node-definitions');\nvar utils = require('./utils');\n\nfunction Html2ReactParser(options) {\n  function parseHtmlToTree(html) {\n    options = options || {};\n    options.decodeEntities = true;\n    var handler = new DomHandler();\n    var parser = new HtmlParser(handler, options);\n    parser.parseComplete(html);\n    return handler.dom;\n  };\n\n  function traverseDom(node, isValidNode, processingInstructions, index) {\n    if (isValidNode(node)) {\n      var processingInstruction = find(function (processingInstruction) {\n        return processingInstruction.shouldProcessNode(node);\n      }, processingInstructions);\n      if (processingInstruction != null) {\n        var children = reject(function (x) {return x == null || x === false;},\n          addIndex(map)(function (child, i) {\n            return traverseDom(child, isValidNode, processingInstructions, i);\n          }, node.children || []));\n\n        if (processingInstruction.replaceChildren) {\n          return utils.createElement(node, index, node.data, [\n            processingInstruction.processNode(node, children, index),\n          ]);\n        }\n\n        return processingInstruction.processNode(node, children, index);\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  function parseWithInstructions(html, isValidNode, processingInstructions) {\n    var domTree = parseHtmlToTree(html);\n\n    var list = domTree.map(function (domTreeItem, index) {\n      return traverseDom(domTreeItem, isValidNode, processingInstructions, index);\n    });\n    return list.length <= 1 ? list[0] : list;\n  };\n\n  function parse(html) {\n    var processingInstructions = new ProcessingInstructions();\n    return parseWithInstructions(html,\n      IsValidNodeDefinitions.alwaysValid,\n      processingInstructions.defaultProcessingInstructions);\n  };\n\n  return {\n    parse: parse,\n    parseWithInstructions: parseWithInstructions,\n  };\n};\n\nmodule.exports = Html2ReactParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-to-react/lib/parser.js\n// module id = 50\n// module chunks = 0","'use strict';\nfunction shouldProcessEveryNode(node) {\n  return true;\n}\n\nmodule.exports = {\n  shouldProcessEveryNode: shouldProcessEveryNode,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-to-react/lib/should-process-node-definitions.js\n// module id = 51\n// module chunks = 0","var Tokenizer = require(\"./Tokenizer.js\");\n\n/*\n\tOptions:\n\n\txmlMode: Disables the special behavior for script/style tags (false by default)\n\tlowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)\n\tlowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)\n*/\n\n/*\n\tCallbacks:\n\n\toncdataend,\n\toncdatastart,\n\tonclosetag,\n\toncomment,\n\toncommentend,\n\tonerror,\n\tonopentag,\n\tonprocessinginstruction,\n\tonreset,\n\tontext\n*/\n\nvar formTags = {\n\tinput: true,\n\toption: true,\n\toptgroup: true,\n\tselect: true,\n\tbutton: true,\n\tdatalist: true,\n\ttextarea: true\n};\n\nvar openImpliesClose = {\n\ttr      : { tr:true, th:true, td:true },\n\tth      : { th:true },\n\ttd      : { thead:true, th:true, td:true },\n\tbody    : { head:true, link:true, script:true },\n\tli      : { li:true },\n\tp       : { p:true },\n\th1      : { p:true },\n\th2      : { p:true },\n\th3      : { p:true },\n\th4      : { p:true },\n\th5      : { p:true },\n\th6      : { p:true },\n\tselect  : formTags,\n\tinput   : formTags,\n\toutput  : formTags,\n\tbutton  : formTags,\n\tdatalist: formTags,\n\ttextarea: formTags,\n\toption  : { option:true },\n\toptgroup: { optgroup:true }\n};\n\nvar voidElements = {\n\t__proto__: null,\n\tarea: true,\n\tbase: true,\n\tbasefont: true,\n\tbr: true,\n\tcol: true,\n\tcommand: true,\n\tembed: true,\n\tframe: true,\n\thr: true,\n\timg: true,\n\tinput: true,\n\tisindex: true,\n\tkeygen: true,\n\tlink: true,\n\tmeta: true,\n\tparam: true,\n\tsource: true,\n\ttrack: true,\n\twbr: true,\n\n\t//common self closing svg elements\n\tpath: true,\n\tcircle: true,\n\tellipse: true,\n\tline: true,\n\trect: true,\n\tuse: true,\n\tstop: true,\n\tpolyline: true,\n\tpolygon: true\n};\n\nvar re_nameEnd = /\\s|\\//;\n\nfunction Parser(cbs, options){\n\tthis._options = options || {};\n\tthis._cbs = cbs || {};\n\n\tthis._tagname = \"\";\n\tthis._attribname = \"\";\n\tthis._attribvalue = \"\";\n\tthis._attribs = null;\n\tthis._stack = [];\n\n\tthis.startIndex = 0;\n\tthis.endIndex = null;\n\n\tthis._lowerCaseTagNames = \"lowerCaseTags\" in this._options ?\n\t\t\t\t\t\t\t\t\t!!this._options.lowerCaseTags :\n\t\t\t\t\t\t\t\t\t!this._options.xmlMode;\n\tthis._lowerCaseAttributeNames = \"lowerCaseAttributeNames\" in this._options ?\n\t\t\t\t\t\t\t\t\t!!this._options.lowerCaseAttributeNames :\n\t\t\t\t\t\t\t\t\t!this._options.xmlMode;\n\n\tif(this._options.Tokenizer) {\n\t\tTokenizer = this._options.Tokenizer;\n\t}\n\tthis._tokenizer = new Tokenizer(this._options, this);\n\n\tif(this._cbs.onparserinit) this._cbs.onparserinit(this);\n}\n\nrequire(\"inherits\")(Parser, require(\"events\").EventEmitter);\n\nParser.prototype._updatePosition = function(initialOffset){\n\tif(this.endIndex === null){\n\t\tif(this._tokenizer._sectionStart <= initialOffset){\n\t\t\tthis.startIndex = 0;\n\t\t} else {\n\t\t\tthis.startIndex = this._tokenizer._sectionStart - initialOffset;\n\t\t}\n\t}\n\telse this.startIndex = this.endIndex + 1;\n\tthis.endIndex = this._tokenizer.getAbsoluteIndex();\n};\n\n//Tokenizer event handlers\nParser.prototype.ontext = function(data){\n\tthis._updatePosition(1);\n\tthis.endIndex--;\n\n\tif(this._cbs.ontext) this._cbs.ontext(data);\n};\n\nParser.prototype.onopentagname = function(name){\n\tif(this._lowerCaseTagNames){\n\t\tname = name.toLowerCase();\n\t}\n\n\tthis._tagname = name;\n\n\tif(!this._options.xmlMode && name in openImpliesClose) {\n\t\tfor(\n\t\t\tvar el;\n\t\t\t(el = this._stack[this._stack.length - 1]) in openImpliesClose[name];\n\t\t\tthis.onclosetag(el)\n\t\t);\n\t}\n\n\tif(this._options.xmlMode || !(name in voidElements)){\n\t\tthis._stack.push(name);\n\t}\n\n\tif(this._cbs.onopentagname) this._cbs.onopentagname(name);\n\tif(this._cbs.onopentag) this._attribs = {};\n};\n\nParser.prototype.onopentagend = function(){\n\tthis._updatePosition(1);\n\n\tif(this._attribs){\n\t\tif(this._cbs.onopentag) this._cbs.onopentag(this._tagname, this._attribs);\n\t\tthis._attribs = null;\n\t}\n\n\tif(!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements){\n\t\tthis._cbs.onclosetag(this._tagname);\n\t}\n\n\tthis._tagname = \"\";\n};\n\nParser.prototype.onclosetag = function(name){\n\tthis._updatePosition(1);\n\n\tif(this._lowerCaseTagNames){\n\t\tname = name.toLowerCase();\n\t}\n\n\tif(this._stack.length && (!(name in voidElements) || this._options.xmlMode)){\n\t\tvar pos = this._stack.lastIndexOf(name);\n\t\tif(pos !== -1){\n\t\t\tif(this._cbs.onclosetag){\n\t\t\t\tpos = this._stack.length - pos;\n\t\t\t\twhile(pos--) this._cbs.onclosetag(this._stack.pop());\n\t\t\t}\n\t\t\telse this._stack.length = pos;\n\t\t} else if(name === \"p\" && !this._options.xmlMode){\n\t\t\tthis.onopentagname(name);\n\t\t\tthis._closeCurrentTag();\n\t\t}\n\t} else if(!this._options.xmlMode && (name === \"br\" || name === \"p\")){\n\t\tthis.onopentagname(name);\n\t\tthis._closeCurrentTag();\n\t}\n};\n\nParser.prototype.onselfclosingtag = function(){\n\tif(this._options.xmlMode || this._options.recognizeSelfClosing){\n\t\tthis._closeCurrentTag();\n\t} else {\n\t\tthis.onopentagend();\n\t}\n};\n\nParser.prototype._closeCurrentTag = function(){\n\tvar name = this._tagname;\n\n\tthis.onopentagend();\n\n\t//self-closing tags will be on the top of the stack\n\t//(cheaper check than in onclosetag)\n\tif(this._stack[this._stack.length - 1] === name){\n\t\tif(this._cbs.onclosetag){\n\t\t\tthis._cbs.onclosetag(name);\n\t\t}\n\t\tthis._stack.pop();\n\t}\n};\n\nParser.prototype.onattribname = function(name){\n\tif(this._lowerCaseAttributeNames){\n\t\tname = name.toLowerCase();\n\t}\n\tthis._attribname = name;\n};\n\nParser.prototype.onattribdata = function(value){\n\tthis._attribvalue += value;\n};\n\nParser.prototype.onattribend = function(){\n\tif(this._cbs.onattribute) this._cbs.onattribute(this._attribname, this._attribvalue);\n\tif(\n\t\tthis._attribs &&\n\t\t!Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)\n\t){\n\t\tthis._attribs[this._attribname] = this._attribvalue;\n\t}\n\tthis._attribname = \"\";\n\tthis._attribvalue = \"\";\n};\n\nParser.prototype._getInstructionName = function(value){\n\tvar idx = value.search(re_nameEnd),\n\t    name = idx < 0 ? value : value.substr(0, idx);\n\n\tif(this._lowerCaseTagNames){\n\t\tname = name.toLowerCase();\n\t}\n\n\treturn name;\n};\n\nParser.prototype.ondeclaration = function(value){\n\tif(this._cbs.onprocessinginstruction){\n\t\tvar name = this._getInstructionName(value);\n\t\tthis._cbs.onprocessinginstruction(\"!\" + name, \"!\" + value);\n\t}\n};\n\nParser.prototype.onprocessinginstruction = function(value){\n\tif(this._cbs.onprocessinginstruction){\n\t\tvar name = this._getInstructionName(value);\n\t\tthis._cbs.onprocessinginstruction(\"?\" + name, \"?\" + value);\n\t}\n};\n\nParser.prototype.oncomment = function(value){\n\tthis._updatePosition(4);\n\n\tif(this._cbs.oncomment) this._cbs.oncomment(value);\n\tif(this._cbs.oncommentend) this._cbs.oncommentend();\n};\n\nParser.prototype.oncdata = function(value){\n\tthis._updatePosition(1);\n\n\tif(this._options.xmlMode || this._options.recognizeCDATA){\n\t\tif(this._cbs.oncdatastart) this._cbs.oncdatastart();\n\t\tif(this._cbs.ontext) this._cbs.ontext(value);\n\t\tif(this._cbs.oncdataend) this._cbs.oncdataend();\n\t} else {\n\t\tthis.oncomment(\"[CDATA[\" + value + \"]]\");\n\t}\n};\n\nParser.prototype.onerror = function(err){\n\tif(this._cbs.onerror) this._cbs.onerror(err);\n};\n\nParser.prototype.onend = function(){\n\tif(this._cbs.onclosetag){\n\t\tfor(\n\t\t\tvar i = this._stack.length;\n\t\t\ti > 0;\n\t\t\tthis._cbs.onclosetag(this._stack[--i])\n\t\t);\n\t}\n\tif(this._cbs.onend) this._cbs.onend();\n};\n\n\n//Resets the parser to a blank state, ready to parse a new HTML document\nParser.prototype.reset = function(){\n\tif(this._cbs.onreset) this._cbs.onreset();\n\tthis._tokenizer.reset();\n\n\tthis._tagname = \"\";\n\tthis._attribname = \"\";\n\tthis._attribs = null;\n\tthis._stack = [];\n\n\tif(this._cbs.onparserinit) this._cbs.onparserinit(this);\n};\n\n//Parses a complete HTML document and pushes it to the handler\nParser.prototype.parseComplete = function(data){\n\tthis.reset();\n\tthis.end(data);\n};\n\nParser.prototype.write = function(chunk){\n\tthis._tokenizer.write(chunk);\n};\n\nParser.prototype.end = function(chunk){\n\tthis._tokenizer.end(chunk);\n};\n\nParser.prototype.pause = function(){\n\tthis._tokenizer.pause();\n};\n\nParser.prototype.resume = function(){\n\tthis._tokenizer.resume();\n};\n\n//alias for backwards compat\nParser.prototype.parseChunk = Parser.prototype.write;\nParser.prototype.done = Parser.prototype.end;\n\nmodule.exports = Parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/htmlparser2/lib/Parser.js\n// module id = 52\n// module chunks = 0","module.exports = Tokenizer;\n\nvar decodeCodePoint = require(\"entities/lib/decode_codepoint.js\"),\n    entityMap = require(\"entities/maps/entities.json\"),\n    legacyMap = require(\"entities/maps/legacy.json\"),\n    xmlMap    = require(\"entities/maps/xml.json\"),\n\n    i = 0,\n\n    TEXT                      = i++,\n    BEFORE_TAG_NAME           = i++, //after <\n    IN_TAG_NAME               = i++,\n    IN_SELF_CLOSING_TAG       = i++,\n    BEFORE_CLOSING_TAG_NAME   = i++,\n    IN_CLOSING_TAG_NAME       = i++,\n    AFTER_CLOSING_TAG_NAME    = i++,\n\n    //attributes\n    BEFORE_ATTRIBUTE_NAME     = i++,\n    IN_ATTRIBUTE_NAME         = i++,\n    AFTER_ATTRIBUTE_NAME      = i++,\n    BEFORE_ATTRIBUTE_VALUE    = i++,\n    IN_ATTRIBUTE_VALUE_DQ     = i++, // \"\n    IN_ATTRIBUTE_VALUE_SQ     = i++, // '\n    IN_ATTRIBUTE_VALUE_NQ     = i++,\n\n    //declarations\n    BEFORE_DECLARATION        = i++, // !\n    IN_DECLARATION            = i++,\n\n    //processing instructions\n    IN_PROCESSING_INSTRUCTION = i++, // ?\n\n    //comments\n    BEFORE_COMMENT            = i++,\n    IN_COMMENT                = i++,\n    AFTER_COMMENT_1           = i++,\n    AFTER_COMMENT_2           = i++,\n\n    //cdata\n    BEFORE_CDATA_1            = i++, // [\n    BEFORE_CDATA_2            = i++, // C\n    BEFORE_CDATA_3            = i++, // D\n    BEFORE_CDATA_4            = i++, // A\n    BEFORE_CDATA_5            = i++, // T\n    BEFORE_CDATA_6            = i++, // A\n    IN_CDATA                  = i++, // [\n    AFTER_CDATA_1             = i++, // ]\n    AFTER_CDATA_2             = i++, // ]\n\n    //special tags\n    BEFORE_SPECIAL            = i++, //S\n    BEFORE_SPECIAL_END        = i++,   //S\n\n    BEFORE_SCRIPT_1           = i++, //C\n    BEFORE_SCRIPT_2           = i++, //R\n    BEFORE_SCRIPT_3           = i++, //I\n    BEFORE_SCRIPT_4           = i++, //P\n    BEFORE_SCRIPT_5           = i++, //T\n    AFTER_SCRIPT_1            = i++, //C\n    AFTER_SCRIPT_2            = i++, //R\n    AFTER_SCRIPT_3            = i++, //I\n    AFTER_SCRIPT_4            = i++, //P\n    AFTER_SCRIPT_5            = i++, //T\n\n    BEFORE_STYLE_1            = i++, //T\n    BEFORE_STYLE_2            = i++, //Y\n    BEFORE_STYLE_3            = i++, //L\n    BEFORE_STYLE_4            = i++, //E\n    AFTER_STYLE_1             = i++, //T\n    AFTER_STYLE_2             = i++, //Y\n    AFTER_STYLE_3             = i++, //L\n    AFTER_STYLE_4             = i++, //E\n\n    BEFORE_ENTITY             = i++, //&\n    BEFORE_NUMERIC_ENTITY     = i++, //#\n    IN_NAMED_ENTITY           = i++,\n    IN_NUMERIC_ENTITY         = i++,\n    IN_HEX_ENTITY             = i++, //X\n\n    j = 0,\n\n    SPECIAL_NONE              = j++,\n    SPECIAL_SCRIPT            = j++,\n    SPECIAL_STYLE             = j++;\n\nfunction whitespace(c){\n\treturn c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n}\n\nfunction characterState(char, SUCCESS){\n\treturn function(c){\n\t\tif(c === char) this._state = SUCCESS;\n\t};\n}\n\nfunction ifElseState(upper, SUCCESS, FAILURE){\n\tvar lower = upper.toLowerCase();\n\n\tif(upper === lower){\n\t\treturn function(c){\n\t\t\tif(c === lower){\n\t\t\t\tthis._state = SUCCESS;\n\t\t\t} else {\n\t\t\t\tthis._state = FAILURE;\n\t\t\t\tthis._index--;\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn function(c){\n\t\t\tif(c === lower || c === upper){\n\t\t\t\tthis._state = SUCCESS;\n\t\t\t} else {\n\t\t\t\tthis._state = FAILURE;\n\t\t\t\tthis._index--;\n\t\t\t}\n\t\t};\n\t}\n}\n\nfunction consumeSpecialNameChar(upper, NEXT_STATE){\n\tvar lower = upper.toLowerCase();\n\n\treturn function(c){\n\t\tif(c === lower || c === upper){\n\t\t\tthis._state = NEXT_STATE;\n\t\t} else {\n\t\t\tthis._state = IN_TAG_NAME;\n\t\t\tthis._index--; //consume the token again\n\t\t}\n\t};\n}\n\nfunction Tokenizer(options, cbs){\n\tthis._state = TEXT;\n\tthis._buffer = \"\";\n\tthis._sectionStart = 0;\n\tthis._index = 0;\n\tthis._bufferOffset = 0; //chars removed from _buffer\n\tthis._baseState = TEXT;\n\tthis._special = SPECIAL_NONE;\n\tthis._cbs = cbs;\n\tthis._running = true;\n\tthis._ended = false;\n\tthis._xmlMode = !!(options && options.xmlMode);\n\tthis._decodeEntities = !!(options && options.decodeEntities);\n}\n\nTokenizer.prototype._stateText = function(c){\n\tif(c === \"<\"){\n\t\tif(this._index > this._sectionStart){\n\t\t\tthis._cbs.ontext(this._getSection());\n\t\t}\n\t\tthis._state = BEFORE_TAG_NAME;\n\t\tthis._sectionStart = this._index;\n\t} else if(this._decodeEntities && this._special === SPECIAL_NONE && c === \"&\"){\n\t\tif(this._index > this._sectionStart){\n\t\t\tthis._cbs.ontext(this._getSection());\n\t\t}\n\t\tthis._baseState = TEXT;\n\t\tthis._state = BEFORE_ENTITY;\n\t\tthis._sectionStart = this._index;\n\t}\n};\n\nTokenizer.prototype._stateBeforeTagName = function(c){\n\tif(c === \"/\"){\n\t\tthis._state = BEFORE_CLOSING_TAG_NAME;\n\t} else if(c === \"<\"){\n\t\tthis._cbs.ontext(this._getSection());\n\t\tthis._sectionStart = this._index;\n\t} else if(c === \">\" || this._special !== SPECIAL_NONE || whitespace(c)) {\n\t\tthis._state = TEXT;\n\t} else if(c === \"!\"){\n\t\tthis._state = BEFORE_DECLARATION;\n\t\tthis._sectionStart = this._index + 1;\n\t} else if(c === \"?\"){\n\t\tthis._state = IN_PROCESSING_INSTRUCTION;\n\t\tthis._sectionStart = this._index + 1;\n\t} else {\n\t\tthis._state = (!this._xmlMode && (c === \"s\" || c === \"S\")) ?\n\t\t\t\t\t\tBEFORE_SPECIAL : IN_TAG_NAME;\n\t\tthis._sectionStart = this._index;\n\t}\n};\n\nTokenizer.prototype._stateInTagName = function(c){\n\tif(c === \"/\" || c === \">\" || whitespace(c)){\n\t\tthis._emitToken(\"onopentagname\");\n\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\tthis._index--;\n\t}\n};\n\nTokenizer.prototype._stateBeforeCloseingTagName = function(c){\n\tif(whitespace(c));\n\telse if(c === \">\"){\n\t\tthis._state = TEXT;\n\t} else if(this._special !== SPECIAL_NONE){\n\t\tif(c === \"s\" || c === \"S\"){\n\t\t\tthis._state = BEFORE_SPECIAL_END;\n\t\t} else {\n\t\t\tthis._state = TEXT;\n\t\t\tthis._index--;\n\t\t}\n\t} else {\n\t\tthis._state = IN_CLOSING_TAG_NAME;\n\t\tthis._sectionStart = this._index;\n\t}\n};\n\nTokenizer.prototype._stateInCloseingTagName = function(c){\n\tif(c === \">\" || whitespace(c)){\n\t\tthis._emitToken(\"onclosetag\");\n\t\tthis._state = AFTER_CLOSING_TAG_NAME;\n\t\tthis._index--;\n\t}\n};\n\nTokenizer.prototype._stateAfterCloseingTagName = function(c){\n\t//skip everything until \">\"\n\tif(c === \">\"){\n\t\tthis._state = TEXT;\n\t\tthis._sectionStart = this._index + 1;\n\t}\n};\n\nTokenizer.prototype._stateBeforeAttributeName = function(c){\n\tif(c === \">\"){\n\t\tthis._cbs.onopentagend();\n\t\tthis._state = TEXT;\n\t\tthis._sectionStart = this._index + 1;\n\t} else if(c === \"/\"){\n\t\tthis._state = IN_SELF_CLOSING_TAG;\n\t} else if(!whitespace(c)){\n\t\tthis._state = IN_ATTRIBUTE_NAME;\n\t\tthis._sectionStart = this._index;\n\t}\n};\n\nTokenizer.prototype._stateInSelfClosingTag = function(c){\n\tif(c === \">\"){\n\t\tthis._cbs.onselfclosingtag();\n\t\tthis._state = TEXT;\n\t\tthis._sectionStart = this._index + 1;\n\t} else if(!whitespace(c)){\n\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\tthis._index--;\n\t}\n};\n\nTokenizer.prototype._stateInAttributeName = function(c){\n\tif(c === \"=\" || c === \"/\" || c === \">\" || whitespace(c)){\n\t\tthis._cbs.onattribname(this._getSection());\n\t\tthis._sectionStart = -1;\n\t\tthis._state = AFTER_ATTRIBUTE_NAME;\n\t\tthis._index--;\n\t}\n};\n\nTokenizer.prototype._stateAfterAttributeName = function(c){\n\tif(c === \"=\"){\n\t\tthis._state = BEFORE_ATTRIBUTE_VALUE;\n\t} else if(c === \"/\" || c === \">\"){\n\t\tthis._cbs.onattribend();\n\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\tthis._index--;\n\t} else if(!whitespace(c)){\n\t\tthis._cbs.onattribend();\n\t\tthis._state = IN_ATTRIBUTE_NAME;\n\t\tthis._sectionStart = this._index;\n\t}\n};\n\nTokenizer.prototype._stateBeforeAttributeValue = function(c){\n\tif(c === \"\\\"\"){\n\t\tthis._state = IN_ATTRIBUTE_VALUE_DQ;\n\t\tthis._sectionStart = this._index + 1;\n\t} else if(c === \"'\"){\n\t\tthis._state = IN_ATTRIBUTE_VALUE_SQ;\n\t\tthis._sectionStart = this._index + 1;\n\t} else if(!whitespace(c)){\n\t\tthis._state = IN_ATTRIBUTE_VALUE_NQ;\n\t\tthis._sectionStart = this._index;\n\t\tthis._index--; //reconsume token\n\t}\n};\n\nTokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c){\n\tif(c === \"\\\"\"){\n\t\tthis._emitToken(\"onattribdata\");\n\t\tthis._cbs.onattribend();\n\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t} else if(this._decodeEntities && c === \"&\"){\n\t\tthis._emitToken(\"onattribdata\");\n\t\tthis._baseState = this._state;\n\t\tthis._state = BEFORE_ENTITY;\n\t\tthis._sectionStart = this._index;\n\t}\n};\n\nTokenizer.prototype._stateInAttributeValueSingleQuotes = function(c){\n\tif(c === \"'\"){\n\t\tthis._emitToken(\"onattribdata\");\n\t\tthis._cbs.onattribend();\n\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t} else if(this._decodeEntities && c === \"&\"){\n\t\tthis._emitToken(\"onattribdata\");\n\t\tthis._baseState = this._state;\n\t\tthis._state = BEFORE_ENTITY;\n\t\tthis._sectionStart = this._index;\n\t}\n};\n\nTokenizer.prototype._stateInAttributeValueNoQuotes = function(c){\n\tif(whitespace(c) || c === \">\"){\n\t\tthis._emitToken(\"onattribdata\");\n\t\tthis._cbs.onattribend();\n\t\tthis._state = BEFORE_ATTRIBUTE_NAME;\n\t\tthis._index--;\n\t} else if(this._decodeEntities && c === \"&\"){\n\t\tthis._emitToken(\"onattribdata\");\n\t\tthis._baseState = this._state;\n\t\tthis._state = BEFORE_ENTITY;\n\t\tthis._sectionStart = this._index;\n\t}\n};\n\nTokenizer.prototype._stateBeforeDeclaration = function(c){\n\tthis._state = c === \"[\" ? BEFORE_CDATA_1 :\n\t\t\t\t\tc === \"-\" ? BEFORE_COMMENT :\n\t\t\t\t\t\tIN_DECLARATION;\n};\n\nTokenizer.prototype._stateInDeclaration = function(c){\n\tif(c === \">\"){\n\t\tthis._cbs.ondeclaration(this._getSection());\n\t\tthis._state = TEXT;\n\t\tthis._sectionStart = this._index + 1;\n\t}\n};\n\nTokenizer.prototype._stateInProcessingInstruction = function(c){\n\tif(c === \">\"){\n\t\tthis._cbs.onprocessinginstruction(this._getSection());\n\t\tthis._state = TEXT;\n\t\tthis._sectionStart = this._index + 1;\n\t}\n};\n\nTokenizer.prototype._stateBeforeComment = function(c){\n\tif(c === \"-\"){\n\t\tthis._state = IN_COMMENT;\n\t\tthis._sectionStart = this._index + 1;\n\t} else {\n\t\tthis._state = IN_DECLARATION;\n\t}\n};\n\nTokenizer.prototype._stateInComment = function(c){\n\tif(c === \"-\") this._state = AFTER_COMMENT_1;\n};\n\nTokenizer.prototype._stateAfterComment1 = function(c){\n\tif(c === \"-\"){\n\t\tthis._state = AFTER_COMMENT_2;\n\t} else {\n\t\tthis._state = IN_COMMENT;\n\t}\n};\n\nTokenizer.prototype._stateAfterComment2 = function(c){\n\tif(c === \">\"){\n\t\t//remove 2 trailing chars\n\t\tthis._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));\n\t\tthis._state = TEXT;\n\t\tthis._sectionStart = this._index + 1;\n\t} else if(c !== \"-\"){\n\t\tthis._state = IN_COMMENT;\n\t}\n\t// else: stay in AFTER_COMMENT_2 (`--->`)\n};\n\nTokenizer.prototype._stateBeforeCdata1 = ifElseState(\"C\", BEFORE_CDATA_2, IN_DECLARATION);\nTokenizer.prototype._stateBeforeCdata2 = ifElseState(\"D\", BEFORE_CDATA_3, IN_DECLARATION);\nTokenizer.prototype._stateBeforeCdata3 = ifElseState(\"A\", BEFORE_CDATA_4, IN_DECLARATION);\nTokenizer.prototype._stateBeforeCdata4 = ifElseState(\"T\", BEFORE_CDATA_5, IN_DECLARATION);\nTokenizer.prototype._stateBeforeCdata5 = ifElseState(\"A\", BEFORE_CDATA_6, IN_DECLARATION);\n\nTokenizer.prototype._stateBeforeCdata6 = function(c){\n\tif(c === \"[\"){\n\t\tthis._state = IN_CDATA;\n\t\tthis._sectionStart = this._index + 1;\n\t} else {\n\t\tthis._state = IN_DECLARATION;\n\t\tthis._index--;\n\t}\n};\n\nTokenizer.prototype._stateInCdata = function(c){\n\tif(c === \"]\") this._state = AFTER_CDATA_1;\n};\n\nTokenizer.prototype._stateAfterCdata1 = characterState(\"]\", AFTER_CDATA_2);\n\nTokenizer.prototype._stateAfterCdata2 = function(c){\n\tif(c === \">\"){\n\t\t//remove 2 trailing chars\n\t\tthis._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));\n\t\tthis._state = TEXT;\n\t\tthis._sectionStart = this._index + 1;\n\t} else if(c !== \"]\") {\n\t\tthis._state = IN_CDATA;\n\t}\n\t//else: stay in AFTER_CDATA_2 (`]]]>`)\n};\n\nTokenizer.prototype._stateBeforeSpecial = function(c){\n\tif(c === \"c\" || c === \"C\"){\n\t\tthis._state = BEFORE_SCRIPT_1;\n\t} else if(c === \"t\" || c === \"T\"){\n\t\tthis._state = BEFORE_STYLE_1;\n\t} else {\n\t\tthis._state = IN_TAG_NAME;\n\t\tthis._index--; //consume the token again\n\t}\n};\n\nTokenizer.prototype._stateBeforeSpecialEnd = function(c){\n\tif(this._special === SPECIAL_SCRIPT && (c === \"c\" || c === \"C\")){\n\t\tthis._state = AFTER_SCRIPT_1;\n\t} else if(this._special === SPECIAL_STYLE && (c === \"t\" || c === \"T\")){\n\t\tthis._state = AFTER_STYLE_1;\n\t}\n\telse this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar(\"R\", BEFORE_SCRIPT_2);\nTokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar(\"I\", BEFORE_SCRIPT_3);\nTokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar(\"P\", BEFORE_SCRIPT_4);\nTokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar(\"T\", BEFORE_SCRIPT_5);\n\nTokenizer.prototype._stateBeforeScript5 = function(c){\n\tif(c === \"/\" || c === \">\" || whitespace(c)){\n\t\tthis._special = SPECIAL_SCRIPT;\n\t}\n\tthis._state = IN_TAG_NAME;\n\tthis._index--; //consume the token again\n};\n\nTokenizer.prototype._stateAfterScript1 = ifElseState(\"R\", AFTER_SCRIPT_2, TEXT);\nTokenizer.prototype._stateAfterScript2 = ifElseState(\"I\", AFTER_SCRIPT_3, TEXT);\nTokenizer.prototype._stateAfterScript3 = ifElseState(\"P\", AFTER_SCRIPT_4, TEXT);\nTokenizer.prototype._stateAfterScript4 = ifElseState(\"T\", AFTER_SCRIPT_5, TEXT);\n\nTokenizer.prototype._stateAfterScript5 = function(c){\n\tif(c === \">\" || whitespace(c)){\n\t\tthis._special = SPECIAL_NONE;\n\t\tthis._state = IN_CLOSING_TAG_NAME;\n\t\tthis._sectionStart = this._index - 6;\n\t\tthis._index--; //reconsume the token\n\t}\n\telse this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar(\"Y\", BEFORE_STYLE_2);\nTokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar(\"L\", BEFORE_STYLE_3);\nTokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar(\"E\", BEFORE_STYLE_4);\n\nTokenizer.prototype._stateBeforeStyle4 = function(c){\n\tif(c === \"/\" || c === \">\" || whitespace(c)){\n\t\tthis._special = SPECIAL_STYLE;\n\t}\n\tthis._state = IN_TAG_NAME;\n\tthis._index--; //consume the token again\n};\n\nTokenizer.prototype._stateAfterStyle1 = ifElseState(\"Y\", AFTER_STYLE_2, TEXT);\nTokenizer.prototype._stateAfterStyle2 = ifElseState(\"L\", AFTER_STYLE_3, TEXT);\nTokenizer.prototype._stateAfterStyle3 = ifElseState(\"E\", AFTER_STYLE_4, TEXT);\n\nTokenizer.prototype._stateAfterStyle4 = function(c){\n\tif(c === \">\" || whitespace(c)){\n\t\tthis._special = SPECIAL_NONE;\n\t\tthis._state = IN_CLOSING_TAG_NAME;\n\t\tthis._sectionStart = this._index - 5;\n\t\tthis._index--; //reconsume the token\n\t}\n\telse this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeEntity = ifElseState(\"#\", BEFORE_NUMERIC_ENTITY, IN_NAMED_ENTITY);\nTokenizer.prototype._stateBeforeNumericEntity = ifElseState(\"X\", IN_HEX_ENTITY, IN_NUMERIC_ENTITY);\n\n//for entities terminated with a semicolon\nTokenizer.prototype._parseNamedEntityStrict = function(){\n\t//offset = 1\n\tif(this._sectionStart + 1 < this._index){\n\t\tvar entity = this._buffer.substring(this._sectionStart + 1, this._index),\n\t\t    map = this._xmlMode ? xmlMap : entityMap;\n\n\t\tif(map.hasOwnProperty(entity)){\n\t\t\tthis._emitPartial(map[entity]);\n\t\t\tthis._sectionStart = this._index + 1;\n\t\t}\n\t}\n};\n\n\n//parses legacy entities (without trailing semicolon)\nTokenizer.prototype._parseLegacyEntity = function(){\n\tvar start = this._sectionStart + 1,\n\t    limit = this._index - start;\n\n\tif(limit > 6) limit = 6; //the max length of legacy entities is 6\n\n\twhile(limit >= 2){ //the min length of legacy entities is 2\n\t\tvar entity = this._buffer.substr(start, limit);\n\n\t\tif(legacyMap.hasOwnProperty(entity)){\n\t\t\tthis._emitPartial(legacyMap[entity]);\n\t\t\tthis._sectionStart += limit + 1;\n\t\t\treturn;\n\t\t} else {\n\t\t\tlimit--;\n\t\t}\n\t}\n};\n\nTokenizer.prototype._stateInNamedEntity = function(c){\n\tif(c === \";\"){\n\t\tthis._parseNamedEntityStrict();\n\t\tif(this._sectionStart + 1 < this._index && !this._xmlMode){\n\t\t\tthis._parseLegacyEntity();\n\t\t}\n\t\tthis._state = this._baseState;\n\t} else if((c < \"a\" || c > \"z\") && (c < \"A\" || c > \"Z\") && (c < \"0\" || c > \"9\")){\n\t\tif(this._xmlMode);\n\t\telse if(this._sectionStart + 1 === this._index);\n\t\telse if(this._baseState !== TEXT){\n\t\t\tif(c !== \"=\"){\n\t\t\t\tthis._parseNamedEntityStrict();\n\t\t\t}\n\t\t} else {\n\t\t\tthis._parseLegacyEntity();\n\t\t}\n\n\t\tthis._state = this._baseState;\n\t\tthis._index--;\n\t}\n};\n\nTokenizer.prototype._decodeNumericEntity = function(offset, base){\n\tvar sectionStart = this._sectionStart + offset;\n\n\tif(sectionStart !== this._index){\n\t\t//parse entity\n\t\tvar entity = this._buffer.substring(sectionStart, this._index);\n\t\tvar parsed = parseInt(entity, base);\n\n\t\tthis._emitPartial(decodeCodePoint(parsed));\n\t\tthis._sectionStart = this._index;\n\t} else {\n\t\tthis._sectionStart--;\n\t}\n\n\tthis._state = this._baseState;\n};\n\nTokenizer.prototype._stateInNumericEntity = function(c){\n\tif(c === \";\"){\n\t\tthis._decodeNumericEntity(2, 10);\n\t\tthis._sectionStart++;\n\t} else if(c < \"0\" || c > \"9\"){\n\t\tif(!this._xmlMode){\n\t\t\tthis._decodeNumericEntity(2, 10);\n\t\t} else {\n\t\t\tthis._state = this._baseState;\n\t\t}\n\t\tthis._index--;\n\t}\n};\n\nTokenizer.prototype._stateInHexEntity = function(c){\n\tif(c === \";\"){\n\t\tthis._decodeNumericEntity(3, 16);\n\t\tthis._sectionStart++;\n\t} else if((c < \"a\" || c > \"f\") && (c < \"A\" || c > \"F\") && (c < \"0\" || c > \"9\")){\n\t\tif(!this._xmlMode){\n\t\t\tthis._decodeNumericEntity(3, 16);\n\t\t} else {\n\t\t\tthis._state = this._baseState;\n\t\t}\n\t\tthis._index--;\n\t}\n};\n\nTokenizer.prototype._cleanup = function (){\n\tif(this._sectionStart < 0){\n\t\tthis._buffer = \"\";\n\t\tthis._bufferOffset += this._index;\n\t\tthis._index = 0;\n\t} else if(this._running){\n\t\tif(this._state === TEXT){\n\t\t\tif(this._sectionStart !== this._index){\n\t\t\t\tthis._cbs.ontext(this._buffer.substr(this._sectionStart));\n\t\t\t}\n\t\t\tthis._buffer = \"\";\n\t\t\tthis._bufferOffset += this._index;\n\t\t\tthis._index = 0;\n\t\t} else if(this._sectionStart === this._index){\n\t\t\t//the section just started\n\t\t\tthis._buffer = \"\";\n\t\t\tthis._bufferOffset += this._index;\n\t\t\tthis._index = 0;\n\t\t} else {\n\t\t\t//remove everything unnecessary\n\t\t\tthis._buffer = this._buffer.substr(this._sectionStart);\n\t\t\tthis._index -= this._sectionStart;\n\t\t\tthis._bufferOffset += this._sectionStart;\n\t\t}\n\n\t\tthis._sectionStart = 0;\n\t}\n};\n\n//TODO make events conditional\nTokenizer.prototype.write = function(chunk){\n\tif(this._ended) this._cbs.onerror(Error(\".write() after done!\"));\n\n\tthis._buffer += chunk;\n\tthis._parse();\n};\n\nTokenizer.prototype._parse = function(){\n\twhile(this._index < this._buffer.length && this._running){\n\t\tvar c = this._buffer.charAt(this._index);\n\t\tif(this._state === TEXT) {\n\t\t\tthis._stateText(c);\n\t\t} else if(this._state === BEFORE_TAG_NAME){\n\t\t\tthis._stateBeforeTagName(c);\n\t\t} else if(this._state === IN_TAG_NAME) {\n\t\t\tthis._stateInTagName(c);\n\t\t} else if(this._state === BEFORE_CLOSING_TAG_NAME){\n\t\t\tthis._stateBeforeCloseingTagName(c);\n\t\t} else if(this._state === IN_CLOSING_TAG_NAME){\n\t\t\tthis._stateInCloseingTagName(c);\n\t\t} else if(this._state === AFTER_CLOSING_TAG_NAME){\n\t\t\tthis._stateAfterCloseingTagName(c);\n\t\t} else if(this._state === IN_SELF_CLOSING_TAG){\n\t\t\tthis._stateInSelfClosingTag(c);\n\t\t}\n\n\t\t/*\n\t\t*\tattributes\n\t\t*/\n\t\telse if(this._state === BEFORE_ATTRIBUTE_NAME){\n\t\t\tthis._stateBeforeAttributeName(c);\n\t\t} else if(this._state === IN_ATTRIBUTE_NAME){\n\t\t\tthis._stateInAttributeName(c);\n\t\t} else if(this._state === AFTER_ATTRIBUTE_NAME){\n\t\t\tthis._stateAfterAttributeName(c);\n\t\t} else if(this._state === BEFORE_ATTRIBUTE_VALUE){\n\t\t\tthis._stateBeforeAttributeValue(c);\n\t\t} else if(this._state === IN_ATTRIBUTE_VALUE_DQ){\n\t\t\tthis._stateInAttributeValueDoubleQuotes(c);\n\t\t} else if(this._state === IN_ATTRIBUTE_VALUE_SQ){\n\t\t\tthis._stateInAttributeValueSingleQuotes(c);\n\t\t} else if(this._state === IN_ATTRIBUTE_VALUE_NQ){\n\t\t\tthis._stateInAttributeValueNoQuotes(c);\n\t\t}\n\n\t\t/*\n\t\t*\tdeclarations\n\t\t*/\n\t\telse if(this._state === BEFORE_DECLARATION){\n\t\t\tthis._stateBeforeDeclaration(c);\n\t\t} else if(this._state === IN_DECLARATION){\n\t\t\tthis._stateInDeclaration(c);\n\t\t}\n\n\t\t/*\n\t\t*\tprocessing instructions\n\t\t*/\n\t\telse if(this._state === IN_PROCESSING_INSTRUCTION){\n\t\t\tthis._stateInProcessingInstruction(c);\n\t\t}\n\n\t\t/*\n\t\t*\tcomments\n\t\t*/\n\t\telse if(this._state === BEFORE_COMMENT){\n\t\t\tthis._stateBeforeComment(c);\n\t\t} else if(this._state === IN_COMMENT){\n\t\t\tthis._stateInComment(c);\n\t\t} else if(this._state === AFTER_COMMENT_1){\n\t\t\tthis._stateAfterComment1(c);\n\t\t} else if(this._state === AFTER_COMMENT_2){\n\t\t\tthis._stateAfterComment2(c);\n\t\t}\n\n\t\t/*\n\t\t*\tcdata\n\t\t*/\n\t\telse if(this._state === BEFORE_CDATA_1){\n\t\t\tthis._stateBeforeCdata1(c);\n\t\t} else if(this._state === BEFORE_CDATA_2){\n\t\t\tthis._stateBeforeCdata2(c);\n\t\t} else if(this._state === BEFORE_CDATA_3){\n\t\t\tthis._stateBeforeCdata3(c);\n\t\t} else if(this._state === BEFORE_CDATA_4){\n\t\t\tthis._stateBeforeCdata4(c);\n\t\t} else if(this._state === BEFORE_CDATA_5){\n\t\t\tthis._stateBeforeCdata5(c);\n\t\t} else if(this._state === BEFORE_CDATA_6){\n\t\t\tthis._stateBeforeCdata6(c);\n\t\t} else if(this._state === IN_CDATA){\n\t\t\tthis._stateInCdata(c);\n\t\t} else if(this._state === AFTER_CDATA_1){\n\t\t\tthis._stateAfterCdata1(c);\n\t\t} else if(this._state === AFTER_CDATA_2){\n\t\t\tthis._stateAfterCdata2(c);\n\t\t}\n\n\t\t/*\n\t\t* special tags\n\t\t*/\n\t\telse if(this._state === BEFORE_SPECIAL){\n\t\t\tthis._stateBeforeSpecial(c);\n\t\t} else if(this._state === BEFORE_SPECIAL_END){\n\t\t\tthis._stateBeforeSpecialEnd(c);\n\t\t}\n\n\t\t/*\n\t\t* script\n\t\t*/\n\t\telse if(this._state === BEFORE_SCRIPT_1){\n\t\t\tthis._stateBeforeScript1(c);\n\t\t} else if(this._state === BEFORE_SCRIPT_2){\n\t\t\tthis._stateBeforeScript2(c);\n\t\t} else if(this._state === BEFORE_SCRIPT_3){\n\t\t\tthis._stateBeforeScript3(c);\n\t\t} else if(this._state === BEFORE_SCRIPT_4){\n\t\t\tthis._stateBeforeScript4(c);\n\t\t} else if(this._state === BEFORE_SCRIPT_5){\n\t\t\tthis._stateBeforeScript5(c);\n\t\t}\n\n\t\telse if(this._state === AFTER_SCRIPT_1){\n\t\t\tthis._stateAfterScript1(c);\n\t\t} else if(this._state === AFTER_SCRIPT_2){\n\t\t\tthis._stateAfterScript2(c);\n\t\t} else if(this._state === AFTER_SCRIPT_3){\n\t\t\tthis._stateAfterScript3(c);\n\t\t} else if(this._state === AFTER_SCRIPT_4){\n\t\t\tthis._stateAfterScript4(c);\n\t\t} else if(this._state === AFTER_SCRIPT_5){\n\t\t\tthis._stateAfterScript5(c);\n\t\t}\n\n\t\t/*\n\t\t* style\n\t\t*/\n\t\telse if(this._state === BEFORE_STYLE_1){\n\t\t\tthis._stateBeforeStyle1(c);\n\t\t} else if(this._state === BEFORE_STYLE_2){\n\t\t\tthis._stateBeforeStyle2(c);\n\t\t} else if(this._state === BEFORE_STYLE_3){\n\t\t\tthis._stateBeforeStyle3(c);\n\t\t} else if(this._state === BEFORE_STYLE_4){\n\t\t\tthis._stateBeforeStyle4(c);\n\t\t}\n\n\t\telse if(this._state === AFTER_STYLE_1){\n\t\t\tthis._stateAfterStyle1(c);\n\t\t} else if(this._state === AFTER_STYLE_2){\n\t\t\tthis._stateAfterStyle2(c);\n\t\t} else if(this._state === AFTER_STYLE_3){\n\t\t\tthis._stateAfterStyle3(c);\n\t\t} else if(this._state === AFTER_STYLE_4){\n\t\t\tthis._stateAfterStyle4(c);\n\t\t}\n\n\t\t/*\n\t\t* entities\n\t\t*/\n\t\telse if(this._state === BEFORE_ENTITY){\n\t\t\tthis._stateBeforeEntity(c);\n\t\t} else if(this._state === BEFORE_NUMERIC_ENTITY){\n\t\t\tthis._stateBeforeNumericEntity(c);\n\t\t} else if(this._state === IN_NAMED_ENTITY){\n\t\t\tthis._stateInNamedEntity(c);\n\t\t} else if(this._state === IN_NUMERIC_ENTITY){\n\t\t\tthis._stateInNumericEntity(c);\n\t\t} else if(this._state === IN_HEX_ENTITY){\n\t\t\tthis._stateInHexEntity(c);\n\t\t}\n\n\t\telse {\n\t\t\tthis._cbs.onerror(Error(\"unknown _state\"), this._state);\n\t\t}\n\n\t\tthis._index++;\n\t}\n\n\tthis._cleanup();\n};\n\nTokenizer.prototype.pause = function(){\n\tthis._running = false;\n};\nTokenizer.prototype.resume = function(){\n\tthis._running = true;\n\n\tif(this._index < this._buffer.length){\n\t\tthis._parse();\n\t}\n\tif(this._ended){\n\t\tthis._finish();\n\t}\n};\n\nTokenizer.prototype.end = function(chunk){\n\tif(this._ended) this._cbs.onerror(Error(\".end() after done!\"));\n\tif(chunk) this.write(chunk);\n\n\tthis._ended = true;\n\n\tif(this._running) this._finish();\n};\n\nTokenizer.prototype._finish = function(){\n\t//if there is remaining data, emit it in a reasonable way\n\tif(this._sectionStart < this._index){\n\t\tthis._handleTrailingData();\n\t}\n\n\tthis._cbs.onend();\n};\n\nTokenizer.prototype._handleTrailingData = function(){\n\tvar data = this._buffer.substr(this._sectionStart);\n\n\tif(this._state === IN_CDATA || this._state === AFTER_CDATA_1 || this._state === AFTER_CDATA_2){\n\t\tthis._cbs.oncdata(data);\n\t} else if(this._state === IN_COMMENT || this._state === AFTER_COMMENT_1 || this._state === AFTER_COMMENT_2){\n\t\tthis._cbs.oncomment(data);\n\t} else if(this._state === IN_NAMED_ENTITY && !this._xmlMode){\n\t\tthis._parseLegacyEntity();\n\t\tif(this._sectionStart < this._index){\n\t\t\tthis._state = this._baseState;\n\t\t\tthis._handleTrailingData();\n\t\t}\n\t} else if(this._state === IN_NUMERIC_ENTITY && !this._xmlMode){\n\t\tthis._decodeNumericEntity(2, 10);\n\t\tif(this._sectionStart < this._index){\n\t\t\tthis._state = this._baseState;\n\t\t\tthis._handleTrailingData();\n\t\t}\n\t} else if(this._state === IN_HEX_ENTITY && !this._xmlMode){\n\t\tthis._decodeNumericEntity(3, 16);\n\t\tif(this._sectionStart < this._index){\n\t\t\tthis._state = this._baseState;\n\t\t\tthis._handleTrailingData();\n\t\t}\n\t} else if(\n\t\tthis._state !== IN_TAG_NAME &&\n\t\tthis._state !== BEFORE_ATTRIBUTE_NAME &&\n\t\tthis._state !== BEFORE_ATTRIBUTE_VALUE &&\n\t\tthis._state !== AFTER_ATTRIBUTE_NAME &&\n\t\tthis._state !== IN_ATTRIBUTE_NAME &&\n\t\tthis._state !== IN_ATTRIBUTE_VALUE_SQ &&\n\t\tthis._state !== IN_ATTRIBUTE_VALUE_DQ &&\n\t\tthis._state !== IN_ATTRIBUTE_VALUE_NQ &&\n\t\tthis._state !== IN_CLOSING_TAG_NAME\n\t){\n\t\tthis._cbs.ontext(data);\n\t}\n\t//else, ignore remaining data\n\t//TODO add a way to remove current tag\n};\n\nTokenizer.prototype.reset = function(){\n\tTokenizer.call(this, {xmlMode: this._xmlMode, decodeEntities: this._decodeEntities}, this._cbs);\n};\n\nTokenizer.prototype.getAbsoluteIndex = function(){\n\treturn this._bufferOffset + this._index;\n};\n\nTokenizer.prototype._getSection = function(){\n\treturn this._buffer.substring(this._sectionStart, this._index);\n};\n\nTokenizer.prototype._emitToken = function(name){\n\tthis._cbs[name](this._getSection());\n\tthis._sectionStart = -1;\n};\n\nTokenizer.prototype._emitPartial = function(value){\n\tif(this._baseState !== TEXT){\n\t\tthis._cbs.onattribdata(value); //TODO implement the new event\n\t} else {\n\t\tthis._cbs.ontext(value);\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/htmlparser2/lib/Tokenizer.js\n// module id = 53\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 54\n// module chunks = 0","module.exports = {\n\t\"0\": 65533,\n\t\"128\": 8364,\n\t\"130\": 8218,\n\t\"131\": 402,\n\t\"132\": 8222,\n\t\"133\": 8230,\n\t\"134\": 8224,\n\t\"135\": 8225,\n\t\"136\": 710,\n\t\"137\": 8240,\n\t\"138\": 352,\n\t\"139\": 8249,\n\t\"140\": 338,\n\t\"142\": 381,\n\t\"145\": 8216,\n\t\"146\": 8217,\n\t\"147\": 8220,\n\t\"148\": 8221,\n\t\"149\": 8226,\n\t\"150\": 8211,\n\t\"151\": 8212,\n\t\"152\": 732,\n\t\"153\": 8482,\n\t\"154\": 353,\n\t\"155\": 8250,\n\t\"156\": 339,\n\t\"158\": 382,\n\t\"159\": 376\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/entities/maps/decode.json\n// module id = 55\n// module chunks = 0","module.exports = {\n\t\"Aacute\": \"Á\",\n\t\"aacute\": \"á\",\n\t\"Abreve\": \"Ă\",\n\t\"abreve\": \"ă\",\n\t\"ac\": \"∾\",\n\t\"acd\": \"∿\",\n\t\"acE\": \"∾̳\",\n\t\"Acirc\": \"Â\",\n\t\"acirc\": \"â\",\n\t\"acute\": \"´\",\n\t\"Acy\": \"А\",\n\t\"acy\": \"а\",\n\t\"AElig\": \"Æ\",\n\t\"aelig\": \"æ\",\n\t\"af\": \"⁡\",\n\t\"Afr\": \"𝔄\",\n\t\"afr\": \"𝔞\",\n\t\"Agrave\": \"À\",\n\t\"agrave\": \"à\",\n\t\"alefsym\": \"ℵ\",\n\t\"aleph\": \"ℵ\",\n\t\"Alpha\": \"Α\",\n\t\"alpha\": \"α\",\n\t\"Amacr\": \"Ā\",\n\t\"amacr\": \"ā\",\n\t\"amalg\": \"⨿\",\n\t\"amp\": \"&\",\n\t\"AMP\": \"&\",\n\t\"andand\": \"⩕\",\n\t\"And\": \"⩓\",\n\t\"and\": \"∧\",\n\t\"andd\": \"⩜\",\n\t\"andslope\": \"⩘\",\n\t\"andv\": \"⩚\",\n\t\"ang\": \"∠\",\n\t\"ange\": \"⦤\",\n\t\"angle\": \"∠\",\n\t\"angmsdaa\": \"⦨\",\n\t\"angmsdab\": \"⦩\",\n\t\"angmsdac\": \"⦪\",\n\t\"angmsdad\": \"⦫\",\n\t\"angmsdae\": \"⦬\",\n\t\"angmsdaf\": \"⦭\",\n\t\"angmsdag\": \"⦮\",\n\t\"angmsdah\": \"⦯\",\n\t\"angmsd\": \"∡\",\n\t\"angrt\": \"∟\",\n\t\"angrtvb\": \"⊾\",\n\t\"angrtvbd\": \"⦝\",\n\t\"angsph\": \"∢\",\n\t\"angst\": \"Å\",\n\t\"angzarr\": \"⍼\",\n\t\"Aogon\": \"Ą\",\n\t\"aogon\": \"ą\",\n\t\"Aopf\": \"𝔸\",\n\t\"aopf\": \"𝕒\",\n\t\"apacir\": \"⩯\",\n\t\"ap\": \"≈\",\n\t\"apE\": \"⩰\",\n\t\"ape\": \"≊\",\n\t\"apid\": \"≋\",\n\t\"apos\": \"'\",\n\t\"ApplyFunction\": \"⁡\",\n\t\"approx\": \"≈\",\n\t\"approxeq\": \"≊\",\n\t\"Aring\": \"Å\",\n\t\"aring\": \"å\",\n\t\"Ascr\": \"𝒜\",\n\t\"ascr\": \"𝒶\",\n\t\"Assign\": \"≔\",\n\t\"ast\": \"*\",\n\t\"asymp\": \"≈\",\n\t\"asympeq\": \"≍\",\n\t\"Atilde\": \"Ã\",\n\t\"atilde\": \"ã\",\n\t\"Auml\": \"Ä\",\n\t\"auml\": \"ä\",\n\t\"awconint\": \"∳\",\n\t\"awint\": \"⨑\",\n\t\"backcong\": \"≌\",\n\t\"backepsilon\": \"϶\",\n\t\"backprime\": \"‵\",\n\t\"backsim\": \"∽\",\n\t\"backsimeq\": \"⋍\",\n\t\"Backslash\": \"∖\",\n\t\"Barv\": \"⫧\",\n\t\"barvee\": \"⊽\",\n\t\"barwed\": \"⌅\",\n\t\"Barwed\": \"⌆\",\n\t\"barwedge\": \"⌅\",\n\t\"bbrk\": \"⎵\",\n\t\"bbrktbrk\": \"⎶\",\n\t\"bcong\": \"≌\",\n\t\"Bcy\": \"Б\",\n\t\"bcy\": \"б\",\n\t\"bdquo\": \"„\",\n\t\"becaus\": \"∵\",\n\t\"because\": \"∵\",\n\t\"Because\": \"∵\",\n\t\"bemptyv\": \"⦰\",\n\t\"bepsi\": \"϶\",\n\t\"bernou\": \"ℬ\",\n\t\"Bernoullis\": \"ℬ\",\n\t\"Beta\": \"Β\",\n\t\"beta\": \"β\",\n\t\"beth\": \"ℶ\",\n\t\"between\": \"≬\",\n\t\"Bfr\": \"𝔅\",\n\t\"bfr\": \"𝔟\",\n\t\"bigcap\": \"⋂\",\n\t\"bigcirc\": \"◯\",\n\t\"bigcup\": \"⋃\",\n\t\"bigodot\": \"⨀\",\n\t\"bigoplus\": \"⨁\",\n\t\"bigotimes\": \"⨂\",\n\t\"bigsqcup\": \"⨆\",\n\t\"bigstar\": \"★\",\n\t\"bigtriangledown\": \"▽\",\n\t\"bigtriangleup\": \"△\",\n\t\"biguplus\": \"⨄\",\n\t\"bigvee\": \"⋁\",\n\t\"bigwedge\": \"⋀\",\n\t\"bkarow\": \"⤍\",\n\t\"blacklozenge\": \"⧫\",\n\t\"blacksquare\": \"▪\",\n\t\"blacktriangle\": \"▴\",\n\t\"blacktriangledown\": \"▾\",\n\t\"blacktriangleleft\": \"◂\",\n\t\"blacktriangleright\": \"▸\",\n\t\"blank\": \"␣\",\n\t\"blk12\": \"▒\",\n\t\"blk14\": \"░\",\n\t\"blk34\": \"▓\",\n\t\"block\": \"█\",\n\t\"bne\": \"=⃥\",\n\t\"bnequiv\": \"≡⃥\",\n\t\"bNot\": \"⫭\",\n\t\"bnot\": \"⌐\",\n\t\"Bopf\": \"𝔹\",\n\t\"bopf\": \"𝕓\",\n\t\"bot\": \"⊥\",\n\t\"bottom\": \"⊥\",\n\t\"bowtie\": \"⋈\",\n\t\"boxbox\": \"⧉\",\n\t\"boxdl\": \"┐\",\n\t\"boxdL\": \"╕\",\n\t\"boxDl\": \"╖\",\n\t\"boxDL\": \"╗\",\n\t\"boxdr\": \"┌\",\n\t\"boxdR\": \"╒\",\n\t\"boxDr\": \"╓\",\n\t\"boxDR\": \"╔\",\n\t\"boxh\": \"─\",\n\t\"boxH\": \"═\",\n\t\"boxhd\": \"┬\",\n\t\"boxHd\": \"╤\",\n\t\"boxhD\": \"╥\",\n\t\"boxHD\": \"╦\",\n\t\"boxhu\": \"┴\",\n\t\"boxHu\": \"╧\",\n\t\"boxhU\": \"╨\",\n\t\"boxHU\": \"╩\",\n\t\"boxminus\": \"⊟\",\n\t\"boxplus\": \"⊞\",\n\t\"boxtimes\": \"⊠\",\n\t\"boxul\": \"┘\",\n\t\"boxuL\": \"╛\",\n\t\"boxUl\": \"╜\",\n\t\"boxUL\": \"╝\",\n\t\"boxur\": \"└\",\n\t\"boxuR\": \"╘\",\n\t\"boxUr\": \"╙\",\n\t\"boxUR\": \"╚\",\n\t\"boxv\": \"│\",\n\t\"boxV\": \"║\",\n\t\"boxvh\": \"┼\",\n\t\"boxvH\": \"╪\",\n\t\"boxVh\": \"╫\",\n\t\"boxVH\": \"╬\",\n\t\"boxvl\": \"┤\",\n\t\"boxvL\": \"╡\",\n\t\"boxVl\": \"╢\",\n\t\"boxVL\": \"╣\",\n\t\"boxvr\": \"├\",\n\t\"boxvR\": \"╞\",\n\t\"boxVr\": \"╟\",\n\t\"boxVR\": \"╠\",\n\t\"bprime\": \"‵\",\n\t\"breve\": \"˘\",\n\t\"Breve\": \"˘\",\n\t\"brvbar\": \"¦\",\n\t\"bscr\": \"𝒷\",\n\t\"Bscr\": \"ℬ\",\n\t\"bsemi\": \"⁏\",\n\t\"bsim\": \"∽\",\n\t\"bsime\": \"⋍\",\n\t\"bsolb\": \"⧅\",\n\t\"bsol\": \"\\\\\",\n\t\"bsolhsub\": \"⟈\",\n\t\"bull\": \"•\",\n\t\"bullet\": \"•\",\n\t\"bump\": \"≎\",\n\t\"bumpE\": \"⪮\",\n\t\"bumpe\": \"≏\",\n\t\"Bumpeq\": \"≎\",\n\t\"bumpeq\": \"≏\",\n\t\"Cacute\": \"Ć\",\n\t\"cacute\": \"ć\",\n\t\"capand\": \"⩄\",\n\t\"capbrcup\": \"⩉\",\n\t\"capcap\": \"⩋\",\n\t\"cap\": \"∩\",\n\t\"Cap\": \"⋒\",\n\t\"capcup\": \"⩇\",\n\t\"capdot\": \"⩀\",\n\t\"CapitalDifferentialD\": \"ⅅ\",\n\t\"caps\": \"∩︀\",\n\t\"caret\": \"⁁\",\n\t\"caron\": \"ˇ\",\n\t\"Cayleys\": \"ℭ\",\n\t\"ccaps\": \"⩍\",\n\t\"Ccaron\": \"Č\",\n\t\"ccaron\": \"č\",\n\t\"Ccedil\": \"Ç\",\n\t\"ccedil\": \"ç\",\n\t\"Ccirc\": \"Ĉ\",\n\t\"ccirc\": \"ĉ\",\n\t\"Cconint\": \"∰\",\n\t\"ccups\": \"⩌\",\n\t\"ccupssm\": \"⩐\",\n\t\"Cdot\": \"Ċ\",\n\t\"cdot\": \"ċ\",\n\t\"cedil\": \"¸\",\n\t\"Cedilla\": \"¸\",\n\t\"cemptyv\": \"⦲\",\n\t\"cent\": \"¢\",\n\t\"centerdot\": \"·\",\n\t\"CenterDot\": \"·\",\n\t\"cfr\": \"𝔠\",\n\t\"Cfr\": \"ℭ\",\n\t\"CHcy\": \"Ч\",\n\t\"chcy\": \"ч\",\n\t\"check\": \"✓\",\n\t\"checkmark\": \"✓\",\n\t\"Chi\": \"Χ\",\n\t\"chi\": \"χ\",\n\t\"circ\": \"ˆ\",\n\t\"circeq\": \"≗\",\n\t\"circlearrowleft\": \"↺\",\n\t\"circlearrowright\": \"↻\",\n\t\"circledast\": \"⊛\",\n\t\"circledcirc\": \"⊚\",\n\t\"circleddash\": \"⊝\",\n\t\"CircleDot\": \"⊙\",\n\t\"circledR\": \"®\",\n\t\"circledS\": \"Ⓢ\",\n\t\"CircleMinus\": \"⊖\",\n\t\"CirclePlus\": \"⊕\",\n\t\"CircleTimes\": \"⊗\",\n\t\"cir\": \"○\",\n\t\"cirE\": \"⧃\",\n\t\"cire\": \"≗\",\n\t\"cirfnint\": \"⨐\",\n\t\"cirmid\": \"⫯\",\n\t\"cirscir\": \"⧂\",\n\t\"ClockwiseContourIntegral\": \"∲\",\n\t\"CloseCurlyDoubleQuote\": \"”\",\n\t\"CloseCurlyQuote\": \"’\",\n\t\"clubs\": \"♣\",\n\t\"clubsuit\": \"♣\",\n\t\"colon\": \":\",\n\t\"Colon\": \"∷\",\n\t\"Colone\": \"⩴\",\n\t\"colone\": \"≔\",\n\t\"coloneq\": \"≔\",\n\t\"comma\": \",\",\n\t\"commat\": \"@\",\n\t\"comp\": \"∁\",\n\t\"compfn\": \"∘\",\n\t\"complement\": \"∁\",\n\t\"complexes\": \"ℂ\",\n\t\"cong\": \"≅\",\n\t\"congdot\": \"⩭\",\n\t\"Congruent\": \"≡\",\n\t\"conint\": \"∮\",\n\t\"Conint\": \"∯\",\n\t\"ContourIntegral\": \"∮\",\n\t\"copf\": \"𝕔\",\n\t\"Copf\": \"ℂ\",\n\t\"coprod\": \"∐\",\n\t\"Coproduct\": \"∐\",\n\t\"copy\": \"©\",\n\t\"COPY\": \"©\",\n\t\"copysr\": \"℗\",\n\t\"CounterClockwiseContourIntegral\": \"∳\",\n\t\"crarr\": \"↵\",\n\t\"cross\": \"✗\",\n\t\"Cross\": \"⨯\",\n\t\"Cscr\": \"𝒞\",\n\t\"cscr\": \"𝒸\",\n\t\"csub\": \"⫏\",\n\t\"csube\": \"⫑\",\n\t\"csup\": \"⫐\",\n\t\"csupe\": \"⫒\",\n\t\"ctdot\": \"⋯\",\n\t\"cudarrl\": \"⤸\",\n\t\"cudarrr\": \"⤵\",\n\t\"cuepr\": \"⋞\",\n\t\"cuesc\": \"⋟\",\n\t\"cularr\": \"↶\",\n\t\"cularrp\": \"⤽\",\n\t\"cupbrcap\": \"⩈\",\n\t\"cupcap\": \"⩆\",\n\t\"CupCap\": \"≍\",\n\t\"cup\": \"∪\",\n\t\"Cup\": \"⋓\",\n\t\"cupcup\": \"⩊\",\n\t\"cupdot\": \"⊍\",\n\t\"cupor\": \"⩅\",\n\t\"cups\": \"∪︀\",\n\t\"curarr\": \"↷\",\n\t\"curarrm\": \"⤼\",\n\t\"curlyeqprec\": \"⋞\",\n\t\"curlyeqsucc\": \"⋟\",\n\t\"curlyvee\": \"⋎\",\n\t\"curlywedge\": \"⋏\",\n\t\"curren\": \"¤\",\n\t\"curvearrowleft\": \"↶\",\n\t\"curvearrowright\": \"↷\",\n\t\"cuvee\": \"⋎\",\n\t\"cuwed\": \"⋏\",\n\t\"cwconint\": \"∲\",\n\t\"cwint\": \"∱\",\n\t\"cylcty\": \"⌭\",\n\t\"dagger\": \"†\",\n\t\"Dagger\": \"‡\",\n\t\"daleth\": \"ℸ\",\n\t\"darr\": \"↓\",\n\t\"Darr\": \"↡\",\n\t\"dArr\": \"⇓\",\n\t\"dash\": \"‐\",\n\t\"Dashv\": \"⫤\",\n\t\"dashv\": \"⊣\",\n\t\"dbkarow\": \"⤏\",\n\t\"dblac\": \"˝\",\n\t\"Dcaron\": \"Ď\",\n\t\"dcaron\": \"ď\",\n\t\"Dcy\": \"Д\",\n\t\"dcy\": \"д\",\n\t\"ddagger\": \"‡\",\n\t\"ddarr\": \"⇊\",\n\t\"DD\": \"ⅅ\",\n\t\"dd\": \"ⅆ\",\n\t\"DDotrahd\": \"⤑\",\n\t\"ddotseq\": \"⩷\",\n\t\"deg\": \"°\",\n\t\"Del\": \"∇\",\n\t\"Delta\": \"Δ\",\n\t\"delta\": \"δ\",\n\t\"demptyv\": \"⦱\",\n\t\"dfisht\": \"⥿\",\n\t\"Dfr\": \"𝔇\",\n\t\"dfr\": \"𝔡\",\n\t\"dHar\": \"⥥\",\n\t\"dharl\": \"⇃\",\n\t\"dharr\": \"⇂\",\n\t\"DiacriticalAcute\": \"´\",\n\t\"DiacriticalDot\": \"˙\",\n\t\"DiacriticalDoubleAcute\": \"˝\",\n\t\"DiacriticalGrave\": \"`\",\n\t\"DiacriticalTilde\": \"˜\",\n\t\"diam\": \"⋄\",\n\t\"diamond\": \"⋄\",\n\t\"Diamond\": \"⋄\",\n\t\"diamondsuit\": \"♦\",\n\t\"diams\": \"♦\",\n\t\"die\": \"¨\",\n\t\"DifferentialD\": \"ⅆ\",\n\t\"digamma\": \"ϝ\",\n\t\"disin\": \"⋲\",\n\t\"div\": \"÷\",\n\t\"divide\": \"÷\",\n\t\"divideontimes\": \"⋇\",\n\t\"divonx\": \"⋇\",\n\t\"DJcy\": \"Ђ\",\n\t\"djcy\": \"ђ\",\n\t\"dlcorn\": \"⌞\",\n\t\"dlcrop\": \"⌍\",\n\t\"dollar\": \"$\",\n\t\"Dopf\": \"𝔻\",\n\t\"dopf\": \"𝕕\",\n\t\"Dot\": \"¨\",\n\t\"dot\": \"˙\",\n\t\"DotDot\": \"⃜\",\n\t\"doteq\": \"≐\",\n\t\"doteqdot\": \"≑\",\n\t\"DotEqual\": \"≐\",\n\t\"dotminus\": \"∸\",\n\t\"dotplus\": \"∔\",\n\t\"dotsquare\": \"⊡\",\n\t\"doublebarwedge\": \"⌆\",\n\t\"DoubleContourIntegral\": \"∯\",\n\t\"DoubleDot\": \"¨\",\n\t\"DoubleDownArrow\": \"⇓\",\n\t\"DoubleLeftArrow\": \"⇐\",\n\t\"DoubleLeftRightArrow\": \"⇔\",\n\t\"DoubleLeftTee\": \"⫤\",\n\t\"DoubleLongLeftArrow\": \"⟸\",\n\t\"DoubleLongLeftRightArrow\": \"⟺\",\n\t\"DoubleLongRightArrow\": \"⟹\",\n\t\"DoubleRightArrow\": \"⇒\",\n\t\"DoubleRightTee\": \"⊨\",\n\t\"DoubleUpArrow\": \"⇑\",\n\t\"DoubleUpDownArrow\": \"⇕\",\n\t\"DoubleVerticalBar\": \"∥\",\n\t\"DownArrowBar\": \"⤓\",\n\t\"downarrow\": \"↓\",\n\t\"DownArrow\": \"↓\",\n\t\"Downarrow\": \"⇓\",\n\t\"DownArrowUpArrow\": \"⇵\",\n\t\"DownBreve\": \"̑\",\n\t\"downdownarrows\": \"⇊\",\n\t\"downharpoonleft\": \"⇃\",\n\t\"downharpoonright\": \"⇂\",\n\t\"DownLeftRightVector\": \"⥐\",\n\t\"DownLeftTeeVector\": \"⥞\",\n\t\"DownLeftVectorBar\": \"⥖\",\n\t\"DownLeftVector\": \"↽\",\n\t\"DownRightTeeVector\": \"⥟\",\n\t\"DownRightVectorBar\": \"⥗\",\n\t\"DownRightVector\": \"⇁\",\n\t\"DownTeeArrow\": \"↧\",\n\t\"DownTee\": \"⊤\",\n\t\"drbkarow\": \"⤐\",\n\t\"drcorn\": \"⌟\",\n\t\"drcrop\": \"⌌\",\n\t\"Dscr\": \"𝒟\",\n\t\"dscr\": \"𝒹\",\n\t\"DScy\": \"Ѕ\",\n\t\"dscy\": \"ѕ\",\n\t\"dsol\": \"⧶\",\n\t\"Dstrok\": \"Đ\",\n\t\"dstrok\": \"đ\",\n\t\"dtdot\": \"⋱\",\n\t\"dtri\": \"▿\",\n\t\"dtrif\": \"▾\",\n\t\"duarr\": \"⇵\",\n\t\"duhar\": \"⥯\",\n\t\"dwangle\": \"⦦\",\n\t\"DZcy\": \"Џ\",\n\t\"dzcy\": \"џ\",\n\t\"dzigrarr\": \"⟿\",\n\t\"Eacute\": \"É\",\n\t\"eacute\": \"é\",\n\t\"easter\": \"⩮\",\n\t\"Ecaron\": \"Ě\",\n\t\"ecaron\": \"ě\",\n\t\"Ecirc\": \"Ê\",\n\t\"ecirc\": \"ê\",\n\t\"ecir\": \"≖\",\n\t\"ecolon\": \"≕\",\n\t\"Ecy\": \"Э\",\n\t\"ecy\": \"э\",\n\t\"eDDot\": \"⩷\",\n\t\"Edot\": \"Ė\",\n\t\"edot\": \"ė\",\n\t\"eDot\": \"≑\",\n\t\"ee\": \"ⅇ\",\n\t\"efDot\": \"≒\",\n\t\"Efr\": \"𝔈\",\n\t\"efr\": \"𝔢\",\n\t\"eg\": \"⪚\",\n\t\"Egrave\": \"È\",\n\t\"egrave\": \"è\",\n\t\"egs\": \"⪖\",\n\t\"egsdot\": \"⪘\",\n\t\"el\": \"⪙\",\n\t\"Element\": \"∈\",\n\t\"elinters\": \"⏧\",\n\t\"ell\": \"ℓ\",\n\t\"els\": \"⪕\",\n\t\"elsdot\": \"⪗\",\n\t\"Emacr\": \"Ē\",\n\t\"emacr\": \"ē\",\n\t\"empty\": \"∅\",\n\t\"emptyset\": \"∅\",\n\t\"EmptySmallSquare\": \"◻\",\n\t\"emptyv\": \"∅\",\n\t\"EmptyVerySmallSquare\": \"▫\",\n\t\"emsp13\": \" \",\n\t\"emsp14\": \" \",\n\t\"emsp\": \" \",\n\t\"ENG\": \"Ŋ\",\n\t\"eng\": \"ŋ\",\n\t\"ensp\": \" \",\n\t\"Eogon\": \"Ę\",\n\t\"eogon\": \"ę\",\n\t\"Eopf\": \"𝔼\",\n\t\"eopf\": \"𝕖\",\n\t\"epar\": \"⋕\",\n\t\"eparsl\": \"⧣\",\n\t\"eplus\": \"⩱\",\n\t\"epsi\": \"ε\",\n\t\"Epsilon\": \"Ε\",\n\t\"epsilon\": \"ε\",\n\t\"epsiv\": \"ϵ\",\n\t\"eqcirc\": \"≖\",\n\t\"eqcolon\": \"≕\",\n\t\"eqsim\": \"≂\",\n\t\"eqslantgtr\": \"⪖\",\n\t\"eqslantless\": \"⪕\",\n\t\"Equal\": \"⩵\",\n\t\"equals\": \"=\",\n\t\"EqualTilde\": \"≂\",\n\t\"equest\": \"≟\",\n\t\"Equilibrium\": \"⇌\",\n\t\"equiv\": \"≡\",\n\t\"equivDD\": \"⩸\",\n\t\"eqvparsl\": \"⧥\",\n\t\"erarr\": \"⥱\",\n\t\"erDot\": \"≓\",\n\t\"escr\": \"ℯ\",\n\t\"Escr\": \"ℰ\",\n\t\"esdot\": \"≐\",\n\t\"Esim\": \"⩳\",\n\t\"esim\": \"≂\",\n\t\"Eta\": \"Η\",\n\t\"eta\": \"η\",\n\t\"ETH\": \"Ð\",\n\t\"eth\": \"ð\",\n\t\"Euml\": \"Ë\",\n\t\"euml\": \"ë\",\n\t\"euro\": \"€\",\n\t\"excl\": \"!\",\n\t\"exist\": \"∃\",\n\t\"Exists\": \"∃\",\n\t\"expectation\": \"ℰ\",\n\t\"exponentiale\": \"ⅇ\",\n\t\"ExponentialE\": \"ⅇ\",\n\t\"fallingdotseq\": \"≒\",\n\t\"Fcy\": \"Ф\",\n\t\"fcy\": \"ф\",\n\t\"female\": \"♀\",\n\t\"ffilig\": \"ﬃ\",\n\t\"fflig\": \"ﬀ\",\n\t\"ffllig\": \"ﬄ\",\n\t\"Ffr\": \"𝔉\",\n\t\"ffr\": \"𝔣\",\n\t\"filig\": \"ﬁ\",\n\t\"FilledSmallSquare\": \"◼\",\n\t\"FilledVerySmallSquare\": \"▪\",\n\t\"fjlig\": \"fj\",\n\t\"flat\": \"♭\",\n\t\"fllig\": \"ﬂ\",\n\t\"fltns\": \"▱\",\n\t\"fnof\": \"ƒ\",\n\t\"Fopf\": \"𝔽\",\n\t\"fopf\": \"𝕗\",\n\t\"forall\": \"∀\",\n\t\"ForAll\": \"∀\",\n\t\"fork\": \"⋔\",\n\t\"forkv\": \"⫙\",\n\t\"Fouriertrf\": \"ℱ\",\n\t\"fpartint\": \"⨍\",\n\t\"frac12\": \"½\",\n\t\"frac13\": \"⅓\",\n\t\"frac14\": \"¼\",\n\t\"frac15\": \"⅕\",\n\t\"frac16\": \"⅙\",\n\t\"frac18\": \"⅛\",\n\t\"frac23\": \"⅔\",\n\t\"frac25\": \"⅖\",\n\t\"frac34\": \"¾\",\n\t\"frac35\": \"⅗\",\n\t\"frac38\": \"⅜\",\n\t\"frac45\": \"⅘\",\n\t\"frac56\": \"⅚\",\n\t\"frac58\": \"⅝\",\n\t\"frac78\": \"⅞\",\n\t\"frasl\": \"⁄\",\n\t\"frown\": \"⌢\",\n\t\"fscr\": \"𝒻\",\n\t\"Fscr\": \"ℱ\",\n\t\"gacute\": \"ǵ\",\n\t\"Gamma\": \"Γ\",\n\t\"gamma\": \"γ\",\n\t\"Gammad\": \"Ϝ\",\n\t\"gammad\": \"ϝ\",\n\t\"gap\": \"⪆\",\n\t\"Gbreve\": \"Ğ\",\n\t\"gbreve\": \"ğ\",\n\t\"Gcedil\": \"Ģ\",\n\t\"Gcirc\": \"Ĝ\",\n\t\"gcirc\": \"ĝ\",\n\t\"Gcy\": \"Г\",\n\t\"gcy\": \"г\",\n\t\"Gdot\": \"Ġ\",\n\t\"gdot\": \"ġ\",\n\t\"ge\": \"≥\",\n\t\"gE\": \"≧\",\n\t\"gEl\": \"⪌\",\n\t\"gel\": \"⋛\",\n\t\"geq\": \"≥\",\n\t\"geqq\": \"≧\",\n\t\"geqslant\": \"⩾\",\n\t\"gescc\": \"⪩\",\n\t\"ges\": \"⩾\",\n\t\"gesdot\": \"⪀\",\n\t\"gesdoto\": \"⪂\",\n\t\"gesdotol\": \"⪄\",\n\t\"gesl\": \"⋛︀\",\n\t\"gesles\": \"⪔\",\n\t\"Gfr\": \"𝔊\",\n\t\"gfr\": \"𝔤\",\n\t\"gg\": \"≫\",\n\t\"Gg\": \"⋙\",\n\t\"ggg\": \"⋙\",\n\t\"gimel\": \"ℷ\",\n\t\"GJcy\": \"Ѓ\",\n\t\"gjcy\": \"ѓ\",\n\t\"gla\": \"⪥\",\n\t\"gl\": \"≷\",\n\t\"glE\": \"⪒\",\n\t\"glj\": \"⪤\",\n\t\"gnap\": \"⪊\",\n\t\"gnapprox\": \"⪊\",\n\t\"gne\": \"⪈\",\n\t\"gnE\": \"≩\",\n\t\"gneq\": \"⪈\",\n\t\"gneqq\": \"≩\",\n\t\"gnsim\": \"⋧\",\n\t\"Gopf\": \"𝔾\",\n\t\"gopf\": \"𝕘\",\n\t\"grave\": \"`\",\n\t\"GreaterEqual\": \"≥\",\n\t\"GreaterEqualLess\": \"⋛\",\n\t\"GreaterFullEqual\": \"≧\",\n\t\"GreaterGreater\": \"⪢\",\n\t\"GreaterLess\": \"≷\",\n\t\"GreaterSlantEqual\": \"⩾\",\n\t\"GreaterTilde\": \"≳\",\n\t\"Gscr\": \"𝒢\",\n\t\"gscr\": \"ℊ\",\n\t\"gsim\": \"≳\",\n\t\"gsime\": \"⪎\",\n\t\"gsiml\": \"⪐\",\n\t\"gtcc\": \"⪧\",\n\t\"gtcir\": \"⩺\",\n\t\"gt\": \">\",\n\t\"GT\": \">\",\n\t\"Gt\": \"≫\",\n\t\"gtdot\": \"⋗\",\n\t\"gtlPar\": \"⦕\",\n\t\"gtquest\": \"⩼\",\n\t\"gtrapprox\": \"⪆\",\n\t\"gtrarr\": \"⥸\",\n\t\"gtrdot\": \"⋗\",\n\t\"gtreqless\": \"⋛\",\n\t\"gtreqqless\": \"⪌\",\n\t\"gtrless\": \"≷\",\n\t\"gtrsim\": \"≳\",\n\t\"gvertneqq\": \"≩︀\",\n\t\"gvnE\": \"≩︀\",\n\t\"Hacek\": \"ˇ\",\n\t\"hairsp\": \" \",\n\t\"half\": \"½\",\n\t\"hamilt\": \"ℋ\",\n\t\"HARDcy\": \"Ъ\",\n\t\"hardcy\": \"ъ\",\n\t\"harrcir\": \"⥈\",\n\t\"harr\": \"↔\",\n\t\"hArr\": \"⇔\",\n\t\"harrw\": \"↭\",\n\t\"Hat\": \"^\",\n\t\"hbar\": \"ℏ\",\n\t\"Hcirc\": \"Ĥ\",\n\t\"hcirc\": \"ĥ\",\n\t\"hearts\": \"♥\",\n\t\"heartsuit\": \"♥\",\n\t\"hellip\": \"…\",\n\t\"hercon\": \"⊹\",\n\t\"hfr\": \"𝔥\",\n\t\"Hfr\": \"ℌ\",\n\t\"HilbertSpace\": \"ℋ\",\n\t\"hksearow\": \"⤥\",\n\t\"hkswarow\": \"⤦\",\n\t\"hoarr\": \"⇿\",\n\t\"homtht\": \"∻\",\n\t\"hookleftarrow\": \"↩\",\n\t\"hookrightarrow\": \"↪\",\n\t\"hopf\": \"𝕙\",\n\t\"Hopf\": \"ℍ\",\n\t\"horbar\": \"―\",\n\t\"HorizontalLine\": \"─\",\n\t\"hscr\": \"𝒽\",\n\t\"Hscr\": \"ℋ\",\n\t\"hslash\": \"ℏ\",\n\t\"Hstrok\": \"Ħ\",\n\t\"hstrok\": \"ħ\",\n\t\"HumpDownHump\": \"≎\",\n\t\"HumpEqual\": \"≏\",\n\t\"hybull\": \"⁃\",\n\t\"hyphen\": \"‐\",\n\t\"Iacute\": \"Í\",\n\t\"iacute\": \"í\",\n\t\"ic\": \"⁣\",\n\t\"Icirc\": \"Î\",\n\t\"icirc\": \"î\",\n\t\"Icy\": \"И\",\n\t\"icy\": \"и\",\n\t\"Idot\": \"İ\",\n\t\"IEcy\": \"Е\",\n\t\"iecy\": \"е\",\n\t\"iexcl\": \"¡\",\n\t\"iff\": \"⇔\",\n\t\"ifr\": \"𝔦\",\n\t\"Ifr\": \"ℑ\",\n\t\"Igrave\": \"Ì\",\n\t\"igrave\": \"ì\",\n\t\"ii\": \"ⅈ\",\n\t\"iiiint\": \"⨌\",\n\t\"iiint\": \"∭\",\n\t\"iinfin\": \"⧜\",\n\t\"iiota\": \"℩\",\n\t\"IJlig\": \"Ĳ\",\n\t\"ijlig\": \"ĳ\",\n\t\"Imacr\": \"Ī\",\n\t\"imacr\": \"ī\",\n\t\"image\": \"ℑ\",\n\t\"ImaginaryI\": \"ⅈ\",\n\t\"imagline\": \"ℐ\",\n\t\"imagpart\": \"ℑ\",\n\t\"imath\": \"ı\",\n\t\"Im\": \"ℑ\",\n\t\"imof\": \"⊷\",\n\t\"imped\": \"Ƶ\",\n\t\"Implies\": \"⇒\",\n\t\"incare\": \"℅\",\n\t\"in\": \"∈\",\n\t\"infin\": \"∞\",\n\t\"infintie\": \"⧝\",\n\t\"inodot\": \"ı\",\n\t\"intcal\": \"⊺\",\n\t\"int\": \"∫\",\n\t\"Int\": \"∬\",\n\t\"integers\": \"ℤ\",\n\t\"Integral\": \"∫\",\n\t\"intercal\": \"⊺\",\n\t\"Intersection\": \"⋂\",\n\t\"intlarhk\": \"⨗\",\n\t\"intprod\": \"⨼\",\n\t\"InvisibleComma\": \"⁣\",\n\t\"InvisibleTimes\": \"⁢\",\n\t\"IOcy\": \"Ё\",\n\t\"iocy\": \"ё\",\n\t\"Iogon\": \"Į\",\n\t\"iogon\": \"į\",\n\t\"Iopf\": \"𝕀\",\n\t\"iopf\": \"𝕚\",\n\t\"Iota\": \"Ι\",\n\t\"iota\": \"ι\",\n\t\"iprod\": \"⨼\",\n\t\"iquest\": \"¿\",\n\t\"iscr\": \"𝒾\",\n\t\"Iscr\": \"ℐ\",\n\t\"isin\": \"∈\",\n\t\"isindot\": \"⋵\",\n\t\"isinE\": \"⋹\",\n\t\"isins\": \"⋴\",\n\t\"isinsv\": \"⋳\",\n\t\"isinv\": \"∈\",\n\t\"it\": \"⁢\",\n\t\"Itilde\": \"Ĩ\",\n\t\"itilde\": \"ĩ\",\n\t\"Iukcy\": \"І\",\n\t\"iukcy\": \"і\",\n\t\"Iuml\": \"Ï\",\n\t\"iuml\": \"ï\",\n\t\"Jcirc\": \"Ĵ\",\n\t\"jcirc\": \"ĵ\",\n\t\"Jcy\": \"Й\",\n\t\"jcy\": \"й\",\n\t\"Jfr\": \"𝔍\",\n\t\"jfr\": \"𝔧\",\n\t\"jmath\": \"ȷ\",\n\t\"Jopf\": \"𝕁\",\n\t\"jopf\": \"𝕛\",\n\t\"Jscr\": \"𝒥\",\n\t\"jscr\": \"𝒿\",\n\t\"Jsercy\": \"Ј\",\n\t\"jsercy\": \"ј\",\n\t\"Jukcy\": \"Є\",\n\t\"jukcy\": \"є\",\n\t\"Kappa\": \"Κ\",\n\t\"kappa\": \"κ\",\n\t\"kappav\": \"ϰ\",\n\t\"Kcedil\": \"Ķ\",\n\t\"kcedil\": \"ķ\",\n\t\"Kcy\": \"К\",\n\t\"kcy\": \"к\",\n\t\"Kfr\": \"𝔎\",\n\t\"kfr\": \"𝔨\",\n\t\"kgreen\": \"ĸ\",\n\t\"KHcy\": \"Х\",\n\t\"khcy\": \"х\",\n\t\"KJcy\": \"Ќ\",\n\t\"kjcy\": \"ќ\",\n\t\"Kopf\": \"𝕂\",\n\t\"kopf\": \"𝕜\",\n\t\"Kscr\": \"𝒦\",\n\t\"kscr\": \"𝓀\",\n\t\"lAarr\": \"⇚\",\n\t\"Lacute\": \"Ĺ\",\n\t\"lacute\": \"ĺ\",\n\t\"laemptyv\": \"⦴\",\n\t\"lagran\": \"ℒ\",\n\t\"Lambda\": \"Λ\",\n\t\"lambda\": \"λ\",\n\t\"lang\": \"⟨\",\n\t\"Lang\": \"⟪\",\n\t\"langd\": \"⦑\",\n\t\"langle\": \"⟨\",\n\t\"lap\": \"⪅\",\n\t\"Laplacetrf\": \"ℒ\",\n\t\"laquo\": \"«\",\n\t\"larrb\": \"⇤\",\n\t\"larrbfs\": \"⤟\",\n\t\"larr\": \"←\",\n\t\"Larr\": \"↞\",\n\t\"lArr\": \"⇐\",\n\t\"larrfs\": \"⤝\",\n\t\"larrhk\": \"↩\",\n\t\"larrlp\": \"↫\",\n\t\"larrpl\": \"⤹\",\n\t\"larrsim\": \"⥳\",\n\t\"larrtl\": \"↢\",\n\t\"latail\": \"⤙\",\n\t\"lAtail\": \"⤛\",\n\t\"lat\": \"⪫\",\n\t\"late\": \"⪭\",\n\t\"lates\": \"⪭︀\",\n\t\"lbarr\": \"⤌\",\n\t\"lBarr\": \"⤎\",\n\t\"lbbrk\": \"❲\",\n\t\"lbrace\": \"{\",\n\t\"lbrack\": \"[\",\n\t\"lbrke\": \"⦋\",\n\t\"lbrksld\": \"⦏\",\n\t\"lbrkslu\": \"⦍\",\n\t\"Lcaron\": \"Ľ\",\n\t\"lcaron\": \"ľ\",\n\t\"Lcedil\": \"Ļ\",\n\t\"lcedil\": \"ļ\",\n\t\"lceil\": \"⌈\",\n\t\"lcub\": \"{\",\n\t\"Lcy\": \"Л\",\n\t\"lcy\": \"л\",\n\t\"ldca\": \"⤶\",\n\t\"ldquo\": \"“\",\n\t\"ldquor\": \"„\",\n\t\"ldrdhar\": \"⥧\",\n\t\"ldrushar\": \"⥋\",\n\t\"ldsh\": \"↲\",\n\t\"le\": \"≤\",\n\t\"lE\": \"≦\",\n\t\"LeftAngleBracket\": \"⟨\",\n\t\"LeftArrowBar\": \"⇤\",\n\t\"leftarrow\": \"←\",\n\t\"LeftArrow\": \"←\",\n\t\"Leftarrow\": \"⇐\",\n\t\"LeftArrowRightArrow\": \"⇆\",\n\t\"leftarrowtail\": \"↢\",\n\t\"LeftCeiling\": \"⌈\",\n\t\"LeftDoubleBracket\": \"⟦\",\n\t\"LeftDownTeeVector\": \"⥡\",\n\t\"LeftDownVectorBar\": \"⥙\",\n\t\"LeftDownVector\": \"⇃\",\n\t\"LeftFloor\": \"⌊\",\n\t\"leftharpoondown\": \"↽\",\n\t\"leftharpoonup\": \"↼\",\n\t\"leftleftarrows\": \"⇇\",\n\t\"leftrightarrow\": \"↔\",\n\t\"LeftRightArrow\": \"↔\",\n\t\"Leftrightarrow\": \"⇔\",\n\t\"leftrightarrows\": \"⇆\",\n\t\"leftrightharpoons\": \"⇋\",\n\t\"leftrightsquigarrow\": \"↭\",\n\t\"LeftRightVector\": \"⥎\",\n\t\"LeftTeeArrow\": \"↤\",\n\t\"LeftTee\": \"⊣\",\n\t\"LeftTeeVector\": \"⥚\",\n\t\"leftthreetimes\": \"⋋\",\n\t\"LeftTriangleBar\": \"⧏\",\n\t\"LeftTriangle\": \"⊲\",\n\t\"LeftTriangleEqual\": \"⊴\",\n\t\"LeftUpDownVector\": \"⥑\",\n\t\"LeftUpTeeVector\": \"⥠\",\n\t\"LeftUpVectorBar\": \"⥘\",\n\t\"LeftUpVector\": \"↿\",\n\t\"LeftVectorBar\": \"⥒\",\n\t\"LeftVector\": \"↼\",\n\t\"lEg\": \"⪋\",\n\t\"leg\": \"⋚\",\n\t\"leq\": \"≤\",\n\t\"leqq\": \"≦\",\n\t\"leqslant\": \"⩽\",\n\t\"lescc\": \"⪨\",\n\t\"les\": \"⩽\",\n\t\"lesdot\": \"⩿\",\n\t\"lesdoto\": \"⪁\",\n\t\"lesdotor\": \"⪃\",\n\t\"lesg\": \"⋚︀\",\n\t\"lesges\": \"⪓\",\n\t\"lessapprox\": \"⪅\",\n\t\"lessdot\": \"⋖\",\n\t\"lesseqgtr\": \"⋚\",\n\t\"lesseqqgtr\": \"⪋\",\n\t\"LessEqualGreater\": \"⋚\",\n\t\"LessFullEqual\": \"≦\",\n\t\"LessGreater\": \"≶\",\n\t\"lessgtr\": \"≶\",\n\t\"LessLess\": \"⪡\",\n\t\"lesssim\": \"≲\",\n\t\"LessSlantEqual\": \"⩽\",\n\t\"LessTilde\": \"≲\",\n\t\"lfisht\": \"⥼\",\n\t\"lfloor\": \"⌊\",\n\t\"Lfr\": \"𝔏\",\n\t\"lfr\": \"𝔩\",\n\t\"lg\": \"≶\",\n\t\"lgE\": \"⪑\",\n\t\"lHar\": \"⥢\",\n\t\"lhard\": \"↽\",\n\t\"lharu\": \"↼\",\n\t\"lharul\": \"⥪\",\n\t\"lhblk\": \"▄\",\n\t\"LJcy\": \"Љ\",\n\t\"ljcy\": \"љ\",\n\t\"llarr\": \"⇇\",\n\t\"ll\": \"≪\",\n\t\"Ll\": \"⋘\",\n\t\"llcorner\": \"⌞\",\n\t\"Lleftarrow\": \"⇚\",\n\t\"llhard\": \"⥫\",\n\t\"lltri\": \"◺\",\n\t\"Lmidot\": \"Ŀ\",\n\t\"lmidot\": \"ŀ\",\n\t\"lmoustache\": \"⎰\",\n\t\"lmoust\": \"⎰\",\n\t\"lnap\": \"⪉\",\n\t\"lnapprox\": \"⪉\",\n\t\"lne\": \"⪇\",\n\t\"lnE\": \"≨\",\n\t\"lneq\": \"⪇\",\n\t\"lneqq\": \"≨\",\n\t\"lnsim\": \"⋦\",\n\t\"loang\": \"⟬\",\n\t\"loarr\": \"⇽\",\n\t\"lobrk\": \"⟦\",\n\t\"longleftarrow\": \"⟵\",\n\t\"LongLeftArrow\": \"⟵\",\n\t\"Longleftarrow\": \"⟸\",\n\t\"longleftrightarrow\": \"⟷\",\n\t\"LongLeftRightArrow\": \"⟷\",\n\t\"Longleftrightarrow\": \"⟺\",\n\t\"longmapsto\": \"⟼\",\n\t\"longrightarrow\": \"⟶\",\n\t\"LongRightArrow\": \"⟶\",\n\t\"Longrightarrow\": \"⟹\",\n\t\"looparrowleft\": \"↫\",\n\t\"looparrowright\": \"↬\",\n\t\"lopar\": \"⦅\",\n\t\"Lopf\": \"𝕃\",\n\t\"lopf\": \"𝕝\",\n\t\"loplus\": \"⨭\",\n\t\"lotimes\": \"⨴\",\n\t\"lowast\": \"∗\",\n\t\"lowbar\": \"_\",\n\t\"LowerLeftArrow\": \"↙\",\n\t\"LowerRightArrow\": \"↘\",\n\t\"loz\": \"◊\",\n\t\"lozenge\": \"◊\",\n\t\"lozf\": \"⧫\",\n\t\"lpar\": \"(\",\n\t\"lparlt\": \"⦓\",\n\t\"lrarr\": \"⇆\",\n\t\"lrcorner\": \"⌟\",\n\t\"lrhar\": \"⇋\",\n\t\"lrhard\": \"⥭\",\n\t\"lrm\": \"‎\",\n\t\"lrtri\": \"⊿\",\n\t\"lsaquo\": \"‹\",\n\t\"lscr\": \"𝓁\",\n\t\"Lscr\": \"ℒ\",\n\t\"lsh\": \"↰\",\n\t\"Lsh\": \"↰\",\n\t\"lsim\": \"≲\",\n\t\"lsime\": \"⪍\",\n\t\"lsimg\": \"⪏\",\n\t\"lsqb\": \"[\",\n\t\"lsquo\": \"‘\",\n\t\"lsquor\": \"‚\",\n\t\"Lstrok\": \"Ł\",\n\t\"lstrok\": \"ł\",\n\t\"ltcc\": \"⪦\",\n\t\"ltcir\": \"⩹\",\n\t\"lt\": \"<\",\n\t\"LT\": \"<\",\n\t\"Lt\": \"≪\",\n\t\"ltdot\": \"⋖\",\n\t\"lthree\": \"⋋\",\n\t\"ltimes\": \"⋉\",\n\t\"ltlarr\": \"⥶\",\n\t\"ltquest\": \"⩻\",\n\t\"ltri\": \"◃\",\n\t\"ltrie\": \"⊴\",\n\t\"ltrif\": \"◂\",\n\t\"ltrPar\": \"⦖\",\n\t\"lurdshar\": \"⥊\",\n\t\"luruhar\": \"⥦\",\n\t\"lvertneqq\": \"≨︀\",\n\t\"lvnE\": \"≨︀\",\n\t\"macr\": \"¯\",\n\t\"male\": \"♂\",\n\t\"malt\": \"✠\",\n\t\"maltese\": \"✠\",\n\t\"Map\": \"⤅\",\n\t\"map\": \"↦\",\n\t\"mapsto\": \"↦\",\n\t\"mapstodown\": \"↧\",\n\t\"mapstoleft\": \"↤\",\n\t\"mapstoup\": \"↥\",\n\t\"marker\": \"▮\",\n\t\"mcomma\": \"⨩\",\n\t\"Mcy\": \"М\",\n\t\"mcy\": \"м\",\n\t\"mdash\": \"—\",\n\t\"mDDot\": \"∺\",\n\t\"measuredangle\": \"∡\",\n\t\"MediumSpace\": \" \",\n\t\"Mellintrf\": \"ℳ\",\n\t\"Mfr\": \"𝔐\",\n\t\"mfr\": \"𝔪\",\n\t\"mho\": \"℧\",\n\t\"micro\": \"µ\",\n\t\"midast\": \"*\",\n\t\"midcir\": \"⫰\",\n\t\"mid\": \"∣\",\n\t\"middot\": \"·\",\n\t\"minusb\": \"⊟\",\n\t\"minus\": \"−\",\n\t\"minusd\": \"∸\",\n\t\"minusdu\": \"⨪\",\n\t\"MinusPlus\": \"∓\",\n\t\"mlcp\": \"⫛\",\n\t\"mldr\": \"…\",\n\t\"mnplus\": \"∓\",\n\t\"models\": \"⊧\",\n\t\"Mopf\": \"𝕄\",\n\t\"mopf\": \"𝕞\",\n\t\"mp\": \"∓\",\n\t\"mscr\": \"𝓂\",\n\t\"Mscr\": \"ℳ\",\n\t\"mstpos\": \"∾\",\n\t\"Mu\": \"Μ\",\n\t\"mu\": \"μ\",\n\t\"multimap\": \"⊸\",\n\t\"mumap\": \"⊸\",\n\t\"nabla\": \"∇\",\n\t\"Nacute\": \"Ń\",\n\t\"nacute\": \"ń\",\n\t\"nang\": \"∠⃒\",\n\t\"nap\": \"≉\",\n\t\"napE\": \"⩰̸\",\n\t\"napid\": \"≋̸\",\n\t\"napos\": \"ŉ\",\n\t\"napprox\": \"≉\",\n\t\"natural\": \"♮\",\n\t\"naturals\": \"ℕ\",\n\t\"natur\": \"♮\",\n\t\"nbsp\": \" \",\n\t\"nbump\": \"≎̸\",\n\t\"nbumpe\": \"≏̸\",\n\t\"ncap\": \"⩃\",\n\t\"Ncaron\": \"Ň\",\n\t\"ncaron\": \"ň\",\n\t\"Ncedil\": \"Ņ\",\n\t\"ncedil\": \"ņ\",\n\t\"ncong\": \"≇\",\n\t\"ncongdot\": \"⩭̸\",\n\t\"ncup\": \"⩂\",\n\t\"Ncy\": \"Н\",\n\t\"ncy\": \"н\",\n\t\"ndash\": \"–\",\n\t\"nearhk\": \"⤤\",\n\t\"nearr\": \"↗\",\n\t\"neArr\": \"⇗\",\n\t\"nearrow\": \"↗\",\n\t\"ne\": \"≠\",\n\t\"nedot\": \"≐̸\",\n\t\"NegativeMediumSpace\": \"​\",\n\t\"NegativeThickSpace\": \"​\",\n\t\"NegativeThinSpace\": \"​\",\n\t\"NegativeVeryThinSpace\": \"​\",\n\t\"nequiv\": \"≢\",\n\t\"nesear\": \"⤨\",\n\t\"nesim\": \"≂̸\",\n\t\"NestedGreaterGreater\": \"≫\",\n\t\"NestedLessLess\": \"≪\",\n\t\"NewLine\": \"\\n\",\n\t\"nexist\": \"∄\",\n\t\"nexists\": \"∄\",\n\t\"Nfr\": \"𝔑\",\n\t\"nfr\": \"𝔫\",\n\t\"ngE\": \"≧̸\",\n\t\"nge\": \"≱\",\n\t\"ngeq\": \"≱\",\n\t\"ngeqq\": \"≧̸\",\n\t\"ngeqslant\": \"⩾̸\",\n\t\"nges\": \"⩾̸\",\n\t\"nGg\": \"⋙̸\",\n\t\"ngsim\": \"≵\",\n\t\"nGt\": \"≫⃒\",\n\t\"ngt\": \"≯\",\n\t\"ngtr\": \"≯\",\n\t\"nGtv\": \"≫̸\",\n\t\"nharr\": \"↮\",\n\t\"nhArr\": \"⇎\",\n\t\"nhpar\": \"⫲\",\n\t\"ni\": \"∋\",\n\t\"nis\": \"⋼\",\n\t\"nisd\": \"⋺\",\n\t\"niv\": \"∋\",\n\t\"NJcy\": \"Њ\",\n\t\"njcy\": \"њ\",\n\t\"nlarr\": \"↚\",\n\t\"nlArr\": \"⇍\",\n\t\"nldr\": \"‥\",\n\t\"nlE\": \"≦̸\",\n\t\"nle\": \"≰\",\n\t\"nleftarrow\": \"↚\",\n\t\"nLeftarrow\": \"⇍\",\n\t\"nleftrightarrow\": \"↮\",\n\t\"nLeftrightarrow\": \"⇎\",\n\t\"nleq\": \"≰\",\n\t\"nleqq\": \"≦̸\",\n\t\"nleqslant\": \"⩽̸\",\n\t\"nles\": \"⩽̸\",\n\t\"nless\": \"≮\",\n\t\"nLl\": \"⋘̸\",\n\t\"nlsim\": \"≴\",\n\t\"nLt\": \"≪⃒\",\n\t\"nlt\": \"≮\",\n\t\"nltri\": \"⋪\",\n\t\"nltrie\": \"⋬\",\n\t\"nLtv\": \"≪̸\",\n\t\"nmid\": \"∤\",\n\t\"NoBreak\": \"⁠\",\n\t\"NonBreakingSpace\": \" \",\n\t\"nopf\": \"𝕟\",\n\t\"Nopf\": \"ℕ\",\n\t\"Not\": \"⫬\",\n\t\"not\": \"¬\",\n\t\"NotCongruent\": \"≢\",\n\t\"NotCupCap\": \"≭\",\n\t\"NotDoubleVerticalBar\": \"∦\",\n\t\"NotElement\": \"∉\",\n\t\"NotEqual\": \"≠\",\n\t\"NotEqualTilde\": \"≂̸\",\n\t\"NotExists\": \"∄\",\n\t\"NotGreater\": \"≯\",\n\t\"NotGreaterEqual\": \"≱\",\n\t\"NotGreaterFullEqual\": \"≧̸\",\n\t\"NotGreaterGreater\": \"≫̸\",\n\t\"NotGreaterLess\": \"≹\",\n\t\"NotGreaterSlantEqual\": \"⩾̸\",\n\t\"NotGreaterTilde\": \"≵\",\n\t\"NotHumpDownHump\": \"≎̸\",\n\t\"NotHumpEqual\": \"≏̸\",\n\t\"notin\": \"∉\",\n\t\"notindot\": \"⋵̸\",\n\t\"notinE\": \"⋹̸\",\n\t\"notinva\": \"∉\",\n\t\"notinvb\": \"⋷\",\n\t\"notinvc\": \"⋶\",\n\t\"NotLeftTriangleBar\": \"⧏̸\",\n\t\"NotLeftTriangle\": \"⋪\",\n\t\"NotLeftTriangleEqual\": \"⋬\",\n\t\"NotLess\": \"≮\",\n\t\"NotLessEqual\": \"≰\",\n\t\"NotLessGreater\": \"≸\",\n\t\"NotLessLess\": \"≪̸\",\n\t\"NotLessSlantEqual\": \"⩽̸\",\n\t\"NotLessTilde\": \"≴\",\n\t\"NotNestedGreaterGreater\": \"⪢̸\",\n\t\"NotNestedLessLess\": \"⪡̸\",\n\t\"notni\": \"∌\",\n\t\"notniva\": \"∌\",\n\t\"notnivb\": \"⋾\",\n\t\"notnivc\": \"⋽\",\n\t\"NotPrecedes\": \"⊀\",\n\t\"NotPrecedesEqual\": \"⪯̸\",\n\t\"NotPrecedesSlantEqual\": \"⋠\",\n\t\"NotReverseElement\": \"∌\",\n\t\"NotRightTriangleBar\": \"⧐̸\",\n\t\"NotRightTriangle\": \"⋫\",\n\t\"NotRightTriangleEqual\": \"⋭\",\n\t\"NotSquareSubset\": \"⊏̸\",\n\t\"NotSquareSubsetEqual\": \"⋢\",\n\t\"NotSquareSuperset\": \"⊐̸\",\n\t\"NotSquareSupersetEqual\": \"⋣\",\n\t\"NotSubset\": \"⊂⃒\",\n\t\"NotSubsetEqual\": \"⊈\",\n\t\"NotSucceeds\": \"⊁\",\n\t\"NotSucceedsEqual\": \"⪰̸\",\n\t\"NotSucceedsSlantEqual\": \"⋡\",\n\t\"NotSucceedsTilde\": \"≿̸\",\n\t\"NotSuperset\": \"⊃⃒\",\n\t\"NotSupersetEqual\": \"⊉\",\n\t\"NotTilde\": \"≁\",\n\t\"NotTildeEqual\": \"≄\",\n\t\"NotTildeFullEqual\": \"≇\",\n\t\"NotTildeTilde\": \"≉\",\n\t\"NotVerticalBar\": \"∤\",\n\t\"nparallel\": \"∦\",\n\t\"npar\": \"∦\",\n\t\"nparsl\": \"⫽⃥\",\n\t\"npart\": \"∂̸\",\n\t\"npolint\": \"⨔\",\n\t\"npr\": \"⊀\",\n\t\"nprcue\": \"⋠\",\n\t\"nprec\": \"⊀\",\n\t\"npreceq\": \"⪯̸\",\n\t\"npre\": \"⪯̸\",\n\t\"nrarrc\": \"⤳̸\",\n\t\"nrarr\": \"↛\",\n\t\"nrArr\": \"⇏\",\n\t\"nrarrw\": \"↝̸\",\n\t\"nrightarrow\": \"↛\",\n\t\"nRightarrow\": \"⇏\",\n\t\"nrtri\": \"⋫\",\n\t\"nrtrie\": \"⋭\",\n\t\"nsc\": \"⊁\",\n\t\"nsccue\": \"⋡\",\n\t\"nsce\": \"⪰̸\",\n\t\"Nscr\": \"𝒩\",\n\t\"nscr\": \"𝓃\",\n\t\"nshortmid\": \"∤\",\n\t\"nshortparallel\": \"∦\",\n\t\"nsim\": \"≁\",\n\t\"nsime\": \"≄\",\n\t\"nsimeq\": \"≄\",\n\t\"nsmid\": \"∤\",\n\t\"nspar\": \"∦\",\n\t\"nsqsube\": \"⋢\",\n\t\"nsqsupe\": \"⋣\",\n\t\"nsub\": \"⊄\",\n\t\"nsubE\": \"⫅̸\",\n\t\"nsube\": \"⊈\",\n\t\"nsubset\": \"⊂⃒\",\n\t\"nsubseteq\": \"⊈\",\n\t\"nsubseteqq\": \"⫅̸\",\n\t\"nsucc\": \"⊁\",\n\t\"nsucceq\": \"⪰̸\",\n\t\"nsup\": \"⊅\",\n\t\"nsupE\": \"⫆̸\",\n\t\"nsupe\": \"⊉\",\n\t\"nsupset\": \"⊃⃒\",\n\t\"nsupseteq\": \"⊉\",\n\t\"nsupseteqq\": \"⫆̸\",\n\t\"ntgl\": \"≹\",\n\t\"Ntilde\": \"Ñ\",\n\t\"ntilde\": \"ñ\",\n\t\"ntlg\": \"≸\",\n\t\"ntriangleleft\": \"⋪\",\n\t\"ntrianglelefteq\": \"⋬\",\n\t\"ntriangleright\": \"⋫\",\n\t\"ntrianglerighteq\": \"⋭\",\n\t\"Nu\": \"Ν\",\n\t\"nu\": \"ν\",\n\t\"num\": \"#\",\n\t\"numero\": \"№\",\n\t\"numsp\": \" \",\n\t\"nvap\": \"≍⃒\",\n\t\"nvdash\": \"⊬\",\n\t\"nvDash\": \"⊭\",\n\t\"nVdash\": \"⊮\",\n\t\"nVDash\": \"⊯\",\n\t\"nvge\": \"≥⃒\",\n\t\"nvgt\": \">⃒\",\n\t\"nvHarr\": \"⤄\",\n\t\"nvinfin\": \"⧞\",\n\t\"nvlArr\": \"⤂\",\n\t\"nvle\": \"≤⃒\",\n\t\"nvlt\": \"<⃒\",\n\t\"nvltrie\": \"⊴⃒\",\n\t\"nvrArr\": \"⤃\",\n\t\"nvrtrie\": \"⊵⃒\",\n\t\"nvsim\": \"∼⃒\",\n\t\"nwarhk\": \"⤣\",\n\t\"nwarr\": \"↖\",\n\t\"nwArr\": \"⇖\",\n\t\"nwarrow\": \"↖\",\n\t\"nwnear\": \"⤧\",\n\t\"Oacute\": \"Ó\",\n\t\"oacute\": \"ó\",\n\t\"oast\": \"⊛\",\n\t\"Ocirc\": \"Ô\",\n\t\"ocirc\": \"ô\",\n\t\"ocir\": \"⊚\",\n\t\"Ocy\": \"О\",\n\t\"ocy\": \"о\",\n\t\"odash\": \"⊝\",\n\t\"Odblac\": \"Ő\",\n\t\"odblac\": \"ő\",\n\t\"odiv\": \"⨸\",\n\t\"odot\": \"⊙\",\n\t\"odsold\": \"⦼\",\n\t\"OElig\": \"Œ\",\n\t\"oelig\": \"œ\",\n\t\"ofcir\": \"⦿\",\n\t\"Ofr\": \"𝔒\",\n\t\"ofr\": \"𝔬\",\n\t\"ogon\": \"˛\",\n\t\"Ograve\": \"Ò\",\n\t\"ograve\": \"ò\",\n\t\"ogt\": \"⧁\",\n\t\"ohbar\": \"⦵\",\n\t\"ohm\": \"Ω\",\n\t\"oint\": \"∮\",\n\t\"olarr\": \"↺\",\n\t\"olcir\": \"⦾\",\n\t\"olcross\": \"⦻\",\n\t\"oline\": \"‾\",\n\t\"olt\": \"⧀\",\n\t\"Omacr\": \"Ō\",\n\t\"omacr\": \"ō\",\n\t\"Omega\": \"Ω\",\n\t\"omega\": \"ω\",\n\t\"Omicron\": \"Ο\",\n\t\"omicron\": \"ο\",\n\t\"omid\": \"⦶\",\n\t\"ominus\": \"⊖\",\n\t\"Oopf\": \"𝕆\",\n\t\"oopf\": \"𝕠\",\n\t\"opar\": \"⦷\",\n\t\"OpenCurlyDoubleQuote\": \"“\",\n\t\"OpenCurlyQuote\": \"‘\",\n\t\"operp\": \"⦹\",\n\t\"oplus\": \"⊕\",\n\t\"orarr\": \"↻\",\n\t\"Or\": \"⩔\",\n\t\"or\": \"∨\",\n\t\"ord\": \"⩝\",\n\t\"order\": \"ℴ\",\n\t\"orderof\": \"ℴ\",\n\t\"ordf\": \"ª\",\n\t\"ordm\": \"º\",\n\t\"origof\": \"⊶\",\n\t\"oror\": \"⩖\",\n\t\"orslope\": \"⩗\",\n\t\"orv\": \"⩛\",\n\t\"oS\": \"Ⓢ\",\n\t\"Oscr\": \"𝒪\",\n\t\"oscr\": \"ℴ\",\n\t\"Oslash\": \"Ø\",\n\t\"oslash\": \"ø\",\n\t\"osol\": \"⊘\",\n\t\"Otilde\": \"Õ\",\n\t\"otilde\": \"õ\",\n\t\"otimesas\": \"⨶\",\n\t\"Otimes\": \"⨷\",\n\t\"otimes\": \"⊗\",\n\t\"Ouml\": \"Ö\",\n\t\"ouml\": \"ö\",\n\t\"ovbar\": \"⌽\",\n\t\"OverBar\": \"‾\",\n\t\"OverBrace\": \"⏞\",\n\t\"OverBracket\": \"⎴\",\n\t\"OverParenthesis\": \"⏜\",\n\t\"para\": \"¶\",\n\t\"parallel\": \"∥\",\n\t\"par\": \"∥\",\n\t\"parsim\": \"⫳\",\n\t\"parsl\": \"⫽\",\n\t\"part\": \"∂\",\n\t\"PartialD\": \"∂\",\n\t\"Pcy\": \"П\",\n\t\"pcy\": \"п\",\n\t\"percnt\": \"%\",\n\t\"period\": \".\",\n\t\"permil\": \"‰\",\n\t\"perp\": \"⊥\",\n\t\"pertenk\": \"‱\",\n\t\"Pfr\": \"𝔓\",\n\t\"pfr\": \"𝔭\",\n\t\"Phi\": \"Φ\",\n\t\"phi\": \"φ\",\n\t\"phiv\": \"ϕ\",\n\t\"phmmat\": \"ℳ\",\n\t\"phone\": \"☎\",\n\t\"Pi\": \"Π\",\n\t\"pi\": \"π\",\n\t\"pitchfork\": \"⋔\",\n\t\"piv\": \"ϖ\",\n\t\"planck\": \"ℏ\",\n\t\"planckh\": \"ℎ\",\n\t\"plankv\": \"ℏ\",\n\t\"plusacir\": \"⨣\",\n\t\"plusb\": \"⊞\",\n\t\"pluscir\": \"⨢\",\n\t\"plus\": \"+\",\n\t\"plusdo\": \"∔\",\n\t\"plusdu\": \"⨥\",\n\t\"pluse\": \"⩲\",\n\t\"PlusMinus\": \"±\",\n\t\"plusmn\": \"±\",\n\t\"plussim\": \"⨦\",\n\t\"plustwo\": \"⨧\",\n\t\"pm\": \"±\",\n\t\"Poincareplane\": \"ℌ\",\n\t\"pointint\": \"⨕\",\n\t\"popf\": \"𝕡\",\n\t\"Popf\": \"ℙ\",\n\t\"pound\": \"£\",\n\t\"prap\": \"⪷\",\n\t\"Pr\": \"⪻\",\n\t\"pr\": \"≺\",\n\t\"prcue\": \"≼\",\n\t\"precapprox\": \"⪷\",\n\t\"prec\": \"≺\",\n\t\"preccurlyeq\": \"≼\",\n\t\"Precedes\": \"≺\",\n\t\"PrecedesEqual\": \"⪯\",\n\t\"PrecedesSlantEqual\": \"≼\",\n\t\"PrecedesTilde\": \"≾\",\n\t\"preceq\": \"⪯\",\n\t\"precnapprox\": \"⪹\",\n\t\"precneqq\": \"⪵\",\n\t\"precnsim\": \"⋨\",\n\t\"pre\": \"⪯\",\n\t\"prE\": \"⪳\",\n\t\"precsim\": \"≾\",\n\t\"prime\": \"′\",\n\t\"Prime\": \"″\",\n\t\"primes\": \"ℙ\",\n\t\"prnap\": \"⪹\",\n\t\"prnE\": \"⪵\",\n\t\"prnsim\": \"⋨\",\n\t\"prod\": \"∏\",\n\t\"Product\": \"∏\",\n\t\"profalar\": \"⌮\",\n\t\"profline\": \"⌒\",\n\t\"profsurf\": \"⌓\",\n\t\"prop\": \"∝\",\n\t\"Proportional\": \"∝\",\n\t\"Proportion\": \"∷\",\n\t\"propto\": \"∝\",\n\t\"prsim\": \"≾\",\n\t\"prurel\": \"⊰\",\n\t\"Pscr\": \"𝒫\",\n\t\"pscr\": \"𝓅\",\n\t\"Psi\": \"Ψ\",\n\t\"psi\": \"ψ\",\n\t\"puncsp\": \" \",\n\t\"Qfr\": \"𝔔\",\n\t\"qfr\": \"𝔮\",\n\t\"qint\": \"⨌\",\n\t\"qopf\": \"𝕢\",\n\t\"Qopf\": \"ℚ\",\n\t\"qprime\": \"⁗\",\n\t\"Qscr\": \"𝒬\",\n\t\"qscr\": \"𝓆\",\n\t\"quaternions\": \"ℍ\",\n\t\"quatint\": \"⨖\",\n\t\"quest\": \"?\",\n\t\"questeq\": \"≟\",\n\t\"quot\": \"\\\"\",\n\t\"QUOT\": \"\\\"\",\n\t\"rAarr\": \"⇛\",\n\t\"race\": \"∽̱\",\n\t\"Racute\": \"Ŕ\",\n\t\"racute\": \"ŕ\",\n\t\"radic\": \"√\",\n\t\"raemptyv\": \"⦳\",\n\t\"rang\": \"⟩\",\n\t\"Rang\": \"⟫\",\n\t\"rangd\": \"⦒\",\n\t\"range\": \"⦥\",\n\t\"rangle\": \"⟩\",\n\t\"raquo\": \"»\",\n\t\"rarrap\": \"⥵\",\n\t\"rarrb\": \"⇥\",\n\t\"rarrbfs\": \"⤠\",\n\t\"rarrc\": \"⤳\",\n\t\"rarr\": \"→\",\n\t\"Rarr\": \"↠\",\n\t\"rArr\": \"⇒\",\n\t\"rarrfs\": \"⤞\",\n\t\"rarrhk\": \"↪\",\n\t\"rarrlp\": \"↬\",\n\t\"rarrpl\": \"⥅\",\n\t\"rarrsim\": \"⥴\",\n\t\"Rarrtl\": \"⤖\",\n\t\"rarrtl\": \"↣\",\n\t\"rarrw\": \"↝\",\n\t\"ratail\": \"⤚\",\n\t\"rAtail\": \"⤜\",\n\t\"ratio\": \"∶\",\n\t\"rationals\": \"ℚ\",\n\t\"rbarr\": \"⤍\",\n\t\"rBarr\": \"⤏\",\n\t\"RBarr\": \"⤐\",\n\t\"rbbrk\": \"❳\",\n\t\"rbrace\": \"}\",\n\t\"rbrack\": \"]\",\n\t\"rbrke\": \"⦌\",\n\t\"rbrksld\": \"⦎\",\n\t\"rbrkslu\": \"⦐\",\n\t\"Rcaron\": \"Ř\",\n\t\"rcaron\": \"ř\",\n\t\"Rcedil\": \"Ŗ\",\n\t\"rcedil\": \"ŗ\",\n\t\"rceil\": \"⌉\",\n\t\"rcub\": \"}\",\n\t\"Rcy\": \"Р\",\n\t\"rcy\": \"р\",\n\t\"rdca\": \"⤷\",\n\t\"rdldhar\": \"⥩\",\n\t\"rdquo\": \"”\",\n\t\"rdquor\": \"”\",\n\t\"rdsh\": \"↳\",\n\t\"real\": \"ℜ\",\n\t\"realine\": \"ℛ\",\n\t\"realpart\": \"ℜ\",\n\t\"reals\": \"ℝ\",\n\t\"Re\": \"ℜ\",\n\t\"rect\": \"▭\",\n\t\"reg\": \"®\",\n\t\"REG\": \"®\",\n\t\"ReverseElement\": \"∋\",\n\t\"ReverseEquilibrium\": \"⇋\",\n\t\"ReverseUpEquilibrium\": \"⥯\",\n\t\"rfisht\": \"⥽\",\n\t\"rfloor\": \"⌋\",\n\t\"rfr\": \"𝔯\",\n\t\"Rfr\": \"ℜ\",\n\t\"rHar\": \"⥤\",\n\t\"rhard\": \"⇁\",\n\t\"rharu\": \"⇀\",\n\t\"rharul\": \"⥬\",\n\t\"Rho\": \"Ρ\",\n\t\"rho\": \"ρ\",\n\t\"rhov\": \"ϱ\",\n\t\"RightAngleBracket\": \"⟩\",\n\t\"RightArrowBar\": \"⇥\",\n\t\"rightarrow\": \"→\",\n\t\"RightArrow\": \"→\",\n\t\"Rightarrow\": \"⇒\",\n\t\"RightArrowLeftArrow\": \"⇄\",\n\t\"rightarrowtail\": \"↣\",\n\t\"RightCeiling\": \"⌉\",\n\t\"RightDoubleBracket\": \"⟧\",\n\t\"RightDownTeeVector\": \"⥝\",\n\t\"RightDownVectorBar\": \"⥕\",\n\t\"RightDownVector\": \"⇂\",\n\t\"RightFloor\": \"⌋\",\n\t\"rightharpoondown\": \"⇁\",\n\t\"rightharpoonup\": \"⇀\",\n\t\"rightleftarrows\": \"⇄\",\n\t\"rightleftharpoons\": \"⇌\",\n\t\"rightrightarrows\": \"⇉\",\n\t\"rightsquigarrow\": \"↝\",\n\t\"RightTeeArrow\": \"↦\",\n\t\"RightTee\": \"⊢\",\n\t\"RightTeeVector\": \"⥛\",\n\t\"rightthreetimes\": \"⋌\",\n\t\"RightTriangleBar\": \"⧐\",\n\t\"RightTriangle\": \"⊳\",\n\t\"RightTriangleEqual\": \"⊵\",\n\t\"RightUpDownVector\": \"⥏\",\n\t\"RightUpTeeVector\": \"⥜\",\n\t\"RightUpVectorBar\": \"⥔\",\n\t\"RightUpVector\": \"↾\",\n\t\"RightVectorBar\": \"⥓\",\n\t\"RightVector\": \"⇀\",\n\t\"ring\": \"˚\",\n\t\"risingdotseq\": \"≓\",\n\t\"rlarr\": \"⇄\",\n\t\"rlhar\": \"⇌\",\n\t\"rlm\": \"‏\",\n\t\"rmoustache\": \"⎱\",\n\t\"rmoust\": \"⎱\",\n\t\"rnmid\": \"⫮\",\n\t\"roang\": \"⟭\",\n\t\"roarr\": \"⇾\",\n\t\"robrk\": \"⟧\",\n\t\"ropar\": \"⦆\",\n\t\"ropf\": \"𝕣\",\n\t\"Ropf\": \"ℝ\",\n\t\"roplus\": \"⨮\",\n\t\"rotimes\": \"⨵\",\n\t\"RoundImplies\": \"⥰\",\n\t\"rpar\": \")\",\n\t\"rpargt\": \"⦔\",\n\t\"rppolint\": \"⨒\",\n\t\"rrarr\": \"⇉\",\n\t\"Rrightarrow\": \"⇛\",\n\t\"rsaquo\": \"›\",\n\t\"rscr\": \"𝓇\",\n\t\"Rscr\": \"ℛ\",\n\t\"rsh\": \"↱\",\n\t\"Rsh\": \"↱\",\n\t\"rsqb\": \"]\",\n\t\"rsquo\": \"’\",\n\t\"rsquor\": \"’\",\n\t\"rthree\": \"⋌\",\n\t\"rtimes\": \"⋊\",\n\t\"rtri\": \"▹\",\n\t\"rtrie\": \"⊵\",\n\t\"rtrif\": \"▸\",\n\t\"rtriltri\": \"⧎\",\n\t\"RuleDelayed\": \"⧴\",\n\t\"ruluhar\": \"⥨\",\n\t\"rx\": \"℞\",\n\t\"Sacute\": \"Ś\",\n\t\"sacute\": \"ś\",\n\t\"sbquo\": \"‚\",\n\t\"scap\": \"⪸\",\n\t\"Scaron\": \"Š\",\n\t\"scaron\": \"š\",\n\t\"Sc\": \"⪼\",\n\t\"sc\": \"≻\",\n\t\"sccue\": \"≽\",\n\t\"sce\": \"⪰\",\n\t\"scE\": \"⪴\",\n\t\"Scedil\": \"Ş\",\n\t\"scedil\": \"ş\",\n\t\"Scirc\": \"Ŝ\",\n\t\"scirc\": \"ŝ\",\n\t\"scnap\": \"⪺\",\n\t\"scnE\": \"⪶\",\n\t\"scnsim\": \"⋩\",\n\t\"scpolint\": \"⨓\",\n\t\"scsim\": \"≿\",\n\t\"Scy\": \"С\",\n\t\"scy\": \"с\",\n\t\"sdotb\": \"⊡\",\n\t\"sdot\": \"⋅\",\n\t\"sdote\": \"⩦\",\n\t\"searhk\": \"⤥\",\n\t\"searr\": \"↘\",\n\t\"seArr\": \"⇘\",\n\t\"searrow\": \"↘\",\n\t\"sect\": \"§\",\n\t\"semi\": \";\",\n\t\"seswar\": \"⤩\",\n\t\"setminus\": \"∖\",\n\t\"setmn\": \"∖\",\n\t\"sext\": \"✶\",\n\t\"Sfr\": \"𝔖\",\n\t\"sfr\": \"𝔰\",\n\t\"sfrown\": \"⌢\",\n\t\"sharp\": \"♯\",\n\t\"SHCHcy\": \"Щ\",\n\t\"shchcy\": \"щ\",\n\t\"SHcy\": \"Ш\",\n\t\"shcy\": \"ш\",\n\t\"ShortDownArrow\": \"↓\",\n\t\"ShortLeftArrow\": \"←\",\n\t\"shortmid\": \"∣\",\n\t\"shortparallel\": \"∥\",\n\t\"ShortRightArrow\": \"→\",\n\t\"ShortUpArrow\": \"↑\",\n\t\"shy\": \"­\",\n\t\"Sigma\": \"Σ\",\n\t\"sigma\": \"σ\",\n\t\"sigmaf\": \"ς\",\n\t\"sigmav\": \"ς\",\n\t\"sim\": \"∼\",\n\t\"simdot\": \"⩪\",\n\t\"sime\": \"≃\",\n\t\"simeq\": \"≃\",\n\t\"simg\": \"⪞\",\n\t\"simgE\": \"⪠\",\n\t\"siml\": \"⪝\",\n\t\"simlE\": \"⪟\",\n\t\"simne\": \"≆\",\n\t\"simplus\": \"⨤\",\n\t\"simrarr\": \"⥲\",\n\t\"slarr\": \"←\",\n\t\"SmallCircle\": \"∘\",\n\t\"smallsetminus\": \"∖\",\n\t\"smashp\": \"⨳\",\n\t\"smeparsl\": \"⧤\",\n\t\"smid\": \"∣\",\n\t\"smile\": \"⌣\",\n\t\"smt\": \"⪪\",\n\t\"smte\": \"⪬\",\n\t\"smtes\": \"⪬︀\",\n\t\"SOFTcy\": \"Ь\",\n\t\"softcy\": \"ь\",\n\t\"solbar\": \"⌿\",\n\t\"solb\": \"⧄\",\n\t\"sol\": \"/\",\n\t\"Sopf\": \"𝕊\",\n\t\"sopf\": \"𝕤\",\n\t\"spades\": \"♠\",\n\t\"spadesuit\": \"♠\",\n\t\"spar\": \"∥\",\n\t\"sqcap\": \"⊓\",\n\t\"sqcaps\": \"⊓︀\",\n\t\"sqcup\": \"⊔\",\n\t\"sqcups\": \"⊔︀\",\n\t\"Sqrt\": \"√\",\n\t\"sqsub\": \"⊏\",\n\t\"sqsube\": \"⊑\",\n\t\"sqsubset\": \"⊏\",\n\t\"sqsubseteq\": \"⊑\",\n\t\"sqsup\": \"⊐\",\n\t\"sqsupe\": \"⊒\",\n\t\"sqsupset\": \"⊐\",\n\t\"sqsupseteq\": \"⊒\",\n\t\"square\": \"□\",\n\t\"Square\": \"□\",\n\t\"SquareIntersection\": \"⊓\",\n\t\"SquareSubset\": \"⊏\",\n\t\"SquareSubsetEqual\": \"⊑\",\n\t\"SquareSuperset\": \"⊐\",\n\t\"SquareSupersetEqual\": \"⊒\",\n\t\"SquareUnion\": \"⊔\",\n\t\"squarf\": \"▪\",\n\t\"squ\": \"□\",\n\t\"squf\": \"▪\",\n\t\"srarr\": \"→\",\n\t\"Sscr\": \"𝒮\",\n\t\"sscr\": \"𝓈\",\n\t\"ssetmn\": \"∖\",\n\t\"ssmile\": \"⌣\",\n\t\"sstarf\": \"⋆\",\n\t\"Star\": \"⋆\",\n\t\"star\": \"☆\",\n\t\"starf\": \"★\",\n\t\"straightepsilon\": \"ϵ\",\n\t\"straightphi\": \"ϕ\",\n\t\"strns\": \"¯\",\n\t\"sub\": \"⊂\",\n\t\"Sub\": \"⋐\",\n\t\"subdot\": \"⪽\",\n\t\"subE\": \"⫅\",\n\t\"sube\": \"⊆\",\n\t\"subedot\": \"⫃\",\n\t\"submult\": \"⫁\",\n\t\"subnE\": \"⫋\",\n\t\"subne\": \"⊊\",\n\t\"subplus\": \"⪿\",\n\t\"subrarr\": \"⥹\",\n\t\"subset\": \"⊂\",\n\t\"Subset\": \"⋐\",\n\t\"subseteq\": \"⊆\",\n\t\"subseteqq\": \"⫅\",\n\t\"SubsetEqual\": \"⊆\",\n\t\"subsetneq\": \"⊊\",\n\t\"subsetneqq\": \"⫋\",\n\t\"subsim\": \"⫇\",\n\t\"subsub\": \"⫕\",\n\t\"subsup\": \"⫓\",\n\t\"succapprox\": \"⪸\",\n\t\"succ\": \"≻\",\n\t\"succcurlyeq\": \"≽\",\n\t\"Succeeds\": \"≻\",\n\t\"SucceedsEqual\": \"⪰\",\n\t\"SucceedsSlantEqual\": \"≽\",\n\t\"SucceedsTilde\": \"≿\",\n\t\"succeq\": \"⪰\",\n\t\"succnapprox\": \"⪺\",\n\t\"succneqq\": \"⪶\",\n\t\"succnsim\": \"⋩\",\n\t\"succsim\": \"≿\",\n\t\"SuchThat\": \"∋\",\n\t\"sum\": \"∑\",\n\t\"Sum\": \"∑\",\n\t\"sung\": \"♪\",\n\t\"sup1\": \"¹\",\n\t\"sup2\": \"²\",\n\t\"sup3\": \"³\",\n\t\"sup\": \"⊃\",\n\t\"Sup\": \"⋑\",\n\t\"supdot\": \"⪾\",\n\t\"supdsub\": \"⫘\",\n\t\"supE\": \"⫆\",\n\t\"supe\": \"⊇\",\n\t\"supedot\": \"⫄\",\n\t\"Superset\": \"⊃\",\n\t\"SupersetEqual\": \"⊇\",\n\t\"suphsol\": \"⟉\",\n\t\"suphsub\": \"⫗\",\n\t\"suplarr\": \"⥻\",\n\t\"supmult\": \"⫂\",\n\t\"supnE\": \"⫌\",\n\t\"supne\": \"⊋\",\n\t\"supplus\": \"⫀\",\n\t\"supset\": \"⊃\",\n\t\"Supset\": \"⋑\",\n\t\"supseteq\": \"⊇\",\n\t\"supseteqq\": \"⫆\",\n\t\"supsetneq\": \"⊋\",\n\t\"supsetneqq\": \"⫌\",\n\t\"supsim\": \"⫈\",\n\t\"supsub\": \"⫔\",\n\t\"supsup\": \"⫖\",\n\t\"swarhk\": \"⤦\",\n\t\"swarr\": \"↙\",\n\t\"swArr\": \"⇙\",\n\t\"swarrow\": \"↙\",\n\t\"swnwar\": \"⤪\",\n\t\"szlig\": \"ß\",\n\t\"Tab\": \"\\t\",\n\t\"target\": \"⌖\",\n\t\"Tau\": \"Τ\",\n\t\"tau\": \"τ\",\n\t\"tbrk\": \"⎴\",\n\t\"Tcaron\": \"Ť\",\n\t\"tcaron\": \"ť\",\n\t\"Tcedil\": \"Ţ\",\n\t\"tcedil\": \"ţ\",\n\t\"Tcy\": \"Т\",\n\t\"tcy\": \"т\",\n\t\"tdot\": \"⃛\",\n\t\"telrec\": \"⌕\",\n\t\"Tfr\": \"𝔗\",\n\t\"tfr\": \"𝔱\",\n\t\"there4\": \"∴\",\n\t\"therefore\": \"∴\",\n\t\"Therefore\": \"∴\",\n\t\"Theta\": \"Θ\",\n\t\"theta\": \"θ\",\n\t\"thetasym\": \"ϑ\",\n\t\"thetav\": \"ϑ\",\n\t\"thickapprox\": \"≈\",\n\t\"thicksim\": \"∼\",\n\t\"ThickSpace\": \"  \",\n\t\"ThinSpace\": \" \",\n\t\"thinsp\": \" \",\n\t\"thkap\": \"≈\",\n\t\"thksim\": \"∼\",\n\t\"THORN\": \"Þ\",\n\t\"thorn\": \"þ\",\n\t\"tilde\": \"˜\",\n\t\"Tilde\": \"∼\",\n\t\"TildeEqual\": \"≃\",\n\t\"TildeFullEqual\": \"≅\",\n\t\"TildeTilde\": \"≈\",\n\t\"timesbar\": \"⨱\",\n\t\"timesb\": \"⊠\",\n\t\"times\": \"×\",\n\t\"timesd\": \"⨰\",\n\t\"tint\": \"∭\",\n\t\"toea\": \"⤨\",\n\t\"topbot\": \"⌶\",\n\t\"topcir\": \"⫱\",\n\t\"top\": \"⊤\",\n\t\"Topf\": \"𝕋\",\n\t\"topf\": \"𝕥\",\n\t\"topfork\": \"⫚\",\n\t\"tosa\": \"⤩\",\n\t\"tprime\": \"‴\",\n\t\"trade\": \"™\",\n\t\"TRADE\": \"™\",\n\t\"triangle\": \"▵\",\n\t\"triangledown\": \"▿\",\n\t\"triangleleft\": \"◃\",\n\t\"trianglelefteq\": \"⊴\",\n\t\"triangleq\": \"≜\",\n\t\"triangleright\": \"▹\",\n\t\"trianglerighteq\": \"⊵\",\n\t\"tridot\": \"◬\",\n\t\"trie\": \"≜\",\n\t\"triminus\": \"⨺\",\n\t\"TripleDot\": \"⃛\",\n\t\"triplus\": \"⨹\",\n\t\"trisb\": \"⧍\",\n\t\"tritime\": \"⨻\",\n\t\"trpezium\": \"⏢\",\n\t\"Tscr\": \"𝒯\",\n\t\"tscr\": \"𝓉\",\n\t\"TScy\": \"Ц\",\n\t\"tscy\": \"ц\",\n\t\"TSHcy\": \"Ћ\",\n\t\"tshcy\": \"ћ\",\n\t\"Tstrok\": \"Ŧ\",\n\t\"tstrok\": \"ŧ\",\n\t\"twixt\": \"≬\",\n\t\"twoheadleftarrow\": \"↞\",\n\t\"twoheadrightarrow\": \"↠\",\n\t\"Uacute\": \"Ú\",\n\t\"uacute\": \"ú\",\n\t\"uarr\": \"↑\",\n\t\"Uarr\": \"↟\",\n\t\"uArr\": \"⇑\",\n\t\"Uarrocir\": \"⥉\",\n\t\"Ubrcy\": \"Ў\",\n\t\"ubrcy\": \"ў\",\n\t\"Ubreve\": \"Ŭ\",\n\t\"ubreve\": \"ŭ\",\n\t\"Ucirc\": \"Û\",\n\t\"ucirc\": \"û\",\n\t\"Ucy\": \"У\",\n\t\"ucy\": \"у\",\n\t\"udarr\": \"⇅\",\n\t\"Udblac\": \"Ű\",\n\t\"udblac\": \"ű\",\n\t\"udhar\": \"⥮\",\n\t\"ufisht\": \"⥾\",\n\t\"Ufr\": \"𝔘\",\n\t\"ufr\": \"𝔲\",\n\t\"Ugrave\": \"Ù\",\n\t\"ugrave\": \"ù\",\n\t\"uHar\": \"⥣\",\n\t\"uharl\": \"↿\",\n\t\"uharr\": \"↾\",\n\t\"uhblk\": \"▀\",\n\t\"ulcorn\": \"⌜\",\n\t\"ulcorner\": \"⌜\",\n\t\"ulcrop\": \"⌏\",\n\t\"ultri\": \"◸\",\n\t\"Umacr\": \"Ū\",\n\t\"umacr\": \"ū\",\n\t\"uml\": \"¨\",\n\t\"UnderBar\": \"_\",\n\t\"UnderBrace\": \"⏟\",\n\t\"UnderBracket\": \"⎵\",\n\t\"UnderParenthesis\": \"⏝\",\n\t\"Union\": \"⋃\",\n\t\"UnionPlus\": \"⊎\",\n\t\"Uogon\": \"Ų\",\n\t\"uogon\": \"ų\",\n\t\"Uopf\": \"𝕌\",\n\t\"uopf\": \"𝕦\",\n\t\"UpArrowBar\": \"⤒\",\n\t\"uparrow\": \"↑\",\n\t\"UpArrow\": \"↑\",\n\t\"Uparrow\": \"⇑\",\n\t\"UpArrowDownArrow\": \"⇅\",\n\t\"updownarrow\": \"↕\",\n\t\"UpDownArrow\": \"↕\",\n\t\"Updownarrow\": \"⇕\",\n\t\"UpEquilibrium\": \"⥮\",\n\t\"upharpoonleft\": \"↿\",\n\t\"upharpoonright\": \"↾\",\n\t\"uplus\": \"⊎\",\n\t\"UpperLeftArrow\": \"↖\",\n\t\"UpperRightArrow\": \"↗\",\n\t\"upsi\": \"υ\",\n\t\"Upsi\": \"ϒ\",\n\t\"upsih\": \"ϒ\",\n\t\"Upsilon\": \"Υ\",\n\t\"upsilon\": \"υ\",\n\t\"UpTeeArrow\": \"↥\",\n\t\"UpTee\": \"⊥\",\n\t\"upuparrows\": \"⇈\",\n\t\"urcorn\": \"⌝\",\n\t\"urcorner\": \"⌝\",\n\t\"urcrop\": \"⌎\",\n\t\"Uring\": \"Ů\",\n\t\"uring\": \"ů\",\n\t\"urtri\": \"◹\",\n\t\"Uscr\": \"𝒰\",\n\t\"uscr\": \"𝓊\",\n\t\"utdot\": \"⋰\",\n\t\"Utilde\": \"Ũ\",\n\t\"utilde\": \"ũ\",\n\t\"utri\": \"▵\",\n\t\"utrif\": \"▴\",\n\t\"uuarr\": \"⇈\",\n\t\"Uuml\": \"Ü\",\n\t\"uuml\": \"ü\",\n\t\"uwangle\": \"⦧\",\n\t\"vangrt\": \"⦜\",\n\t\"varepsilon\": \"ϵ\",\n\t\"varkappa\": \"ϰ\",\n\t\"varnothing\": \"∅\",\n\t\"varphi\": \"ϕ\",\n\t\"varpi\": \"ϖ\",\n\t\"varpropto\": \"∝\",\n\t\"varr\": \"↕\",\n\t\"vArr\": \"⇕\",\n\t\"varrho\": \"ϱ\",\n\t\"varsigma\": \"ς\",\n\t\"varsubsetneq\": \"⊊︀\",\n\t\"varsubsetneqq\": \"⫋︀\",\n\t\"varsupsetneq\": \"⊋︀\",\n\t\"varsupsetneqq\": \"⫌︀\",\n\t\"vartheta\": \"ϑ\",\n\t\"vartriangleleft\": \"⊲\",\n\t\"vartriangleright\": \"⊳\",\n\t\"vBar\": \"⫨\",\n\t\"Vbar\": \"⫫\",\n\t\"vBarv\": \"⫩\",\n\t\"Vcy\": \"В\",\n\t\"vcy\": \"в\",\n\t\"vdash\": \"⊢\",\n\t\"vDash\": \"⊨\",\n\t\"Vdash\": \"⊩\",\n\t\"VDash\": \"⊫\",\n\t\"Vdashl\": \"⫦\",\n\t\"veebar\": \"⊻\",\n\t\"vee\": \"∨\",\n\t\"Vee\": \"⋁\",\n\t\"veeeq\": \"≚\",\n\t\"vellip\": \"⋮\",\n\t\"verbar\": \"|\",\n\t\"Verbar\": \"‖\",\n\t\"vert\": \"|\",\n\t\"Vert\": \"‖\",\n\t\"VerticalBar\": \"∣\",\n\t\"VerticalLine\": \"|\",\n\t\"VerticalSeparator\": \"❘\",\n\t\"VerticalTilde\": \"≀\",\n\t\"VeryThinSpace\": \" \",\n\t\"Vfr\": \"𝔙\",\n\t\"vfr\": \"𝔳\",\n\t\"vltri\": \"⊲\",\n\t\"vnsub\": \"⊂⃒\",\n\t\"vnsup\": \"⊃⃒\",\n\t\"Vopf\": \"𝕍\",\n\t\"vopf\": \"𝕧\",\n\t\"vprop\": \"∝\",\n\t\"vrtri\": \"⊳\",\n\t\"Vscr\": \"𝒱\",\n\t\"vscr\": \"𝓋\",\n\t\"vsubnE\": \"⫋︀\",\n\t\"vsubne\": \"⊊︀\",\n\t\"vsupnE\": \"⫌︀\",\n\t\"vsupne\": \"⊋︀\",\n\t\"Vvdash\": \"⊪\",\n\t\"vzigzag\": \"⦚\",\n\t\"Wcirc\": \"Ŵ\",\n\t\"wcirc\": \"ŵ\",\n\t\"wedbar\": \"⩟\",\n\t\"wedge\": \"∧\",\n\t\"Wedge\": \"⋀\",\n\t\"wedgeq\": \"≙\",\n\t\"weierp\": \"℘\",\n\t\"Wfr\": \"𝔚\",\n\t\"wfr\": \"𝔴\",\n\t\"Wopf\": \"𝕎\",\n\t\"wopf\": \"𝕨\",\n\t\"wp\": \"℘\",\n\t\"wr\": \"≀\",\n\t\"wreath\": \"≀\",\n\t\"Wscr\": \"𝒲\",\n\t\"wscr\": \"𝓌\",\n\t\"xcap\": \"⋂\",\n\t\"xcirc\": \"◯\",\n\t\"xcup\": \"⋃\",\n\t\"xdtri\": \"▽\",\n\t\"Xfr\": \"𝔛\",\n\t\"xfr\": \"𝔵\",\n\t\"xharr\": \"⟷\",\n\t\"xhArr\": \"⟺\",\n\t\"Xi\": \"Ξ\",\n\t\"xi\": \"ξ\",\n\t\"xlarr\": \"⟵\",\n\t\"xlArr\": \"⟸\",\n\t\"xmap\": \"⟼\",\n\t\"xnis\": \"⋻\",\n\t\"xodot\": \"⨀\",\n\t\"Xopf\": \"𝕏\",\n\t\"xopf\": \"𝕩\",\n\t\"xoplus\": \"⨁\",\n\t\"xotime\": \"⨂\",\n\t\"xrarr\": \"⟶\",\n\t\"xrArr\": \"⟹\",\n\t\"Xscr\": \"𝒳\",\n\t\"xscr\": \"𝓍\",\n\t\"xsqcup\": \"⨆\",\n\t\"xuplus\": \"⨄\",\n\t\"xutri\": \"△\",\n\t\"xvee\": \"⋁\",\n\t\"xwedge\": \"⋀\",\n\t\"Yacute\": \"Ý\",\n\t\"yacute\": \"ý\",\n\t\"YAcy\": \"Я\",\n\t\"yacy\": \"я\",\n\t\"Ycirc\": \"Ŷ\",\n\t\"ycirc\": \"ŷ\",\n\t\"Ycy\": \"Ы\",\n\t\"ycy\": \"ы\",\n\t\"yen\": \"¥\",\n\t\"Yfr\": \"𝔜\",\n\t\"yfr\": \"𝔶\",\n\t\"YIcy\": \"Ї\",\n\t\"yicy\": \"ї\",\n\t\"Yopf\": \"𝕐\",\n\t\"yopf\": \"𝕪\",\n\t\"Yscr\": \"𝒴\",\n\t\"yscr\": \"𝓎\",\n\t\"YUcy\": \"Ю\",\n\t\"yucy\": \"ю\",\n\t\"yuml\": \"ÿ\",\n\t\"Yuml\": \"Ÿ\",\n\t\"Zacute\": \"Ź\",\n\t\"zacute\": \"ź\",\n\t\"Zcaron\": \"Ž\",\n\t\"zcaron\": \"ž\",\n\t\"Zcy\": \"З\",\n\t\"zcy\": \"з\",\n\t\"Zdot\": \"Ż\",\n\t\"zdot\": \"ż\",\n\t\"zeetrf\": \"ℨ\",\n\t\"ZeroWidthSpace\": \"​\",\n\t\"Zeta\": \"Ζ\",\n\t\"zeta\": \"ζ\",\n\t\"zfr\": \"𝔷\",\n\t\"Zfr\": \"ℨ\",\n\t\"ZHcy\": \"Ж\",\n\t\"zhcy\": \"ж\",\n\t\"zigrarr\": \"⇝\",\n\t\"zopf\": \"𝕫\",\n\t\"Zopf\": \"ℤ\",\n\t\"Zscr\": \"𝒵\",\n\t\"zscr\": \"𝓏\",\n\t\"zwj\": \"‍\",\n\t\"zwnj\": \"‌\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/entities/maps/entities.json\n// module id = 56\n// module chunks = 0","module.exports = {\n\t\"Aacute\": \"Á\",\n\t\"aacute\": \"á\",\n\t\"Acirc\": \"Â\",\n\t\"acirc\": \"â\",\n\t\"acute\": \"´\",\n\t\"AElig\": \"Æ\",\n\t\"aelig\": \"æ\",\n\t\"Agrave\": \"À\",\n\t\"agrave\": \"à\",\n\t\"amp\": \"&\",\n\t\"AMP\": \"&\",\n\t\"Aring\": \"Å\",\n\t\"aring\": \"å\",\n\t\"Atilde\": \"Ã\",\n\t\"atilde\": \"ã\",\n\t\"Auml\": \"Ä\",\n\t\"auml\": \"ä\",\n\t\"brvbar\": \"¦\",\n\t\"Ccedil\": \"Ç\",\n\t\"ccedil\": \"ç\",\n\t\"cedil\": \"¸\",\n\t\"cent\": \"¢\",\n\t\"copy\": \"©\",\n\t\"COPY\": \"©\",\n\t\"curren\": \"¤\",\n\t\"deg\": \"°\",\n\t\"divide\": \"÷\",\n\t\"Eacute\": \"É\",\n\t\"eacute\": \"é\",\n\t\"Ecirc\": \"Ê\",\n\t\"ecirc\": \"ê\",\n\t\"Egrave\": \"È\",\n\t\"egrave\": \"è\",\n\t\"ETH\": \"Ð\",\n\t\"eth\": \"ð\",\n\t\"Euml\": \"Ë\",\n\t\"euml\": \"ë\",\n\t\"frac12\": \"½\",\n\t\"frac14\": \"¼\",\n\t\"frac34\": \"¾\",\n\t\"gt\": \">\",\n\t\"GT\": \">\",\n\t\"Iacute\": \"Í\",\n\t\"iacute\": \"í\",\n\t\"Icirc\": \"Î\",\n\t\"icirc\": \"î\",\n\t\"iexcl\": \"¡\",\n\t\"Igrave\": \"Ì\",\n\t\"igrave\": \"ì\",\n\t\"iquest\": \"¿\",\n\t\"Iuml\": \"Ï\",\n\t\"iuml\": \"ï\",\n\t\"laquo\": \"«\",\n\t\"lt\": \"<\",\n\t\"LT\": \"<\",\n\t\"macr\": \"¯\",\n\t\"micro\": \"µ\",\n\t\"middot\": \"·\",\n\t\"nbsp\": \" \",\n\t\"not\": \"¬\",\n\t\"Ntilde\": \"Ñ\",\n\t\"ntilde\": \"ñ\",\n\t\"Oacute\": \"Ó\",\n\t\"oacute\": \"ó\",\n\t\"Ocirc\": \"Ô\",\n\t\"ocirc\": \"ô\",\n\t\"Ograve\": \"Ò\",\n\t\"ograve\": \"ò\",\n\t\"ordf\": \"ª\",\n\t\"ordm\": \"º\",\n\t\"Oslash\": \"Ø\",\n\t\"oslash\": \"ø\",\n\t\"Otilde\": \"Õ\",\n\t\"otilde\": \"õ\",\n\t\"Ouml\": \"Ö\",\n\t\"ouml\": \"ö\",\n\t\"para\": \"¶\",\n\t\"plusmn\": \"±\",\n\t\"pound\": \"£\",\n\t\"quot\": \"\\\"\",\n\t\"QUOT\": \"\\\"\",\n\t\"raquo\": \"»\",\n\t\"reg\": \"®\",\n\t\"REG\": \"®\",\n\t\"sect\": \"§\",\n\t\"shy\": \"­\",\n\t\"sup1\": \"¹\",\n\t\"sup2\": \"²\",\n\t\"sup3\": \"³\",\n\t\"szlig\": \"ß\",\n\t\"THORN\": \"Þ\",\n\t\"thorn\": \"þ\",\n\t\"times\": \"×\",\n\t\"Uacute\": \"Ú\",\n\t\"uacute\": \"ú\",\n\t\"Ucirc\": \"Û\",\n\t\"ucirc\": \"û\",\n\t\"Ugrave\": \"Ù\",\n\t\"ugrave\": \"ù\",\n\t\"uml\": \"¨\",\n\t\"Uuml\": \"Ü\",\n\t\"uuml\": \"ü\",\n\t\"Yacute\": \"Ý\",\n\t\"yacute\": \"ý\",\n\t\"yen\": \"¥\",\n\t\"yuml\": \"ÿ\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/entities/maps/legacy.json\n// module id = 57\n// module chunks = 0","module.exports = {\n\t\"amp\": \"&\",\n\t\"apos\": \"'\",\n\t\"gt\": \">\",\n\t\"lt\": \"<\",\n\t\"quot\": \"\\\"\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/entities/maps/xml.json\n// module id = 58\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/checkPropTypes.js\n// module id = 59\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n// React 15.5 references this module, and assumes PropTypes are still callable in production.\n// Therefore we re-export development-only version with all the PropTypes checks here.\n// However if one is migrating to the `prop-types` npm library, they will go through the\n// `index.js` entry point, and it will branch depending on the environment.\nvar factory = require('./factoryWithTypeCheckers');\nmodule.exports = function(isValidElement) {\n  // It is still allowed in 15.5.\n  var throwOnDirectAccess = false;\n  return factory(isValidElement, throwOnDirectAccess);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factory.js\n// module id = 60\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 61\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithTypeCheckers.js\n// module id = 62\n// module chunks = 0","var _concat = require('./internal/_concat');\nvar _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nmodule.exports = _curry1(function addIndex(fn) {\n  return curryN(fn.length, function() {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function() {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/addIndex.js\n// module id = 63\n// module chunks = 0","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function() {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/bind.js\n// module id = 64\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _filter = require('./internal/_filter');\nvar _isObject = require('./internal/_isObject');\nvar _reduce = require('./internal/_reduce');\nvar _xfilter = require('./internal/_xfilter');\nvar keys = require('./keys');\n\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/filter.js\n// module id = 65\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfind = require('./internal/_xfind');\n\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/find.js\n// module id = 66\n// module chunks = 0","module.exports = function _complement(f) {\n  return function() {\n    return !f.apply(this, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_complement.js\n// module id = 67\n// module chunks = 0","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_concat.js\n// module id = 68\n// module chunks = 0","var _curry1 = require('./_curry1');\nvar _curry2 = require('./_curry2');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_curry3.js\n// module id = 69\n// module chunks = 0","var _arity = require('./_arity');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_curryN.js\n// module id = 70\n// module chunks = 0","module.exports = function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_filter.js\n// module id = 71\n// module chunks = 0","var _has = require('./_has');\n\n\nmodule.exports = (function() {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ?\n    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n    function _isArguments(x) { return _has('callee', x); };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isArguments.js\n// module id = 72\n// module chunks = 0","var _curry1 = require('./_curry1');\nvar _isArray = require('./_isArray');\nvar _isString = require('./_isString');\n\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if (typeof x !== 'object') { return false; }\n  if (_isString(x)) { return false; }\n  if (x.nodeType === 1) { return !!x.length; }\n  if (x.length === 0) { return true; }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isArrayLike.js\n// module id = 73\n// module chunks = 0","module.exports = function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isObject.js\n// module id = 74\n// module chunks = 0","module.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isString.js\n// module id = 75\n// module chunks = 0","module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isTransformer.js\n// module id = 76\n// module chunks = 0","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_map.js\n// module id = 77\n// module chunks = 0","module.exports = function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x :\n    {\n      '@@transducer/value': x,\n      '@@transducer/reduced': true\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_reduced.js\n// module id = 78\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfilter.js\n// module id = 79\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfind.js\n// module id = 80\n// module chunks = 0","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function(result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xmap.js\n// module id = 81\n// module chunks = 0","module.exports = (function() {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function() {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) { return new XWrap(fn); };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xwrap.js\n// module id = 82\n// module chunks = 0","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _map = require('./internal/_map');\nvar _reduce = require('./internal/_reduce');\nvar _xmap = require('./internal/_xmap');\nvar curryN = require('./curryN');\nvar keys = require('./keys');\n\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nmodule.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function() {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function(acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/map.js\n// module id = 83\n// module chunks = 0","var _curry3 = require('./internal/_curry3');\nvar _reduce = require('./internal/_reduce');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nmodule.exports = _curry3(_reduce);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reduce.js\n// module id = 84\n// module chunks = 0","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar filter = require('./filter');\n\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reject.js\n// module id = 85\n// module chunks = 0","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\n\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nmodule.exports = _curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/toPairs.js\n// module id = 86\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/KeyEscapeUtils.js\n// module id = 87\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/PooledClass.js\n// module id = 88\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactBaseClasses = require('./ReactBaseClasses');\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar createReactClass = require('./createClass');\nvar onlyChild = require('./onlyChild');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  var lowPriorityWarning = require('./lowPriorityWarning');\n  var canDefineProperty = require('./canDefineProperty');\n  var ReactElementValidator = require('./ReactElementValidator');\n  var didWarnPropTypesDeprecated = false;\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\nvar createMixin = function (mixin) {\n  return mixin;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var warnedForSpread = false;\n  var warnedForCreateMixin = false;\n  __spread = function () {\n    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');\n    warnedForSpread = true;\n    return _assign.apply(null, arguments);\n  };\n\n  createMixin = function (mixin) {\n    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');\n    warnedForCreateMixin = true;\n    return mixin;\n  };\n}\n\nvar React = {\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactBaseClasses.Component,\n  PureComponent: ReactBaseClasses.PureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: createReactClass,\n  createFactory: createFactory,\n  createMixin: createMixin,\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var warnedForCreateClass = false;\n  if (canDefineProperty) {\n    Object.defineProperty(React, 'PropTypes', {\n      get: function () {\n        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');\n        didWarnPropTypesDeprecated = true;\n        return ReactPropTypes;\n      }\n    });\n\n    Object.defineProperty(React, 'createClass', {\n      get: function () {\n        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + \" Use a plain JavaScript class instead. If you're not yet \" + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');\n        warnedForCreateClass = true;\n        return createReactClass;\n      }\n    });\n  }\n\n  // React.DOM factories are deprecated. Wrap these methods so that\n  // invocations of the React.DOM namespace and alert users to switch\n  // to the `react-dom-factories` package.\n  React.DOM = {};\n  var warnedForFactories = false;\n  Object.keys(ReactDOMFactories).forEach(function (factory) {\n    React.DOM[factory] = function () {\n      if (!warnedForFactories) {\n        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);\n        warnedForFactories = true;\n      }\n      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);\n    };\n  });\n}\n\nmodule.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/React.js\n// module id = 89\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactChildren.js\n// module id = 90\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactDOMFactories.js\n// module id = 91\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _require = require('./ReactElement'),\n    isValidElement = _require.isValidElement;\n\nvar factory = require('prop-types/factory');\n\nmodule.exports = factory(isValidElement);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypes.js\n// module id = 92\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nmodule.exports = '15.6.1';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactVersion.js\n// module id = 93\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _require = require('./ReactBaseClasses'),\n    Component = _require.Component;\n\nvar _require2 = require('./ReactElement'),\n    isValidElement = _require2.isValidElement;\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\nvar factory = require('create-react-class/factory');\n\nmodule.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/createClass.js\n// module id = 94\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/getIteratorFn.js\n// module id = 95\n// module chunks = 0","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = lowPriorityWarning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/lowPriorityWarning.js\n// module id = 96\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/onlyChild.js\n// module id = 97\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = \" It looks like you're using an element created by a different \" + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/traverseAllChildren.js\n// module id = 98\n// module chunks = 0","var _camelize = require('underscore.string/camelize');\nvar _curry = require('chickencurry');\n\nmodule.exports = _curry(function camelize(str) {\n  return _camelize(str, true);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/underscore.string.fp/camelize.js\n// module id = 99\n// module chunks = 0","var trim = require('./trim');\nvar decap = require('./decapitalize');\n\nmodule.exports = function camelize(str, decapitalize) {\n  str = trim(str).replace(/[-_\\s]+(.)?/g, function(match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (decapitalize === true) {\n    return decap(str);\n  } else {\n    return str;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/underscore.string/camelize.js\n// module id = 100\n// module chunks = 0","var makeString = require('./helper/makeString');\n\nmodule.exports = function decapitalize(str) {\n  str = makeString(str);\n  return str.charAt(0).toLowerCase() + str.slice(1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/underscore.string/decapitalize.js\n// module id = 101\n// module chunks = 0","var escapeRegExp = require('./escapeRegExp');\n\nmodule.exports = function defaultToWhiteSpace(characters) {\n  if (characters == null)\n    return '\\\\s';\n  else if (characters.source)\n    return characters.source;\n  else\n    return '[' + escapeRegExp(characters) + ']';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/underscore.string/helper/defaultToWhiteSpace.js\n// module id = 102\n// module chunks = 0","var makeString = require('./makeString');\n\nmodule.exports = function escapeRegExp(str) {\n  return makeString(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/underscore.string/helper/escapeRegExp.js\n// module id = 103\n// module chunks = 0","var makeString = require('./helper/makeString');\nvar defaultToWhiteSpace = require('./helper/defaultToWhiteSpace');\nvar nativeTrim = String.prototype.trim;\n\nmodule.exports = function trim(str, characters) {\n  str = makeString(str);\n  if (!characters && nativeTrim) return nativeTrim.call(str);\n  characters = defaultToWhiteSpace(characters);\n  return str.replace(new RegExp('^' + characters + '+|' + characters + '+$', 'g'), '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/underscore.string/trim.js\n// module id = 104\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 105\n// module chunks = 0"],"sourceRoot":""}